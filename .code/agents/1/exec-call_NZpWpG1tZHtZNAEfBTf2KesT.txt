🎯 ADK auto-sync aliases loaded!
💡 Use 'sync' to sync with upstream anytime
💡 Use 'synccheck' to check sync status
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:14878:      3 | class GHINService {
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:14921:      3 | class GHINService {
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:18396:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:18463:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:18530:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:18597:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:18751:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:18818:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:18885:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:18952:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:19113:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:19180:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:19247:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:19314:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:19479:                    [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:19546:                    [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:19613:                    [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:19680:                    [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:19836:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:19903:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:19970:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:20037:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:20198:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:20265:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:20332:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:20399:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:20556:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:20623:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:20690:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:20757:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:20912:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:20979:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:21046:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:21113:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:21182:      Name "GHIN Lookup":
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:21189:      Name "GHIN Lookup":
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:21196:      Name "GHIN Lookup":
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:21203:      Name "GHIN Lookup":
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:21601:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:21668:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:21735:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:21802:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:21957:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:22024:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:22091:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:22158:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:30572:      3 | class GHINService {
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:30615:      3 | class GHINService {
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:33557:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:33624:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:33691:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:33758:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:33912:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:33979:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:34046:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:34113:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:34274:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:34341:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:34408:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:34475:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:34640:                    [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:34707:                    [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:34774:                    [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:34841:                    [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:34997:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:35064:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:35131:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:35198:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:35359:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:35426:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:35493:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:35560:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:35717:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:35784:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:35851:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:35918:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36073:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36140:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36207:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36274:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36343:      Name "GHIN Lookup":
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36350:      Name "GHIN Lookup":
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36357:      Name "GHIN Lookup":
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36364:      Name "GHIN Lookup":
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36762:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36829:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36896:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:36963:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:37118:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:37185:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:37252:                  [0mGHIN Lookup[0m
./.code/agents/1837/exec-call_gr8KZervnORc9VEnJE7nw8fw.txt:37319:                  [0mGHIN Lookup[0m
./.code/agents/a3d53bee-3b33-4267-bc35-c10f9c88ae31/result.txt:95:- GHIN integration dashboard
./.code/agents/a3d53bee-3b33-4267-bc35-c10f9c88ae31/result.txt:98:- GHIN service integration for handicap data
./.code/agents/a3d53bee-3b33-4267-bc35-c10f9c88ae31/result.txt:107:- Status indicator for GHIN integration
./.code/agents/a3d53bee-3b33-4267-bc35-c10f9c88ae31/result.txt:137:- Auth0, GHIN, and email services require environment secrets
./.code/agents/e978f0f7-049d-4e9d-9a27-607f17fcb3d0/result.txt:21:### 4. **GHIN Integration**
./.code/agents/e978f0f7-049d-4e9d-9a27-607f17fcb3d0/result.txt:24:**Flags:** `GHIN_USERNAME/PASSWORD` credentials
./.code/agents/8686/exec-call_XoxG4oyhZyliLxun4Q9epDVL.txt:17:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/8686/exec-call_XoxG4oyhZyliLxun4Q9epDVL.txt:37:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/9d14d36e-0ef3-4b3b-b45c-f1a9b37b79da/result.txt:27:### 📈 **GHIN/Sheets Integration**
./.code/agents/9d14d36e-0ef3-4b3b-b45c-f1a9b37b79da/result.txt:38:- ✅ GHIN API authentication working with JWT tokens
./.code/agents/9d14d36e-0ef3-4b3b-b45c-f1a9b37b79da/result.txt:40:- ⚠️ GHIN service requires env credentials (`GHIN_USERNAME`, `GHIN_PASSWORD`)
./.code/agents/9d14d36e-0ef3-4b3b-b45c-f1a9b37b79da/result.txt:45:- Add GHIN API rate limiting/retry logic
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:156:./.code/agents/8686/exec-call_XoxG4oyhZyliLxun4Q9epDVL.txt:17:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:157:./.code/agents/8686/exec-call_XoxG4oyhZyliLxun4Q9epDVL.txt:37:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:158:./.code/agents/1/exec-call_FBIwoFXQ52mBUHnfzcN9IQzW.txt:7557:frontend/node_modules/.cache/tsconfig.tsbuildinfo:1:{"program":{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.sharedmemory.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../react-router/dist/development/routeModules-rOzWJJ9x.d.ts","../react-router/dist/development/index-react-server-client-BKpa2trA.d.ts","../react-router/node_modules/cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/shared.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-localstorage.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-memory.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/key-manifest.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-manager.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/index.d.ts","../@auth0/auth0-spa-js/dist/typings/global.d.ts","../@auth0/auth0-spa-js/dist/typings/TokenExchange.d.ts","../@auth0/auth0-spa-js/dist/typings/Auth0Client.d.ts","../@auth0/auth0-spa-js/dist/typings/errors.d.ts","../@auth0/auth0-spa-js/dist/typings/index.d.ts","../@auth0/auth0-react/dist/auth-state.d.ts","../@auth0/auth0-react/dist/auth0-context.d.ts","../@auth0/auth0-react/dist/auth0-provider.d.ts","../@auth0/auth0-react/dist/use-auth0.d.ts","../@auth0/auth0-react/dist/with-auth0.d.ts","../@auth0/auth0-react/dist/with-authentication-required.d.ts","../@auth0/auth0-react/dist/errors.d.ts","../@auth0/auth0-react/dist/index.d.ts","../../src/theme/theme.js","../../src/theme/Provider.js","../../src/context/GameProvider.js","../../src/context/AuthContext.js","../../src/context/SheetSyncContext.js","../../src/context/index.js","../../src/components/ui/Button.js","../../src/components/ui/Card.js","../../src/components/ui/Input.js","../../src/components/ui/Select.js","../../src/components/ui/index.js","../../src/hooks/useOddsCalculation.js","../../src/components/ShotResultWidget.js","../../src/components/BettingOpportunityWidget.js","../../src/components/ProbabilityVisualization.js","../../src/components/EducationalTooltip.js","../../src/components/BettingOddsPanel.js","../../src/components/GameStateWidget.js","../../src/components/StrategicAnalysisWidget.js","../../src/components/AnalyticsDashboard.js","../../src/components/HoleStrategyDisplay.js","../../src/components/EnhancedBettingWidget.js","../../src/components/EnhancedScoringWidget.js","../../src/components/InteractivePlayerCard.js","../../src/utils/api.js","../../src/components/ShotAnalysisWidget.js","../../src/components/ShotVisualizationOverlay.js","../../src/components/GameHistory.js","../../src/components/simulation/SimulationDecisionPanel.tsx","../../src/components/simulation/GamePlay.js","../../src/config/environment.js","../../src/components/simulation/__fixtures__/simulationMockData.js","../../src/components/simulation/__fixtures__/index.js","../../src/components/simulation/TurnBasedInterface.js","../../src/components/simulation/SimulationMode.js","../../src/components/simulation/MonteCarloSimulation.js","../../src/components/simulation/Timeline.js","../../src/components/simulation/PokerBettingPanel.js","../../src/components/simulation/styles/enhancedSimulationLayout.js","../../src/components/simulation/EnhancedSimulationLayout.js","../../src/components/simulation/HoleVisualization.tsx","../../src/components/simulation/index.js","../../src/components/game/CourseImport.js","../../src/components/game/CourseManager.js","../../src/components/PlayerProfileManager.js","../../src/components/game/GameSetupForm.js","../../src/components/game/UnifiedGameInterface.js","../../src/components/GameDashboard.js","../../src/components/WolfGoatPigDashboard.js","../../src/components/HoleVisualization.js","../../src/components/EnhancedWGPInterface.js","../../src/components/ShotRangeAnalyzer.js","../../src/components/ColdStartHandler.js","../../src/components/auth/LoginButton.js","../../src/components/auth/LogoutButton.js","../../src/components/auth/Profile.js","../../src/components/auth/ProtectedRoute.js","../../src/components/auth/AuthHealthCheck.js","../../src/components/auth/index.js","../../src/components/index.js","../../src/components/game/WolfGoatPigGame.js","../../src/components/game/index.js","../../src/components/simulation/FeedAnalyzer.js","../../src/context/TutorialContext.js","../../src/hooks/useTutorialProgress.js","../../src/components/tutorial/ProgressTracker.js","../../src/components/tutorial/TutorialOverlay.js","../../src/components/tutorial/TutorialModule.js","../../src/components/tutorial/InteractiveElement.js","../../src/components/tutorial/modules/GolfBasicsModule.js","../../src/components/tutorial/modules/GameOverviewModule.js","../../src/components/tutorial/modules/TeamFormationModule.js","../../src/components/tutorial/modules/BettingSystemModule.js","../../src/components/tutorial/modules/AdvancedRulesModule.js","../../src/components/tutorial/modules/AnalysisToolsModule.js","../../src/components/tutorial/modules/PracticeGameModule.js","../../src/components/tutorial/TutorialSystem.js","../zod/v3/helpers/typeAliases.d.cts","../zod/v3/helpers/util.d.cts","../zod/v3/index.d.cts","../zod/v3/ZodError.d.cts","../zod/v3/locales/en.d.cts","../zod/v3/errors.d.cts","../zod/v3/helpers/parseUtil.d.cts","../zod/v3/helpers/enumUtil.d.cts","../zod/v3/helpers/errorUtil.d.cts","../zod/v3/helpers/partialUtil.d.cts","../zod/v3/standard-schema.d.cts","../zod/v3/types.d.cts","../zod/v3/external.d.cts","../zod/index.d.cts","../ghin/dist/index.d.ts","../../src/services/ghinService.js","../../src/components/WGPAnalyticsDashboard.js","../../src/components/SheetIntegrationDashboard.js","../../src/components/GoogleSheetsLiveSync.js","../../src/components/Leaderboard.js","../../src/context/MockAuthContext.js","../../src/pages/HomePage.js","../../src/pages/SetupPage.js","../../src/pages/GamePage.js","../../src/pages/index.js","../../src/components/signup/SignupCalendar.js","../../src/components/signup/DailySignupView.js","../../src/components/signup/PlayerAvailability.js","../../src/components/signup/AllPlayersAvailability.js","../../src/components/signup/MatchmakingSuggestions.js","../../src/components/signup/EmailPreferences.js","../../src/pages/SignupPage.js","../../src/pages/AboutPage.js","../../src/pages/RulesPage.js","../../src/pages/AdminPage.js","../../src/components/Navigation.js","../../src/App.js","../../src/index.js","../@types/node/ts5.1/compatibility/disposable.d.ts","../@types/node/ts5.6/compatibility/float16array.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/ts5.6/globals.typedarray.d.ts","../@types/node/ts5.6/buffer.buffer.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/globals.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/dom-events.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/ts5.1/index.d.ts","../collect-v8-coverage/index.d.ts","../@types/istanbul-lib-coverage/index.d.ts","../@jest/console/build/types.d.ts","../@jest/console/build/BufferedConsole.d.ts","../@jest/console/build/CustomConsole.d.ts","../@jest/console/build/NullConsole.d.ts","../@jest/types/build/Global.d.ts","../@jest/types/build/Circus.d.ts","../chalk/index.d.ts","../@types/istanbul-lib-report/index.d.ts","../@types/istanbul-reports/index.d.ts","../@types/yargs-parser/index.d.ts","../@types/yargs/index.d.ts","../@jest/types/build/Config.d.ts","../@jest/types/build/TestResult.d.ts","../@jest/types/build/Transform.d.ts","../@jest/types/build/index.d.ts","../@types/stack-utils/index.d.ts","../jest-message-util/build/types.d.ts","../jest-message-util/build/index.d.ts","../@jest/console/build/getConsoleOutput.d.ts","../@jest/console/build/index.d.ts","../@types/graceful-fs/index.d.ts","../jest-haste-map/build/HasteFS.d.ts","../jest-haste-map/build/types.d.ts","../jest-haste-map/build/ModuleMap.d.ts","../jest-haste-map/build/index.d.ts","../jest-resolve/build/ModuleNotFoundError.d.ts","../jest-resolve/build/shouldLoadAsEsm.d.ts","../jest-resolve/build/types.d.ts","../jest-resolve/build/resolver.d.ts","../jest-resolve/build/utils.d.ts","../jest-resolve/build/index.d.ts","../@jest/test-result/build/types.d.ts","../@jest/test-result/build/formatTestResults.d.ts","../@jest/test-result/build/helpers.d.ts","../@jest/test-result/build/index.d.ts","../jest-changed-files/build/types.d.ts","../jest-changed-files/build/index.d.ts","../jest-mock/build/index.d.ts","../@jest/fake-timers/build/legacyFakeTimers.d.ts","../@jest/fake-timers/build/modernFakeTimers.d.ts","../@jest/fake-timers/build/index.d.ts","../@jest/environment/build/index.d.ts","../jest-diff/build/cleanupSemantic.d.ts","../pretty-format/build/types.d.ts","../pretty-format/build/index.d.ts","../jest-diff/build/types.d.ts","../jest-diff/build/diffLines.d.ts","../jest-diff/build/printDiffs.d.ts","../jest-diff/build/index.d.ts","../jest-matcher-utils/build/index.d.ts","../expect/build/jestMatchersObject.d.ts","../expect/build/types.d.ts","../expect/build/index.d.ts","../@jest/globals/build/index.d.ts","../callsites/index.d.ts","../@jest/source-map/build/types.d.ts","../@jest/source-map/build/getCallsite.d.ts","../@jest/source-map/build/index.d.ts","../@jest/transform/node_modules/source-map/source-map.d.ts","../@jest/transform/build/types.d.ts","../@jest/transform/build/ScriptTransformer.d.ts","../@jest/transform/build/shouldInstrument.d.ts","../@jest/transform/build/enhanceUnexpectedTokenMessage.d.ts","../@jest/transform/build/index.d.ts","../jest-runtime/build/types.d.ts","../jest-runtime/build/index.d.ts","../@jest/core/build/types.d.ts","../@jest/core/build/SearchSource.d.ts","../@jest/reporters/build/getResultHeader.d.ts","../@jest/reporters/build/generateEmptyCoverage.d.ts","../@jest/reporters/build/CoverageWorker.d.ts","../@jest/reporters/build/types.d.ts","../@jest/reporters/build/BaseReporter.d.ts","../@jest/reporters/build/CoverageReporter.d.ts","../@jest/reporters/build/DefaultReporter.d.ts","../@jest/reporters/build/NotifyReporter.d.ts","../@jest/reporters/build/SummaryReporter.d.ts","../@jest/reporters/build/VerboseReporter.d.ts","../@jest/reporters/build/index.d.ts","../emittery/index.d.ts","../@jest/core/build/TestWatcher.d.ts","../@jest/core/build/TestScheduler.d.ts","../@jest/core/build/cli/index.d.ts","../@jest/core/build/version.d.ts","../@jest/core/build/jest.d.ts","../jest-cli/build/cli/index.d.ts","../jest-cli/build/index.d.ts","../jest/build/jest.d.ts","../@types/aria-query/index.d.ts","../@testing-library/jest-dom/types/matchers.d.ts","../@testing-library/jest-dom/types/jest.d.ts","../@testing-library/jest-dom/types/index.d.ts","../../src/setupTests.js","../../src/__mocks__/react-router-dom.js","../../src/__tests__/fixtures/gameFixtures.js","../@testing-library/dom/types/matches.d.ts","../@testing-library/dom/types/wait-for.d.ts","../@testing-library/dom/types/query-helpers.d.ts","../@testing-library/dom/types/queries.d.ts","../@testing-library/dom/types/get-queries-for-element.d.ts","../@testing-library/dom/types/screen.d.ts","../@testing-library/dom/types/wait-for-element-to-be-removed.d.ts","../@testing-library/dom/types/get-node-text.d.ts","../@testing-library/dom/types/events.d.ts","../@testing-library/dom/types/pretty-dom.d.ts","../@testing-library/dom/types/role-helpers.d.ts","../@testing-library/dom/types/config.d.ts","../@testing-library/dom/types/suggestions.d.ts","../@testing-library/dom/types/index.d.ts","../@testing-library/react/types/index.d.ts","../../src/__tests__/utils/testHelpers.js","../../src/components/EmailSettings.js","../../src/components/GHINIntegration.js","../../src/hooks/usePlayerProfile.js","../../src/components/GameStatsTracker.js","../../src/components/PerformanceAnalytics.js","../../src/components/PlayerStatistics.js","../@testing-library/user-event/dist/types/event/eventMap.d.ts","../@testing-library/user-event/dist/types/event/types.d.ts","../@testing-library/user-event/dist/types/event/dispatchEvent.d.ts","../@testing-library/user-event/dist/types/event/focus.d.ts","../@testing-library/user-event/dist/types/event/input.d.ts","../@testing-library/user-event/dist/types/utils/click/isClickableInput.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Blob.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/DataTransfer.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/FileList.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Clipboard.d.ts","../@testing-library/user-event/dist/types/utils/edit/timeValue.d.ts","../@testing-library/user-event/dist/types/utils/edit/isContentEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/isEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/maxLength.d.ts","../@testing-library/user-event/dist/types/utils/edit/setFiles.d.ts","../@testing-library/user-event/dist/types/utils/focus/cursor.d.ts","../@testing-library/user-event/dist/types/utils/focus/getActiveElement.d.ts","../@testing-library/user-event/dist/types/utils/focus/getTabDestination.d.ts","../@testing-library/user-event/dist/types/utils/focus/isFocusable.d.ts","../@testing-library/user-event/dist/types/utils/focus/selection.d.ts","../@testing-library/user-event/dist/types/utils/focus/selector.d.ts","../@testing-library/user-event/dist/types/utils/keyDef/readNextDescriptor.d.ts","../@testing-library/user-event/dist/types/utils/misc/cloneEvent.d.ts","../@testing-library/user-event/dist/types/utils/misc/findClosest.d.ts","../@testing-library/user-event/dist/types/utils/misc/getDocumentFromNode.d.ts","../@testing-library/user-event/dist/types/utils/misc/getTreeDiff.d.ts","../@testing-library/user-event/dist/types/utils/misc/getWindow.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDescendantOrSelf.d.ts","../@testing-library/user-event/dist/types/utils/misc/isElementType.d.ts","../@testing-library/user-event/dist/types/utils/misc/isVisible.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDisabled.d.ts","../@testing-library/user-event/dist/types/utils/misc/level.d.ts","../@testing-library/user-event/dist/types/utils/misc/wait.d.ts","../@testing-library/user-event/dist/types/utils/pointer/cssPointerEvents.d.ts","../@testing-library/user-event/dist/types/utils/index.d.ts","../@testing-library/user-event/dist/types/document/UI.d.ts","../@testing-library/user-event/dist/types/document/getValueOrTextContent.d.ts","../@testing-library/user-event/dist/types/document/copySelection.d.ts","../@testing-library/user-event/dist/types/document/trackValue.d.ts","../@testing-library/user-event/dist/types/document/index.d.ts","../@testing-library/user-event/dist/types/event/selection/getInputRange.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelection.d.ts","../@testing-library/user-event/dist/types/event/selection/moveSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/selectAll.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionRange.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/updateSelectionOnFocus.d.ts","../@testing-library/user-event/dist/types/event/selection/index.d.ts","../@testing-library/user-event/dist/types/event/index.d.ts","../@testing-library/user-event/dist/types/system/pointer/buttons.d.ts","../@testing-library/user-event/dist/types/system/pointer/shared.d.ts","../@testing-library/user-event/dist/types/system/pointer/index.d.ts","../@testing-library/user-event/dist/types/system/index.d.ts","../@testing-library/user-event/dist/types/system/keyboard.d.ts","../@testing-library/user-event/dist/types/options.d.ts","../@testing-library/user-event/dist/types/convenience/click.d.ts","../@testing-library/user-event/dist/types/convenience/hover.d.ts","../@testing-library/user-event/dist/types/convenience/tab.d.ts","../@testing-library/user-event/dist/types/convenience/index.d.ts","../@testing-library/user-event/dist/types/keyboard/index.d.ts","../@testing-library/user-event/dist/types/clipboard/copy.d.ts","../@testing-library/user-event/dist/types/clipboard/cut.d.ts","../@testing-library/user-event/dist/types/clipboard/paste.d.ts","../@testing-library/user-event/dist/types/clipboard/index.d.ts","../@testing-library/user-event/dist/types/pointer/index.d.ts","../@testing-library/user-event/dist/types/utility/clear.d.ts","../@testing-library/user-event/dist/types/utility/selectOptions.d.ts","../@testing-library/user-event/dist/types/utility/type.d.ts","../@testing-library/user-event/dist/types/utility/upload.d.ts","../@testing-library/user-event/dist/types/utility/index.d.ts","../@testing-library/user-event/dist/types/setup/api.d.ts","../@testing-library/user-event/dist/types/setup/directApi.d.ts","../@testing-library/user-event/dist/types/setup/setup.d.ts","../@testing-library/user-event/dist/types/setup/index.d.ts","../@testing-library/user-event/dist/types/index.d.ts","../../src/components/__tests__/BettingOddsPanel.test.js","../../src/components/__tests__/GameDashboard.test.js","../../src/components/__tests__/Navigation.test.js","../../src/components/__tests__/NewComponents.test.js","../../src/components/__tests__/PerformanceAnalytics.test.js","../../src/components/__tests__/PlayerProfileManager.test.js","../../src/components/__tests__/ShotAnalysisWidget.test.js","../../src/components/__tests__/ShotVisualizationOverlay.test.js","../../src/components/__tests__/UnifiedGameInterface.integration.test.js","../../src/components/__tests__/WGPAnalyticsDashboard.test.js","../../src/components/analytics/PostHoleAnalytics.js","../../src/components/email/EmailSettings.js","../../src/components/game/TVPokerLayout.js","../../src/components/game/__tests__/UnifiedGameInterface.test.js","../../src/components/practice/EnhancedPracticeMode.js","../../src/components/signup/__tests__/AllPlayersAvailability.test.js","../../src/components/signup/__tests__/MatchmakingSuggestions.test.js","../../src/components/signup/__tests__/PlayerAvailability.test.js","../../src/components/simulation/GameSetup.tsx","../../src/components/simulation/__tests__/GamePlay.test.js","../../src/components/simulation/__tests__/GameSetup.test.js","../../src/components/simulation/__tests__/SimulationMode.probabilities.test.js","../../src/components/simulation/__tests__/SimulationMode.test.js","../../src/components/tutorial/index.js","../../src/components/tutorial/__tests__/InteractiveElement.test.js","../../src/components/tutorial/__tests__/ProgressTracker.test.js","../../src/components/tutorial/__tests__/TutorialSystem.test.js","../../src/components/tutorial/__tests__/hooks.test.js","../../src/components/ui/__tests__/Button.test.js","../../src/components/ui/__tests__/UIComponents.test.js","../../src/context/__tests__/GameProvider.shotProbabilities.test.js","../../src/context/__tests__/GameProvider.test.js","../../src/hooks/useAuth.js","../../src/hooks/useGameApi.js","../../src/hooks/usePostHoleAnalytics.js","../../src/hooks/useSimulationApi.js","../../src/hooks/__tests__/usePlayerProfile.test.js","../../src/pages/__tests__/AboutPage.test.js","../../src/pages/__tests__/AdminPage.test.js","../../src/pages/__tests__/GamePage.test.js","../../src/pages/__tests__/HomePage.test.js","../../src/pages/__tests__/RulesPage.test.js","../../src/pages/__tests__/SetupPage.test.js","../../src/pages/__tests__/SignupPage.test.js","../../src/utils/__tests__/api.test.js","../@babel/types/lib/index.d.ts","../@types/babel__generator/index.d.ts","../@babel/parser/typings/babel-parser.d.ts","../@types/babel__template/index.d.ts","../@types/babel__traverse/index.d.ts","../@types/babel__core/index.d.ts","../@types/connect/index.d.ts","../@types/body-parser/index.d.ts","../@types/bonjour/index.d.ts","../@types/mime/index.d.ts","../@types/send/index.d.ts","../@types/qs/index.d.ts","../@types/range-parser/index.d.ts","../@types/express-serve-static-core/index.d.ts","../@types/connect-history-api-fallback/index.d.ts","../@types/eslint/helpers.d.ts","../@types/estree/index.d.ts","../@types/json-schema/index.d.ts","../@types/eslint/index.d.ts","../@types/eslint-scope/index.d.ts","../@types/http-errors/index.d.ts","../@types/serve-static/index.d.ts","../@types/express/node_modules/@types/express-serve-static-core/index.d.ts","../@types/express/index.d.ts","../@types/html-minifier-terser/index.d.ts","../@types/http-proxy/index.d.ts","../@types/json5/index.d.ts","../@types/node-forge/index.d.ts","../@types/parse-json/index.d.ts","../@types/prettier/index.d.ts","../@types/q/index.d.ts","../@types/resolve/index.d.ts","../@types/retry/index.d.ts","../@types/semver/classes/semver.d.ts","../@types/semver/functions/parse.d.ts","../@types/semver/functions/valid.d.ts","../@types/semver/functions/clean.d.ts","../@types/semver/functions/inc.d.ts","../@types/semver/functions/diff.d.ts","../@types/semver/functions/major.d.ts","../@types/semver/functions/minor.d.ts","../@types/semver/functions/patch.d.ts","../@types/semver/functions/prerelease.d.ts","../@types/semver/functions/compare.d.ts","../@types/semver/functions/rcompare.d.ts","../@types/semver/functions/compare-loose.d.ts","../@types/semver/functions/compare-build.d.ts","../@types/semver/functions/sort.d.ts","../@types/semver/functions/rsort.d.ts","../@types/semver/functions/gt.d.ts","../@types/semver/functions/lt.d.ts","../@types/semver/functions/eq.d.ts","../@types/semver/functions/neq.d.ts","../@types/semver/functions/gte.d.ts","../@types/semver/functions/lte.d.ts","../@types/semver/functions/cmp.d.ts","../@types/semver/functions/coerce.d.ts","../@types/semver/classes/comparator.d.ts","../@types/semver/classes/range.d.ts","../@types/semver/functions/satisfies.d.ts","../@types/semver/ranges/max-satisfying.d.ts","../@types/semver/ranges/min-satisfying.d.ts","../@types/semver/ranges/to-comparators.d.ts","../@types/semver/ranges/min-version.d.ts","../@types/semver/ranges/valid.d.ts","../@types/semver/ranges/outside.d.ts","../@types/semver/ranges/gtr.d.ts","../@types/semver/ranges/ltr.d.ts","../@types/semver/ranges/intersects.d.ts","../@types/semver/ranges/simplify.d.ts","../@types/semver/ranges/subset.d.ts","../@types/semver/internals/identifiers.d.ts","../@types/semver/index.d.ts","../@types/serve-index/index.d.ts","../@types/sockjs/index.d.ts","../@types/trusted-types/lib/index.d.ts","../@types/trusted-types/index.d.ts","../@types/ws/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9","746d62152361558ea6d6115cf0da4dd10ede041d14882ede3568bce5dc4b4f1f","d11a03592451da2d1065e09e61f4e2a9bf68f780f4f6623c18b57816a9679d17","aea179452def8a6152f98f63b191b84e7cbd69b0e248c91e61fb2e52328abe8c",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"f3d4da15233e593eacb3965cde7960f3fddf5878528d882bcedd5cbaba0193c7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"6c55633c733c8378db65ac3da7a767c3cf2cf3057f0565a9124a16a3a2019e87","affectsGlobalScope":true},{"version":"fb4416144c1bf0323ccbc9afb0ab289c07312214e8820ad17d709498c865a3fe","affectsGlobalScope":true},{"version":"5b0ca94ec819d68d33da516306c15297acec88efeb0ae9e2b39f71dbd9685ef7","affectsGlobalScope":true},{"version":"34c839eaaa6d78c8674ae2c37af2236dee6831b13db7b4ef4df3ec889a04d4f2","affectsGlobalScope":true},{"version":"34478567f8a80171f88f2f30808beb7da15eac0538ae91282dd33dce928d98ed","affectsGlobalScope":true},{"version":"ab7d58e6161a550ff92e5aff755dc37fe896245348332cd5f1e1203479fe0ed1","affectsGlobalScope":true},{"version":"6bda95ea27a59a276e46043b7065b55bd4b316c25e70e29b572958fa77565d43","affectsGlobalScope":true},{"version":"aedb8de1abb2ff1095c153854a6df7deae4a5709c37297f9d6e9948b6806fa66","affectsGlobalScope":true},{"version":"a4da0551fd39b90ca7ce5f68fb55d4dc0c1396d589b612e1902f68ee090aaada","affectsGlobalScope":true},{"version":"11ffe3c281f375fff9ffdde8bbec7669b4dd671905509079f866f2354a788064","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"bf237922b06c558ee82c997549c28541d2e4c60a7c449c635cd7116663bff11b","ec646851bb3302d774d4fbec3555fdf0cea4dc30a7f2c663d66387653abecdd6","5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd",{"version":"7f9844af49faece125da77aa099fd5c1da64270e31b414edef84f159a15f61b7","affectsGlobalScope":true},"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","fcc9e6f2da1759e4abe577f938f7d6eec119963abae917c290913a537cf8cd89","67b56598de49ea49e177ed09417ec97c642775a4fe73259df996923517eb652d","98d8c2cce0da7f218eda38d46b3d715adfb4c99c59ad67dbe0fd105113292f9f","d562cf993f138dc03c5b1aed57d7d80e96555ce41365e0e79db9b93a0b49a6b2","4e7fded78c59e63cc94cd8c0c920b287b885ae0512c412e0f7a890b0d700bc3d","7fc1326aae51ca02c357b8391270858387cce4afa9928d6580a42119dfcca9eb","a95d033d647339e3932fd15c01ae763c0e6fba915418c01b2fb1b1d4063a6d7f","9ec473f428d74650f0ce05b81e6a27fc84906a36838fd11875fcae5193f3cbbb","acdd8a10fac8748502509cb57bdd53a7c5b85fa4a2ee3a560c00a40404ff65cb","59bd81abd493fa554955bf7dd7006273192ea8d553d3e4a819e866a14725cdfe","a29acac88d5df222deeb58568f2e56b42075d9b043b4f158b7a55a8eed18985f","56d09baa6411529b9edfed10d627aa294412c3aa33d26e1254b8f1422ecfbfd9","31feea0066a629bfcacfc80bd5ec1551d26cf7a8dad949dc24cde82307748a45","b23ee85f4ae6affbd6d92df4a305756b2d7a7d687108bac625b83d662aabe063","c541b4b619ff47a8f1d2e242f69cab2f1490797934a31b9d15fe1b9d59183626","10f0161e27ec211a27512406022e5381ee1eff148c356579a07392c1cab67205","50d0abf4fb3d7fa0d929459ec9560f6761eb9e80bc568e6367868f6402fae0b5","4be1e84f8a23aa1c9b37669820a5dc6c0d664131c2549b54b40ec225abcff77c","2d6acf4fe93fb92f0259c6bbed436112c7daf0ad9e1318f2f0bd2613083261f0","58024638b80b48562cce5f0e5f65ce5924a2309224400787a4e40dea0ce3c7f4","ed7ed4acdc5b5e7f531cb8a2b62cadc0a8a88d054637965ba585a370f3538dbc","59453dd1a944cc11ef41fc0e21d4afaa4906eb4015fc605b423776ab26be5c35","12bb43d7c61d1b5e4340ed3599bbdcdd8d781994f08a94f010c88d4d26f285bb","f40d60f92714d69e75d0f03e3b51acbe2ff52064dd0e4774fa818ff72f043ea4","797cfbacb483d815b7819b3cf867533af99a630f2beea11cc26592b0c2d42cb1","4b26040bc29ea84ee18561c65d6994a07cfb168240c5bda0eb04bfb48190b219","06709b34a5d72762ab905843ac3443277ab884dc32fce8b3b0d51bcdb5064b74","cbb6fbcffa54cb81308247f17b64f1cb22ca015fba420fdb7c2c61c3a2adfcda","d37a6f1e29ec3244911f7d28cf815251ef113387c8618426acdab8d153940bbc","0e0af8c8426a911142d13768859c1b49e120f60bb153ce6dd197e30f9b8b6820","87e68d28db4ab68bfa35d6d1b57ea233d90e1c678f3da187f796075ff3a8e85d","afdf59e4068da139bff61ba0887ae9c76f46373f95932efd54ee7910b6502a1a","b07d57ba8d3e203d16450dd2426270030368821d3d418b291a05801a362d4d99","ecd8abab263e35cda153af96d4f29c711ff477a4c2bd81698cdfc727836547e3","e9a208aad09ea42f46bdd52d309774b73e7a02762281c51377973025a9cb7250","d264ffe701d5be437313c4f6f7d8f27ce029fc5cc3c51e42e9b60bed6d943e34","d2dcfbb9046a3f918ba22ebc91310f31606cebca173944df0544dc14ed26939a","2bef42b3474c69a11119442d099d6ee4952a9e1ee2674a76df68e67ee853c9f8","0880a3c557fb7ce460173df4c71dc39365359c053da107caad5fbe03a249c69e","f636742cc740b78907aa1010d1fc25cd7d2e5966a3aa149d74ce9370627ff852","b8ef751a4bad89dfe59fa19218e89bdb5c74e6cba080bdbee9921e1c9bf4a615","930d085f4aaabd1cc8d0f4f4837d13e04e948e77c8cf97a2e64c997088fbffcf","df1fd1099460e2d762f69fccb745265e72c14b8048f3e7de60767bbf714f6ad0","dba7c59c1095d9d149ec234ad3846af7fcb0bf6c11822f76d78c19fd0e086473","de378d46014d3f7e673fecf74f8d02bc27a30ffd85ca378927fba171f83f2f66","ec8924ce154b4a9dc676762fd43a7f785fc2cb6a21a0250b34216c8ed757f0bd","6da8dd746a2c6c74c7a874d809f62f908439319fed0505b579774066ce551bcb","a0cbce32b63aa070e5f4aa15e918886492e71c9753426d573e8a9deac1dd8abe","2431e657962c860594400df7d3c49f3c6eefb7e193f158bd9e7f0f965256a33c","30e5961d52cdabbbdaa5169c3c71a77a5aa0f8ac70ebb1f250f6fdaa2007ed3d","37e82fceaba98ef3038072809e67d0b8ed4b37c3a4aa82ed7dbf48676bf2750e","3fa0235c0ee6318d87108b06d6f922f525dcf039a32231d1667b96e202a8b009","5b7c7e06d9f383a1ee8d3b700c4d1419331f4166aa340c7788a35bec98331f34","2df3bf27c69b2c5d47b17649447817b802ad9166d31bfb7c33806195c03a8d83","ee235306953241273af6e40d709d4097476ecb599229473fb55b461288ed1993","2bef48831eaf4bf89166732f51f741488205c30f5184adc03a34a63a6c9a70bd","5fb0a11bc0cb66afc528b180067199bc542c46f6fd95649c3137f3a94bf8412b","6b6814ee731c1e6ee609b98086b273d1aa13333182edd24be8be569c7b7d07df","18cce8e15d2846c71faa2543b08b70b1c04bac9a26427eb98a4e0bad24976a90","ab3a5590e693ad5fb0a1a19c17e2b01258c88fe4617a4cae9d4058cc18946d08","8b4025f2c3f2aed06120f2d20f55d5bc10a06c7a40e058eafe13af9240f85c7c","698972a628b6dbbc1d4d917d422b56e429501ec8758270e527c70401227d094a","212e0c8f420a4c1866546cb7d50ba94537c25aaa715e84685d8995798125b9b9","39b74fe9bd08e3154f281117a5fe5bfa6b1afdfe8556eda1fc82428828329fd4","8b80893422089fff8f07496f4f66f1207847f6a9645c88d75c2877fabd453f11","cf41eb0cb37e385c1d777bdfefc05f0617857fd72d3a455d6d4f81e5e31a397f","583b9e0633074c66e97445426ac0b07bdb388f87e92449baae08cd5ab9cbf846","07646330c0cf3e5429bf2fce8647b0369a9cef8dc9b7a327e2ff47c4d1b916e3","eb277e8bb50c4fbc16ac5e8238b88880626f3ad672d7af92f2d29eaa522a9399","bfdff632c328e37b1946e1b6d7120933c145fac5a6eed6c8adaba5f5e56e64e3","b04f1498e13102326e1968fac4c2d37ca0c2b7abd76812892d9496151083aa91","c413aa82126a73c6280ce1177d151c01640790b5913e6ac80b62b0cce0ebaed3","93436c1aebb65cf409cf9879764d584439bbccc2f87e05763c30b70ead288013","2bbe03e00b2dd6db70bee6237f166c7fbc2b6e301918b3e9a6b62cf0df6eb370","522b79a823b5d466fbfe86cd25473045a8ad45f2a9b9df00e19fe5f3d00ab635","db17b27cc4514d286387592824d7bd39dea6737b799787d72acaa6556d40092e","0d6d484d91ba60f459fc8fcb35d08f6791711f05c8156bb6fc17b0a6fca81541","7bfc9cdd904b12b8f14d2160a092c90afd13cedffe96b8b50a71806431a01873","4981a6995ea12a015408f795188b03a7476c5148b051ea55126a82b62e06708f","843b27075f3ed5a868bad8c9f29b9d275f8a61b3e3c4e760ff6d64e1bf9a6f9c","3c54e9f8641d69914fbda6cac089757a412fb904f0a075dbc65bce568f4a90b7","472d9a32c8571cbfbddbe80686e464464ab008caa48c65677b0d35a0e506d06c","9daca9b36125be1487105a71756caff00669c1871a01209f63b3f9285c5503ec","9567454f4649cdcd899ec3328e8ddf843e0cfd59b832b3e23879d56ca4fadb35","2687e7d974ad531a64538810770312b81193fb7f143cd09fa89e05aad414cb55","c00565777871b6d76d065c51af1d2fbc414f8804498f8692861f0ef3759d8812","12a3233962e3103fd3e4f4de0c26e0f17cd7c3d37b0aaa0743b8dcc7038d0e33","4da29c03d43f81993290813ab4d7b3d29812ce0cc1ccfce9784d076f726fe753","fb58a4485f54c463027b36c4843098de5fdb536594f49ed81f783252561f77f6","6c09333a0c899f83c1444a379ebdcebeea8fd6b25fc6bec2e0e1e5724bcdecc5","ec85cf13bd5d52a3b29672c8d5509e0d6478721d814d933578fc769e82ac7f2d","939c575afa1e1720c9cafcf09d5ad218f7ffcc36743b7cf33581dff722fde7fc","315000295ec26a0a60741a2021d3b84b8f2cc2b8f636de5851436f7464f7ab98","b7956653d6f5d55877326e67cedd538243d9953819e019242502c432381fcee5","d655eefdb3a03cdab08a7d48ff49f42feef1974b3702a1b3010888d51e2428f5","8bd215328a9fd468ffa6f0c1bec8727e9081eadcc4659f3ea56b2e54412a4cc9","d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","833e92c058d033cde3f29a6c7603f517001d1ddd8020bc94d2067a3bc69b2a8e","08b2fae7b0f553ad9f79faec864b179fc58bc172e295a70943e8585dd85f600c","f12edf1672a94c578eca32216839604f1e1c16b40a1896198deabf99c882b340","e3498cf5e428e6c6b9e97bd88736f26d6cf147dedbfa5a8ad3ed8e05e059af8a","dba3f34531fd9b1b6e072928b6f885aa4d28dd6789cbd0e93563d43f4b62da53","f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","2329d90062487e1eaca87b5e06abcbbeeecf80a82f65f949fd332cfcf824b87b","25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","4fdb529707247a1a917a4626bfb6a293d52cd8ee57ccf03830ec91d39d606d6d","a9ebb67d6bbead6044b43714b50dcb77b8f7541ffe803046fdec1714c1eba206","5780b706cece027f0d4444fbb4e1af62dc51e19da7c3d3719f67b22b033859b9","7253b2045ea6b599d85ef9dd7ce2bf5439a1a98a27f078ba2115bedf61d738c7","ca58ededf2c0cd0563e8d83fef922817ff2a1ed9bd750242b17146354c1c5243","9d34b57d308ce327e484887106e68e2a82beaf263fea298e4ada5b3925ccbb8d","fe1f945db9c3cb35788d028ce9338b06256cd6041f2597668b9359f2b4fd4197","641fe481fff812b6a151b7fe0996468ced591244c6682b6ba2610b0bf016a9c6","63e5f3ffc50b8c29acf5396c0468a290c927cb7a5208ffb74add35670867e476","06c3f71832c76a82329b45610793b56d0b78fb02603d90f8a7629f49cb0dec1f","ca586208341738cb5e6d144536d83f91d96856c5828307088d242d52e4d439d4","fde0e854df7095db9f8b5cbe3804845a437750ff3c9edcaf2572e66885b230a3","6a63ec446b7fda7a8f1307c1a4659d6b8d1c617400b46d6b49f3d97ddfa93905","c461e128927c8492fff179d344735023ae189c4b626af91adb7b63c6c4b7248f","6b2706a5cee62ef25fdb7a9a268f558a15de9df894984ed13a07c8318576ef51","353fe785452a3c2d6ff2a41fb0684bd2878e78f3728fc5dae98634ccfaa9beae","521bbccf0edf1f69c488c6828716bdfb04acb69ea3ee5e3b7140bfa22ed6c342","dfdb07c32025c9aac5707797e48c46c8fc1416c3c3a5cab9677a75ab78a787ae","e1e115f590a02130c539f61c20460291711dccbdaa3fe4bbad43ab770dd4306e","e4fe42173b249ff533174cfbde4510ce5345da50c2f717b3ca27eda49929dad1","0dbd184576784dbc0b0caa1f022bbb1024a4f27b77e9bf5738c73841c218f4ab","17023bb4eba80df5152e45fa10ec0fa4105fa1c59cb30a51d5724c77cf041151","05b84716272aee3042dbeb319aa5b1ff5b8e77b62ae24be00b88cf8e04cab4a2","86d850e3572c2ed8f56d73a1ce7c5c4f3ea5a62170b82db65f3055f73614099d","4ab4cb977736067eda6f2ff73e521424a818319a1a70616ad2db2ba0b9dd5322","fa790e874499cb17016556f3168948f8d751dcb35a0862a9b9c55bb2ec353d48","795692a29dca5a39f904825a4abc78f9acc3a54ecc6858d8a268c52679f21751",{"version":"6876211ece0832abdfe13c43c65a555549bb4ca8c6bb4078d68cf923aeb6009e","affectsGlobalScope":true},{"version":"394fda71d5d6bd00a372437dff510feab37b92f345861e592f956d6995e9c1ce","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},{"version":"c564fc7c6f57b43ebe0b69bc6719d38ff753f6afe55dadf2dba36fb3558f39b6","affectsGlobalScope":true},{"version":"109b9c280e8848c08bf4a78fff1fed0750a6ca1735671b5cf08b71bae5448c03","affectsGlobalScope":true},"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","e525f9e67f5ddba7b5548430211cae2479070b70ef1fd93550c96c10529457bd","ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","17fe9131bec653b07b0a1a8b99a830216e3e43fe0ea2605be318dc31777c8bbf","3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","2c9875466123715464539bfd69bcaccb8ff6f3e217809428e0d7bd6323416d01","ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","2472ef4c28971272a897fdb85d4155df022e1f5d9a474a526b8fc2ef598af94e","6c8e442ba33b07892169a14f7757321e49ab0f1032d676d321a1fdab8a67d40c","b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","19851a6596401ca52d42117108d35e87230fc21593df5c4d3da7108526b6111c","3825bf209f1662dfd039010a27747b73d0ef379f79970b1d05601ec8e8a4249f","0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","40bfc70953be2617dc71979c14e9e99c5e65c940a4f1c9759ddb90b0f8ff6b1a","da52342062e70c77213e45107921100ba9f9b3a30dd019444cf349e5fb3470c4","e9ace91946385d29192766bf783b8460c7dbcbfc63284aa3c9cae6de5155c8bc","40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","561c60d8bfe0fec2c08827d09ff039eca0c1f9b50ef231025e5a549655ed0298","1e30c045732e7db8f7a82cf90b516ebe693d2f499ce2250a977ec0d12e44a529","84b736594d8760f43400202859cda55607663090a43445a078963031d47e25e7","499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","e38d4fdf79e1eadd92ed7844c331dbaa40f29f21541cfee4e1acff4db09cda33","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","7c10a32ae6f3962672e6869ee2c794e8055d8225ef35c91c0228e354b4e5d2d3","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e",{"version":"f4b4faedc57701ae727d78ba4a83e466a6e3bdcbe40efbf913b17e860642897c","affectsGlobalScope":true},"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7",{"version":"003ec918ec442c3a4db2c36dc0c9c766977ea1c8bcc1ca7c2085868727c3d3f6","affectsGlobalScope":true},"938f94db8400d0b479626b9006245a833d50ce8337f391085fad4af540279567","c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c",{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true},"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a",{"version":"12fb9c13f24845000d7bd9660d11587e27ef967cbd64bd9df19ae3e6aa9b52d4","affectsGlobalScope":true},"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","5078cd62dbdf91ae8b1dc90b1384dec71a9c0932d62bdafb1a811d2a8e26bef2","a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c",{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true},"2f32444438ecb1fa4519f6ec3977d69ce0e3acfa18b803e5cd725c204501f350","0ab3c844f1eb5a1d94c90edc346a25eb9d3943af7a7812f061bf2d627d8afac0","b0a84d9348601dbc217017c0721d6064c3b1af9b392663348ba146fdae0c7afd","161f09445a8b4ba07f62ae54b27054e4234e7957062e34c6362300726dabd315","77fced47f495f4ff29bb49c52c605c5e73cd9b47d50080133783032769a9d8a6","e6057f9e7b0c64d4527afeeada89f313f96a53291705f069a9193c18880578cb",{"version":"34ecb9596317c44dab586118fb62c1565d3dad98d201cd77f3e6b0dde453339c","affectsGlobalScope":true},"0f5cda0282e1d18198e2887387eb2f026372ebc4e11c4e4516fef8a19ee4d514","e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86",{"version":"237581f5ec4620a17e791d3bb79bad3af01e27a274dbee875ac9b0721a4fe97d","affectsGlobalScope":true},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true},"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","e6d81b1f7ab11dc1b1ad7ad29fcfad6904419b36baf55ed5e80df48d56ac3aff","1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","b6b8e3736383a1d27e2592c484a940eeb37ec4808ba9e74dd57679b2453b5865","d6f36b683c59ac0d68a1d5ee906e578e2f5e9a285bca80ff95ce61cdc9ddcdeb","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093",{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true},"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","b338a6e6c1d456e65a6ea78da283e3077fe8edf7202ae10490abbba5b952b05e",{"version":"2918b7c516051c30186a1055ebcdb3580522be7190f8a2fff4100ea714c7c366","affectsGlobalScope":true},"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","982efeb2573605d4e6d5df4dc7e40846bda8b9e678e058fc99522ab6165c479e","e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055",{"version":"d67fc92a91171632fc74f413ce42ff1aa7fbcc5a85b127101f7ec446d2039a1f","affectsGlobalScope":true},{"version":"d40e4631100dbc067268bce96b07d7aff7f28a541b1bfb7ef791c64a696b3d33","affectsGlobalScope":true},"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","42180b657831d1b8fead051698618b31da623fb71ff37f002cb9d932cfa775f1","4f98d6fb4fe7cbeaa04635c6eaa119d966285d4d39f0eb55b2654187b0b27446",{"version":"e4c653466d0497d87fa9ffd00e59a95f33bc1c1722c3f5c84dab2e950c18da70","affectsGlobalScope":true},"e6dcc3b933e864e91d4bea94274ad69854d5d2a1311a4b0e20408a57af19e95d","2119ab23f794e7b563cc1a005b964e2f59b8ebcb3dfe2ce61d0c782bfd5e02a2","0fd641a3b3e3ec89058051a284135a3f30b94a325fb809c4e4159ec5495b5cdc","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","e66eb237e7629bdc09f5f99fd69b73a0511fafb799783496a37432dde5ce0bf0","fdec06934bf00cb7c1187b7f2f1ac6bf2f327ab5af71a543c48d919baa194f1a","9c8f99dfcd80875222e3a4923525595503174088a6eedce78ae3ea81fd650323","652c8e676e1b94c7829671c0eb237528f76a0ba67ac846c065bceb4088ebddd7","caac4c00061a947d2b1010bb6464f06197f2671bdf948fa1aa40bf1e244ee2a0","95b6c669e7ed7c5358c03f8aa24986640f6125ee81bb99e70e9155974f7fd253","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","c3e5b75e1af87b8e67e12e21332e708f7eccee6aac6261cfe98ca36652cdcb53","f7dd7280ee4f0420865e6423fe199aeac63d1d66203a8b631077cdc15501ef1f","ef62b4aa372f77458d84c26614b44129f929e263c81b5cd1034f5828a5530412","8610558ae88a43ad794c4ab1da4f0e8e174e0357c88f6cbb21f523e67414e9a9","0b0feb9837c561c0a67b61024328045bb16bac6e4b10f7b0b217d3b8b43b0b12","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","d1c6c35d174dbe63a76ed8ac6621cca8dbe8794961a2121feb5f0239747d1b7e","051c1bc0efd3690031a97ac49133c9486c22bd07852e75a11ed4b40ceb722569","a22270cba4f004f64a61cec3e39574416e3ca72e848f53a36ba3add746243217","447b9b631351b40faa0e961e6cbb5e269bc1fa61f7a615b8077b31a94aaefae3","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","e641fd321ca5fe17b532bd3b5a6e85a8741bbde7a9d7110d8ed272605c1c4a25","9d63720cd09e8b0ae76e0ade1993b7ec600e6729e453f459d4039d6914914c1a","8b324c8813c2bee210a7a79eede7abc4b5c60132fd497e140ce312a856af22a4","ff2d2f19561cd3a594d7cfeeb29797e62c8d9ef62df65916e6be9bdcfbaf8f7d","d59191f0bb663800c0856116d69ae11125eeae891d0a46c0be52f3c78ed4890e","d8360fe15a60f549584a9ff7d0e6129ed77abdbcf062b4da1a10a78175d34f71","a57b37eae916e680e5e15b36d17b22bb05834115041fe940f11d9e714501ff84","e53086c8f861bee1717e3e001498d2a493f786c6fcbb0027fc4352f00fcaa3cd","446242adee16900500f9d9dba2678258641f7e8f692f43c18dde8872167107bb","6ef7ba3b3d2514336c59d1af84e2d7550a886a5be193d9cb980cc6d16698236f","185e38aa301aaaaf3870183acd48f9b4da7baa5282cb9ed102a10004b0751cc2","1f0c7b51e98442f125414c1d43c6a04abc8ee800066834d742eb99b0e542d327","131c58b9b527fa99139dabaaf585ed52e9f5c450c1347c87bcb9af9b884e63ea","2642f053f18152ed5ba6403217f932e4fa0be0077f38734b168ab92da948b3c4","5718fb71731197c4e623120e93c5ece9061f569aa4dc28ffcbb8b4fb5ffe2ba6","9bc5d8cd23570760dc417cb10b01079bdb919b4dfeaab9c4341cf11d37d7a29e","0671e90198a35ffd8e5dd35c5ce0fd4839305f6fe9878ca9851a25c097a7874a","a3d9df9d57f7e47f70e013a46cf1c38177579dbb2c5b567bde24c7a67ed1303d","b4ac0ae1e7ed09d2ab8496d65c04643742a1811c6c5f34d9f9504a3868bc02e8","b63b8dfe391e40354edfb991062b8e8e28ef36a28644a7904f6a38f51a8a2386","375ecb9cebdd43c6fd230cfc02c6640344aadf920319b73a3c8514f45f23167c","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73","67c51fa68aadbb50e4ffc650b704620e0393bddb3d3eac3a6195bf1956562fe4","8187d9966b8fa5a2d0e53c71903adb5aa71ebc2a23410ab2d37eb764db800829","d851073758ff1ce39bb428d8a3b3385ca26da1745ca742789e876d67dc0aae43","0cee5b30f4300e628927dde7e7ae7b5bc32250a685242474d069b9346da8a2b1","6fdc7cbbbc0601f9bb153c30c0e8063321cd1c9211ad512b9fde1d1f785b35dd","6ae7157666262b5c0402463531996601150583cb1f4f9421f184a0eec9049f10","fbd0ac5a6097c20307587444815092eb1825d831991363423ef0ce70ef053e82","ec0b2f8ed3cc053fdb004ab4979c32625179a746717504e08fc30cef9ec9d7a3","2887592574fcdfd087647c539dcb0fbe5af2521270dad4a37f9d17c16190d579","ed434fd49cf57789f99d3d2f4fb4d5f4930825280ceaae21200d840609345161","3ea3b60de13285b50d9752812d3a6d2cae078d89031713613f58cd2f5565589a","4b0465994a4b18dd63a9af850c74024e6184deac2477ab87135f7d1b11a07178","3031ed6baeacbaf771576f64094d8a977e5be37b04d4dbb335fff9cc1d95a147","5f02cf0f7cc845c12b09607f97e57f942c313ebee6c33a3efbc346f19b499c7f","8e1eb67ef6924cd14793af526f9a4e3195b5734920a75ec29900731b1997f2ce","07fa4bb359f3cacde0e0b6d75cd9a53b88168088be58e01b385cd12e12a6d5d4","52d5d4a344ea0781bf00874c4829e3cfb0c12e1fa28c17740e773bc247fa663c","89ebb5291da50663149fc01245eeca4f8bf1a2bd8a3fe84ea62d926d53a6460f","792128daaa6209b5d52148b1952b56aad02fcf72435283a2d5ac1fb22113cd91","c474689555d4e49d5210e6c6d95f939e31f49158af350cbc403e4fdda5d32386","d4c5aebfd4d5468e03fee82920222d861737cc6ec5c9829474a36e379753fc52","f8fd01e7967e335266c6113c5d9bf15113768c5747265420dae0fdf1868eb05c","7a89d77bf137521a06ff5b3ce7297c663f3c27912b09320fa520c1b2d6bab9e5","7647ed4e66d98048478e6245f50b794a916ffa456fb362672e52c01e1b09a644","9a22045cb43de6fab0b5e524e4cef807e5a2c6e0a49044de56b65448e1572a14","4441e06cf8e7ffff0519950e34df3608ca1016f09f83fdfb7f71ab7376ac5a47","45d0cb97f71ad1fd0688b8a95c2a2b3cce347cd458ec365af4079c0273b49dc6","6c86a8ced863164acfbe7753660a7ba4aa97cdaa1e3b8d193a18316f906d4bbf","2dd10019ccc6f059b703db2f58f6f385625d235869fe562978b5a913e5db4c69","e4c66039756093e60d857430f451ffff1ca3fa5a951367b67dcc8f29b47b2d72","48433ed0754c860ebfeeec213f9c5943cc6b8aa7b70ce1bd9c5c6a490ed91229","c2708a205c4afa73bfeebaf0e939390b3b3fe9cd1788b09389ee0d736cd75a72","8f6d44ee7619da14f50cf051a243c41793ff1dccda8d8a3bb2255989df114c30","2aca83fda179d79a68a259bc47999615976b935d2eeb391304db8a095af721e6","26b3b07bb0229b36ba87ec2b0ca1a42a927c2e8a8bd5ae9339d5a82d950eb3ce","8767c93beffebe9eda0c03e4893ab2fe9b62ff65bf767a003cbba50cfe810a28","d7f211b5ba9e9fc21ba0fbf12b3ceda8680f672da595068dbb4d2d1f9a0c83b1","e613a48817a40243523fa26bb5e3396e6d60c79a1c0c59274889560f34cfdde7","ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","80b232969d72e6f08081a4a0b558537db2671a1a60bb44559d5e3b5f1fc89cd6",{"version":"841784cfa9046a2b3e453d638ea5c3e53680eb8225a45db1c13813f6ea4095e5","affectsGlobalScope":true},"646ef1cff0ec3cf8e96adb1848357788f244b217345944c2be2942a62764b771","0ab7506c71d3467c8db4fdc2512e5960afcfeb0a4f51467d79c9b51af5ec9e63","d45bd3d7c328e85331b3deb75be0f5bef5746ff9efa27900c769ad0e3461acb4","0eb2ed1c1c8d87ba91ae080e95a5f4891e3bdd31626b894655985760a2e56afd","3cfb7c0c642b19fb75132154040bb7cd840f0002f9955b14154e69611b9b3f81","8387ec1601cf6b8948672537cf8d430431ba0d87b1f9537b4597c1ab8d3ade5b","d16f1c460b1ca9158e030fdf3641e1de11135e0c7169d3e8cf17cc4cc35d5e64","a934063af84f8117b8ce51851c1af2b76efe960aa4c7b48d0343a1b15c01aedf","e3c5ad476eb2fca8505aee5bdfdf9bf11760df5d0f9545db23f12a5c4d72a718","d0570ce419fb38287e7b39c910b468becb5b2278cf33b1000a3d3e82a46ecae2","3aca7f4260dad9dcc0a0333654cb3cde6664d34a553ec06c953bce11151764d7","a0a6f0095f25f08a7129bc4d7cb8438039ec422dc341218d274e1e5131115988","b58f396fe4cfe5a0e4d594996bc8c1bfe25496fbc66cf169d41ac3c139418c77","45785e608b3d380c79e21957a6d1467e1206ac0281644e43e8ed6498808ace72","bece27602416508ba946868ad34d09997911016dbd6893fb884633017f74e2c5","2a90177ebaef25de89351de964c2c601ab54d6e3a157cba60d9cd3eaf5a5ee1a","82200e963d3c767976a5a9f41ecf8c65eca14a6b33dcbe00214fcbe959698c46","b4966c503c08bbd9e834037a8ab60e5f53c5fd1092e8873c4a1c344806acdab2","480c20eddc2ee5f57954609b2f7a3368f6e0dda4037aa09ccf0d37e0b20d4e5c","40a9e5673448badb43d693daf20698c452782ae1682887b9d1ccbf207589781a","f2834e7008d641386a0d313ef33e974effb5815755254506341a0f3ba846a506","2e44250d356340733b1f210ad994bf11a0ae802186d5ad6b602661030f811db2","d01f869e0aa82d99b590ac59b6906d0f4ccae1d903d1dd1e622d944f4741b829","8d5a0a154fda1d5422fc0a0432821d5485ef88588ceb267651bf0ac786addcfa","b25d24260ac27016213b336707cb6bd279e12b946304118837ca0bd93831bb0b","81b8cf069b2fad8ff8112f832db6a32b7735b3291855ae71876e8dd07687a438","da0f84fcd93700b4a5fbf9c6f166a6cc19fc798231bff56dd1e3875bfc6966eb","634ff08e0143bec98401c737de7bfc6883bfec09200bd3806d2a4cfc79c62aaa","90a86863e3a57143c50fec5129d844ec12cef8fe44d120e56650ed51a6ce9867","472c0a98c5de98b8f5206132c941b052f5cc1ae78860cb8712ac4f1ebf4550ca","538c4903ef9f8df7d84c6cf2e065d589a2532d152fa44105c7093a606393b814","cfcb6acbb793a78b20899e6537c010bfbbf939c77471abcdc2a41faf9682ca1a","a7798e86de8e76844f774f8e0e338149893789cdc08970381f0ae78c86e8667f","eebc21bb922816f92302a1f9dcefc938e74d4af8c0a111b2a52519d7e25d4868","6b359d3c3138a9f4d3a9c9a8fda24be6fd15bd789e692252b53e68ce99db8edc","9488b648a6a4146b26c0fd4e85984f617056293092a89861f5259a69be16ca5c","e156513655462b5811a8f980e32ccd204c19042f8c9756430fe4e8d6f7c1326e","5679b694d138b8c4b3d56c9b1210f903c6b0ca2b5e7f1682a2dd41a6c955f094","ca8da035b76fb0136d2c1390dda650b7979202dbe0f5dc7eaefcde1c76dee4f4","4b1022a607444684abeee6537e4cace97263d1ef047c31b012c41fdc15838a79",{"version":"dd0271250f1e4314e52d7e0da9f3b25a708827f8a43ceff847a2a5e3fd3283e8","affectsGlobalScope":true},{"version":"47971d8a8639a2a2dd684091c6e7660ec5909fed540c4479ca24e22ac237194e","affectsGlobalScope":true},"e1075312b07671ef1cbf46409a0fa2eb2b90bb59c6215c94f0e530113013eeda","1bfd63c3f3749c5dc925bb0c05f229f9a376b8d3f8173d0e01901c08202caf6f","da850b4fdbabdd528f8b9c2784c5ba3b3bedc4e2e1e34dcd08b6407f9ec61a25","e61c918bb5f4a39b795a06e22bc4d44befcefd22f6a5c8a732c9ed0b565a6128","ee56351989b0e6f31fd35c9048e222146ced0aac68c64ce2e034f7c881327d6d","f58b2f1c8f4bcf519377d39f9555631b6507977ad2f4d8b73ac04622716dc925","4c805d3d1228c73877e7550afd8b881d89d9bc0c6b73c88940cffcdd2931b1f6","4aa74b4bc57c535815ae004550c59a953c8f8c3c61418ac47a7dcfefba76d1ba","78b17ceb133d95df989a1e073891259b54c968f71f416cd76185308af4f9a185","d76e5d04d111581b97e0aa35de3063022d20d572f22f388d3846a73f6ce0b788","0a53bb48eba6e9f5a56e3b85529fbbe786d96e84871579d10593d4f3ae0f9dba","d34fb8b0a66f0a406c7ce63a36f16dda7ff4500b11b0bd30a491aa0d59336d1f","282b31893b18a06114e5173f775dd085597ca220d183b8bd474d21846c048334","ed27d5ce258f069acf0036471d1fbb56b4cb3c16d7401b52a51297eca651db62","ec203a515afd88589bf1d384535024f5b90ebe6b5c416fb3dcca0abd428a8ba4","32a2a1374b57f0744d284ca93b477bd97825922513a24dfe262cbf3497377d96","a8b60d24dc1eb26c0e987f9461c893744339a7f48e4496f8077f258a644cffab",{"version":"3f9df27a77a23d69088e369b42af5f95bcb3e605e6b5c2395f0bfcd82045e051","affectsGlobalScope":true},"9fd080a9458c6d6f3eb6d4e2b12a3ec498d7d219863e9dca0646bdee9acce875",{"version":"e5d31928bee2ba0e72aeb858881891f8948326e4f91823028d0aea5c6f9e7564","affectsGlobalScope":true},"9a9ba9f6fd097bb2f57d68da8a39403bbe4dc818b8ccd155a780e4e23fa556f2","e50c4cd1f5cbce3e74c19a5bbf503c460e6ae86597e6d648a98c7f6c90b596dd",{"version":"fa140f881e20591ce163039a7968b54c5e51c11228708b4f9147473d06471cf5","affectsGlobalScope":true},"295eca0c47be1191690fd2fe588195fff9d4dc43852aceb8b4cab2aa634579f0","59ee7346e19b0050508a592702871dc943083c6dcb69a47d52e888115d840781","067712491fb2094c212c733dd8e2d56e74c309a9ce9dac9e919286b7245a1eb4","a5eae58ac55bd30c42359e4b01fb2be5eddac336869d3f04ffb4daa54b58f009","d12d691ef8933e8db39f2ca81d6973940ff5e37bb421752f5b6e7bc15dea3abf","4c5f8bd9b3a1aae4e4fddfee41667e495a045f73ed603993038fa6a8ba92fa14","dfb274ab0f319cf18ce7152067c25f984c7fd1924fc72b3f66734588444c934a","108c8c05cbc3fbbbd4ff4fc0779c9bef55655c28528eb0f77829795dc9f0b484","a7e5444d24cdec45f113f4fb8a687e1c83a5d30c55d2da19a04be71108ad77bd","41ec17e218b7358fcff25c719bc419fec8ec98f13e561b9a33b07392d4fec24c","23c204326746e981e02d7f0a15ab6f8015f9035998cb3766c9ddbf8ea247aea2","25f994b5d76ce6a3186a3319555bbba79706dac2174019915c39ac6080e98c7e","dfa4e2c6a612d43851ccbc499598cb006a3a78bc8c7f972c52078f862fa84e47","02c1705fa902f172be6e9020d74bcd92ce5db8d2ef3e1b03aabc2ac8eb46c3db","99d2d8a0c7bb3dd77459552269a7b5865fa912cedab69db686d40d2586b551f7","b47abe58626d76d258472b1d5f76752dd29efe681545f32698db84e7f83517df","3a99bbbbbf42e45c3d203e7c74f1319b79f9821c5e5f3cdd03249184d3e003ce","aaacc0e12ab4de27bdf131f666e315d8e60abec26c7f87501e0a7806fc824ae6","3b4195afd41a9215afc7be0820f8083f6bd2e85e5e0b45bb0061fb041944711e","108df8095f5e25d7189dd0d1433ac2df75ec40c779d8faf7d2670f1485beb643","ddd3c1d3c9ff67140191a3cf49b09875e20f28f2fc5535ae5ea16e14293a989b","7b496e53d5f7e1737adcb5610516476ee055bf547918797348f245c68e7418fe","577f44389d7faedd7fc9c0330caf73140e5d0d5f6c968210bff78be569f398a7","3046c57724587a59bceefadd30040d418e9df81b9f3cfd680618a3511302ed7a","15ccc911ed15397e838471bfe6d476c28deffe976c05cb057e6b1ea7491242c2","64b5a5ebdaead77a9a564aa938f4fb7a45e27cda7441d3bee8c9de8a4df5a04f","a48037f7af5f80df8973db5e562e17566407541de284b8dadf1879ea3aed8a2f","dab97d96ce986857150db03f0d435b44c060d126b4a387c7807f4e9f6c92e531","85f39366ea7bc5e34b596fc97de18a7e377856755e789d8e931054f2191d9b8b","daf3ea3d49f6e8a2fa70b7ca1f21bd97f1b65021b31fbfccb73dd55f86abb792","b15bd260805f9dd06cd4b2b741057209994823942c5696fd835e8a04fb4aab6b","6635a824edf99ed52dbd3502d5bce35990c3ed5e2ec5cef88229df8ac0c52b06","d6577effa37aae713c34363b7cc4c84851cbabe399882c60e2b70bcbb02bfa01","8eaf80ad438890fe5880c39a7bbf2c998ce7d29d4c14dd56d82db63bd871eefb","9b3e7f776f312c76ac67e1060e5398d7ac2c69d6a3a928a9daaae2eb05b15f56","202042eccb4789b7dee51ba9ecab0b854834ea5c1d6a3946504bfc733d4468c3","2b2ef76a9f36094b07ee6f76a5ac6903f2f65c0a20283201814a8d1e752cb592","8882e4e087d0bc8cc713cb3d8090c45d33e373e6f5c83e0f8d00fe6a950ef875","42979c197a22211d72c9cf1de8559f0a39de0b0687eea63c6407a69d9d73c13f","cc36098e27200f5daceffff4a4694148746aaa1b369536186fa1caa43d8b4bde","07133796953f82127aebef603392f1430690fe6cfd5d3d4c2bd3b277c6566d79","9079300efc80cdcb5a5cd153bdc354ac3439619e661e5f35413f81f94d4aa897","3655e77b67da6b52b34f7abd79890cdbc9ce2e2a3579fc2568f07d77d1d60ec9","95a1ff30ceba2b8c185a76002e2a4578cca9a593d8b642b7d5b13275ece952b9","2a43ea656e1e3ae2ec876766d9d4576a53b079a1cd352367db12fc721033c08b","e8835cfaf67d1730e430a800d447ea79d33c59fc990455965ca85dcc16c6ec64","98631e5438157a2bc50970527c20d9a0d02def63700cb8f21ee19520a982fbc0","93a5f2ecf21f69045a129ef7821396276c117b34eb39d0b5510ff90c34839f56","4d054866f6bed47338a905264c4cc16108dfb55353a97d67b5beb0393f78fbc4","cc611eddaabd228585429f406dc5b2ef53db92e954f3fab97f8cc67b84b0a67b","51d3abc39997f19e1e0e13fe545c786465259a3f6625b27828e47847a00acc27","982c00b942df3ad3aa49500b7f253bad1f2624d4c5e0e0eea1ee20529d90296f","a9f610a8bd1aa513ca9ee39a05566e7439b45ef24670858f4b0a3b1b33a17923","a7b268ed0284472916b39062cea1ec8ca946b048b7f8992b14221d4318cb7f5b","7748692e43d33e0f58fd69f9e84f568430d147be8a5fec55aea68c73f63908a1","cee3e7bec863f019aa744e00dd7a8470f2f6ff951c498c501ad6e296aca9f418","98e5bfadb80d850109194eb7cbdae761564cf0aa4cdd39e70eb73fe628af6bf8","5da731f0b18d358e4e0ca682928298de26c6eabee5990d03333e0e8aef335ea2","5ed1241d2008dfabf2145443b9fb285b7bdcd8211266187ed9dfb2ae5b80f869","f60e1afcef13dcd11edafbd3f7720a5a50c3d2d90b4cb27cea58adb16efd12ed","e6a1fc7243e8a4f92cbafa2bac261e3540968403f082df44ae521b8e2658efbd","b745f5b14ad0407d94b3b3e764ceb6e6c1c0873528461421046751f7a3c84b17","554028fd3b11a78660ed0cb98b5fd343bc9b8a9b8495114e6ae5d13aed49f242","e4125c670944f6369be310c830b37391a82b4f8f500399a17b041962e1fe1dd2","60cded932be8d4f5de5c3a7f56c5e01438ce8ec7f110d4c87fdf2bfdb910dbd0","06e0622d8d29254863de52ca0da62329d78c5e02086481fbcef6c9cd74796d84","ad5346fa860e1577699a7a1e6543f7e811dd209164ed4e226566595c50ad3dd4","749ad4dbb8d1d33ab4283f8ffa875669e067f917cf1d17162e149b571c689f9a","dc278a8129f50ef9555060cf12ba10a11c2a816bad01c2f1abd2f87f6ac3796c","ee94a249d6f6c94e2656e1abc6820a25a88ec1351c21929d1365d60a4381d797","bc5a1ad94db45ea72a8632a18d57efe131671c54c51347c8c9a266f5ca059d8f","1ecb3bf08e05193e81b052ca5180d2a2cfcf64602d57312dd7a5686755938b88","ee2a7977e7cc78906b894656baaf8d4080962056ee12b2024fa2f42bf8e447bf","88124457c6ce628eb357aefa18c0e23a58d92997bed3e28a5e53217a9d8ec590","bda82ce02ca6b44902394fd57e57b1b41e4de290727d92cef3cb537b21cbc5af","c288bf4485ccf06ac2da23408bbdd47c987b1ea7db59f7d3caf736d115323e42","c0007fbf0456531d2c2ac6243689559d4ea2b5a5bba9ddb28c006db5a15fe32d","c7d9afa4d252d9dee7c7c0c3752db5efcbaa39dda3df9a1e193aea3a0d056ac1","475709fda88e76c7b3bcf00a2ffa16eb2d91088caa6d9f4abdf9a6592664f676","ec1bc8ff1a835119253f23d674c3e13ba983744620a0655f73dc61f6aaeea004","4f9b48c8b5098f29ddf9041e81676fb06b078e1dfe76e1b160f93ca214d05ff3","94c5a9b9991dc4e164779653c1f2af90ad961fd23d9164c0b6e570be7456ce31","13ed3c245e4a6a8b90d3f0909198c01fd7cb48e41364c1ece3c11edecb9dc9c7","81212195a5a76330d166ecfd85eb7119e93d3b814177643fa8a10f4b40055fbf","b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","82e5a50e17833a10eb091923b7e429dc846d42f1c6161eb6beeb964288d98a15","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","f9e22729fa06ed20f8b1fe60670b7c74933fdfd44d869ddfb1919c15a5cf12fb","d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed",{"version":"a8932b7a5ef936687cc5b2492b525e2ad5e7ed321becfea4a17d5a6c80f49e92","affectsGlobalScope":true},"689be50b735f145624c6f391042155ae2ff6b90a93bac11ca5712bc866f6010c",{"version":"64d4b35c5456adf258d2cf56c341e203a073253f229ef3208fc0d5020253b241","affectsGlobalScope":true},"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","dd0c1b380ba3437adedef134b2e48869449b1db0b07b2a229069309ce7b9dd39","1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a",{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true},"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","ee65fe452abe1309389c5f50710f24114e08a302d40708101c4aa950a2a7d044","63786b6f821dee19eb898afb385bd58f1846e6cba593a35edcf9631ace09ba25","c5a14bdeb170e0e67fb4200c54e0e02fd0ec94aca894c212c9d43c2916891542","a39f2a304ccc39e70914e9db08f971d23b862b6f0e34753fad86b895fe566533","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","d88a5e779faf033be3d52142a04fbe1cb96009868e3bbdd296b2bc6c59e06c0e","8b677e0b88f3c4501c6f3ec44d3ccad1c2ba08efd8faf714b9b631b5dba1421b","8a19491eba2108d5c333c249699f40aff05ad312c04a17504573b27d91f0aede","199f9ead0daf25ae4c5632e3d1f42570af59685294a38123eef457407e13f365","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","ddef25f825320de051dcb0e62ffce621b41c67712b5b4105740c32fd83f4c449","1b3dffaa4ca8e38ac434856843505af767a614d187fb3a5ef4fcebb023c355aa","15fe687c59d62741b4494d5e623d497d55eb38966ecf5bea7f36e48fc3fbe15e",{"version":"2c3b8be03577c98530ef9cb1a76e2c812636a871f367e9edf4c5f3ce702b77f8","affectsGlobalScope":true},"1ba59c8bbeed2cb75b239bb12041582fa3e8ef32f8d0bd0ec802e38442d3f317"],"options":{"allowSyntheticDefaultImports":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":99,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":99,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"fileIdsList":[[73,201,245],[73,74,76,201,245],[73,75,201,245],[201,245],[73,75,76,77,78,79,80,201,245],[75,201,245],[69,70,201,245],[63,201,245],[63,66,201,245],[63,64,65,67,201,245],[69,201,245],[68,201,245],[68,69,71,72,201,245],[201,245,537],[201,245,248,289,295,298],[201,245,300],[201,245,298,312,315],[201,245,298,299,300,301,316],[201,245,312,332,334,363,364],[201,245,312,332,376,378],[201,245,377],[201,245,312,332],[201,245,365,378,379,380,381],[201,245,312,332,363],[201,245,291,295,312,335,338],[201,245,336,337],[201,245,315,335],[201,245,315],[201,245,312,339,350],[201,245,332,369],[201,245,312,332,369,370],[201,245,312,367,369],[201,245,295,312,332,369,370],[201,245,295,312,332,369,372],[201,245,296,297,312],[201,245,309,312,332,366,369,370,371,372,373,374,375],[201,245,312,322,328,332,368],[201,245,352,353],[201,245,353,354],[201,245,329],[201,245,312,329],[201,245,329,330,331],[201,245,296,297,312,317,322,328],[201,245,312,357],[201,245,357,358,359,360],[201,245,312,356],[201,245,295,302],[201,245,304,306,308],[201,245,297],[201,245,302,303,309,310,311],[201,245,396],[201,245,393,394,395,396,397,398,399,400,401,402,403,404,405],[201,245,386],[201,245,342],[201,245,393,394,395],[201,245,393,394],[201,245,342,396,397],[201,245,394],[201,245,388],[201,245,385,387],[201,245,406],[201,245,490],[201,245,477,478,479],[201,245,472,473,474],[201,245,450,451,452,453],[201,245,416,490],[201,245,416],[201,245,416,417,418,419,464],[201,245,454],[201,245,449,455,456,457,458,459,460,461,462,463],[201,245,464],[201,245,415],[201,245,468,470,471,489,490],[201,245,468,470],[201,245,465,468,490],[201,245,475,476,480,481,486],[201,245,469,471,481,489],[201,245,488,489],[201,245,465,469,471,487,488],[201,245,469,490],[201,245,467],[201,245,467,469,490],[201,245,465,466],[201,245,482,483,484,485],[201,245,471,490],[201,245,426],[201,245,420,427],[201,245,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],[201,245,446,490],[201,245,537,538,539,540,541],[201,245,537,539],[201,245,260,295,543],[201,245,251,295],[201,245,288,295,550],[201,245,260,295],[201,245,553,555],[201,245,552,553,554],[201,245,257,260,295,547,548,549],[201,245,544,548,550,558,559],[201,245,258,295],[201,245,257,260,262,265,277,288,295],[201,245,305],[201,245,295],[201,242,245],[201,244,245],[201,245,250,280],[201,245,246,251,257,258,265,277,288],[201,245,246,247,257,265],[201,245,248,289],[201,245,249,250,258,266],[201,245,250,277,285],[201,245,251,253,257,265],[201,244,245,252],[201,245,253,254],[201,245,255,257],[201,244,245,257],[201,245,257,258,259,277,288],[201,245,257,258,259,272,277,280],[201,240,245],[201,240,245,253,257,260,265,277,288],[201,245,257,258,260,261,265,277,285,288],[201,245,260,262,277,285,288],[201,245,257,263],[201,245,264,288],[201,245,253,257,265,277],[201,245,266],[201,245,267],[201,244,245,268],[201,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[201,245,270],[201,245,271],[201,245,257,272,273],[201,245,272,274,289,291],[201,245,257,277,278,280],[201,245,279,280],[201,245,277,278],[201,245,280],[201,245,281],[201,242,245,277,282],[201,245,257,283,284],[201,245,283,284],[201,245,250,265,277,285],[201,245,286],[197,198,199,200,201,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[245],[201,245,265,287],[201,245,260,271,288],[201,245,250,289],[201,245,277,290],[201,245,264,291],[201,245,292],[201,245,257,259,268,277,280,288,290,291,293],[201,245,277,294],[201,245,570,609],[201,245,570,594,609],[201,245,609],[201,245,570],[201,245,570,595,609],[201,245,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],[201,245,595,609],[201,245,258,277,295,546],[201,245,258,560],[201,245,260,295,547,557],[201,245,612],[201,245,257,260,262,265,277,285,288,294,295],[201,245,307],[201,245,263,295],[201,245,349],[201,245,312,347,348],[172,201,245],[201,245,312,333],[201,245,312],[201,245,383],[201,245,340,343],[201,245,340,343,344,345],[201,245,312,320],[201,245,257,295,312,319,320,321],[201,245,295,312,318,319,321],[201,245,304,346],[201,245,312,314],[201,245,313],[201,245,326,327],[201,245,312,322,323,324,325],[201,245,312,322,328,332,339,351,355,361,362],[201,245,312,322,328],[201,245,382,384],[201,245,341],[61,201,245],[57,201,245],[57,58,59,60,201,245],[201,210,214,245,288],[201,210,245,277,288],[201,245,277],[201,205,245],[201,207,210,245,288],[201,245,265,285],[201,205,245,295],[201,207,210,245,265,288],[201,202,203,204,206,209,245,257,277,288],[201,210,218,245],[201,203,208,245],[201,210,234,235,245],[201,203,206,210,245,280,288,295],[201,210,245],[201,202,245],[201,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,245],[201,210,227,230,245,253],[201,210,218,219,220,245],[201,208,210,219,221,245],[201,209,245],[201,203,205,210,245],[201,210,214,219,221,245],[201,214,245],[201,208,210,213,245,288],[201,203,207,210,218,245],[201,210,227,245],[201,205,210,234,245,280,293,295],[171,201,245],[159,160,161,201,245],[162,163,201,245],[159,160,162,164,165,170,201,245],[160,162,201,245],[170,201,245],[162,201,245],[159,160,162,165,166,167,168,169,201,245],[62,81,83,85,87,123,133,134,135,138,143,144,145,158,175,176,177,178,179,183,190,191,192,193,194,201,245],[83,84,145,201,245,407],[92,96,97,201,245],[83,201,245],[101,102,201,245],[83,92,201,245],[201,245,411],[87,92,201,245],[62,81,83,201,245],[92,201,245],[83,87,92,106,201,245],[174,201,245],[141,201,245],[83,84,98,201,245,407,491],[83,84,145,201,245,407,491],[194,201,245,407],[83,103,104,105,201,245,407],[201,245,407,413],[83,84,126,201,245,407,491],[83,87,106,107,201,245,407],[83,108,201,245,407],[83,87,128,201,245,407],[62,175,201,245,407],[89,201,245],[81,83,201,245],[81,201,245],[81,83,135,201,245],[135,136,137,138,139,201,245],[124,201,245],[125,126,201,245],[83,87,92,93,94,95,98,99,100,101,102,103,104,105,107,108,109,123,127,201,245],[83,87,141,201,245],[128,201,245,407,491],[124,125,127,128,142,201,245],[94,95,99,100,101,103,104,105,129,130,131,132,133,134,140,201,245],[187,201,245,407],[188,201,245,407],[81,186,201,245,407],[83,110,120,123,201,245],[83,92,110,201,245],[87,112,114,115,123,201,245],[113,201,245],[111,201,245,407],[201,245,407,510],[116,201,245,407],[84,116,201,245,407],[110,111,115,116,117,118,119,121,122,201,245],[83,145,201,245],[83,145,146,201,245],[83,145,146,147,148,151,152,153,154,155,156,157,201,245],[201,245,407,491],[83,145,146,201,245,407,491],[83,145,146,158,201,245,407,491],[93,146,201,245,407,411],[147,148,149,150,151,152,153,154,155,156,157,158,201,245],[83,145,149,150,201,245],[83,149,150,201,245],[88,201,245,407,491],[88,89,90,91,201,245],[84,201,245,407],[84,201,245,407,491],[84,85,86,201,245],[201,245,407,411],[145,201,245],[62,195,201,245],[62,201,245],[62,92,175,176,201,245],[62,83,201,245],[62,81,140,201,245],[62,143,201,245],[62,81,184,185,186,187,188,189,201,245],[62,83,191,201,245,407],[62,83,85,193,201,245,407],[62,83,84,85,182,201,245,407],[62,83,85,180,201,245,407],[62,83,192,201,245,407],[62,83,84,181,201,245,407],[62,190,201,245,407],[180,181,182,201,245],[173,201,245],[82,201,245]],"referencedMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"exportedModulesMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"semanticDiagnosticsPerFile":[74,75,76,80,81,77,78,79,71,70,64,67,65,68,66,63,72,69,73,539,537,299,300,301,316,317,298,365,379,378,380,382,364,381,339,338,336,337,351,370,371,368,372,373,374,375,367,366,376,369,354,355,353,330,331,332,329,358,360,361,359,357,356,303,309,302,310,311,312,404,401,400,397,406,393,402,396,395,403,398,405,399,394,389,388,387,407,477,478,480,479,472,473,475,474,450,452,451,454,453,417,415,418,465,419,455,464,456,459,457,460,462,458,461,463,416,491,476,471,481,487,488,490,489,469,470,466,468,467,482,486,483,484,485,420,421,424,422,423,426,427,428,429,425,430,431,432,433,434,435,449,436,437,438,439,440,441,442,445,443,444,446,447,448,386,542,538,540,541,544,545,551,543,556,552,555,553,550,560,559,318,561,557,562,297,305,306,554,563,546,564,242,243,244,245,246,247,199,248,249,250,251,252,253,254,256,255,257,258,259,241,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,278,280,281,282,283,284,285,286,197,295,201,198,200,287,288,289,290,291,292,293,294,565,566,567,548,549,568,569,594,595,570,573,592,593,583,582,580,575,588,586,590,574,587,591,576,577,589,571,578,579,581,585,596,584,572,609,608,603,605,604,597,598,600,602,606,607,599,601,547,610,558,611,313,613,612,614,307,308,352,304,296,377,350,348,349,173,334,333,383,384,340,344,346,345,343,319,321,322,320,347,315,314,335,323,328,326,324,325,327,363,362,385,342,341,62,58,61,60,57,59,11,12,14,13,2,15,16,17,18,19,20,21,22,3,4,26,23,24,25,27,28,29,5,30,31,32,33,6,37,34,35,36,38,7,39,44,45,40,41,42,43,8,49,46,47,48,50,9,51,52,53,54,55,1,10,56,218,229,216,230,239,208,207,238,233,237,210,226,209,236,205,206,211,212,217,215,203,240,231,221,220,222,224,219,223,234,213,214,225,204,228,227,232,202,235,172,162,164,171,166,167,165,168,159,160,161,163,169,170,195,391,392,408,101,98,95,134,97,409,103,104,132,410,129,109,99,412,177,102,131,105,178,194,413,126,414,96,176,107,133,94,108,100,175,130,492,493,494,495,496,497,498,499,500,501,502,139,135,136,137,138,140,503,124,125,127,504,128,142,505,143,141,506,187,185,189,188,186,184,507,508,509,121,144,111,510,122,117,119,110,116,118,115,114,113,511,512,513,514,123,120,150,147,149,148,158,516,517,518,519,515,155,156,154,152,151,157,153,88,89,90,91,520,521,92,112,85,84,179,86,145,522,523,87,528,524,525,93,411,526,527,146,196,191,193,182,180,192,181,190,529,530,531,532,533,534,535,183,174,390,83,82,536,106],"affectedFilesPendingEmit":[[74,1],[75,1],[76,1],[80,1],[81,1],[77,1],[78,1],[79,1],[71,1],[70,1],[64,1],[67,1],[65,1],[68,1],[66,1],[63,1],[72,1],[69,1],[73,1],[539,1],[537,1],[299,1],[300,1],[301,1],[316,1],[317,1],[298,1],[365,1],[379,1],[378,1],[380,1],[382,1],[364,1],[381,1],[339,1],[338,1],[336,1],[337,1],[351,1],[370,1],[371,1],[368,1],[372,1],[373,1],[374,1],[375,1],[367,1],[366,1],[376,1],[369,1],[354,1],[355,1],[353,1],[330,1],[331,1],[332,1],[329,1],[358,1],[360,1],[361,1],[359,1],[357,1],[356,1],[303,1],[309,1],[302,1],[310,1],[311,1],[312,1],[404,1],[401,1],[400,1],[397,1],[406,1],[393,1],[402,1],[396,1],[395,1],[403,1],[398,1],[405,1],[399,1],[394,1],[389,1],[388,1],[387,1],[407,1],[477,1],[478,1],[480,1],[479,1],[472,1],[473,1],[475,1],[474,1],[450,1],[452,1],[451,1],[454,1],[453,1],[417,1],[415,1],[418,1],[465,1],[419,1],[455,1],[464,1],[456,1],[459,1],[457,1],[460,1],[462,1],[458,1],[461,1],[463,1],[416,1],[491,1],[476,1],[471,1],[481,1],[487,1],[488,1],[490,1],[489,1],[469,1],[470,1],[466,1],[468,1],[467,1],[482,1],[486,1],[483,1],[484,1],[485,1],[420,1],[421,1],[424,1],[422,1],[423,1],[426,1],[427,1],[428,1],[429,1],[425,1],[430,1],[431,1],[432,1],[433,1],[434,1],[435,1],[449,1],[436,1],[437,1],[438,1],[439,1],[440,1],[441,1],[442,1],[445,1],[443,1],[444,1],[446,1],[447,1],[448,1],[386,1],[542,1],[538,1],[540,1],[541,1],[544,1],[545,1],[551,1],[543,1],[556,1],[552,1],[555,1],[553,1],[550,1],[560,1],[559,1],[318,1],[561,1],[557,1],[562,1],[297,1],[305,1],[306,1],[554,1],[563,1],[546,1],[564,1],[242,1],[243,1],[244,1],[245,1],[246,1],[247,1],[199,1],[248,1],[249,1],[250,1],[251,1],[252,1],[253,1],[254,1],[256,1],[255,1],[257,1],[258,1],[259,1],[241,1],[260,1],[261,1],[262,1],[263,1],[264,1],[265,1],[266,1],[267,1],[268,1],[269,1],[270,1],[271,1],[272,1],[273,1],[274,1],[275,1],[276,1],[277,1],[279,1],[278,1],[280,1],[281,1],[282,1],[283,1],[284,1],[285,1],[286,1],[197,1],[295,1],[201,1],[198,1],[200,1],[287,1],[288,1],[289,1],[290,1],[291,1],[292,1],[293,1],[294,1],[565,1],[566,1],[567,1],[548,1],[549,1],[568,1],[569,1],[594,1],[595,1],[570,1],[573,1],[592,1],[593,1],[583,1],[582,1],[580,1],[575,1],[588,1],[586,1],[590,1],[574,1],[587,1],[591,1],[576,1],[577,1],[589,1],[571,1],[578,1],[579,1],[581,1],[585,1],[596,1],[584,1],[572,1],[609,1],[608,1],[603,1],[605,1],[604,1],[597,1],[598,1],[600,1],[602,1],[606,1],[607,1],[599,1],[601,1],[547,1],[610,1],[558,1],[611,1],[313,1],[613,1],[612,1],[614,1],[307,1],[308,1],[352,1],[304,1],[296,1],[377,1],[350,1],[348,1],[349,1],[173,1],[334,1],[333,1],[383,1],[384,1],[340,1],[344,1],[346,1],[345,1],[343,1],[319,1],[321,1],[322,1],[320,1],[347,1],[315,1],[314,1],[335,1],[323,1],[328,1],[326,1],[324,1],[325,1],[327,1],[363,1],[362,1],[385,1],[342,1],[341,1],[62,1],[58,1],[61,1],[60,1],[57,1],[59,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[218,1],[229,1],[216,1],[230,1],[239,1],[208,1],[207,1],[238,1],[233,1],[237,1],[210,1],[226,1],[209,1],[236,1],[205,1],[206,1],[211,1],[212,1],[217,1],[215,1],[203,1],[240,1],[231,1],[221,1],[220,1],[222,1],[224,1],[219,1],[223,1],[234,1],[213,1],[214,1],[225,1],[204,1],[228,1],[227,1],[232,1],[202,1],[235,1],[172,1],[162,1],[164,1],[171,1],[166,1],[167,1],[165,1],[168,1],[159,1],[160,1],[161,1],[163,1],[169,1],[170,1],[195,1],[391,1],[392,1],[408,1],[101,1],[98,1],[95,1],[134,1],[97,1],[409,1],[103,1],[104,1],[132,1],[410,1],[129,1],[109,1],[99,1],[412,1],[177,1],[102,1],[131,1],[105,1],[178,1],[194,1],[413,1],[126,1],[414,1],[96,1],[176,1],[107,1],[133,1],[94,1],[108,1],[100,1],[175,1],[130,1],[492,1],[493,1],[494,1],[495,1],[496,1],[497,1],[498,1],[499,1],[500,1],[501,1],[502,1],[139,1],[135,1],[136,1],[137,1],[138,1],[140,1],[503,1],[124,1],[125,1],[127,1],[504,1],[128,1],[142,1],[505,1],[143,1],[141,1],[506,1],[187,1],[185,1],[189,1],[188,1],[186,1],[184,1],[507,1],[508,1],[509,1],[121,1],[144,1],[111,1],[510,1],[122,1],[117,1],[119,1],[110,1],[116,1],[118,1],[115,1],[114,1],[113,1],[511,1],[512,1],[513,1],[514,1],[123,1],[120,1],[150,1],[147,1],[149,1],[148,1],[158,1],[516,1],[517,1],[518,1],[519,1],[515,1],[155,1],[156,1],[154,1],[152,1],[151,1],[157,1],[153,1],[88,1],[89,1],[90,1],[91,1],[520,1],[521,1],[92,1],[112,1],[85,1],[84,1],[179,1],[86,1],[145,1],[522,1],[523,1],[87,1],[528,1],[524,1],[525,1],[93,1],[411,1],[526,1],[527,1],[146,1],[196,1],[191,1],[193,1],[182,1],[180,1],[192,1],[181,1],[190,1],[529,1],[530,1],[531,1],[532,1],[533,1],[534,1],[535,1],[183,1],[174,1],[390,1],[83,1],[82,1],[536,1],[106,1]]},"version":"4.9.5"}
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:159:./.code/agents/1/exec-call_lmaGajgVnK37auksouScRpzT.txt:7557:frontend/node_modules/.cache/tsconfig.tsbuildinfo:1:{"program":{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.sharedmemory.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../react-router/dist/development/routeModules-rOzWJJ9x.d.ts","../react-router/dist/development/index-react-server-client-BKpa2trA.d.ts","../react-router/node_modules/cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/shared.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-localstorage.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-memory.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/key-manifest.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-manager.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/index.d.ts","../@auth0/auth0-spa-js/dist/typings/global.d.ts","../@auth0/auth0-spa-js/dist/typings/TokenExchange.d.ts","../@auth0/auth0-spa-js/dist/typings/Auth0Client.d.ts","../@auth0/auth0-spa-js/dist/typings/errors.d.ts","../@auth0/auth0-spa-js/dist/typings/index.d.ts","../@auth0/auth0-react/dist/auth-state.d.ts","../@auth0/auth0-react/dist/auth0-context.d.ts","../@auth0/auth0-react/dist/auth0-provider.d.ts","../@auth0/auth0-react/dist/use-auth0.d.ts","../@auth0/auth0-react/dist/with-auth0.d.ts","../@auth0/auth0-react/dist/with-authentication-required.d.ts","../@auth0/auth0-react/dist/errors.d.ts","../@auth0/auth0-react/dist/index.d.ts","../../src/theme/theme.js","../../src/theme/Provider.js","../../src/context/GameProvider.js","../../src/context/AuthContext.js","../../src/context/SheetSyncContext.js","../../src/context/index.js","../../src/components/ui/Button.js","../../src/components/ui/Card.js","../../src/components/ui/Input.js","../../src/components/ui/Select.js","../../src/components/ui/index.js","../../src/hooks/useOddsCalculation.js","../../src/components/ShotResultWidget.js","../../src/components/BettingOpportunityWidget.js","../../src/components/ProbabilityVisualization.js","../../src/components/EducationalTooltip.js","../../src/components/BettingOddsPanel.js","../../src/components/GameStateWidget.js","../../src/components/StrategicAnalysisWidget.js","../../src/components/AnalyticsDashboard.js","../../src/components/HoleStrategyDisplay.js","../../src/components/EnhancedBettingWidget.js","../../src/components/EnhancedScoringWidget.js","../../src/components/InteractivePlayerCard.js","../../src/utils/api.js","../../src/components/ShotAnalysisWidget.js","../../src/components/ShotVisualizationOverlay.js","../../src/components/GameHistory.js","../../src/components/simulation/SimulationDecisionPanel.tsx","../../src/components/simulation/GamePlay.js","../../src/config/environment.js","../../src/components/simulation/__fixtures__/simulationMockData.js","../../src/components/simulation/__fixtures__/index.js","../../src/components/simulation/TurnBasedInterface.js","../../src/components/simulation/SimulationMode.js","../../src/components/simulation/MonteCarloSimulation.js","../../src/components/simulation/Timeline.js","../../src/components/simulation/PokerBettingPanel.js","../../src/components/simulation/styles/enhancedSimulationLayout.js","../../src/components/simulation/EnhancedSimulationLayout.js","../../src/components/simulation/HoleVisualization.tsx","../../src/components/simulation/index.js","../../src/components/game/CourseImport.js","../../src/components/game/CourseManager.js","../../src/components/PlayerProfileManager.js","../../src/components/game/GameSetupForm.js","../../src/components/game/UnifiedGameInterface.js","../../src/components/GameDashboard.js","../../src/components/WolfGoatPigDashboard.js","../../src/components/HoleVisualization.js","../../src/components/EnhancedWGPInterface.js","../../src/components/ShotRangeAnalyzer.js","../../src/components/ColdStartHandler.js","../../src/components/auth/LoginButton.js","../../src/components/auth/LogoutButton.js","../../src/components/auth/Profile.js","../../src/components/auth/ProtectedRoute.js","../../src/components/auth/AuthHealthCheck.js","../../src/components/auth/index.js","../../src/components/index.js","../../src/components/game/WolfGoatPigGame.js","../../src/components/game/index.js","../../src/components/simulation/FeedAnalyzer.js","../../src/context/TutorialContext.js","../../src/hooks/useTutorialProgress.js","../../src/components/tutorial/ProgressTracker.js","../../src/components/tutorial/TutorialOverlay.js","../../src/components/tutorial/TutorialModule.js","../../src/components/tutorial/InteractiveElement.js","../../src/components/tutorial/modules/GolfBasicsModule.js","../../src/components/tutorial/modules/GameOverviewModule.js","../../src/components/tutorial/modules/TeamFormationModule.js","../../src/components/tutorial/modules/BettingSystemModule.js","../../src/components/tutorial/modules/AdvancedRulesModule.js","../../src/components/tutorial/modules/AnalysisToolsModule.js","../../src/components/tutorial/modules/PracticeGameModule.js","../../src/components/tutorial/TutorialSystem.js","../zod/v3/helpers/typeAliases.d.cts","../zod/v3/helpers/util.d.cts","../zod/v3/index.d.cts","../zod/v3/ZodError.d.cts","../zod/v3/locales/en.d.cts","../zod/v3/errors.d.cts","../zod/v3/helpers/parseUtil.d.cts","../zod/v3/helpers/enumUtil.d.cts","../zod/v3/helpers/errorUtil.d.cts","../zod/v3/helpers/partialUtil.d.cts","../zod/v3/standard-schema.d.cts","../zod/v3/types.d.cts","../zod/v3/external.d.cts","../zod/index.d.cts","../ghin/dist/index.d.ts","../../src/services/ghinService.js","../../src/components/WGPAnalyticsDashboard.js","../../src/components/SheetIntegrationDashboard.js","../../src/components/GoogleSheetsLiveSync.js","../../src/components/Leaderboard.js","../../src/context/MockAuthContext.js","../../src/pages/HomePage.js","../../src/pages/SetupPage.js","../../src/pages/GamePage.js","../../src/pages/index.js","../../src/components/signup/SignupCalendar.js","../../src/components/signup/DailySignupView.js","../../src/components/signup/PlayerAvailability.js","../../src/components/signup/AllPlayersAvailability.js","../../src/components/signup/MatchmakingSuggestions.js","../../src/components/signup/EmailPreferences.js","../../src/pages/SignupPage.js","../../src/pages/AboutPage.js","../../src/pages/RulesPage.js","../../src/pages/AdminPage.js","../../src/components/Navigation.js","../../src/App.js","../../src/index.js","../@types/node/ts5.1/compatibility/disposable.d.ts","../@types/node/ts5.6/compatibility/float16array.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/ts5.6/globals.typedarray.d.ts","../@types/node/ts5.6/buffer.buffer.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/globals.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/dom-events.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/ts5.1/index.d.ts","../collect-v8-coverage/index.d.ts","../@types/istanbul-lib-coverage/index.d.ts","../@jest/console/build/types.d.ts","../@jest/console/build/BufferedConsole.d.ts","../@jest/console/build/CustomConsole.d.ts","../@jest/console/build/NullConsole.d.ts","../@jest/types/build/Global.d.ts","../@jest/types/build/Circus.d.ts","../chalk/index.d.ts","../@types/istanbul-lib-report/index.d.ts","../@types/istanbul-reports/index.d.ts","../@types/yargs-parser/index.d.ts","../@types/yargs/index.d.ts","../@jest/types/build/Config.d.ts","../@jest/types/build/TestResult.d.ts","../@jest/types/build/Transform.d.ts","../@jest/types/build/index.d.ts","../@types/stack-utils/index.d.ts","../jest-message-util/build/types.d.ts","../jest-message-util/build/index.d.ts","../@jest/console/build/getConsoleOutput.d.ts","../@jest/console/build/index.d.ts","../@types/graceful-fs/index.d.ts","../jest-haste-map/build/HasteFS.d.ts","../jest-haste-map/build/types.d.ts","../jest-haste-map/build/ModuleMap.d.ts","../jest-haste-map/build/index.d.ts","../jest-resolve/build/ModuleNotFoundError.d.ts","../jest-resolve/build/shouldLoadAsEsm.d.ts","../jest-resolve/build/types.d.ts","../jest-resolve/build/resolver.d.ts","../jest-resolve/build/utils.d.ts","../jest-resolve/build/index.d.ts","../@jest/test-result/build/types.d.ts","../@jest/test-result/build/formatTestResults.d.ts","../@jest/test-result/build/helpers.d.ts","../@jest/test-result/build/index.d.ts","../jest-changed-files/build/types.d.ts","../jest-changed-files/build/index.d.ts","../jest-mock/build/index.d.ts","../@jest/fake-timers/build/legacyFakeTimers.d.ts","../@jest/fake-timers/build/modernFakeTimers.d.ts","../@jest/fake-timers/build/index.d.ts","../@jest/environment/build/index.d.ts","../jest-diff/build/cleanupSemantic.d.ts","../pretty-format/build/types.d.ts","../pretty-format/build/index.d.ts","../jest-diff/build/types.d.ts","../jest-diff/build/diffLines.d.ts","../jest-diff/build/printDiffs.d.ts","../jest-diff/build/index.d.ts","../jest-matcher-utils/build/index.d.ts","../expect/build/jestMatchersObject.d.ts","../expect/build/types.d.ts","../expect/build/index.d.ts","../@jest/globals/build/index.d.ts","../callsites/index.d.ts","../@jest/source-map/build/types.d.ts","../@jest/source-map/build/getCallsite.d.ts","../@jest/source-map/build/index.d.ts","../@jest/transform/node_modules/source-map/source-map.d.ts","../@jest/transform/build/types.d.ts","../@jest/transform/build/ScriptTransformer.d.ts","../@jest/transform/build/shouldInstrument.d.ts","../@jest/transform/build/enhanceUnexpectedTokenMessage.d.ts","../@jest/transform/build/index.d.ts","../jest-runtime/build/types.d.ts","../jest-runtime/build/index.d.ts","../@jest/core/build/types.d.ts","../@jest/core/build/SearchSource.d.ts","../@jest/reporters/build/getResultHeader.d.ts","../@jest/reporters/build/generateEmptyCoverage.d.ts","../@jest/reporters/build/CoverageWorker.d.ts","../@jest/reporters/build/types.d.ts","../@jest/reporters/build/BaseReporter.d.ts","../@jest/reporters/build/CoverageReporter.d.ts","../@jest/reporters/build/DefaultReporter.d.ts","../@jest/reporters/build/NotifyReporter.d.ts","../@jest/reporters/build/SummaryReporter.d.ts","../@jest/reporters/build/VerboseReporter.d.ts","../@jest/reporters/build/index.d.ts","../emittery/index.d.ts","../@jest/core/build/TestWatcher.d.ts","../@jest/core/build/TestScheduler.d.ts","../@jest/core/build/cli/index.d.ts","../@jest/core/build/version.d.ts","../@jest/core/build/jest.d.ts","../jest-cli/build/cli/index.d.ts","../jest-cli/build/index.d.ts","../jest/build/jest.d.ts","../@types/aria-query/index.d.ts","../@testing-library/jest-dom/types/matchers.d.ts","../@testing-library/jest-dom/types/jest.d.ts","../@testing-library/jest-dom/types/index.d.ts","../../src/setupTests.js","../../src/__mocks__/react-router-dom.js","../../src/__tests__/fixtures/gameFixtures.js","../@testing-library/dom/types/matches.d.ts","../@testing-library/dom/types/wait-for.d.ts","../@testing-library/dom/types/query-helpers.d.ts","../@testing-library/dom/types/queries.d.ts","../@testing-library/dom/types/get-queries-for-element.d.ts","../@testing-library/dom/types/screen.d.ts","../@testing-library/dom/types/wait-for-element-to-be-removed.d.ts","../@testing-library/dom/types/get-node-text.d.ts","../@testing-library/dom/types/events.d.ts","../@testing-library/dom/types/pretty-dom.d.ts","../@testing-library/dom/types/role-helpers.d.ts","../@testing-library/dom/types/config.d.ts","../@testing-library/dom/types/suggestions.d.ts","../@testing-library/dom/types/index.d.ts","../@testing-library/react/types/index.d.ts","../../src/__tests__/utils/testHelpers.js","../../src/components/EmailSettings.js","../../src/components/GHINIntegration.js","../../src/hooks/usePlayerProfile.js","../../src/components/GameStatsTracker.js","../../src/components/PerformanceAnalytics.js","../../src/components/PlayerStatistics.js","../@testing-library/user-event/dist/types/event/eventMap.d.ts","../@testing-library/user-event/dist/types/event/types.d.ts","../@testing-library/user-event/dist/types/event/dispatchEvent.d.ts","../@testing-library/user-event/dist/types/event/focus.d.ts","../@testing-library/user-event/dist/types/event/input.d.ts","../@testing-library/user-event/dist/types/utils/click/isClickableInput.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Blob.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/DataTransfer.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/FileList.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Clipboard.d.ts","../@testing-library/user-event/dist/types/utils/edit/timeValue.d.ts","../@testing-library/user-event/dist/types/utils/edit/isContentEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/isEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/maxLength.d.ts","../@testing-library/user-event/dist/types/utils/edit/setFiles.d.ts","../@testing-library/user-event/dist/types/utils/focus/cursor.d.ts","../@testing-library/user-event/dist/types/utils/focus/getActiveElement.d.ts","../@testing-library/user-event/dist/types/utils/focus/getTabDestination.d.ts","../@testing-library/user-event/dist/types/utils/focus/isFocusable.d.ts","../@testing-library/user-event/dist/types/utils/focus/selection.d.ts","../@testing-library/user-event/dist/types/utils/focus/selector.d.ts","../@testing-library/user-event/dist/types/utils/keyDef/readNextDescriptor.d.ts","../@testing-library/user-event/dist/types/utils/misc/cloneEvent.d.ts","../@testing-library/user-event/dist/types/utils/misc/findClosest.d.ts","../@testing-library/user-event/dist/types/utils/misc/getDocumentFromNode.d.ts","../@testing-library/user-event/dist/types/utils/misc/getTreeDiff.d.ts","../@testing-library/user-event/dist/types/utils/misc/getWindow.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDescendantOrSelf.d.ts","../@testing-library/user-event/dist/types/utils/misc/isElementType.d.ts","../@testing-library/user-event/dist/types/utils/misc/isVisible.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDisabled.d.ts","../@testing-library/user-event/dist/types/utils/misc/level.d.ts","../@testing-library/user-event/dist/types/utils/misc/wait.d.ts","../@testing-library/user-event/dist/types/utils/pointer/cssPointerEvents.d.ts","../@testing-library/user-event/dist/types/utils/index.d.ts","../@testing-library/user-event/dist/types/document/UI.d.ts","../@testing-library/user-event/dist/types/document/getValueOrTextContent.d.ts","../@testing-library/user-event/dist/types/document/copySelection.d.ts","../@testing-library/user-event/dist/types/document/trackValue.d.ts","../@testing-library/user-event/dist/types/document/index.d.ts","../@testing-library/user-event/dist/types/event/selection/getInputRange.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelection.d.ts","../@testing-library/user-event/dist/types/event/selection/moveSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/selectAll.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionRange.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/updateSelectionOnFocus.d.ts","../@testing-library/user-event/dist/types/event/selection/index.d.ts","../@testing-library/user-event/dist/types/event/index.d.ts","../@testing-library/user-event/dist/types/system/pointer/buttons.d.ts","../@testing-library/user-event/dist/types/system/pointer/shared.d.ts","../@testing-library/user-event/dist/types/system/pointer/index.d.ts","../@testing-library/user-event/dist/types/system/index.d.ts","../@testing-library/user-event/dist/types/system/keyboard.d.ts","../@testing-library/user-event/dist/types/options.d.ts","../@testing-library/user-event/dist/types/convenience/click.d.ts","../@testing-library/user-event/dist/types/convenience/hover.d.ts","../@testing-library/user-event/dist/types/convenience/tab.d.ts","../@testing-library/user-event/dist/types/convenience/index.d.ts","../@testing-library/user-event/dist/types/keyboard/index.d.ts","../@testing-library/user-event/dist/types/clipboard/copy.d.ts","../@testing-library/user-event/dist/types/clipboard/cut.d.ts","../@testing-library/user-event/dist/types/clipboard/paste.d.ts","../@testing-library/user-event/dist/types/clipboard/index.d.ts","../@testing-library/user-event/dist/types/pointer/index.d.ts","../@testing-library/user-event/dist/types/utility/clear.d.ts","../@testing-library/user-event/dist/types/utility/selectOptions.d.ts","../@testing-library/user-event/dist/types/utility/type.d.ts","../@testing-library/user-event/dist/types/utility/upload.d.ts","../@testing-library/user-event/dist/types/utility/index.d.ts","../@testing-library/user-event/dist/types/setup/api.d.ts","../@testing-library/user-event/dist/types/setup/directApi.d.ts","../@testing-library/user-event/dist/types/setup/setup.d.ts","../@testing-library/user-event/dist/types/setup/index.d.ts","../@testing-library/user-event/dist/types/index.d.ts","../../src/components/__tests__/BettingOddsPanel.test.js","../../src/components/__tests__/GameDashboard.test.js","../../src/components/__tests__/Navigation.test.js","../../src/components/__tests__/NewComponents.test.js","../../src/components/__tests__/PerformanceAnalytics.test.js","../../src/components/__tests__/PlayerProfileManager.test.js","../../src/components/__tests__/ShotAnalysisWidget.test.js","../../src/components/__tests__/ShotVisualizationOverlay.test.js","../../src/components/__tests__/UnifiedGameInterface.integration.test.js","../../src/components/__tests__/WGPAnalyticsDashboard.test.js","../../src/components/analytics/PostHoleAnalytics.js","../../src/components/email/EmailSettings.js","../../src/components/game/TVPokerLayout.js","../../src/components/game/__tests__/UnifiedGameInterface.test.js","../../src/components/practice/EnhancedPracticeMode.js","../../src/components/signup/__tests__/AllPlayersAvailability.test.js","../../src/components/signup/__tests__/MatchmakingSuggestions.test.js","../../src/components/signup/__tests__/PlayerAvailability.test.js","../../src/components/simulation/GameSetup.tsx","../../src/components/simulation/__tests__/GamePlay.test.js","../../src/components/simulation/__tests__/GameSetup.test.js","../../src/components/simulation/__tests__/SimulationMode.probabilities.test.js","../../src/components/simulation/__tests__/SimulationMode.test.js","../../src/components/tutorial/index.js","../../src/components/tutorial/__tests__/InteractiveElement.test.js","../../src/components/tutorial/__tests__/ProgressTracker.test.js","../../src/components/tutorial/__tests__/TutorialSystem.test.js","../../src/components/tutorial/__tests__/hooks.test.js","../../src/components/ui/__tests__/Button.test.js","../../src/components/ui/__tests__/UIComponents.test.js","../../src/context/__tests__/GameProvider.shotProbabilities.test.js","../../src/context/__tests__/GameProvider.test.js","../../src/hooks/useAuth.js","../../src/hooks/useGameApi.js","../../src/hooks/usePostHoleAnalytics.js","../../src/hooks/useSimulationApi.js","../../src/hooks/__tests__/usePlayerProfile.test.js","../../src/pages/__tests__/AboutPage.test.js","../../src/pages/__tests__/AdminPage.test.js","../../src/pages/__tests__/GamePage.test.js","../../src/pages/__tests__/HomePage.test.js","../../src/pages/__tests__/RulesPage.test.js","../../src/pages/__tests__/SetupPage.test.js","../../src/pages/__tests__/SignupPage.test.js","../../src/utils/__tests__/api.test.js","../@babel/types/lib/index.d.ts","../@types/babel__generator/index.d.ts","../@babel/parser/typings/babel-parser.d.ts","../@types/babel__template/index.d.ts","../@types/babel__traverse/index.d.ts","../@types/babel__core/index.d.ts","../@types/connect/index.d.ts","../@types/body-parser/index.d.ts","../@types/bonjour/index.d.ts","../@types/mime/index.d.ts","../@types/send/index.d.ts","../@types/qs/index.d.ts","../@types/range-parser/index.d.ts","../@types/express-serve-static-core/index.d.ts","../@types/connect-history-api-fallback/index.d.ts","../@types/eslint/helpers.d.ts","../@types/estree/index.d.ts","../@types/json-schema/index.d.ts","../@types/eslint/index.d.ts","../@types/eslint-scope/index.d.ts","../@types/http-errors/index.d.ts","../@types/serve-static/index.d.ts","../@types/express/node_modules/@types/express-serve-static-core/index.d.ts","../@types/express/index.d.ts","../@types/html-minifier-terser/index.d.ts","../@types/http-proxy/index.d.ts","../@types/json5/index.d.ts","../@types/node-forge/index.d.ts","../@types/parse-json/index.d.ts","../@types/prettier/index.d.ts","../@types/q/index.d.ts","../@types/resolve/index.d.ts","../@types/retry/index.d.ts","../@types/semver/classes/semver.d.ts","../@types/semver/functions/parse.d.ts","../@types/semver/functions/valid.d.ts","../@types/semver/functions/clean.d.ts","../@types/semver/functions/inc.d.ts","../@types/semver/functions/diff.d.ts","../@types/semver/functions/major.d.ts","../@types/semver/functions/minor.d.ts","../@types/semver/functions/patch.d.ts","../@types/semver/functions/prerelease.d.ts","../@types/semver/functions/compare.d.ts","../@types/semver/functions/rcompare.d.ts","../@types/semver/functions/compare-loose.d.ts","../@types/semver/functions/compare-build.d.ts","../@types/semver/functions/sort.d.ts","../@types/semver/functions/rsort.d.ts","../@types/semver/functions/gt.d.ts","../@types/semver/functions/lt.d.ts","../@types/semver/functions/eq.d.ts","../@types/semver/functions/neq.d.ts","../@types/semver/functions/gte.d.ts","../@types/semver/functions/lte.d.ts","../@types/semver/functions/cmp.d.ts","../@types/semver/functions/coerce.d.ts","../@types/semver/classes/comparator.d.ts","../@types/semver/classes/range.d.ts","../@types/semver/functions/satisfies.d.ts","../@types/semver/ranges/max-satisfying.d.ts","../@types/semver/ranges/min-satisfying.d.ts","../@types/semver/ranges/to-comparators.d.ts","../@types/semver/ranges/min-version.d.ts","../@types/semver/ranges/valid.d.ts","../@types/semver/ranges/outside.d.ts","../@types/semver/ranges/gtr.d.ts","../@types/semver/ranges/ltr.d.ts","../@types/semver/ranges/intersects.d.ts","../@types/semver/ranges/simplify.d.ts","../@types/semver/ranges/subset.d.ts","../@types/semver/internals/identifiers.d.ts","../@types/semver/index.d.ts","../@types/serve-index/index.d.ts","../@types/sockjs/index.d.ts","../@types/trusted-types/lib/index.d.ts","../@types/trusted-types/index.d.ts","../@types/ws/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9","746d62152361558ea6d6115cf0da4dd10ede041d14882ede3568bce5dc4b4f1f","d11a03592451da2d1065e09e61f4e2a9bf68f780f4f6623c18b57816a9679d17","aea179452def8a6152f98f63b191b84e7cbd69b0e248c91e61fb2e52328abe8c",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"f3d4da15233e593eacb3965cde7960f3fddf5878528d882bcedd5cbaba0193c7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"6c55633c733c8378db65ac3da7a767c3cf2cf3057f0565a9124a16a3a2019e87","affectsGlobalScope":true},{"version":"fb4416144c1bf0323ccbc9afb0ab289c07312214e8820ad17d709498c865a3fe","affectsGlobalScope":true},{"version":"5b0ca94ec819d68d33da516306c15297acec88efeb0ae9e2b39f71dbd9685ef7","affectsGlobalScope":true},{"version":"34c839eaaa6d78c8674ae2c37af2236dee6831b13db7b4ef4df3ec889a04d4f2","affectsGlobalScope":true},{"version":"34478567f8a80171f88f2f30808beb7da15eac0538ae91282dd33dce928d98ed","affectsGlobalScope":true},{"version":"ab7d58e6161a550ff92e5aff755dc37fe896245348332cd5f1e1203479fe0ed1","affectsGlobalScope":true},{"version":"6bda95ea27a59a276e46043b7065b55bd4b316c25e70e29b572958fa77565d43","affectsGlobalScope":true},{"version":"aedb8de1abb2ff1095c153854a6df7deae4a5709c37297f9d6e9948b6806fa66","affectsGlobalScope":true},{"version":"a4da0551fd39b90ca7ce5f68fb55d4dc0c1396d589b612e1902f68ee090aaada","affectsGlobalScope":true},{"version":"11ffe3c281f375fff9ffdde8bbec7669b4dd671905509079f866f2354a788064","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"bf237922b06c558ee82c997549c28541d2e4c60a7c449c635cd7116663bff11b","ec646851bb3302d774d4fbec3555fdf0cea4dc30a7f2c663d66387653abecdd6","5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd",{"version":"7f9844af49faece125da77aa099fd5c1da64270e31b414edef84f159a15f61b7","affectsGlobalScope":true},"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","fcc9e6f2da1759e4abe577f938f7d6eec119963abae917c290913a537cf8cd89","67b56598de49ea49e177ed09417ec97c642775a4fe73259df996923517eb652d","98d8c2cce0da7f218eda38d46b3d715adfb4c99c59ad67dbe0fd105113292f9f","d562cf993f138dc03c5b1aed57d7d80e96555ce41365e0e79db9b93a0b49a6b2","4e7fded78c59e63cc94cd8c0c920b287b885ae0512c412e0f7a890b0d700bc3d","7fc1326aae51ca02c357b8391270858387cce4afa9928d6580a42119dfcca9eb","a95d033d647339e3932fd15c01ae763c0e6fba915418c01b2fb1b1d4063a6d7f","9ec473f428d74650f0ce05b81e6a27fc84906a36838fd11875fcae5193f3cbbb","acdd8a10fac8748502509cb57bdd53a7c5b85fa4a2ee3a560c00a40404ff65cb","59bd81abd493fa554955bf7dd7006273192ea8d553d3e4a819e866a14725cdfe","a29acac88d5df222deeb58568f2e56b42075d9b043b4f158b7a55a8eed18985f","56d09baa6411529b9edfed10d627aa294412c3aa33d26e1254b8f1422ecfbfd9","31feea0066a629bfcacfc80bd5ec1551d26cf7a8dad949dc24cde82307748a45","b23ee85f4ae6affbd6d92df4a305756b2d7a7d687108bac625b83d662aabe063","c541b4b619ff47a8f1d2e242f69cab2f1490797934a31b9d15fe1b9d59183626","10f0161e27ec211a27512406022e5381ee1eff148c356579a07392c1cab67205","50d0abf4fb3d7fa0d929459ec9560f6761eb9e80bc568e6367868f6402fae0b5","4be1e84f8a23aa1c9b37669820a5dc6c0d664131c2549b54b40ec225abcff77c","2d6acf4fe93fb92f0259c6bbed436112c7daf0ad9e1318f2f0bd2613083261f0","58024638b80b48562cce5f0e5f65ce5924a2309224400787a4e40dea0ce3c7f4","ed7ed4acdc5b5e7f531cb8a2b62cadc0a8a88d054637965ba585a370f3538dbc","59453dd1a944cc11ef41fc0e21d4afaa4906eb4015fc605b423776ab26be5c35","12bb43d7c61d1b5e4340ed3599bbdcdd8d781994f08a94f010c88d4d26f285bb","f40d60f92714d69e75d0f03e3b51acbe2ff52064dd0e4774fa818ff72f043ea4","797cfbacb483d815b7819b3cf867533af99a630f2beea11cc26592b0c2d42cb1","4b26040bc29ea84ee18561c65d6994a07cfb168240c5bda0eb04bfb48190b219","06709b34a5d72762ab905843ac3443277ab884dc32fce8b3b0d51bcdb5064b74","cbb6fbcffa54cb81308247f17b64f1cb22ca015fba420fdb7c2c61c3a2adfcda","d37a6f1e29ec3244911f7d28cf815251ef113387c8618426acdab8d153940bbc","0e0af8c8426a911142d13768859c1b49e120f60bb153ce6dd197e30f9b8b6820","87e68d28db4ab68bfa35d6d1b57ea233d90e1c678f3da187f796075ff3a8e85d","afdf59e4068da139bff61ba0887ae9c76f46373f95932efd54ee7910b6502a1a","b07d57ba8d3e203d16450dd2426270030368821d3d418b291a05801a362d4d99","ecd8abab263e35cda153af96d4f29c711ff477a4c2bd81698cdfc727836547e3","e9a208aad09ea42f46bdd52d309774b73e7a02762281c51377973025a9cb7250","d264ffe701d5be437313c4f6f7d8f27ce029fc5cc3c51e42e9b60bed6d943e34","d2dcfbb9046a3f918ba22ebc91310f31606cebca173944df0544dc14ed26939a","2bef42b3474c69a11119442d099d6ee4952a9e1ee2674a76df68e67ee853c9f8","0880a3c557fb7ce460173df4c71dc39365359c053da107caad5fbe03a249c69e","f636742cc740b78907aa1010d1fc25cd7d2e5966a3aa149d74ce9370627ff852","b8ef751a4bad89dfe59fa19218e89bdb5c74e6cba080bdbee9921e1c9bf4a615","930d085f4aaabd1cc8d0f4f4837d13e04e948e77c8cf97a2e64c997088fbffcf","df1fd1099460e2d762f69fccb745265e72c14b8048f3e7de60767bbf714f6ad0","dba7c59c1095d9d149ec234ad3846af7fcb0bf6c11822f76d78c19fd0e086473","de378d46014d3f7e673fecf74f8d02bc27a30ffd85ca378927fba171f83f2f66","ec8924ce154b4a9dc676762fd43a7f785fc2cb6a21a0250b34216c8ed757f0bd","6da8dd746a2c6c74c7a874d809f62f908439319fed0505b579774066ce551bcb","a0cbce32b63aa070e5f4aa15e918886492e71c9753426d573e8a9deac1dd8abe","2431e657962c860594400df7d3c49f3c6eefb7e193f158bd9e7f0f965256a33c","30e5961d52cdabbbdaa5169c3c71a77a5aa0f8ac70ebb1f250f6fdaa2007ed3d","37e82fceaba98ef3038072809e67d0b8ed4b37c3a4aa82ed7dbf48676bf2750e","3fa0235c0ee6318d87108b06d6f922f525dcf039a32231d1667b96e202a8b009","5b7c7e06d9f383a1ee8d3b700c4d1419331f4166aa340c7788a35bec98331f34","2df3bf27c69b2c5d47b17649447817b802ad9166d31bfb7c33806195c03a8d83","ee235306953241273af6e40d709d4097476ecb599229473fb55b461288ed1993","2bef48831eaf4bf89166732f51f741488205c30f5184adc03a34a63a6c9a70bd","5fb0a11bc0cb66afc528b180067199bc542c46f6fd95649c3137f3a94bf8412b","6b6814ee731c1e6ee609b98086b273d1aa13333182edd24be8be569c7b7d07df","18cce8e15d2846c71faa2543b08b70b1c04bac9a26427eb98a4e0bad24976a90","ab3a5590e693ad5fb0a1a19c17e2b01258c88fe4617a4cae9d4058cc18946d08","8b4025f2c3f2aed06120f2d20f55d5bc10a06c7a40e058eafe13af9240f85c7c","698972a628b6dbbc1d4d917d422b56e429501ec8758270e527c70401227d094a","212e0c8f420a4c1866546cb7d50ba94537c25aaa715e84685d8995798125b9b9","39b74fe9bd08e3154f281117a5fe5bfa6b1afdfe8556eda1fc82428828329fd4","8b80893422089fff8f07496f4f66f1207847f6a9645c88d75c2877fabd453f11","cf41eb0cb37e385c1d777bdfefc05f0617857fd72d3a455d6d4f81e5e31a397f","583b9e0633074c66e97445426ac0b07bdb388f87e92449baae08cd5ab9cbf846","07646330c0cf3e5429bf2fce8647b0369a9cef8dc9b7a327e2ff47c4d1b916e3","eb277e8bb50c4fbc16ac5e8238b88880626f3ad672d7af92f2d29eaa522a9399","bfdff632c328e37b1946e1b6d7120933c145fac5a6eed6c8adaba5f5e56e64e3","b04f1498e13102326e1968fac4c2d37ca0c2b7abd76812892d9496151083aa91","c413aa82126a73c6280ce1177d151c01640790b5913e6ac80b62b0cce0ebaed3","93436c1aebb65cf409cf9879764d584439bbccc2f87e05763c30b70ead288013","2bbe03e00b2dd6db70bee6237f166c7fbc2b6e301918b3e9a6b62cf0df6eb370","522b79a823b5d466fbfe86cd25473045a8ad45f2a9b9df00e19fe5f3d00ab635","db17b27cc4514d286387592824d7bd39dea6737b799787d72acaa6556d40092e","0d6d484d91ba60f459fc8fcb35d08f6791711f05c8156bb6fc17b0a6fca81541","7bfc9cdd904b12b8f14d2160a092c90afd13cedffe96b8b50a71806431a01873","4981a6995ea12a015408f795188b03a7476c5148b051ea55126a82b62e06708f","843b27075f3ed5a868bad8c9f29b9d275f8a61b3e3c4e760ff6d64e1bf9a6f9c","3c54e9f8641d69914fbda6cac089757a412fb904f0a075dbc65bce568f4a90b7","472d9a32c8571cbfbddbe80686e464464ab008caa48c65677b0d35a0e506d06c","9daca9b36125be1487105a71756caff00669c1871a01209f63b3f9285c5503ec","9567454f4649cdcd899ec3328e8ddf843e0cfd59b832b3e23879d56ca4fadb35","2687e7d974ad531a64538810770312b81193fb7f143cd09fa89e05aad414cb55","c00565777871b6d76d065c51af1d2fbc414f8804498f8692861f0ef3759d8812","12a3233962e3103fd3e4f4de0c26e0f17cd7c3d37b0aaa0743b8dcc7038d0e33","4da29c03d43f81993290813ab4d7b3d29812ce0cc1ccfce9784d076f726fe753","fb58a4485f54c463027b36c4843098de5fdb536594f49ed81f783252561f77f6","6c09333a0c899f83c1444a379ebdcebeea8fd6b25fc6bec2e0e1e5724bcdecc5","ec85cf13bd5d52a3b29672c8d5509e0d6478721d814d933578fc769e82ac7f2d","939c575afa1e1720c9cafcf09d5ad218f7ffcc36743b7cf33581dff722fde7fc","315000295ec26a0a60741a2021d3b84b8f2cc2b8f636de5851436f7464f7ab98","b7956653d6f5d55877326e67cedd538243d9953819e019242502c432381fcee5","d655eefdb3a03cdab08a7d48ff49f42feef1974b3702a1b3010888d51e2428f5","8bd215328a9fd468ffa6f0c1bec8727e9081eadcc4659f3ea56b2e54412a4cc9","d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","833e92c058d033cde3f29a6c7603f517001d1ddd8020bc94d2067a3bc69b2a8e","08b2fae7b0f553ad9f79faec864b179fc58bc172e295a70943e8585dd85f600c","f12edf1672a94c578eca32216839604f1e1c16b40a1896198deabf99c882b340","e3498cf5e428e6c6b9e97bd88736f26d6cf147dedbfa5a8ad3ed8e05e059af8a","dba3f34531fd9b1b6e072928b6f885aa4d28dd6789cbd0e93563d43f4b62da53","f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","2329d90062487e1eaca87b5e06abcbbeeecf80a82f65f949fd332cfcf824b87b","25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","4fdb529707247a1a917a4626bfb6a293d52cd8ee57ccf03830ec91d39d606d6d","a9ebb67d6bbead6044b43714b50dcb77b8f7541ffe803046fdec1714c1eba206","5780b706cece027f0d4444fbb4e1af62dc51e19da7c3d3719f67b22b033859b9","7253b2045ea6b599d85ef9dd7ce2bf5439a1a98a27f078ba2115bedf61d738c7","ca58ededf2c0cd0563e8d83fef922817ff2a1ed9bd750242b17146354c1c5243","9d34b57d308ce327e484887106e68e2a82beaf263fea298e4ada5b3925ccbb8d","fe1f945db9c3cb35788d028ce9338b06256cd6041f2597668b9359f2b4fd4197","641fe481fff812b6a151b7fe0996468ced591244c6682b6ba2610b0bf016a9c6","63e5f3ffc50b8c29acf5396c0468a290c927cb7a5208ffb74add35670867e476","06c3f71832c76a82329b45610793b56d0b78fb02603d90f8a7629f49cb0dec1f","ca586208341738cb5e6d144536d83f91d96856c5828307088d242d52e4d439d4","fde0e854df7095db9f8b5cbe3804845a437750ff3c9edcaf2572e66885b230a3","6a63ec446b7fda7a8f1307c1a4659d6b8d1c617400b46d6b49f3d97ddfa93905","c461e128927c8492fff179d344735023ae189c4b626af91adb7b63c6c4b7248f","6b2706a5cee62ef25fdb7a9a268f558a15de9df894984ed13a07c8318576ef51","353fe785452a3c2d6ff2a41fb0684bd2878e78f3728fc5dae98634ccfaa9beae","521bbccf0edf1f69c488c6828716bdfb04acb69ea3ee5e3b7140bfa22ed6c342","dfdb07c32025c9aac5707797e48c46c8fc1416c3c3a5cab9677a75ab78a787ae","e1e115f590a02130c539f61c20460291711dccbdaa3fe4bbad43ab770dd4306e","e4fe42173b249ff533174cfbde4510ce5345da50c2f717b3ca27eda49929dad1","0dbd184576784dbc0b0caa1f022bbb1024a4f27b77e9bf5738c73841c218f4ab","17023bb4eba80df5152e45fa10ec0fa4105fa1c59cb30a51d5724c77cf041151","05b84716272aee3042dbeb319aa5b1ff5b8e77b62ae24be00b88cf8e04cab4a2","86d850e3572c2ed8f56d73a1ce7c5c4f3ea5a62170b82db65f3055f73614099d","4ab4cb977736067eda6f2ff73e521424a818319a1a70616ad2db2ba0b9dd5322","fa790e874499cb17016556f3168948f8d751dcb35a0862a9b9c55bb2ec353d48","795692a29dca5a39f904825a4abc78f9acc3a54ecc6858d8a268c52679f21751",{"version":"6876211ece0832abdfe13c43c65a555549bb4ca8c6bb4078d68cf923aeb6009e","affectsGlobalScope":true},{"version":"394fda71d5d6bd00a372437dff510feab37b92f345861e592f956d6995e9c1ce","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},{"version":"c564fc7c6f57b43ebe0b69bc6719d38ff753f6afe55dadf2dba36fb3558f39b6","affectsGlobalScope":true},{"version":"109b9c280e8848c08bf4a78fff1fed0750a6ca1735671b5cf08b71bae5448c03","affectsGlobalScope":true},"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","e525f9e67f5ddba7b5548430211cae2479070b70ef1fd93550c96c10529457bd","ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","17fe9131bec653b07b0a1a8b99a830216e3e43fe0ea2605be318dc31777c8bbf","3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","2c9875466123715464539bfd69bcaccb8ff6f3e217809428e0d7bd6323416d01","ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","2472ef4c28971272a897fdb85d4155df022e1f5d9a474a526b8fc2ef598af94e","6c8e442ba33b07892169a14f7757321e49ab0f1032d676d321a1fdab8a67d40c","b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","19851a6596401ca52d42117108d35e87230fc21593df5c4d3da7108526b6111c","3825bf209f1662dfd039010a27747b73d0ef379f79970b1d05601ec8e8a4249f","0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","40bfc70953be2617dc71979c14e9e99c5e65c940a4f1c9759ddb90b0f8ff6b1a","da52342062e70c77213e45107921100ba9f9b3a30dd019444cf349e5fb3470c4","e9ace91946385d29192766bf783b8460c7dbcbfc63284aa3c9cae6de5155c8bc","40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","561c60d8bfe0fec2c08827d09ff039eca0c1f9b50ef231025e5a549655ed0298","1e30c045732e7db8f7a82cf90b516ebe693d2f499ce2250a977ec0d12e44a529","84b736594d8760f43400202859cda55607663090a43445a078963031d47e25e7","499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","e38d4fdf79e1eadd92ed7844c331dbaa40f29f21541cfee4e1acff4db09cda33","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","7c10a32ae6f3962672e6869ee2c794e8055d8225ef35c91c0228e354b4e5d2d3","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e",{"version":"f4b4faedc57701ae727d78ba4a83e466a6e3bdcbe40efbf913b17e860642897c","affectsGlobalScope":true},"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7",{"version":"003ec918ec442c3a4db2c36dc0c9c766977ea1c8bcc1ca7c2085868727c3d3f6","affectsGlobalScope":true},"938f94db8400d0b479626b9006245a833d50ce8337f391085fad4af540279567","c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c",{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true},"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a",{"version":"12fb9c13f24845000d7bd9660d11587e27ef967cbd64bd9df19ae3e6aa9b52d4","affectsGlobalScope":true},"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","5078cd62dbdf91ae8b1dc90b1384dec71a9c0932d62bdafb1a811d2a8e26bef2","a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c",{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true},"2f32444438ecb1fa4519f6ec3977d69ce0e3acfa18b803e5cd725c204501f350","0ab3c844f1eb5a1d94c90edc346a25eb9d3943af7a7812f061bf2d627d8afac0","b0a84d9348601dbc217017c0721d6064c3b1af9b392663348ba146fdae0c7afd","161f09445a8b4ba07f62ae54b27054e4234e7957062e34c6362300726dabd315","77fced47f495f4ff29bb49c52c605c5e73cd9b47d50080133783032769a9d8a6","e6057f9e7b0c64d4527afeeada89f313f96a53291705f069a9193c18880578cb",{"version":"34ecb9596317c44dab586118fb62c1565d3dad98d201cd77f3e6b0dde453339c","affectsGlobalScope":true},"0f5cda0282e1d18198e2887387eb2f026372ebc4e11c4e4516fef8a19ee4d514","e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86",{"version":"237581f5ec4620a17e791d3bb79bad3af01e27a274dbee875ac9b0721a4fe97d","affectsGlobalScope":true},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true},"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","e6d81b1f7ab11dc1b1ad7ad29fcfad6904419b36baf55ed5e80df48d56ac3aff","1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","b6b8e3736383a1d27e2592c484a940eeb37ec4808ba9e74dd57679b2453b5865","d6f36b683c59ac0d68a1d5ee906e578e2f5e9a285bca80ff95ce61cdc9ddcdeb","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093",{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true},"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","b338a6e6c1d456e65a6ea78da283e3077fe8edf7202ae10490abbba5b952b05e",{"version":"2918b7c516051c30186a1055ebcdb3580522be7190f8a2fff4100ea714c7c366","affectsGlobalScope":true},"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","982efeb2573605d4e6d5df4dc7e40846bda8b9e678e058fc99522ab6165c479e","e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055",{"version":"d67fc92a91171632fc74f413ce42ff1aa7fbcc5a85b127101f7ec446d2039a1f","affectsGlobalScope":true},{"version":"d40e4631100dbc067268bce96b07d7aff7f28a541b1bfb7ef791c64a696b3d33","affectsGlobalScope":true},"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","42180b657831d1b8fead051698618b31da623fb71ff37f002cb9d932cfa775f1","4f98d6fb4fe7cbeaa04635c6eaa119d966285d4d39f0eb55b2654187b0b27446",{"version":"e4c653466d0497d87fa9ffd00e59a95f33bc1c1722c3f5c84dab2e950c18da70","affectsGlobalScope":true},"e6dcc3b933e864e91d4bea94274ad69854d5d2a1311a4b0e20408a57af19e95d","2119ab23f794e7b563cc1a005b964e2f59b8ebcb3dfe2ce61d0c782bfd5e02a2","0fd641a3b3e3ec89058051a284135a3f30b94a325fb809c4e4159ec5495b5cdc","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","e66eb237e7629bdc09f5f99fd69b73a0511fafb799783496a37432dde5ce0bf0","fdec06934bf00cb7c1187b7f2f1ac6bf2f327ab5af71a543c48d919baa194f1a","9c8f99dfcd80875222e3a4923525595503174088a6eedce78ae3ea81fd650323","652c8e676e1b94c7829671c0eb237528f76a0ba67ac846c065bceb4088ebddd7","caac4c00061a947d2b1010bb6464f06197f2671bdf948fa1aa40bf1e244ee2a0","95b6c669e7ed7c5358c03f8aa24986640f6125ee81bb99e70e9155974f7fd253","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","c3e5b75e1af87b8e67e12e21332e708f7eccee6aac6261cfe98ca36652cdcb53","f7dd7280ee4f0420865e6423fe199aeac63d1d66203a8b631077cdc15501ef1f","ef62b4aa372f77458d84c26614b44129f929e263c81b5cd1034f5828a5530412","8610558ae88a43ad794c4ab1da4f0e8e174e0357c88f6cbb21f523e67414e9a9","0b0feb9837c561c0a67b61024328045bb16bac6e4b10f7b0b217d3b8b43b0b12","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","d1c6c35d174dbe63a76ed8ac6621cca8dbe8794961a2121feb5f0239747d1b7e","051c1bc0efd3690031a97ac49133c9486c22bd07852e75a11ed4b40ceb722569","a22270cba4f004f64a61cec3e39574416e3ca72e848f53a36ba3add746243217","447b9b631351b40faa0e961e6cbb5e269bc1fa61f7a615b8077b31a94aaefae3","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","e641fd321ca5fe17b532bd3b5a6e85a8741bbde7a9d7110d8ed272605c1c4a25","9d63720cd09e8b0ae76e0ade1993b7ec600e6729e453f459d4039d6914914c1a","8b324c8813c2bee210a7a79eede7abc4b5c60132fd497e140ce312a856af22a4","ff2d2f19561cd3a594d7cfeeb29797e62c8d9ef62df65916e6be9bdcfbaf8f7d","d59191f0bb663800c0856116d69ae11125eeae891d0a46c0be52f3c78ed4890e","d8360fe15a60f549584a9ff7d0e6129ed77abdbcf062b4da1a10a78175d34f71","a57b37eae916e680e5e15b36d17b22bb05834115041fe940f11d9e714501ff84","e53086c8f861bee1717e3e001498d2a493f786c6fcbb0027fc4352f00fcaa3cd","446242adee16900500f9d9dba2678258641f7e8f692f43c18dde8872167107bb","6ef7ba3b3d2514336c59d1af84e2d7550a886a5be193d9cb980cc6d16698236f","185e38aa301aaaaf3870183acd48f9b4da7baa5282cb9ed102a10004b0751cc2","1f0c7b51e98442f125414c1d43c6a04abc8ee800066834d742eb99b0e542d327","131c58b9b527fa99139dabaaf585ed52e9f5c450c1347c87bcb9af9b884e63ea","2642f053f18152ed5ba6403217f932e4fa0be0077f38734b168ab92da948b3c4","5718fb71731197c4e623120e93c5ece9061f569aa4dc28ffcbb8b4fb5ffe2ba6","9bc5d8cd23570760dc417cb10b01079bdb919b4dfeaab9c4341cf11d37d7a29e","0671e90198a35ffd8e5dd35c5ce0fd4839305f6fe9878ca9851a25c097a7874a","a3d9df9d57f7e47f70e013a46cf1c38177579dbb2c5b567bde24c7a67ed1303d","b4ac0ae1e7ed09d2ab8496d65c04643742a1811c6c5f34d9f9504a3868bc02e8","b63b8dfe391e40354edfb991062b8e8e28ef36a28644a7904f6a38f51a8a2386","375ecb9cebdd43c6fd230cfc02c6640344aadf920319b73a3c8514f45f23167c","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73","67c51fa68aadbb50e4ffc650b704620e0393bddb3d3eac3a6195bf1956562fe4","8187d9966b8fa5a2d0e53c71903adb5aa71ebc2a23410ab2d37eb764db800829","d851073758ff1ce39bb428d8a3b3385ca26da1745ca742789e876d67dc0aae43","0cee5b30f4300e628927dde7e7ae7b5bc32250a685242474d069b9346da8a2b1","6fdc7cbbbc0601f9bb153c30c0e8063321cd1c9211ad512b9fde1d1f785b35dd","6ae7157666262b5c0402463531996601150583cb1f4f9421f184a0eec9049f10","fbd0ac5a6097c20307587444815092eb1825d831991363423ef0ce70ef053e82","ec0b2f8ed3cc053fdb004ab4979c32625179a746717504e08fc30cef9ec9d7a3","2887592574fcdfd087647c539dcb0fbe5af2521270dad4a37f9d17c16190d579","ed434fd49cf57789f99d3d2f4fb4d5f4930825280ceaae21200d840609345161","3ea3b60de13285b50d9752812d3a6d2cae078d89031713613f58cd2f5565589a","4b0465994a4b18dd63a9af850c74024e6184deac2477ab87135f7d1b11a07178","3031ed6baeacbaf771576f64094d8a977e5be37b04d4dbb335fff9cc1d95a147","5f02cf0f7cc845c12b09607f97e57f942c313ebee6c33a3efbc346f19b499c7f","8e1eb67ef6924cd14793af526f9a4e3195b5734920a75ec29900731b1997f2ce","07fa4bb359f3cacde0e0b6d75cd9a53b88168088be58e01b385cd12e12a6d5d4","52d5d4a344ea0781bf00874c4829e3cfb0c12e1fa28c17740e773bc247fa663c","89ebb5291da50663149fc01245eeca4f8bf1a2bd8a3fe84ea62d926d53a6460f","792128daaa6209b5d52148b1952b56aad02fcf72435283a2d5ac1fb22113cd91","c474689555d4e49d5210e6c6d95f939e31f49158af350cbc403e4fdda5d32386","d4c5aebfd4d5468e03fee82920222d861737cc6ec5c9829474a36e379753fc52","f8fd01e7967e335266c6113c5d9bf15113768c5747265420dae0fdf1868eb05c","7a89d77bf137521a06ff5b3ce7297c663f3c27912b09320fa520c1b2d6bab9e5","7647ed4e66d98048478e6245f50b794a916ffa456fb362672e52c01e1b09a644","9a22045cb43de6fab0b5e524e4cef807e5a2c6e0a49044de56b65448e1572a14","4441e06cf8e7ffff0519950e34df3608ca1016f09f83fdfb7f71ab7376ac5a47","45d0cb97f71ad1fd0688b8a95c2a2b3cce347cd458ec365af4079c0273b49dc6","6c86a8ced863164acfbe7753660a7ba4aa97cdaa1e3b8d193a18316f906d4bbf","2dd10019ccc6f059b703db2f58f6f385625d235869fe562978b5a913e5db4c69","e4c66039756093e60d857430f451ffff1ca3fa5a951367b67dcc8f29b47b2d72","48433ed0754c860ebfeeec213f9c5943cc6b8aa7b70ce1bd9c5c6a490ed91229","c2708a205c4afa73bfeebaf0e939390b3b3fe9cd1788b09389ee0d736cd75a72","8f6d44ee7619da14f50cf051a243c41793ff1dccda8d8a3bb2255989df114c30","2aca83fda179d79a68a259bc47999615976b935d2eeb391304db8a095af721e6","26b3b07bb0229b36ba87ec2b0ca1a42a927c2e8a8bd5ae9339d5a82d950eb3ce","8767c93beffebe9eda0c03e4893ab2fe9b62ff65bf767a003cbba50cfe810a28","d7f211b5ba9e9fc21ba0fbf12b3ceda8680f672da595068dbb4d2d1f9a0c83b1","e613a48817a40243523fa26bb5e3396e6d60c79a1c0c59274889560f34cfdde7","ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","80b232969d72e6f08081a4a0b558537db2671a1a60bb44559d5e3b5f1fc89cd6",{"version":"841784cfa9046a2b3e453d638ea5c3e53680eb8225a45db1c13813f6ea4095e5","affectsGlobalScope":true},"646ef1cff0ec3cf8e96adb1848357788f244b217345944c2be2942a62764b771","0ab7506c71d3467c8db4fdc2512e5960afcfeb0a4f51467d79c9b51af5ec9e63","d45bd3d7c328e85331b3deb75be0f5bef5746ff9efa27900c769ad0e3461acb4","0eb2ed1c1c8d87ba91ae080e95a5f4891e3bdd31626b894655985760a2e56afd","3cfb7c0c642b19fb75132154040bb7cd840f0002f9955b14154e69611b9b3f81","8387ec1601cf6b8948672537cf8d430431ba0d87b1f9537b4597c1ab8d3ade5b","d16f1c460b1ca9158e030fdf3641e1de11135e0c7169d3e8cf17cc4cc35d5e64","a934063af84f8117b8ce51851c1af2b76efe960aa4c7b48d0343a1b15c01aedf","e3c5ad476eb2fca8505aee5bdfdf9bf11760df5d0f9545db23f12a5c4d72a718","d0570ce419fb38287e7b39c910b468becb5b2278cf33b1000a3d3e82a46ecae2","3aca7f4260dad9dcc0a0333654cb3cde6664d34a553ec06c953bce11151764d7","a0a6f0095f25f08a7129bc4d7cb8438039ec422dc341218d274e1e5131115988","b58f396fe4cfe5a0e4d594996bc8c1bfe25496fbc66cf169d41ac3c139418c77","45785e608b3d380c79e21957a6d1467e1206ac0281644e43e8ed6498808ace72","bece27602416508ba946868ad34d09997911016dbd6893fb884633017f74e2c5","2a90177ebaef25de89351de964c2c601ab54d6e3a157cba60d9cd3eaf5a5ee1a","82200e963d3c767976a5a9f41ecf8c65eca14a6b33dcbe00214fcbe959698c46","b4966c503c08bbd9e834037a8ab60e5f53c5fd1092e8873c4a1c344806acdab2","480c20eddc2ee5f57954609b2f7a3368f6e0dda4037aa09ccf0d37e0b20d4e5c","40a9e5673448badb43d693daf20698c452782ae1682887b9d1ccbf207589781a","f2834e7008d641386a0d313ef33e974effb5815755254506341a0f3ba846a506","2e44250d356340733b1f210ad994bf11a0ae802186d5ad6b602661030f811db2","d01f869e0aa82d99b590ac59b6906d0f4ccae1d903d1dd1e622d944f4741b829","8d5a0a154fda1d5422fc0a0432821d5485ef88588ceb267651bf0ac786addcfa","b25d24260ac27016213b336707cb6bd279e12b946304118837ca0bd93831bb0b","81b8cf069b2fad8ff8112f832db6a32b7735b3291855ae71876e8dd07687a438","da0f84fcd93700b4a5fbf9c6f166a6cc19fc798231bff56dd1e3875bfc6966eb","634ff08e0143bec98401c737de7bfc6883bfec09200bd3806d2a4cfc79c62aaa","90a86863e3a57143c50fec5129d844ec12cef8fe44d120e56650ed51a6ce9867","472c0a98c5de98b8f5206132c941b052f5cc1ae78860cb8712ac4f1ebf4550ca","538c4903ef9f8df7d84c6cf2e065d589a2532d152fa44105c7093a606393b814","cfcb6acbb793a78b20899e6537c010bfbbf939c77471abcdc2a41faf9682ca1a","a7798e86de8e76844f774f8e0e338149893789cdc08970381f0ae78c86e8667f","eebc21bb922816f92302a1f9dcefc938e74d4af8c0a111b2a52519d7e25d4868","6b359d3c3138a9f4d3a9c9a8fda24be6fd15bd789e692252b53e68ce99db8edc","9488b648a6a4146b26c0fd4e85984f617056293092a89861f5259a69be16ca5c","e156513655462b5811a8f980e32ccd204c19042f8c9756430fe4e8d6f7c1326e","5679b694d138b8c4b3d56c9b1210f903c6b0ca2b5e7f1682a2dd41a6c955f094","ca8da035b76fb0136d2c1390dda650b7979202dbe0f5dc7eaefcde1c76dee4f4","4b1022a607444684abeee6537e4cace97263d1ef047c31b012c41fdc15838a79",{"version":"dd0271250f1e4314e52d7e0da9f3b25a708827f8a43ceff847a2a5e3fd3283e8","affectsGlobalScope":true},{"version":"47971d8a8639a2a2dd684091c6e7660ec5909fed540c4479ca24e22ac237194e","affectsGlobalScope":true},"e1075312b07671ef1cbf46409a0fa2eb2b90bb59c6215c94f0e530113013eeda","1bfd63c3f3749c5dc925bb0c05f229f9a376b8d3f8173d0e01901c08202caf6f","da850b4fdbabdd528f8b9c2784c5ba3b3bedc4e2e1e34dcd08b6407f9ec61a25","e61c918bb5f4a39b795a06e22bc4d44befcefd22f6a5c8a732c9ed0b565a6128","ee56351989b0e6f31fd35c9048e222146ced0aac68c64ce2e034f7c881327d6d","f58b2f1c8f4bcf519377d39f9555631b6507977ad2f4d8b73ac04622716dc925","4c805d3d1228c73877e7550afd8b881d89d9bc0c6b73c88940cffcdd2931b1f6","4aa74b4bc57c535815ae004550c59a953c8f8c3c61418ac47a7dcfefba76d1ba","78b17ceb133d95df989a1e073891259b54c968f71f416cd76185308af4f9a185","d76e5d04d111581b97e0aa35de3063022d20d572f22f388d3846a73f6ce0b788","0a53bb48eba6e9f5a56e3b85529fbbe786d96e84871579d10593d4f3ae0f9dba","d34fb8b0a66f0a406c7ce63a36f16dda7ff4500b11b0bd30a491aa0d59336d1f","282b31893b18a06114e5173f775dd085597ca220d183b8bd474d21846c048334","ed27d5ce258f069acf0036471d1fbb56b4cb3c16d7401b52a51297eca651db62","ec203a515afd88589bf1d384535024f5b90ebe6b5c416fb3dcca0abd428a8ba4","32a2a1374b57f0744d284ca93b477bd97825922513a24dfe262cbf3497377d96","a8b60d24dc1eb26c0e987f9461c893744339a7f48e4496f8077f258a644cffab",{"version":"3f9df27a77a23d69088e369b42af5f95bcb3e605e6b5c2395f0bfcd82045e051","affectsGlobalScope":true},"9fd080a9458c6d6f3eb6d4e2b12a3ec498d7d219863e9dca0646bdee9acce875",{"version":"e5d31928bee2ba0e72aeb858881891f8948326e4f91823028d0aea5c6f9e7564","affectsGlobalScope":true},"9a9ba9f6fd097bb2f57d68da8a39403bbe4dc818b8ccd155a780e4e23fa556f2","e50c4cd1f5cbce3e74c19a5bbf503c460e6ae86597e6d648a98c7f6c90b596dd",{"version":"fa140f881e20591ce163039a7968b54c5e51c11228708b4f9147473d06471cf5","affectsGlobalScope":true},"295eca0c47be1191690fd2fe588195fff9d4dc43852aceb8b4cab2aa634579f0","59ee7346e19b0050508a592702871dc943083c6dcb69a47d52e888115d840781","067712491fb2094c212c733dd8e2d56e74c309a9ce9dac9e919286b7245a1eb4","a5eae58ac55bd30c42359e4b01fb2be5eddac336869d3f04ffb4daa54b58f009","d12d691ef8933e8db39f2ca81d6973940ff5e37bb421752f5b6e7bc15dea3abf","4c5f8bd9b3a1aae4e4fddfee41667e495a045f73ed603993038fa6a8ba92fa14","dfb274ab0f319cf18ce7152067c25f984c7fd1924fc72b3f66734588444c934a","108c8c05cbc3fbbbd4ff4fc0779c9bef55655c28528eb0f77829795dc9f0b484","a7e5444d24cdec45f113f4fb8a687e1c83a5d30c55d2da19a04be71108ad77bd","41ec17e218b7358fcff25c719bc419fec8ec98f13e561b9a33b07392d4fec24c","23c204326746e981e02d7f0a15ab6f8015f9035998cb3766c9ddbf8ea247aea2","25f994b5d76ce6a3186a3319555bbba79706dac2174019915c39ac6080e98c7e","dfa4e2c6a612d43851ccbc499598cb006a3a78bc8c7f972c52078f862fa84e47","02c1705fa902f172be6e9020d74bcd92ce5db8d2ef3e1b03aabc2ac8eb46c3db","99d2d8a0c7bb3dd77459552269a7b5865fa912cedab69db686d40d2586b551f7","b47abe58626d76d258472b1d5f76752dd29efe681545f32698db84e7f83517df","3a99bbbbbf42e45c3d203e7c74f1319b79f9821c5e5f3cdd03249184d3e003ce","aaacc0e12ab4de27bdf131f666e315d8e60abec26c7f87501e0a7806fc824ae6","3b4195afd41a9215afc7be0820f8083f6bd2e85e5e0b45bb0061fb041944711e","108df8095f5e25d7189dd0d1433ac2df75ec40c779d8faf7d2670f1485beb643","ddd3c1d3c9ff67140191a3cf49b09875e20f28f2fc5535ae5ea16e14293a989b","7b496e53d5f7e1737adcb5610516476ee055bf547918797348f245c68e7418fe","577f44389d7faedd7fc9c0330caf73140e5d0d5f6c968210bff78be569f398a7","3046c57724587a59bceefadd30040d418e9df81b9f3cfd680618a3511302ed7a","15ccc911ed15397e838471bfe6d476c28deffe976c05cb057e6b1ea7491242c2","64b5a5ebdaead77a9a564aa938f4fb7a45e27cda7441d3bee8c9de8a4df5a04f","a48037f7af5f80df8973db5e562e17566407541de284b8dadf1879ea3aed8a2f","dab97d96ce986857150db03f0d435b44c060d126b4a387c7807f4e9f6c92e531","85f39366ea7bc5e34b596fc97de18a7e377856755e789d8e931054f2191d9b8b","daf3ea3d49f6e8a2fa70b7ca1f21bd97f1b65021b31fbfccb73dd55f86abb792","b15bd260805f9dd06cd4b2b741057209994823942c5696fd835e8a04fb4aab6b","6635a824edf99ed52dbd3502d5bce35990c3ed5e2ec5cef88229df8ac0c52b06","d6577effa37aae713c34363b7cc4c84851cbabe399882c60e2b70bcbb02bfa01","8eaf80ad438890fe5880c39a7bbf2c998ce7d29d4c14dd56d82db63bd871eefb","9b3e7f776f312c76ac67e1060e5398d7ac2c69d6a3a928a9daaae2eb05b15f56","202042eccb4789b7dee51ba9ecab0b854834ea5c1d6a3946504bfc733d4468c3","2b2ef76a9f36094b07ee6f76a5ac6903f2f65c0a20283201814a8d1e752cb592","8882e4e087d0bc8cc713cb3d8090c45d33e373e6f5c83e0f8d00fe6a950ef875","42979c197a22211d72c9cf1de8559f0a39de0b0687eea63c6407a69d9d73c13f","cc36098e27200f5daceffff4a4694148746aaa1b369536186fa1caa43d8b4bde","07133796953f82127aebef603392f1430690fe6cfd5d3d4c2bd3b277c6566d79","9079300efc80cdcb5a5cd153bdc354ac3439619e661e5f35413f81f94d4aa897","3655e77b67da6b52b34f7abd79890cdbc9ce2e2a3579fc2568f07d77d1d60ec9","95a1ff30ceba2b8c185a76002e2a4578cca9a593d8b642b7d5b13275ece952b9","2a43ea656e1e3ae2ec876766d9d4576a53b079a1cd352367db12fc721033c08b","e8835cfaf67d1730e430a800d447ea79d33c59fc990455965ca85dcc16c6ec64","98631e5438157a2bc50970527c20d9a0d02def63700cb8f21ee19520a982fbc0","93a5f2ecf21f69045a129ef7821396276c117b34eb39d0b5510ff90c34839f56","4d054866f6bed47338a905264c4cc16108dfb55353a97d67b5beb0393f78fbc4","cc611eddaabd228585429f406dc5b2ef53db92e954f3fab97f8cc67b84b0a67b","51d3abc39997f19e1e0e13fe545c786465259a3f6625b27828e47847a00acc27","982c00b942df3ad3aa49500b7f253bad1f2624d4c5e0e0eea1ee20529d90296f","a9f610a8bd1aa513ca9ee39a05566e7439b45ef24670858f4b0a3b1b33a17923","a7b268ed0284472916b39062cea1ec8ca946b048b7f8992b14221d4318cb7f5b","7748692e43d33e0f58fd69f9e84f568430d147be8a5fec55aea68c73f63908a1","cee3e7bec863f019aa744e00dd7a8470f2f6ff951c498c501ad6e296aca9f418","98e5bfadb80d850109194eb7cbdae761564cf0aa4cdd39e70eb73fe628af6bf8","5da731f0b18d358e4e0ca682928298de26c6eabee5990d03333e0e8aef335ea2","5ed1241d2008dfabf2145443b9fb285b7bdcd8211266187ed9dfb2ae5b80f869","f60e1afcef13dcd11edafbd3f7720a5a50c3d2d90b4cb27cea58adb16efd12ed","e6a1fc7243e8a4f92cbafa2bac261e3540968403f082df44ae521b8e2658efbd","b745f5b14ad0407d94b3b3e764ceb6e6c1c0873528461421046751f7a3c84b17","554028fd3b11a78660ed0cb98b5fd343bc9b8a9b8495114e6ae5d13aed49f242","e4125c670944f6369be310c830b37391a82b4f8f500399a17b041962e1fe1dd2","60cded932be8d4f5de5c3a7f56c5e01438ce8ec7f110d4c87fdf2bfdb910dbd0","06e0622d8d29254863de52ca0da62329d78c5e02086481fbcef6c9cd74796d84","ad5346fa860e1577699a7a1e6543f7e811dd209164ed4e226566595c50ad3dd4","749ad4dbb8d1d33ab4283f8ffa875669e067f917cf1d17162e149b571c689f9a","dc278a8129f50ef9555060cf12ba10a11c2a816bad01c2f1abd2f87f6ac3796c","ee94a249d6f6c94e2656e1abc6820a25a88ec1351c21929d1365d60a4381d797","bc5a1ad94db45ea72a8632a18d57efe131671c54c51347c8c9a266f5ca059d8f","1ecb3bf08e05193e81b052ca5180d2a2cfcf64602d57312dd7a5686755938b88","ee2a7977e7cc78906b894656baaf8d4080962056ee12b2024fa2f42bf8e447bf","88124457c6ce628eb357aefa18c0e23a58d92997bed3e28a5e53217a9d8ec590","bda82ce02ca6b44902394fd57e57b1b41e4de290727d92cef3cb537b21cbc5af","c288bf4485ccf06ac2da23408bbdd47c987b1ea7db59f7d3caf736d115323e42","c0007fbf0456531d2c2ac6243689559d4ea2b5a5bba9ddb28c006db5a15fe32d","c7d9afa4d252d9dee7c7c0c3752db5efcbaa39dda3df9a1e193aea3a0d056ac1","475709fda88e76c7b3bcf00a2ffa16eb2d91088caa6d9f4abdf9a6592664f676","ec1bc8ff1a835119253f23d674c3e13ba983744620a0655f73dc61f6aaeea004","4f9b48c8b5098f29ddf9041e81676fb06b078e1dfe76e1b160f93ca214d05ff3","94c5a9b9991dc4e164779653c1f2af90ad961fd23d9164c0b6e570be7456ce31","13ed3c245e4a6a8b90d3f0909198c01fd7cb48e41364c1ece3c11edecb9dc9c7","81212195a5a76330d166ecfd85eb7119e93d3b814177643fa8a10f4b40055fbf","b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","82e5a50e17833a10eb091923b7e429dc846d42f1c6161eb6beeb964288d98a15","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","f9e22729fa06ed20f8b1fe60670b7c74933fdfd44d869ddfb1919c15a5cf12fb","d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed",{"version":"a8932b7a5ef936687cc5b2492b525e2ad5e7ed321becfea4a17d5a6c80f49e92","affectsGlobalScope":true},"689be50b735f145624c6f391042155ae2ff6b90a93bac11ca5712bc866f6010c",{"version":"64d4b35c5456adf258d2cf56c341e203a073253f229ef3208fc0d5020253b241","affectsGlobalScope":true},"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","dd0c1b380ba3437adedef134b2e48869449b1db0b07b2a229069309ce7b9dd39","1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a",{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true},"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","ee65fe452abe1309389c5f50710f24114e08a302d40708101c4aa950a2a7d044","63786b6f821dee19eb898afb385bd58f1846e6cba593a35edcf9631ace09ba25","c5a14bdeb170e0e67fb4200c54e0e02fd0ec94aca894c212c9d43c2916891542","a39f2a304ccc39e70914e9db08f971d23b862b6f0e34753fad86b895fe566533","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","d88a5e779faf033be3d52142a04fbe1cb96009868e3bbdd296b2bc6c59e06c0e","8b677e0b88f3c4501c6f3ec44d3ccad1c2ba08efd8faf714b9b631b5dba1421b","8a19491eba2108d5c333c249699f40aff05ad312c04a17504573b27d91f0aede","199f9ead0daf25ae4c5632e3d1f42570af59685294a38123eef457407e13f365","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","ddef25f825320de051dcb0e62ffce621b41c67712b5b4105740c32fd83f4c449","1b3dffaa4ca8e38ac434856843505af767a614d187fb3a5ef4fcebb023c355aa","15fe687c59d62741b4494d5e623d497d55eb38966ecf5bea7f36e48fc3fbe15e",{"version":"2c3b8be03577c98530ef9cb1a76e2c812636a871f367e9edf4c5f3ce702b77f8","affectsGlobalScope":true},"1ba59c8bbeed2cb75b239bb12041582fa3e8ef32f8d0bd0ec802e38442d3f317"],"options":{"allowSyntheticDefaultImports":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":99,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":99,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"fileIdsList":[[73,201,245],[73,74,76,201,245],[73,75,201,245],[201,245],[73,75,76,77,78,79,80,201,245],[75,201,245],[69,70,201,245],[63,201,245],[63,66,201,245],[63,64,65,67,201,245],[69,201,245],[68,201,245],[68,69,71,72,201,245],[201,245,537],[201,245,248,289,295,298],[201,245,300],[201,245,298,312,315],[201,245,298,299,300,301,316],[201,245,312,332,334,363,364],[201,245,312,332,376,378],[201,245,377],[201,245,312,332],[201,245,365,378,379,380,381],[201,245,312,332,363],[201,245,291,295,312,335,338],[201,245,336,337],[201,245,315,335],[201,245,315],[201,245,312,339,350],[201,245,332,369],[201,245,312,332,369,370],[201,245,312,367,369],[201,245,295,312,332,369,370],[201,245,295,312,332,369,372],[201,245,296,297,312],[201,245,309,312,332,366,369,370,371,372,373,374,375],[201,245,312,322,328,332,368],[201,245,352,353],[201,245,353,354],[201,245,329],[201,245,312,329],[201,245,329,330,331],[201,245,296,297,312,317,322,328],[201,245,312,357],[201,245,357,358,359,360],[201,245,312,356],[201,245,295,302],[201,245,304,306,308],[201,245,297],[201,245,302,303,309,310,311],[201,245,396],[201,245,393,394,395,396,397,398,399,400,401,402,403,404,405],[201,245,386],[201,245,342],[201,245,393,394,395],[201,245,393,394],[201,245,342,396,397],[201,245,394],[201,245,388],[201,245,385,387],[201,245,406],[201,245,490],[201,245,477,478,479],[201,245,472,473,474],[201,245,450,451,452,453],[201,245,416,490],[201,245,416],[201,245,416,417,418,419,464],[201,245,454],[201,245,449,455,456,457,458,459,460,461,462,463],[201,245,464],[201,245,415],[201,245,468,470,471,489,490],[201,245,468,470],[201,245,465,468,490],[201,245,475,476,480,481,486],[201,245,469,471,481,489],[201,245,488,489],[201,245,465,469,471,487,488],[201,245,469,490],[201,245,467],[201,245,467,469,490],[201,245,465,466],[201,245,482,483,484,485],[201,245,471,490],[201,245,426],[201,245,420,427],[201,245,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],[201,245,446,490],[201,245,537,538,539,540,541],[201,245,537,539],[201,245,260,295,543],[201,245,251,295],[201,245,288,295,550],[201,245,260,295],[201,245,553,555],[201,245,552,553,554],[201,245,257,260,295,547,548,549],[201,245,544,548,550,558,559],[201,245,258,295],[201,245,257,260,262,265,277,288,295],[201,245,305],[201,245,295],[201,242,245],[201,244,245],[201,245,250,280],[201,245,246,251,257,258,265,277,288],[201,245,246,247,257,265],[201,245,248,289],[201,245,249,250,258,266],[201,245,250,277,285],[201,245,251,253,257,265],[201,244,245,252],[201,245,253,254],[201,245,255,257],[201,244,245,257],[201,245,257,258,259,277,288],[201,245,257,258,259,272,277,280],[201,240,245],[201,240,245,253,257,260,265,277,288],[201,245,257,258,260,261,265,277,285,288],[201,245,260,262,277,285,288],[201,245,257,263],[201,245,264,288],[201,245,253,257,265,277],[201,245,266],[201,245,267],[201,244,245,268],[201,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[201,245,270],[201,245,271],[201,245,257,272,273],[201,245,272,274,289,291],[201,245,257,277,278,280],[201,245,279,280],[201,245,277,278],[201,245,280],[201,245,281],[201,242,245,277,282],[201,245,257,283,284],[201,245,283,284],[201,245,250,265,277,285],[201,245,286],[197,198,199,200,201,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[245],[201,245,265,287],[201,245,260,271,288],[201,245,250,289],[201,245,277,290],[201,245,264,291],[201,245,292],[201,245,257,259,268,277,280,288,290,291,293],[201,245,277,294],[201,245,570,609],[201,245,570,594,609],[201,245,609],[201,245,570],[201,245,570,595,609],[201,245,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],[201,245,595,609],[201,245,258,277,295,546],[201,245,258,560],[201,245,260,295,547,557],[201,245,612],[201,245,257,260,262,265,277,285,288,294,295],[201,245,307],[201,245,263,295],[201,245,349],[201,245,312,347,348],[172,201,245],[201,245,312,333],[201,245,312],[201,245,383],[201,245,340,343],[201,245,340,343,344,345],[201,245,312,320],[201,245,257,295,312,319,320,321],[201,245,295,312,318,319,321],[201,245,304,346],[201,245,312,314],[201,245,313],[201,245,326,327],[201,245,312,322,323,324,325],[201,245,312,322,328,332,339,351,355,361,362],[201,245,312,322,328],[201,245,382,384],[201,245,341],[61,201,245],[57,201,245],[57,58,59,60,201,245],[201,210,214,245,288],[201,210,245,277,288],[201,245,277],[201,205,245],[201,207,210,245,288],[201,245,265,285],[201,205,245,295],[201,207,210,245,265,288],[201,202,203,204,206,209,245,257,277,288],[201,210,218,245],[201,203,208,245],[201,210,234,235,245],[201,203,206,210,245,280,288,295],[201,210,245],[201,202,245],[201,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,245],[201,210,227,230,245,253],[201,210,218,219,220,245],[201,208,210,219,221,245],[201,209,245],[201,203,205,210,245],[201,210,214,219,221,245],[201,214,245],[201,208,210,213,245,288],[201,203,207,210,218,245],[201,210,227,245],[201,205,210,234,245,280,293,295],[171,201,245],[159,160,161,201,245],[162,163,201,245],[159,160,162,164,165,170,201,245],[160,162,201,245],[170,201,245],[162,201,245],[159,160,162,165,166,167,168,169,201,245],[62,81,83,85,87,123,133,134,135,138,143,144,145,158,175,176,177,178,179,183,190,191,192,193,194,201,245],[83,84,145,201,245,407],[92,96,97,201,245],[83,201,245],[101,102,201,245],[83,92,201,245],[201,245,411],[87,92,201,245],[62,81,83,201,245],[92,201,245],[83,87,92,106,201,245],[174,201,245],[141,201,245],[83,84,98,201,245,407,491],[83,84,145,201,245,407,491],[194,201,245,407],[83,103,104,105,201,245,407],[201,245,407,413],[83,84,126,201,245,407,491],[83,87,106,107,201,245,407],[83,108,201,245,407],[83,87,128,201,245,407],[62,175,201,245,407],[89,201,245],[81,83,201,245],[81,201,245],[81,83,135,201,245],[135,136,137,138,139,201,245],[124,201,245],[125,126,201,245],[83,87,92,93,94,95,98,99,100,101,102,103,104,105,107,108,109,123,127,201,245],[83,87,141,201,245],[128,201,245,407,491],[124,125,127,128,142,201,245],[94,95,99,100,101,103,104,105,129,130,131,132,133,134,140,201,245],[187,201,245,407],[188,201,245,407],[81,186,201,245,407],[83,110,120,123,201,245],[83,92,110,201,245],[87,112,114,115,123,201,245],[113,201,245],[111,201,245,407],[201,245,407,510],[116,201,245,407],[84,116,201,245,407],[110,111,115,116,117,118,119,121,122,201,245],[83,145,201,245],[83,145,146,201,245],[83,145,146,147,148,151,152,153,154,155,156,157,201,245],[201,245,407,491],[83,145,146,201,245,407,491],[83,145,146,158,201,245,407,491],[93,146,201,245,407,411],[147,148,149,150,151,152,153,154,155,156,157,158,201,245],[83,145,149,150,201,245],[83,149,150,201,245],[88,201,245,407,491],[88,89,90,91,201,245],[84,201,245,407],[84,201,245,407,491],[84,85,86,201,245],[201,245,407,411],[145,201,245],[62,195,201,245],[62,201,245],[62,92,175,176,201,245],[62,83,201,245],[62,81,140,201,245],[62,143,201,245],[62,81,184,185,186,187,188,189,201,245],[62,83,191,201,245,407],[62,83,85,193,201,245,407],[62,83,84,85,182,201,245,407],[62,83,85,180,201,245,407],[62,83,192,201,245,407],[62,83,84,181,201,245,407],[62,190,201,245,407],[180,181,182,201,245],[173,201,245],[82,201,245]],"referencedMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"exportedModulesMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"semanticDiagnosticsPerFile":[74,75,76,80,81,77,78,79,71,70,64,67,65,68,66,63,72,69,73,539,537,299,300,301,316,317,298,365,379,378,380,382,364,381,339,338,336,337,351,370,371,368,372,373,374,375,367,366,376,369,354,355,353,330,331,332,329,358,360,361,359,357,356,303,309,302,310,311,312,404,401,400,397,406,393,402,396,395,403,398,405,399,394,389,388,387,407,477,478,480,479,472,473,475,474,450,452,451,454,453,417,415,418,465,419,455,464,456,459,457,460,462,458,461,463,416,491,476,471,481,487,488,490,489,469,470,466,468,467,482,486,483,484,485,420,421,424,422,423,426,427,428,429,425,430,431,432,433,434,435,449,436,437,438,439,440,441,442,445,443,444,446,447,448,386,542,538,540,541,544,545,551,543,556,552,555,553,550,560,559,318,561,557,562,297,305,306,554,563,546,564,242,243,244,245,246,247,199,248,249,250,251,252,253,254,256,255,257,258,259,241,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,278,280,281,282,283,284,285,286,197,295,201,198,200,287,288,289,290,291,292,293,294,565,566,567,548,549,568,569,594,595,570,573,592,593,583,582,580,575,588,586,590,574,587,591,576,577,589,571,578,579,581,585,596,584,572,609,608,603,605,604,597,598,600,602,606,607,599,601,547,610,558,611,313,613,612,614,307,308,352,304,296,377,350,348,349,173,334,333,383,384,340,344,346,345,343,319,321,322,320,347,315,314,335,323,328,326,324,325,327,363,362,385,342,341,62,58,61,60,57,59,11,12,14,13,2,15,16,17,18,19,20,21,22,3,4,26,23,24,25,27,28,29,5,30,31,32,33,6,37,34,35,36,38,7,39,44,45,40,41,42,43,8,49,46,47,48,50,9,51,52,53,54,55,1,10,56,218,229,216,230,239,208,207,238,233,237,210,226,209,236,205,206,211,212,217,215,203,240,231,221,220,222,224,219,223,234,213,214,225,204,228,227,232,202,235,172,162,164,171,166,167,165,168,159,160,161,163,169,170,195,391,392,408,101,98,95,134,97,409,103,104,132,410,129,109,99,412,177,102,131,105,178,194,413,126,414,96,176,107,133,94,108,100,175,130,492,493,494,495,496,497,498,499,500,501,502,139,135,136,137,138,140,503,124,125,127,504,128,142,505,143,141,506,187,185,189,188,186,184,507,508,509,121,144,111,510,122,117,119,110,116,118,115,114,113,511,512,513,514,123,120,150,147,149,148,158,516,517,518,519,515,155,156,154,152,151,157,153,88,89,90,91,520,521,92,112,85,84,179,86,145,522,523,87,528,524,525,93,411,526,527,146,196,191,193,182,180,192,181,190,529,530,531,532,533,534,535,183,174,390,83,82,536,106],"affectedFilesPendingEmit":[[74,1],[75,1],[76,1],[80,1],[81,1],[77,1],[78,1],[79,1],[71,1],[70,1],[64,1],[67,1],[65,1],[68,1],[66,1],[63,1],[72,1],[69,1],[73,1],[539,1],[537,1],[299,1],[300,1],[301,1],[316,1],[317,1],[298,1],[365,1],[379,1],[378,1],[380,1],[382,1],[364,1],[381,1],[339,1],[338,1],[336,1],[337,1],[351,1],[370,1],[371,1],[368,1],[372,1],[373,1],[374,1],[375,1],[367,1],[366,1],[376,1],[369,1],[354,1],[355,1],[353,1],[330,1],[331,1],[332,1],[329,1],[358,1],[360,1],[361,1],[359,1],[357,1],[356,1],[303,1],[309,1],[302,1],[310,1],[311,1],[312,1],[404,1],[401,1],[400,1],[397,1],[406,1],[393,1],[402,1],[396,1],[395,1],[403,1],[398,1],[405,1],[399,1],[394,1],[389,1],[388,1],[387,1],[407,1],[477,1],[478,1],[480,1],[479,1],[472,1],[473,1],[475,1],[474,1],[450,1],[452,1],[451,1],[454,1],[453,1],[417,1],[415,1],[418,1],[465,1],[419,1],[455,1],[464,1],[456,1],[459,1],[457,1],[460,1],[462,1],[458,1],[461,1],[463,1],[416,1],[491,1],[476,1],[471,1],[481,1],[487,1],[488,1],[490,1],[489,1],[469,1],[470,1],[466,1],[468,1],[467,1],[482,1],[486,1],[483,1],[484,1],[485,1],[420,1],[421,1],[424,1],[422,1],[423,1],[426,1],[427,1],[428,1],[429,1],[425,1],[430,1],[431,1],[432,1],[433,1],[434,1],[435,1],[449,1],[436,1],[437,1],[438,1],[439,1],[440,1],[441,1],[442,1],[445,1],[443,1],[444,1],[446,1],[447,1],[448,1],[386,1],[542,1],[538,1],[540,1],[541,1],[544,1],[545,1],[551,1],[543,1],[556,1],[552,1],[555,1],[553,1],[550,1],[560,1],[559,1],[318,1],[561,1],[557,1],[562,1],[297,1],[305,1],[306,1],[554,1],[563,1],[546,1],[564,1],[242,1],[243,1],[244,1],[245,1],[246,1],[247,1],[199,1],[248,1],[249,1],[250,1],[251,1],[252,1],[253,1],[254,1],[256,1],[255,1],[257,1],[258,1],[259,1],[241,1],[260,1],[261,1],[262,1],[263,1],[264,1],[265,1],[266,1],[267,1],[268,1],[269,1],[270,1],[271,1],[272,1],[273,1],[274,1],[275,1],[276,1],[277,1],[279,1],[278,1],[280,1],[281,1],[282,1],[283,1],[284,1],[285,1],[286,1],[197,1],[295,1],[201,1],[198,1],[200,1],[287,1],[288,1],[289,1],[290,1],[291,1],[292,1],[293,1],[294,1],[565,1],[566,1],[567,1],[548,1],[549,1],[568,1],[569,1],[594,1],[595,1],[570,1],[573,1],[592,1],[593,1],[583,1],[582,1],[580,1],[575,1],[588,1],[586,1],[590,1],[574,1],[587,1],[591,1],[576,1],[577,1],[589,1],[571,1],[578,1],[579,1],[581,1],[585,1],[596,1],[584,1],[572,1],[609,1],[608,1],[603,1],[605,1],[604,1],[597,1],[598,1],[600,1],[602,1],[606,1],[607,1],[599,1],[601,1],[547,1],[610,1],[558,1],[611,1],[313,1],[613,1],[612,1],[614,1],[307,1],[308,1],[352,1],[304,1],[296,1],[377,1],[350,1],[348,1],[349,1],[173,1],[334,1],[333,1],[383,1],[384,1],[340,1],[344,1],[346,1],[345,1],[343,1],[319,1],[321,1],[322,1],[320,1],[347,1],[315,1],[314,1],[335,1],[323,1],[328,1],[326,1],[324,1],[325,1],[327,1],[363,1],[362,1],[385,1],[342,1],[341,1],[62,1],[58,1],[61,1],[60,1],[57,1],[59,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[218,1],[229,1],[216,1],[230,1],[239,1],[208,1],[207,1],[238,1],[233,1],[237,1],[210,1],[226,1],[209,1],[236,1],[205,1],[206,1],[211,1],[212,1],[217,1],[215,1],[203,1],[240,1],[231,1],[221,1],[220,1],[222,1],[224,1],[219,1],[223,1],[234,1],[213,1],[214,1],[225,1],[204,1],[228,1],[227,1],[232,1],[202,1],[235,1],[172,1],[162,1],[164,1],[171,1],[166,1],[167,1],[165,1],[168,1],[159,1],[160,1],[161,1],[163,1],[169,1],[170,1],[195,1],[391,1],[392,1],[408,1],[101,1],[98,1],[95,1],[134,1],[97,1],[409,1],[103,1],[104,1],[132,1],[410,1],[129,1],[109,1],[99,1],[412,1],[177,1],[102,1],[131,1],[105,1],[178,1],[194,1],[413,1],[126,1],[414,1],[96,1],[176,1],[107,1],[133,1],[94,1],[108,1],[100,1],[175,1],[130,1],[492,1],[493,1],[494,1],[495,1],[496,1],[497,1],[498,1],[499,1],[500,1],[501,1],[502,1],[139,1],[135,1],[136,1],[137,1],[138,1],[140,1],[503,1],[124,1],[125,1],[127,1],[504,1],[128,1],[142,1],[505,1],[143,1],[141,1],[506,1],[187,1],[185,1],[189,1],[188,1],[186,1],[184,1],[507,1],[508,1],[509,1],[121,1],[144,1],[111,1],[510,1],[122,1],[117,1],[119,1],[110,1],[116,1],[118,1],[115,1],[114,1],[113,1],[511,1],[512,1],[513,1],[514,1],[123,1],[120,1],[150,1],[147,1],[149,1],[148,1],[158,1],[516,1],[517,1],[518,1],[519,1],[515,1],[155,1],[156,1],[154,1],[152,1],[151,1],[157,1],[153,1],[88,1],[89,1],[90,1],[91,1],[520,1],[521,1],[92,1],[112,1],[85,1],[84,1],[179,1],[86,1],[145,1],[522,1],[523,1],[87,1],[528,1],[524,1],[525,1],[93,1],[411,1],[526,1],[527,1],[146,1],[196,1],[191,1],[193,1],[182,1],[180,1],[192,1],[181,1],[190,1],[529,1],[530,1],[531,1],[532,1],[533,1],[534,1],[535,1],[183,1],[174,1],[390,1],[83,1],[82,1],[536,1],[106,1]]},"version":"4.9.5"}
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:160:./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:14:Agent: Inventory backend product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup): list main code entry points (modules/routes/services), highlight key tests per mode, summarize current state & risks.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:161:./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:32:Agent: Inventory backend product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup): list main code entry points (modules/routes/services), highlight key tests per mode, summarize current state & risks.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:171:./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:1112:I'm organizing the current state and risks across different service modes—simulation, signup/matchmaking, Sunday Game, GHIN/Sheets, and analytics—by reviewing their code implementation, test coverage, and dependencies. I'm noting concurrency and environment risks, especially with external APIs and global state reliance, while identifying gaps in test automation and integration. Let's verify analytics methods next to confirm coverage.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:175:./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:1515:I'll compile a concise but thorough overview of major backend modes, listing entry points with line references, core modules, tests, and current state or risks for each area—including Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets Sync, Analytics, and Legacy Signup. I’ll highlight risks like missing dependency injection, placeholder analytics values, unhandled service return values, and lack of input validation, wrapping up with a next step suggestion focused on adding integration tests and improving GHIN/Sheet client stubs.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:177:./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:1526:Next: consider adding FastAPI TestClient coverage for signups/matchmaking and a mocked GHIN/Sheets harness so the higher-risk endpoints can be validated without external dependencies.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:274:./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:14:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:275:./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:34:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:408:./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:14:Agent: Summarize backend code/routes/tests and current risks for all product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets, Analytics, Legacy Signup) using repo context.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:409:./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:32:Agent: Summarize backend code/routes/tests and current risks for all product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets, Analytics, Legacy Signup) using repo context.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:432:./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1446:Potential follow-ups: tighten real HTTP tests for signups/matchmaking and GHIN, refactor global simulation state for multi-game safety, and reconcile GHIN env names before enabling production sync.
./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:449:./frontend/node_modules/.cache/tsconfig.tsbuildinfo:1:{"program":{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.sharedmemory.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../react-router/dist/development/routeModules-rOzWJJ9x.d.ts","../react-router/dist/development/index-react-server-client-BKpa2trA.d.ts","../react-router/node_modules/cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/shared.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-localstorage.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-memory.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/key-manifest.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-manager.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/index.d.ts","../@auth0/auth0-spa-js/dist/typings/global.d.ts","../@auth0/auth0-spa-js/dist/typings/TokenExchange.d.ts","../@auth0/auth0-spa-js/dist/typings/Auth0Client.d.ts","../@auth0/auth0-spa-js/dist/typings/errors.d.ts","../@auth0/auth0-spa-js/dist/typings/index.d.ts","../@auth0/auth0-react/dist/auth-state.d.ts","../@auth0/auth0-react/dist/auth0-context.d.ts","../@auth0/auth0-react/dist/auth0-provider.d.ts","../@auth0/auth0-react/dist/use-auth0.d.ts","../@auth0/auth0-react/dist/with-auth0.d.ts","../@auth0/auth0-react/dist/with-authentication-required.d.ts","../@auth0/auth0-react/dist/errors.d.ts","../@auth0/auth0-react/dist/index.d.ts","../../src/theme/theme.js","../../src/theme/Provider.js","../../src/context/GameProvider.js","../../src/context/AuthContext.js","../../src/context/SheetSyncContext.js","../../src/context/index.js","../../src/components/ui/Button.js","../../src/components/ui/Card.js","../../src/components/ui/Input.js","../../src/components/ui/Select.js","../../src/components/ui/index.js","../../src/hooks/useOddsCalculation.js","../../src/components/ShotResultWidget.js","../../src/components/BettingOpportunityWidget.js","../../src/components/ProbabilityVisualization.js","../../src/components/EducationalTooltip.js","../../src/components/BettingOddsPanel.js","../../src/components/GameStateWidget.js","../../src/components/StrategicAnalysisWidget.js","../../src/components/AnalyticsDashboard.js","../../src/components/HoleStrategyDisplay.js","../../src/components/EnhancedBettingWidget.js","../../src/components/EnhancedScoringWidget.js","../../src/components/InteractivePlayerCard.js","../../src/utils/api.js","../../src/components/ShotAnalysisWidget.js","../../src/components/ShotVisualizationOverlay.js","../../src/components/GameHistory.js","../../src/components/simulation/SimulationDecisionPanel.tsx","../../src/components/simulation/GamePlay.js","../../src/config/environment.js","../../src/components/simulation/__fixtures__/simulationMockData.js","../../src/components/simulation/__fixtures__/index.js","../../src/components/simulation/TurnBasedInterface.js","../../src/components/simulation/SimulationMode.js","../../src/components/simulation/MonteCarloSimulation.js","../../src/components/simulation/Timeline.js","../../src/components/simulation/PokerBettingPanel.js","../../src/components/simulation/styles/enhancedSimulationLayout.js","../../src/components/simulation/EnhancedSimulationLayout.js","../../src/components/simulation/HoleVisualization.tsx","../../src/components/simulation/index.js","../../src/components/game/CourseImport.js","../../src/components/game/CourseManager.js","../../src/components/PlayerProfileManager.js","../../src/components/game/GameSetupForm.js","../../src/components/game/UnifiedGameInterface.js","../../src/components/GameDashboard.js","../../src/components/WolfGoatPigDashboard.js","../../src/components/HoleVisualization.js","../../src/components/EnhancedWGPInterface.js","../../src/components/ShotRangeAnalyzer.js","../../src/components/ColdStartHandler.js","../../src/components/auth/LoginButton.js","../../src/components/auth/LogoutButton.js","../../src/components/auth/Profile.js","../../src/components/auth/ProtectedRoute.js","../../src/components/auth/AuthHealthCheck.js","../../src/components/auth/index.js","../../src/components/index.js","../../src/components/game/WolfGoatPigGame.js","../../src/components/game/index.js","../../src/components/simulation/FeedAnalyzer.js","../../src/context/TutorialContext.js","../../src/hooks/useTutorialProgress.js","../../src/components/tutorial/ProgressTracker.js","../../src/components/tutorial/TutorialOverlay.js","../../src/components/tutorial/TutorialModule.js","../../src/components/tutorial/InteractiveElement.js","../../src/components/tutorial/modules/GolfBasicsModule.js","../../src/components/tutorial/modules/GameOverviewModule.js","../../src/components/tutorial/modules/TeamFormationModule.js","../../src/components/tutorial/modules/BettingSystemModule.js","../../src/components/tutorial/modules/AdvancedRulesModule.js","../../src/components/tutorial/modules/AnalysisToolsModule.js","../../src/components/tutorial/modules/PracticeGameModule.js","../../src/components/tutorial/TutorialSystem.js","../zod/v3/helpers/typeAliases.d.cts","../zod/v3/helpers/util.d.cts","../zod/v3/index.d.cts","../zod/v3/ZodError.d.cts","../zod/v3/locales/en.d.cts","../zod/v3/errors.d.cts","../zod/v3/helpers/parseUtil.d.cts","../zod/v3/helpers/enumUtil.d.cts","../zod/v3/helpers/errorUtil.d.cts","../zod/v3/helpers/partialUtil.d.cts","../zod/v3/standard-schema.d.cts","../zod/v3/types.d.cts","../zod/v3/external.d.cts","../zod/index.d.cts","../ghin/dist/index.d.ts","../../src/services/ghinService.js","../../src/components/WGPAnalyticsDashboard.js","../../src/components/SheetIntegrationDashboard.js","../../src/components/GoogleSheetsLiveSync.js","../../src/components/Leaderboard.js","../../src/context/MockAuthContext.js","../../src/pages/HomePage.js","../../src/pages/SetupPage.js","../../src/pages/GamePage.js","../../src/pages/index.js","../../src/components/signup/SignupCalendar.js","../../src/components/signup/DailySignupView.js","../../src/components/signup/PlayerAvailability.js","../../src/components/signup/AllPlayersAvailability.js","../../src/components/signup/MatchmakingSuggestions.js","../../src/components/signup/EmailPreferences.js","../../src/pages/SignupPage.js","../../src/pages/AboutPage.js","../../src/pages/RulesPage.js","../../src/pages/AdminPage.js","../../src/components/Navigation.js","../../src/App.js","../../src/index.js","../@types/node/ts5.1/compatibility/disposable.d.ts","../@types/node/ts5.6/compatibility/float16array.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/ts5.6/globals.typedarray.d.ts","../@types/node/ts5.6/buffer.buffer.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/globals.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/dom-events.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/ts5.1/index.d.ts","../collect-v8-coverage/index.d.ts","../@types/istanbul-lib-coverage/index.d.ts","../@jest/console/build/types.d.ts","../@jest/console/build/BufferedConsole.d.ts","../@jest/console/build/CustomConsole.d.ts","../@jest/console/build/NullConsole.d.ts","../@jest/types/build/Global.d.ts","../@jest/types/build/Circus.d.ts","../chalk/index.d.ts","../@types/istanbul-lib-report/index.d.ts","../@types/istanbul-reports/index.d.ts","../@types/yargs-parser/index.d.ts","../@types/yargs/index.d.ts","../@jest/types/build/Config.d.ts","../@jest/types/build/TestResult.d.ts","../@jest/types/build/Transform.d.ts","../@jest/types/build/index.d.ts","../@types/stack-utils/index.d.ts","../jest-message-util/build/types.d.ts","../jest-message-util/build/index.d.ts","../@jest/console/build/getConsoleOutput.d.ts","../@jest/console/build/index.d.ts","../@types/graceful-fs/index.d.ts","../jest-haste-map/build/HasteFS.d.ts","../jest-haste-map/build/types.d.ts","../jest-haste-map/build/ModuleMap.d.ts","../jest-haste-map/build/index.d.ts","../jest-resolve/build/ModuleNotFoundError.d.ts","../jest-resolve/build/shouldLoadAsEsm.d.ts","../jest-resolve/build/types.d.ts","../jest-resolve/build/resolver.d.ts","../jest-resolve/build/utils.d.ts","../jest-resolve/build/index.d.ts","../@jest/test-result/build/types.d.ts","../@jest/test-result/build/formatTestResults.d.ts","../@jest/test-result/build/helpers.d.ts","../@jest/test-result/build/index.d.ts","../jest-changed-files/build/types.d.ts","../jest-changed-files/build/index.d.ts","../jest-mock/build/index.d.ts","../@jest/fake-timers/build/legacyFakeTimers.d.ts","../@jest/fake-timers/build/modernFakeTimers.d.ts","../@jest/fake-timers/build/index.d.ts","../@jest/environment/build/index.d.ts","../jest-diff/build/cleanupSemantic.d.ts","../pretty-format/build/types.d.ts","../pretty-format/build/index.d.ts","../jest-diff/build/types.d.ts","../jest-diff/build/diffLines.d.ts","../jest-diff/build/printDiffs.d.ts","../jest-diff/build/index.d.ts","../jest-matcher-utils/build/index.d.ts","../expect/build/jestMatchersObject.d.ts","../expect/build/types.d.ts","../expect/build/index.d.ts","../@jest/globals/build/index.d.ts","../callsites/index.d.ts","../@jest/source-map/build/types.d.ts","../@jest/source-map/build/getCallsite.d.ts","../@jest/source-map/build/index.d.ts","../@jest/transform/node_modules/source-map/source-map.d.ts","../@jest/transform/build/types.d.ts","../@jest/transform/build/ScriptTransformer.d.ts","../@jest/transform/build/shouldInstrument.d.ts","../@jest/transform/build/enhanceUnexpectedTokenMessage.d.ts","../@jest/transform/build/index.d.ts","../jest-runtime/build/types.d.ts","../jest-runtime/build/index.d.ts","../@jest/core/build/types.d.ts","../@jest/core/build/SearchSource.d.ts","../@jest/reporters/build/getResultHeader.d.ts","../@jest/reporters/build/generateEmptyCoverage.d.ts","../@jest/reporters/build/CoverageWorker.d.ts","../@jest/reporters/build/types.d.ts","../@jest/reporters/build/BaseReporter.d.ts","../@jest/reporters/build/CoverageReporter.d.ts","../@jest/reporters/build/DefaultReporter.d.ts","../@jest/reporters/build/NotifyReporter.d.ts","../@jest/reporters/build/SummaryReporter.d.ts","../@jest/reporters/build/VerboseReporter.d.ts","../@jest/reporters/build/index.d.ts","../emittery/index.d.ts","../@jest/core/build/TestWatcher.d.ts","../@jest/core/build/TestScheduler.d.ts","../@jest/core/build/cli/index.d.ts","../@jest/core/build/version.d.ts","../@jest/core/build/jest.d.ts","../jest-cli/build/cli/index.d.ts","../jest-cli/build/index.d.ts","../jest/build/jest.d.ts","../@types/aria-query/index.d.ts","../@testing-library/jest-dom/types/matchers.d.ts","../@testing-library/jest-dom/types/jest.d.ts","../@testing-library/jest-dom/types/index.d.ts","../../src/setupTests.js","../../src/__mocks__/react-router-dom.js","../../src/__tests__/fixtures/gameFixtures.js","../@testing-library/dom/types/matches.d.ts","../@testing-library/dom/types/wait-for.d.ts","../@testing-library/dom/types/query-helpers.d.ts","../@testing-library/dom/types/queries.d.ts","../@testing-library/dom/types/get-queries-for-element.d.ts","../@testing-library/dom/types/screen.d.ts","../@testing-library/dom/types/wait-for-element-to-be-removed.d.ts","../@testing-library/dom/types/get-node-text.d.ts","../@testing-library/dom/types/events.d.ts","../@testing-library/dom/types/pretty-dom.d.ts","../@testing-library/dom/types/role-helpers.d.ts","../@testing-library/dom/types/config.d.ts","../@testing-library/dom/types/suggestions.d.ts","../@testing-library/dom/types/index.d.ts","../@testing-library/react/types/index.d.ts","../../src/__tests__/utils/testHelpers.js","../../src/components/EmailSettings.js","../../src/components/GHINIntegration.js","../../src/hooks/usePlayerProfile.js","../../src/components/GameStatsTracker.js","../../src/components/PerformanceAnalytics.js","../../src/components/PlayerStatistics.js","../@testing-library/user-event/dist/types/event/eventMap.d.ts","../@testing-library/user-event/dist/types/event/types.d.ts","../@testing-library/user-event/dist/types/event/dispatchEvent.d.ts","../@testing-library/user-event/dist/types/event/focus.d.ts","../@testing-library/user-event/dist/types/event/input.d.ts","../@testing-library/user-event/dist/types/utils/click/isClickableInput.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Blob.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/DataTransfer.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/FileList.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Clipboard.d.ts","../@testing-library/user-event/dist/types/utils/edit/timeValue.d.ts","../@testing-library/user-event/dist/types/utils/edit/isContentEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/isEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/maxLength.d.ts","../@testing-library/user-event/dist/types/utils/edit/setFiles.d.ts","../@testing-library/user-event/dist/types/utils/focus/cursor.d.ts","../@testing-library/user-event/dist/types/utils/focus/getActiveElement.d.ts","../@testing-library/user-event/dist/types/utils/focus/getTabDestination.d.ts","../@testing-library/user-event/dist/types/utils/focus/isFocusable.d.ts","../@testing-library/user-event/dist/types/utils/focus/selection.d.ts","../@testing-library/user-event/dist/types/utils/focus/selector.d.ts","../@testing-library/user-event/dist/types/utils/keyDef/readNextDescriptor.d.ts","../@testing-library/user-event/dist/types/utils/misc/cloneEvent.d.ts","../@testing-library/user-event/dist/types/utils/misc/findClosest.d.ts","../@testing-library/user-event/dist/types/utils/misc/getDocumentFromNode.d.ts","../@testing-library/user-event/dist/types/utils/misc/getTreeDiff.d.ts","../@testing-library/user-event/dist/types/utils/misc/getWindow.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDescendantOrSelf.d.ts","../@testing-library/user-event/dist/types/utils/misc/isElementType.d.ts","../@testing-library/user-event/dist/types/utils/misc/isVisible.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDisabled.d.ts","../@testing-library/user-event/dist/types/utils/misc/level.d.ts","../@testing-library/user-event/dist/types/utils/misc/wait.d.ts","../@testing-library/user-event/dist/types/utils/pointer/cssPointerEvents.d.ts","../@testing-library/user-event/dist/types/utils/index.d.ts","../@testing-library/user-event/dist/types/document/UI.d.ts","../@testing-library/user-event/dist/types/document/getValueOrTextContent.d.ts","../@testing-library/user-event/dist/types/document/copySelection.d.ts","../@testing-library/user-event/dist/types/document/trackValue.d.ts","../@testing-library/user-event/dist/types/document/index.d.ts","../@testing-library/user-event/dist/types/event/selection/getInputRange.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelection.d.ts","../@testing-library/user-event/dist/types/event/selection/moveSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/selectAll.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionRange.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/updateSelectionOnFocus.d.ts","../@testing-library/user-event/dist/types/event/selection/index.d.ts","../@testing-library/user-event/dist/types/event/index.d.ts","../@testing-library/user-event/dist/types/system/pointer/buttons.d.ts","../@testing-library/user-event/dist/types/system/pointer/shared.d.ts","../@testing-library/user-event/dist/types/system/pointer/index.d.ts","../@testing-library/user-event/dist/types/system/index.d.ts","../@testing-library/user-event/dist/types/system/keyboard.d.ts","../@testing-library/user-event/dist/types/options.d.ts","../@testing-library/user-event/dist/types/convenience/click.d.ts","../@testing-library/user-event/dist/types/convenience/hover.d.ts","../@testing-library/user-event/dist/types/convenience/tab.d.ts","../@testing-library/user-event/dist/types/convenience/index.d.ts","../@testing-library/user-event/dist/types/keyboard/index.d.ts","../@testing-library/user-event/dist/types/clipboard/copy.d.ts","../@testing-library/user-event/dist/types/clipboard/cut.d.ts","../@testing-library/user-event/dist/types/clipboard/paste.d.ts","../@testing-library/user-event/dist/types/clipboard/index.d.ts","../@testing-library/user-event/dist/types/pointer/index.d.ts","../@testing-library/user-event/dist/types/utility/clear.d.ts","../@testing-library/user-event/dist/types/utility/selectOptions.d.ts","../@testing-library/user-event/dist/types/utility/type.d.ts","../@testing-library/user-event/dist/types/utility/upload.d.ts","../@testing-library/user-event/dist/types/utility/index.d.ts","../@testing-library/user-event/dist/types/setup/api.d.ts","../@testing-library/user-event/dist/types/setup/directApi.d.ts","../@testing-library/user-event/dist/types/setup/setup.d.ts","../@testing-library/user-event/dist/types/setup/index.d.ts","../@testing-library/user-event/dist/types/index.d.ts","../../src/components/__tests__/BettingOddsPanel.test.js","../../src/components/__tests__/GameDashboard.test.js","../../src/components/__tests__/Navigation.test.js","../../src/components/__tests__/NewComponents.test.js","../../src/components/__tests__/PerformanceAnalytics.test.js","../../src/components/__tests__/PlayerProfileManager.test.js","../../src/components/__tests__/ShotAnalysisWidget.test.js","../../src/components/__tests__/ShotVisualizationOverlay.test.js","../../src/components/__tests__/UnifiedGameInterface.integration.test.js","../../src/components/__tests__/WGPAnalyticsDashboard.test.js","../../src/components/analytics/PostHoleAnalytics.js","../../src/components/email/EmailSettings.js","../../src/components/game/TVPokerLayout.js","../../src/components/game/__tests__/UnifiedGameInterface.test.js","../../src/components/practice/EnhancedPracticeMode.js","../../src/components/signup/__tests__/AllPlayersAvailability.test.js","../../src/components/signup/__tests__/MatchmakingSuggestions.test.js","../../src/components/signup/__tests__/PlayerAvailability.test.js","../../src/components/simulation/GameSetup.tsx","../../src/components/simulation/__tests__/GamePlay.test.js","../../src/components/simulation/__tests__/GameSetup.test.js","../../src/components/simulation/__tests__/SimulationMode.probabilities.test.js","../../src/components/simulation/__tests__/SimulationMode.test.js","../../src/components/tutorial/index.js","../../src/components/tutorial/__tests__/InteractiveElement.test.js","../../src/components/tutorial/__tests__/ProgressTracker.test.js","../../src/components/tutorial/__tests__/TutorialSystem.test.js","../../src/components/tutorial/__tests__/hooks.test.js","../../src/components/ui/__tests__/Button.test.js","../../src/components/ui/__tests__/UIComponents.test.js","../../src/context/__tests__/GameProvider.shotProbabilities.test.js","../../src/context/__tests__/GameProvider.test.js","../../src/hooks/useAuth.js","../../src/hooks/useGameApi.js","../../src/hooks/usePostHoleAnalytics.js","../../src/hooks/useSimulationApi.js","../../src/hooks/__tests__/usePlayerProfile.test.js","../../src/pages/__tests__/AboutPage.test.js","../../src/pages/__tests__/AdminPage.test.js","../../src/pages/__tests__/GamePage.test.js","../../src/pages/__tests__/HomePage.test.js","../../src/pages/__tests__/RulesPage.test.js","../../src/pages/__tests__/SetupPage.test.js","../../src/pages/__tests__/SignupPage.test.js","../../src/utils/__tests__/api.test.js","../@babel/types/lib/index.d.ts","../@types/babel__generator/index.d.ts","../@babel/parser/typings/babel-parser.d.ts","../@types/babel__template/index.d.ts","../@types/babel__traverse/index.d.ts","../@types/babel__core/index.d.ts","../@types/connect/index.d.ts","../@types/body-parser/index.d.ts","../@types/bonjour/index.d.ts","../@types/mime/index.d.ts","../@types/send/index.d.ts","../@types/qs/index.d.ts","../@types/range-parser/index.d.ts","../@types/express-serve-static-core/index.d.ts","../@types/connect-history-api-fallback/index.d.ts","../@types/eslint/helpers.d.ts","../@types/estree/index.d.ts","../@types/json-schema/index.d.ts","../@types/eslint/index.d.ts","../@types/eslint-scope/index.d.ts","../@types/http-errors/index.d.ts","../@types/serve-static/index.d.ts","../@types/express/node_modules/@types/express-serve-static-core/index.d.ts","../@types/express/index.d.ts","../@types/html-minifier-terser/index.d.ts","../@types/http-proxy/index.d.ts","../@types/json5/index.d.ts","../@types/node-forge/index.d.ts","../@types/parse-json/index.d.ts","../@types/prettier/index.d.ts","../@types/q/index.d.ts","../@types/resolve/index.d.ts","../@types/retry/index.d.ts","../@types/semver/classes/semver.d.ts","../@types/semver/functions/parse.d.ts","../@types/semver/functions/valid.d.ts","../@types/semver/functions/clean.d.ts","../@types/semver/functions/inc.d.ts","../@types/semver/functions/diff.d.ts","../@types/semver/functions/major.d.ts","../@types/semver/functions/minor.d.ts","../@types/semver/functions/patch.d.ts","../@types/semver/functions/prerelease.d.ts","../@types/semver/functions/compare.d.ts","../@types/semver/functions/rcompare.d.ts","../@types/semver/functions/compare-loose.d.ts","../@types/semver/functions/compare-build.d.ts","../@types/semver/functions/sort.d.ts","../@types/semver/functions/rsort.d.ts","../@types/semver/functions/gt.d.ts","../@types/semver/functions/lt.d.ts","../@types/semver/functions/eq.d.ts","../@types/semver/functions/neq.d.ts","../@types/semver/functions/gte.d.ts","../@types/semver/functions/lte.d.ts","../@types/semver/functions/cmp.d.ts","../@types/semver/functions/coerce.d.ts","../@types/semver/classes/comparator.d.ts","../@types/semver/classes/range.d.ts","../@types/semver/functions/satisfies.d.ts","../@types/semver/ranges/max-satisfying.d.ts","../@types/semver/ranges/min-satisfying.d.ts","../@types/semver/ranges/to-comparators.d.ts","../@types/semver/ranges/min-version.d.ts","../@types/semver/ranges/valid.d.ts","../@types/semver/ranges/outside.d.ts","../@types/semver/ranges/gtr.d.ts","../@types/semver/ranges/ltr.d.ts","../@types/semver/ranges/intersects.d.ts","../@types/semver/ranges/simplify.d.ts","../@types/semver/ranges/subset.d.ts","../@types/semver/internals/identifiers.d.ts","../@types/semver/index.d.ts","../@types/serve-index/index.d.ts","../@types/sockjs/index.d.ts","../@types/trusted-types/lib/index.d.ts","../@types/trusted-types/index.d.ts","../@types/ws/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9","746d62152361558ea6d6115cf0da4dd10ede041d14882ede3568bce5dc4b4f1f","d11a03592451da2d1065e09e61f4e2a9bf68f780f4f6623c18b57816a9679d17","aea179452def8a6152f98f63b191b84e7cbd69b0e248c91e61fb2e52328abe8c",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"f3d4da15233e593eacb3965cde7960f3fddf5878528d882bcedd5cbaba0193c7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"6c55633c733c8378db65ac3da7a767c3cf2cf3057f0565a9124a16a3a2019e87","affectsGlobalScope":true},{"version":"fb4416144c1bf0323ccbc9afb0ab289c07312214e8820ad17d709498c865a3fe","affectsGlobalScope":true},{"version":"5b0ca94ec819d68d33da516306c15297acec88efeb0ae9e2b39f71dbd9685ef7","affectsGlobalScope":true},{"version":"34c839eaaa6d78c8674ae2c37af2236dee6831b13db7b4ef4df3ec889a04d4f2","affectsGlobalScope":true},{"version":"34478567f8a80171f88f2f30808beb7da15eac0538ae91282dd33dce928d98ed","affectsGlobalScope":true},{"version":"ab7d58e6161a550ff92e5aff755dc37fe896245348332cd5f1e1203479fe0ed1","affectsGlobalScope":true},{"version":"6bda95ea27a59a276e46043b7065b55bd4b316c25e70e29b572958fa77565d43","affectsGlobalScope":true},{"version":"aedb8de1abb2ff1095c153854a6df7deae4a5709c37297f9d6e9948b6806fa66","affectsGlobalScope":true},{"version":"a4da0551fd39b90ca7ce5f68fb55d4dc0c1396d589b612e1902f68ee090aaada","affectsGlobalScope":true},{"version":"11ffe3c281f375fff9ffdde8bbec7669b4dd671905509079f866f2354a788064","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"bf237922b06c558ee82c997549c28541d2e4c60a7c449c635cd7116663bff11b","ec646851bb3302d774d4fbec3555fdf0cea4dc30a7f2c663d66387653abecdd6","5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd",{"version":"7f9844af49faece125da77aa099fd5c1da64270e31b414edef84f159a15f61b7","affectsGlobalScope":true},"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","fcc9e6f2da1759e4abe577f938f7d6eec119963abae917c290913a537cf8cd89","67b56598de49ea49e177ed09417ec97c642775a4fe73259df996923517eb652d","98d8c2cce0da7f218eda38d46b3d715adfb4c99c59ad67dbe0fd105113292f9f","d562cf993f138dc03c5b1aed57d7d80e96555ce41365e0e79db9b93a0b49a6b2","4e7fded78c59e63cc94cd8c0c920b287b885ae0512c412e0f7a890b0d700bc3d","7fc1326aae51ca02c357b8391270858387cce4afa9928d6580a42119dfcca9eb","a95d033d647339e3932fd15c01ae763c0e6fba915418c01b2fb1b1d4063a6d7f","9ec473f428d74650f0ce05b81e6a27fc84906a36838fd11875fcae5193f3cbbb","acdd8a10fac8748502509cb57bdd53a7c5b85fa4a2ee3a560c00a40404ff65cb","59bd81abd493fa554955bf7dd7006273192ea8d553d3e4a819e866a14725cdfe","a29acac88d5df222deeb58568f2e56b42075d9b043b4f158b7a55a8eed18985f","56d09baa6411529b9edfed10d627aa294412c3aa33d26e1254b8f1422ecfbfd9","31feea0066a629bfcacfc80bd5ec1551d26cf7a8dad949dc24cde82307748a45","b23ee85f4ae6affbd6d92df4a305756b2d7a7d687108bac625b83d662aabe063","c541b4b619ff47a8f1d2e242f69cab2f1490797934a31b9d15fe1b9d59183626","10f0161e27ec211a27512406022e5381ee1eff148c356579a07392c1cab67205","50d0abf4fb3d7fa0d929459ec9560f6761eb9e80bc568e6367868f6402fae0b5","4be1e84f8a23aa1c9b37669820a5dc6c0d664131c2549b54b40ec225abcff77c","2d6acf4fe93fb92f0259c6bbed436112c7daf0ad9e1318f2f0bd2613083261f0","58024638b80b48562cce5f0e5f65ce5924a2309224400787a4e40dea0ce3c7f4","ed7ed4acdc5b5e7f531cb8a2b62cadc0a8a88d054637965ba585a370f3538dbc","59453dd1a944cc11ef41fc0e21d4afaa4906eb4015fc605b423776ab26be5c35","12bb43d7c61d1b5e4340ed3599bbdcdd8d781994f08a94f010c88d4d26f285bb","f40d60f92714d69e75d0f03e3b51acbe2ff52064dd0e4774fa818ff72f043ea4","797cfbacb483d815b7819b3cf867533af99a630f2beea11cc26592b0c2d42cb1","4b26040bc29ea84ee18561c65d6994a07cfb168240c5bda0eb04bfb48190b219","06709b34a5d72762ab905843ac3443277ab884dc32fce8b3b0d51bcdb5064b74","cbb6fbcffa54cb81308247f17b64f1cb22ca015fba420fdb7c2c61c3a2adfcda","d37a6f1e29ec3244911f7d28cf815251ef113387c8618426acdab8d153940bbc","0e0af8c8426a911142d13768859c1b49e120f60bb153ce6dd197e30f9b8b6820","87e68d28db4ab68bfa35d6d1b57ea233d90e1c678f3da187f796075ff3a8e85d","afdf59e4068da139bff61ba0887ae9c76f46373f95932efd54ee7910b6502a1a","b07d57ba8d3e203d16450dd2426270030368821d3d418b291a05801a362d4d99","ecd8abab263e35cda153af96d4f29c711ff477a4c2bd81698cdfc727836547e3","e9a208aad09ea42f46bdd52d309774b73e7a02762281c51377973025a9cb7250","d264ffe701d5be437313c4f6f7d8f27ce029fc5cc3c51e42e9b60bed6d943e34","d2dcfbb9046a3f918ba22ebc91310f31606cebca173944df0544dc14ed26939a","2bef42b3474c69a11119442d099d6ee4952a9e1ee2674a76df68e67ee853c9f8","0880a3c557fb7ce460173df4c71dc39365359c053da107caad5fbe03a249c69e","f636742cc740b78907aa1010d1fc25cd7d2e5966a3aa149d74ce9370627ff852","b8ef751a4bad89dfe59fa19218e89bdb5c74e6cba080bdbee9921e1c9bf4a615","930d085f4aaabd1cc8d0f4f4837d13e04e948e77c8cf97a2e64c997088fbffcf","df1fd1099460e2d762f69fccb745265e72c14b8048f3e7de60767bbf714f6ad0","dba7c59c1095d9d149ec234ad3846af7fcb0bf6c11822f76d78c19fd0e086473","de378d46014d3f7e673fecf74f8d02bc27a30ffd85ca378927fba171f83f2f66","ec8924ce154b4a9dc676762fd43a7f785fc2cb6a21a0250b34216c8ed757f0bd","6da8dd746a2c6c74c7a874d809f62f908439319fed0505b579774066ce551bcb","a0cbce32b63aa070e5f4aa15e918886492e71c9753426d573e8a9deac1dd8abe","2431e657962c860594400df7d3c49f3c6eefb7e193f158bd9e7f0f965256a33c","30e5961d52cdabbbdaa5169c3c71a77a5aa0f8ac70ebb1f250f6fdaa2007ed3d","37e82fceaba98ef3038072809e67d0b8ed4b37c3a4aa82ed7dbf48676bf2750e","3fa0235c0ee6318d87108b06d6f922f525dcf039a32231d1667b96e202a8b009","5b7c7e06d9f383a1ee8d3b700c4d1419331f4166aa340c7788a35bec98331f34","2df3bf27c69b2c5d47b17649447817b802ad9166d31bfb7c33806195c03a8d83","ee235306953241273af6e40d709d4097476ecb599229473fb55b461288ed1993","2bef48831eaf4bf89166732f51f741488205c30f5184adc03a34a63a6c9a70bd","5fb0a11bc0cb66afc528b180067199bc542c46f6fd95649c3137f3a94bf8412b","6b6814ee731c1e6ee609b98086b273d1aa13333182edd24be8be569c7b7d07df","18cce8e15d2846c71faa2543b08b70b1c04bac9a26427eb98a4e0bad24976a90","ab3a5590e693ad5fb0a1a19c17e2b01258c88fe4617a4cae9d4058cc18946d08","8b4025f2c3f2aed06120f2d20f55d5bc10a06c7a40e058eafe13af9240f85c7c","698972a628b6dbbc1d4d917d422b56e429501ec8758270e527c70401227d094a","212e0c8f420a4c1866546cb7d50ba94537c25aaa715e84685d8995798125b9b9","39b74fe9bd08e3154f281117a5fe5bfa6b1afdfe8556eda1fc82428828329fd4","8b80893422089fff8f07496f4f66f1207847f6a9645c88d75c2877fabd453f11","cf41eb0cb37e385c1d777bdfefc05f0617857fd72d3a455d6d4f81e5e31a397f","583b9e0633074c66e97445426ac0b07bdb388f87e92449baae08cd5ab9cbf846","07646330c0cf3e5429bf2fce8647b0369a9cef8dc9b7a327e2ff47c4d1b916e3","eb277e8bb50c4fbc16ac5e8238b88880626f3ad672d7af92f2d29eaa522a9399","bfdff632c328e37b1946e1b6d7120933c145fac5a6eed6c8adaba5f5e56e64e3","b04f1498e13102326e1968fac4c2d37ca0c2b7abd76812892d9496151083aa91","c413aa82126a73c6280ce1177d151c01640790b5913e6ac80b62b0cce0ebaed3","93436c1aebb65cf409cf9879764d584439bbccc2f87e05763c30b70ead288013","2bbe03e00b2dd6db70bee6237f166c7fbc2b6e301918b3e9a6b62cf0df6eb370","522b79a823b5d466fbfe86cd25473045a8ad45f2a9b9df00e19fe5f3d00ab635","db17b27cc4514d286387592824d7bd39dea6737b799787d72acaa6556d40092e","0d6d484d91ba60f459fc8fcb35d08f6791711f05c8156bb6fc17b0a6fca81541","7bfc9cdd904b12b8f14d2160a092c90afd13cedffe96b8b50a71806431a01873","4981a6995ea12a015408f795188b03a7476c5148b051ea55126a82b62e06708f","843b27075f3ed5a868bad8c9f29b9d275f8a61b3e3c4e760ff6d64e1bf9a6f9c","3c54e9f8641d69914fbda6cac089757a412fb904f0a075dbc65bce568f4a90b7","472d9a32c8571cbfbddbe80686e464464ab008caa48c65677b0d35a0e506d06c","9daca9b36125be1487105a71756caff00669c1871a01209f63b3f9285c5503ec","9567454f4649cdcd899ec3328e8ddf843e0cfd59b832b3e23879d56ca4fadb35","2687e7d974ad531a64538810770312b81193fb7f143cd09fa89e05aad414cb55","c00565777871b6d76d065c51af1d2fbc414f8804498f8692861f0ef3759d8812","12a3233962e3103fd3e4f4de0c26e0f17cd7c3d37b0aaa0743b8dcc7038d0e33","4da29c03d43f81993290813ab4d7b3d29812ce0cc1ccfce9784d076f726fe753","fb58a4485f54c463027b36c4843098de5fdb536594f49ed81f783252561f77f6","6c09333a0c899f83c1444a379ebdcebeea8fd6b25fc6bec2e0e1e5724bcdecc5","ec85cf13bd5d52a3b29672c8d5509e0d6478721d814d933578fc769e82ac7f2d","939c575afa1e1720c9cafcf09d5ad218f7ffcc36743b7cf33581dff722fde7fc","315000295ec26a0a60741a2021d3b84b8f2cc2b8f636de5851436f7464f7ab98","b7956653d6f5d55877326e67cedd538243d9953819e019242502c432381fcee5","d655eefdb3a03cdab08a7d48ff49f42feef1974b3702a1b3010888d51e2428f5","8bd215328a9fd468ffa6f0c1bec8727e9081eadcc4659f3ea56b2e54412a4cc9","d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","833e92c058d033cde3f29a6c7603f517001d1ddd8020bc94d2067a3bc69b2a8e","08b2fae7b0f553ad9f79faec864b179fc58bc172e295a70943e8585dd85f600c","f12edf1672a94c578eca32216839604f1e1c16b40a1896198deabf99c882b340","e3498cf5e428e6c6b9e97bd88736f26d6cf147dedbfa5a8ad3ed8e05e059af8a","dba3f34531fd9b1b6e072928b6f885aa4d28dd6789cbd0e93563d43f4b62da53","f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","2329d90062487e1eaca87b5e06abcbbeeecf80a82f65f949fd332cfcf824b87b","25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","4fdb529707247a1a917a4626bfb6a293d52cd8ee57ccf03830ec91d39d606d6d","a9ebb67d6bbead6044b43714b50dcb77b8f7541ffe803046fdec1714c1eba206","5780b706cece027f0d4444fbb4e1af62dc51e19da7c3d3719f67b22b033859b9","7253b2045ea6b599d85ef9dd7ce2bf5439a1a98a27f078ba2115bedf61d738c7","ca58ededf2c0cd0563e8d83fef922817ff2a1ed9bd750242b17146354c1c5243","9d34b57d308ce327e484887106e68e2a82beaf263fea298e4ada5b3925ccbb8d","fe1f945db9c3cb35788d028ce9338b06256cd6041f2597668b9359f2b4fd4197","641fe481fff812b6a151b7fe0996468ced591244c6682b6ba2610b0bf016a9c6","63e5f3ffc50b8c29acf5396c0468a290c927cb7a5208ffb74add35670867e476","06c3f71832c76a82329b45610793b56d0b78fb02603d90f8a7629f49cb0dec1f","ca586208341738cb5e6d144536d83f91d96856c5828307088d242d52e4d439d4","fde0e854df7095db9f8b5cbe3804845a437750ff3c9edcaf2572e66885b230a3","6a63ec446b7fda7a8f1307c1a4659d6b8d1c617400b46d6b49f3d97ddfa93905","c461e128927c8492fff179d344735023ae189c4b626af91adb7b63c6c4b7248f","6b2706a5cee62ef25fdb7a9a268f558a15de9df894984ed13a07c8318576ef51","353fe785452a3c2d6ff2a41fb0684bd2878e78f3728fc5dae98634ccfaa9beae","521bbccf0edf1f69c488c6828716bdfb04acb69ea3ee5e3b7140bfa22ed6c342","dfdb07c32025c9aac5707797e48c46c8fc1416c3c3a5cab9677a75ab78a787ae","e1e115f590a02130c539f61c20460291711dccbdaa3fe4bbad43ab770dd4306e","e4fe42173b249ff533174cfbde4510ce5345da50c2f717b3ca27eda49929dad1","0dbd184576784dbc0b0caa1f022bbb1024a4f27b77e9bf5738c73841c218f4ab","17023bb4eba80df5152e45fa10ec0fa4105fa1c59cb30a51d5724c77cf041151","05b84716272aee3042dbeb319aa5b1ff5b8e77b62ae24be00b88cf8e04cab4a2","86d850e3572c2ed8f56d73a1ce7c5c4f3ea5a62170b82db65f3055f73614099d","4ab4cb977736067eda6f2ff73e521424a818319a1a70616ad2db2ba0b9dd5322","fa790e874499cb17016556f3168948f8d751dcb35a0862a9b9c55bb2ec353d48","795692a29dca5a39f904825a4abc78f9acc3a54ecc6858d8a268c52679f21751",{"version":"6876211ece0832abdfe13c43c65a555549bb4ca8c6bb4078d68cf923aeb6009e","affectsGlobalScope":true},{"version":"394fda71d5d6bd00a372437dff510feab37b92f345861e592f956d6995e9c1ce","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},{"version":"c564fc7c6f57b43ebe0b69bc6719d38ff753f6afe55dadf2dba36fb3558f39b6","affectsGlobalScope":true},{"version":"109b9c280e8848c08bf4a78fff1fed0750a6ca1735671b5cf08b71bae5448c03","affectsGlobalScope":true},"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","e525f9e67f5ddba7b5548430211cae2479070b70ef1fd93550c96c10529457bd","ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","17fe9131bec653b07b0a1a8b99a830216e3e43fe0ea2605be318dc31777c8bbf","3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","2c9875466123715464539bfd69bcaccb8ff6f3e217809428e0d7bd6323416d01","ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","2472ef4c28971272a897fdb85d4155df022e1f5d9a474a526b8fc2ef598af94e","6c8e442ba33b07892169a14f7757321e49ab0f1032d676d321a1fdab8a67d40c","b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","19851a6596401ca52d42117108d35e87230fc21593df5c4d3da7108526b6111c","3825bf209f1662dfd039010a27747b73d0ef379f79970b1d05601ec8e8a4249f","0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","40bfc70953be2617dc71979c14e9e99c5e65c940a4f1c9759ddb90b0f8ff6b1a","da52342062e70c77213e45107921100ba9f9b3a30dd019444cf349e5fb3470c4","e9ace91946385d29192766bf783b8460c7dbcbfc63284aa3c9cae6de5155c8bc","40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","561c60d8bfe0fec2c08827d09ff039eca0c1f9b50ef231025e5a549655ed0298","1e30c045732e7db8f7a82cf90b516ebe693d2f499ce2250a977ec0d12e44a529","84b736594d8760f43400202859cda55607663090a43445a078963031d47e25e7","499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","e38d4fdf79e1eadd92ed7844c331dbaa40f29f21541cfee4e1acff4db09cda33","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","7c10a32ae6f3962672e6869ee2c794e8055d8225ef35c91c0228e354b4e5d2d3","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e",{"version":"f4b4faedc57701ae727d78ba4a83e466a6e3bdcbe40efbf913b17e860642897c","affectsGlobalScope":true},"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7",{"version":"003ec918ec442c3a4db2c36dc0c9c766977ea1c8bcc1ca7c2085868727c3d3f6","affectsGlobalScope":true},"938f94db8400d0b479626b9006245a833d50ce8337f391085fad4af540279567","c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c",{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true},"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a",{"version":"12fb9c13f24845000d7bd9660d11587e27ef967cbd64bd9df19ae3e6aa9b52d4","affectsGlobalScope":true},"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","5078cd62dbdf91ae8b1dc90b1384dec71a9c0932d62bdafb1a811d2a8e26bef2","a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c",{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true},"2f32444438ecb1fa4519f6ec3977d69ce0e3acfa18b803e5cd725c204501f350","0ab3c844f1eb5a1d94c90edc346a25eb9d3943af7a7812f061bf2d627d8afac0","b0a84d9348601dbc217017c0721d6064c3b1af9b392663348ba146fdae0c7afd","161f09445a8b4ba07f62ae54b27054e4234e7957062e34c6362300726dabd315","77fced47f495f4ff29bb49c52c605c5e73cd9b47d50080133783032769a9d8a6","e6057f9e7b0c64d4527afeeada89f313f96a53291705f069a9193c18880578cb",{"version":"34ecb9596317c44dab586118fb62c1565d3dad98d201cd77f3e6b0dde453339c","affectsGlobalScope":true},"0f5cda0282e1d18198e2887387eb2f026372ebc4e11c4e4516fef8a19ee4d514","e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86",{"version":"237581f5ec4620a17e791d3bb79bad3af01e27a274dbee875ac9b0721a4fe97d","affectsGlobalScope":true},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true},"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","e6d81b1f7ab11dc1b1ad7ad29fcfad6904419b36baf55ed5e80df48d56ac3aff","1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","b6b8e3736383a1d27e2592c484a940eeb37ec4808ba9e74dd57679b2453b5865","d6f36b683c59ac0d68a1d5ee906e578e2f5e9a285bca80ff95ce61cdc9ddcdeb","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093",{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true},"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","b338a6e6c1d456e65a6ea78da283e3077fe8edf7202ae10490abbba5b952b05e",{"version":"2918b7c516051c30186a1055ebcdb3580522be7190f8a2fff4100ea714c7c366","affectsGlobalScope":true},"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","982efeb2573605d4e6d5df4dc7e40846bda8b9e678e058fc99522ab6165c479e","e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055",{"version":"d67fc92a91171632fc74f413ce42ff1aa7fbcc5a85b127101f7ec446d2039a1f","affectsGlobalScope":true},{"version":"d40e4631100dbc067268bce96b07d7aff7f28a541b1bfb7ef791c64a696b3d33","affectsGlobalScope":true},"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","42180b657831d1b8fead051698618b31da623fb71ff37f002cb9d932cfa775f1","4f98d6fb4fe7cbeaa04635c6eaa119d966285d4d39f0eb55b2654187b0b27446",{"version":"e4c653466d0497d87fa9ffd00e59a95f33bc1c1722c3f5c84dab2e950c18da70","affectsGlobalScope":true},"e6dcc3b933e864e91d4bea94274ad69854d5d2a1311a4b0e20408a57af19e95d","2119ab23f794e7b563cc1a005b964e2f59b8ebcb3dfe2ce61d0c782bfd5e02a2","0fd641a3b3e3ec89058051a284135a3f30b94a325fb809c4e4159ec5495b5cdc","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","e66eb237e7629bdc09f5f99fd69b73a0511fafb799783496a37432dde5ce0bf0","fdec06934bf00cb7c1187b7f2f1ac6bf2f327ab5af71a543c48d919baa194f1a","9c8f99dfcd80875222e3a4923525595503174088a6eedce78ae3ea81fd650323","652c8e676e1b94c7829671c0eb237528f76a0ba67ac846c065bceb4088ebddd7","caac4c00061a947d2b1010bb6464f06197f2671bdf948fa1aa40bf1e244ee2a0","95b6c669e7ed7c5358c03f8aa24986640f6125ee81bb99e70e9155974f7fd253","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","c3e5b75e1af87b8e67e12e21332e708f7eccee6aac6261cfe98ca36652cdcb53","f7dd7280ee4f0420865e6423fe199aeac63d1d66203a8b631077cdc15501ef1f","ef62b4aa372f77458d84c26614b44129f929e263c81b5cd1034f5828a5530412","8610558ae88a43ad794c4ab1da4f0e8e174e0357c88f6cbb21f523e67414e9a9","0b0feb9837c561c0a67b61024328045bb16bac6e4b10f7b0b217d3b8b43b0b12","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","d1c6c35d174dbe63a76ed8ac6621cca8dbe8794961a2121feb5f0239747d1b7e","051c1bc0efd3690031a97ac49133c9486c22bd07852e75a11ed4b40ceb722569","a22270cba4f004f64a61cec3e39574416e3ca72e848f53a36ba3add746243217","447b9b631351b40faa0e961e6cbb5e269bc1fa61f7a615b8077b31a94aaefae3","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","e641fd321ca5fe17b532bd3b5a6e85a8741bbde7a9d7110d8ed272605c1c4a25","9d63720cd09e8b0ae76e0ade1993b7ec600e6729e453f459d4039d6914914c1a","8b324c8813c2bee210a7a79eede7abc4b5c60132fd497e140ce312a856af22a4","ff2d2f19561cd3a594d7cfeeb29797e62c8d9ef62df65916e6be9bdcfbaf8f7d","d59191f0bb663800c0856116d69ae11125eeae891d0a46c0be52f3c78ed4890e","d8360fe15a60f549584a9ff7d0e6129ed77abdbcf062b4da1a10a78175d34f71","a57b37eae916e680e5e15b36d17b22bb05834115041fe940f11d9e714501ff84","e53086c8f861bee1717e3e001498d2a493f786c6fcbb0027fc4352f00fcaa3cd","446242adee16900500f9d9dba2678258641f7e8f692f43c18dde8872167107bb","6ef7ba3b3d2514336c59d1af84e2d7550a886a5be193d9cb980cc6d16698236f","185e38aa301aaaaf3870183acd48f9b4da7baa5282cb9ed102a10004b0751cc2","1f0c7b51e98442f125414c1d43c6a04abc8ee800066834d742eb99b0e542d327","131c58b9b527fa99139dabaaf585ed52e9f5c450c1347c87bcb9af9b884e63ea","2642f053f18152ed5ba6403217f932e4fa0be0077f38734b168ab92da948b3c4","5718fb71731197c4e623120e93c5ece9061f569aa4dc28ffcbb8b4fb5ffe2ba6","9bc5d8cd23570760dc417cb10b01079bdb919b4dfeaab9c4341cf11d37d7a29e","0671e90198a35ffd8e5dd35c5ce0fd4839305f6fe9878ca9851a25c097a7874a","a3d9df9d57f7e47f70e013a46cf1c38177579dbb2c5b567bde24c7a67ed1303d","b4ac0ae1e7ed09d2ab8496d65c04643742a1811c6c5f34d9f9504a3868bc02e8","b63b8dfe391e40354edfb991062b8e8e28ef36a28644a7904f6a38f51a8a2386","375ecb9cebdd43c6fd230cfc02c6640344aadf920319b73a3c8514f45f23167c","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73","67c51fa68aadbb50e4ffc650b704620e0393bddb3d3eac3a6195bf1956562fe4","8187d9966b8fa5a2d0e53c71903adb5aa71ebc2a23410ab2d37eb764db800829","d851073758ff1ce39bb428d8a3b3385ca26da1745ca742789e876d67dc0aae43","0cee5b30f4300e628927dde7e7ae7b5bc32250a685242474d069b9346da8a2b1","6fdc7cbbbc0601f9bb153c30c0e8063321cd1c9211ad512b9fde1d1f785b35dd","6ae7157666262b5c0402463531996601150583cb1f4f9421f184a0eec9049f10","fbd0ac5a6097c20307587444815092eb1825d831991363423ef0ce70ef053e82","ec0b2f8ed3cc053fdb004ab4979c32625179a746717504e08fc30cef9ec9d7a3","2887592574fcdfd087647c539dcb0fbe5af2521270dad4a37f9d17c16190d579","ed434fd49cf57789f99d3d2f4fb4d5f4930825280ceaae21200d840609345161","3ea3b60de13285b50d9752812d3a6d2cae078d89031713613f58cd2f5565589a","4b0465994a4b18dd63a9af850c74024e6184deac2477ab87135f7d1b11a07178","3031ed6baeacbaf771576f64094d8a977e5be37b04d4dbb335fff9cc1d95a147","5f02cf0f7cc845c12b09607f97e57f942c313ebee6c33a3efbc346f19b499c7f","8e1eb67ef6924cd14793af526f9a4e3195b5734920a75ec29900731b1997f2ce","07fa4bb359f3cacde0e0b6d75cd9a53b88168088be58e01b385cd12e12a6d5d4","52d5d4a344ea0781bf00874c4829e3cfb0c12e1fa28c17740e773bc247fa663c","89ebb5291da50663149fc01245eeca4f8bf1a2bd8a3fe84ea62d926d53a6460f","792128daaa6209b5d52148b1952b56aad02fcf72435283a2d5ac1fb22113cd91","c474689555d4e49d5210e6c6d95f939e31f49158af350cbc403e4fdda5d32386","d4c5aebfd4d5468e03fee82920222d861737cc6ec5c9829474a36e379753fc52","f8fd01e7967e335266c6113c5d9bf15113768c5747265420dae0fdf1868eb05c","7a89d77bf137521a06ff5b3ce7297c663f3c27912b09320fa520c1b2d6bab9e5","7647ed4e66d98048478e6245f50b794a916ffa456fb362672e52c01e1b09a644","9a22045cb43de6fab0b5e524e4cef807e5a2c6e0a49044de56b65448e1572a14","4441e06cf8e7ffff0519950e34df3608ca1016f09f83fdfb7f71ab7376ac5a47","45d0cb97f71ad1fd0688b8a95c2a2b3cce347cd458ec365af4079c0273b49dc6","6c86a8ced863164acfbe7753660a7ba4aa97cdaa1e3b8d193a18316f906d4bbf","2dd10019ccc6f059b703db2f58f6f385625d235869fe562978b5a913e5db4c69","e4c66039756093e60d857430f451ffff1ca3fa5a951367b67dcc8f29b47b2d72","48433ed0754c860ebfeeec213f9c5943cc6b8aa7b70ce1bd9c5c6a490ed91229","c2708a205c4afa73bfeebaf0e939390b3b3fe9cd1788b09389ee0d736cd75a72","8f6d44ee7619da14f50cf051a243c41793ff1dccda8d8a3bb2255989df114c30","2aca83fda179d79a68a259bc47999615976b935d2eeb391304db8a095af721e6","26b3b07bb0229b36ba87ec2b0ca1a42a927c2e8a8bd5ae9339d5a82d950eb3ce","8767c93beffebe9eda0c03e4893ab2fe9b62ff65bf767a003cbba50cfe810a28","d7f211b5ba9e9fc21ba0fbf12b3ceda8680f672da595068dbb4d2d1f9a0c83b1","e613a48817a40243523fa26bb5e3396e6d60c79a1c0c59274889560f34cfdde7","ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","80b232969d72e6f08081a4a0b558537db2671a1a60bb44559d5e3b5f1fc89cd6",{"version":"841784cfa9046a2b3e453d638ea5c3e53680eb8225a45db1c13813f6ea4095e5","affectsGlobalScope":true},"646ef1cff0ec3cf8e96adb1848357788f244b217345944c2be2942a62764b771","0ab7506c71d3467c8db4fdc2512e5960afcfeb0a4f51467d79c9b51af5ec9e63","d45bd3d7c328e85331b3deb75be0f5bef5746ff9efa27900c769ad0e3461acb4","0eb2ed1c1c8d87ba91ae080e95a5f4891e3bdd31626b894655985760a2e56afd","3cfb7c0c642b19fb75132154040bb7cd840f0002f9955b14154e69611b9b3f81","8387ec1601cf6b8948672537cf8d430431ba0d87b1f9537b4597c1ab8d3ade5b","d16f1c460b1ca9158e030fdf3641e1de11135e0c7169d3e8cf17cc4cc35d5e64","a934063af84f8117b8ce51851c1af2b76efe960aa4c7b48d0343a1b15c01aedf","e3c5ad476eb2fca8505aee5bdfdf9bf11760df5d0f9545db23f12a5c4d72a718","d0570ce419fb38287e7b39c910b468becb5b2278cf33b1000a3d3e82a46ecae2","3aca7f4260dad9dcc0a0333654cb3cde6664d34a553ec06c953bce11151764d7","a0a6f0095f25f08a7129bc4d7cb8438039ec422dc341218d274e1e5131115988","b58f396fe4cfe5a0e4d594996bc8c1bfe25496fbc66cf169d41ac3c139418c77","45785e608b3d380c79e21957a6d1467e1206ac0281644e43e8ed6498808ace72","bece27602416508ba946868ad34d09997911016dbd6893fb884633017f74e2c5","2a90177ebaef25de89351de964c2c601ab54d6e3a157cba60d9cd3eaf5a5ee1a","82200e963d3c767976a5a9f41ecf8c65eca14a6b33dcbe00214fcbe959698c46","b4966c503c08bbd9e834037a8ab60e5f53c5fd1092e8873c4a1c344806acdab2","480c20eddc2ee5f57954609b2f7a3368f6e0dda4037aa09ccf0d37e0b20d4e5c","40a9e5673448badb43d693daf20698c452782ae1682887b9d1ccbf207589781a","f2834e7008d641386a0d313ef33e974effb5815755254506341a0f3ba846a506","2e44250d356340733b1f210ad994bf11a0ae802186d5ad6b602661030f811db2","d01f869e0aa82d99b590ac59b6906d0f4ccae1d903d1dd1e622d944f4741b829","8d5a0a154fda1d5422fc0a0432821d5485ef88588ceb267651bf0ac786addcfa","b25d24260ac27016213b336707cb6bd279e12b946304118837ca0bd93831bb0b","81b8cf069b2fad8ff8112f832db6a32b7735b3291855ae71876e8dd07687a438","da0f84fcd93700b4a5fbf9c6f166a6cc19fc798231bff56dd1e3875bfc6966eb","634ff08e0143bec98401c737de7bfc6883bfec09200bd3806d2a4cfc79c62aaa","90a86863e3a57143c50fec5129d844ec12cef8fe44d120e56650ed51a6ce9867","472c0a98c5de98b8f5206132c941b052f5cc1ae78860cb8712ac4f1ebf4550ca","538c4903ef9f8df7d84c6cf2e065d589a2532d152fa44105c7093a606393b814","cfcb6acbb793a78b20899e6537c010bfbbf939c77471abcdc2a41faf9682ca1a","a7798e86de8e76844f774f8e0e338149893789cdc08970381f0ae78c86e8667f","eebc21bb922816f92302a1f9dcefc938e74d4af8c0a111b2a52519d7e25d4868","6b359d3c3138a9f4d3a9c9a8fda24be6fd15bd789e692252b53e68ce99db8edc","9488b648a6a4146b26c0fd4e85984f617056293092a89861f5259a69be16ca5c","e156513655462b5811a8f980e32ccd204c19042f8c9756430fe4e8d6f7c1326e","5679b694d138b8c4b3d56c9b1210f903c6b0ca2b5e7f1682a2dd41a6c955f094","ca8da035b76fb0136d2c1390dda650b7979202dbe0f5dc7eaefcde1c76dee4f4","4b1022a607444684abeee6537e4cace97263d1ef047c31b012c41fdc15838a79",{"version":"dd0271250f1e4314e52d7e0da9f3b25a708827f8a43ceff847a2a5e3fd3283e8","affectsGlobalScope":true},{"version":"47971d8a8639a2a2dd684091c6e7660ec5909fed540c4479ca24e22ac237194e","affectsGlobalScope":true},"e1075312b07671ef1cbf46409a0fa2eb2b90bb59c6215c94f0e530113013eeda","1bfd63c3f3749c5dc925bb0c05f229f9a376b8d3f8173d0e01901c08202caf6f","da850b4fdbabdd528f8b9c2784c5ba3b3bedc4e2e1e34dcd08b6407f9ec61a25","e61c918bb5f4a39b795a06e22bc4d44befcefd22f6a5c8a732c9ed0b565a6128","ee56351989b0e6f31fd35c9048e222146ced0aac68c64ce2e034f7c881327d6d","f58b2f1c8f4bcf519377d39f9555631b6507977ad2f4d8b73ac04622716dc925","4c805d3d1228c73877e7550afd8b881d89d9bc0c6b73c88940cffcdd2931b1f6","4aa74b4bc57c535815ae004550c59a953c8f8c3c61418ac47a7dcfefba76d1ba","78b17ceb133d95df989a1e073891259b54c968f71f416cd76185308af4f9a185","d76e5d04d111581b97e0aa35de3063022d20d572f22f388d3846a73f6ce0b788","0a53bb48eba6e9f5a56e3b85529fbbe786d96e84871579d10593d4f3ae0f9dba","d34fb8b0a66f0a406c7ce63a36f16dda7ff4500b11b0bd30a491aa0d59336d1f","282b31893b18a06114e5173f775dd085597ca220d183b8bd474d21846c048334","ed27d5ce258f069acf0036471d1fbb56b4cb3c16d7401b52a51297eca651db62","ec203a515afd88589bf1d384535024f5b90ebe6b5c416fb3dcca0abd428a8ba4","32a2a1374b57f0744d284ca93b477bd97825922513a24dfe262cbf3497377d96","a8b60d24dc1eb26c0e987f9461c893744339a7f48e4496f8077f258a644cffab",{"version":"3f9df27a77a23d69088e369b42af5f95bcb3e605e6b5c2395f0bfcd82045e051","affectsGlobalScope":true},"9fd080a9458c6d6f3eb6d4e2b12a3ec498d7d219863e9dca0646bdee9acce875",{"version":"e5d31928bee2ba0e72aeb858881891f8948326e4f91823028d0aea5c6f9e7564","affectsGlobalScope":true},"9a9ba9f6fd097bb2f57d68da8a39403bbe4dc818b8ccd155a780e4e23fa556f2","e50c4cd1f5cbce3e74c19a5bbf503c460e6ae86597e6d648a98c7f6c90b596dd",{"version":"fa140f881e20591ce163039a7968b54c5e51c11228708b4f9147473d06471cf5","affectsGlobalScope":true},"295eca0c47be1191690fd2fe588195fff9d4dc43852aceb8b4cab2aa634579f0","59ee7346e19b0050508a592702871dc943083c6dcb69a47d52e888115d840781","067712491fb2094c212c733dd8e2d56e74c309a9ce9dac9e919286b7245a1eb4","a5eae58ac55bd30c42359e4b01fb2be5eddac336869d3f04ffb4daa54b58f009","d12d691ef8933e8db39f2ca81d6973940ff5e37bb421752f5b6e7bc15dea3abf","4c5f8bd9b3a1aae4e4fddfee41667e495a045f73ed603993038fa6a8ba92fa14","dfb274ab0f319cf18ce7152067c25f984c7fd1924fc72b3f66734588444c934a","108c8c05cbc3fbbbd4ff4fc0779c9bef55655c28528eb0f77829795dc9f0b484","a7e5444d24cdec45f113f4fb8a687e1c83a5d30c55d2da19a04be71108ad77bd","41ec17e218b7358fcff25c719bc419fec8ec98f13e561b9a33b07392d4fec24c","23c204326746e981e02d7f0a15ab6f8015f9035998cb3766c9ddbf8ea247aea2","25f994b5d76ce6a3186a3319555bbba79706dac2174019915c39ac6080e98c7e","dfa4e2c6a612d43851ccbc499598cb006a3a78bc8c7f972c52078f862fa84e47","02c1705fa902f172be6e9020d74bcd92ce5db8d2ef3e1b03aabc2ac8eb46c3db","99d2d8a0c7bb3dd77459552269a7b5865fa912cedab69db686d40d2586b551f7","b47abe58626d76d258472b1d5f76752dd29efe681545f32698db84e7f83517df","3a99bbbbbf42e45c3d203e7c74f1319b79f9821c5e5f3cdd03249184d3e003ce","aaacc0e12ab4de27bdf131f666e315d8e60abec26c7f87501e0a7806fc824ae6","3b4195afd41a9215afc7be0820f8083f6bd2e85e5e0b45bb0061fb041944711e","108df8095f5e25d7189dd0d1433ac2df75ec40c779d8faf7d2670f1485beb643","ddd3c1d3c9ff67140191a3cf49b09875e20f28f2fc5535ae5ea16e14293a989b","7b496e53d5f7e1737adcb5610516476ee055bf547918797348f245c68e7418fe","577f44389d7faedd7fc9c0330caf73140e5d0d5f6c968210bff78be569f398a7","3046c57724587a59bceefadd30040d418e9df81b9f3cfd680618a3511302ed7a","15ccc911ed15397e838471bfe6d476c28deffe976c05cb057e6b1ea7491242c2","64b5a5ebdaead77a9a564aa938f4fb7a45e27cda7441d3bee8c9de8a4df5a04f","a48037f7af5f80df8973db5e562e17566407541de284b8dadf1879ea3aed8a2f","dab97d96ce986857150db03f0d435b44c060d126b4a387c7807f4e9f6c92e531","85f39366ea7bc5e34b596fc97de18a7e377856755e789d8e931054f2191d9b8b","daf3ea3d49f6e8a2fa70b7ca1f21bd97f1b65021b31fbfccb73dd55f86abb792","b15bd260805f9dd06cd4b2b741057209994823942c5696fd835e8a04fb4aab6b","6635a824edf99ed52dbd3502d5bce35990c3ed5e2ec5cef88229df8ac0c52b06","d6577effa37aae713c34363b7cc4c84851cbabe399882c60e2b70bcbb02bfa01","8eaf80ad438890fe5880c39a7bbf2c998ce7d29d4c14dd56d82db63bd871eefb","9b3e7f776f312c76ac67e1060e5398d7ac2c69d6a3a928a9daaae2eb05b15f56","202042eccb4789b7dee51ba9ecab0b854834ea5c1d6a3946504bfc733d4468c3","2b2ef76a9f36094b07ee6f76a5ac6903f2f65c0a20283201814a8d1e752cb592","8882e4e087d0bc8cc713cb3d8090c45d33e373e6f5c83e0f8d00fe6a950ef875","42979c197a22211d72c9cf1de8559f0a39de0b0687eea63c6407a69d9d73c13f","cc36098e27200f5daceffff4a4694148746aaa1b369536186fa1caa43d8b4bde","07133796953f82127aebef603392f1430690fe6cfd5d3d4c2bd3b277c6566d79","9079300efc80cdcb5a5cd153bdc354ac3439619e661e5f35413f81f94d4aa897","3655e77b67da6b52b34f7abd79890cdbc9ce2e2a3579fc2568f07d77d1d60ec9","95a1ff30ceba2b8c185a76002e2a4578cca9a593d8b642b7d5b13275ece952b9","2a43ea656e1e3ae2ec876766d9d4576a53b079a1cd352367db12fc721033c08b","e8835cfaf67d1730e430a800d447ea79d33c59fc990455965ca85dcc16c6ec64","98631e5438157a2bc50970527c20d9a0d02def63700cb8f21ee19520a982fbc0","93a5f2ecf21f69045a129ef7821396276c117b34eb39d0b5510ff90c34839f56","4d054866f6bed47338a905264c4cc16108dfb55353a97d67b5beb0393f78fbc4","cc611eddaabd228585429f406dc5b2ef53db92e954f3fab97f8cc67b84b0a67b","51d3abc39997f19e1e0e13fe545c786465259a3f6625b27828e47847a00acc27","982c00b942df3ad3aa49500b7f253bad1f2624d4c5e0e0eea1ee20529d90296f","a9f610a8bd1aa513ca9ee39a05566e7439b45ef24670858f4b0a3b1b33a17923","a7b268ed0284472916b39062cea1ec8ca946b048b7f8992b14221d4318cb7f5b","7748692e43d33e0f58fd69f9e84f568430d147be8a5fec55aea68c73f63908a1","cee3e7bec863f019aa744e00dd7a8470f2f6ff951c498c501ad6e296aca9f418","98e5bfadb80d850109194eb7cbdae761564cf0aa4cdd39e70eb73fe628af6bf8","5da731f0b18d358e4e0ca682928298de26c6eabee5990d03333e0e8aef335ea2","5ed1241d2008dfabf2145443b9fb285b7bdcd8211266187ed9dfb2ae5b80f869","f60e1afcef13dcd11edafbd3f7720a5a50c3d2d90b4cb27cea58adb16efd12ed","e6a1fc7243e8a4f92cbafa2bac261e3540968403f082df44ae521b8e2658efbd","b745f5b14ad0407d94b3b3e764ceb6e6c1c0873528461421046751f7a3c84b17","554028fd3b11a78660ed0cb98b5fd343bc9b8a9b8495114e6ae5d13aed49f242","e4125c670944f6369be310c830b37391a82b4f8f500399a17b041962e1fe1dd2","60cded932be8d4f5de5c3a7f56c5e01438ce8ec7f110d4c87fdf2bfdb910dbd0","06e0622d8d29254863de52ca0da62329d78c5e02086481fbcef6c9cd74796d84","ad5346fa860e1577699a7a1e6543f7e811dd209164ed4e226566595c50ad3dd4","749ad4dbb8d1d33ab4283f8ffa875669e067f917cf1d17162e149b571c689f9a","dc278a8129f50ef9555060cf12ba10a11c2a816bad01c2f1abd2f87f6ac3796c","ee94a249d6f6c94e2656e1abc6820a25a88ec1351c21929d1365d60a4381d797","bc5a1ad94db45ea72a8632a18d57efe131671c54c51347c8c9a266f5ca059d8f","1ecb3bf08e05193e81b052ca5180d2a2cfcf64602d57312dd7a5686755938b88","ee2a7977e7cc78906b894656baaf8d4080962056ee12b2024fa2f42bf8e447bf","88124457c6ce628eb357aefa18c0e23a58d92997bed3e28a5e53217a9d8ec590","bda82ce02ca6b44902394fd57e57b1b41e4de290727d92cef3cb537b21cbc5af","c288bf4485ccf06ac2da23408bbdd47c987b1ea7db59f7d3caf736d115323e42","c0007fbf0456531d2c2ac6243689559d4ea2b5a5bba9ddb28c006db5a15fe32d","c7d9afa4d252d9dee7c7c0c3752db5efcbaa39dda3df9a1e193aea3a0d056ac1","475709fda88e76c7b3bcf00a2ffa16eb2d91088caa6d9f4abdf9a6592664f676","ec1bc8ff1a835119253f23d674c3e13ba983744620a0655f73dc61f6aaeea004","4f9b48c8b5098f29ddf9041e81676fb06b078e1dfe76e1b160f93ca214d05ff3","94c5a9b9991dc4e164779653c1f2af90ad961fd23d9164c0b6e570be7456ce31","13ed3c245e4a6a8b90d3f0909198c01fd7cb48e41364c1ece3c11edecb9dc9c7","81212195a5a76330d166ecfd85eb7119e93d3b814177643fa8a10f4b40055fbf","b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","82e5a50e17833a10eb091923b7e429dc846d42f1c6161eb6beeb964288d98a15","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","f9e22729fa06ed20f8b1fe60670b7c74933fdfd44d869ddfb1919c15a5cf12fb","d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed",{"version":"a8932b7a5ef936687cc5b2492b525e2ad5e7ed321becfea4a17d5a6c80f49e92","affectsGlobalScope":true},"689be50b735f145624c6f391042155ae2ff6b90a93bac11ca5712bc866f6010c",{"version":"64d4b35c5456adf258d2cf56c341e203a073253f229ef3208fc0d5020253b241","affectsGlobalScope":true},"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","dd0c1b380ba3437adedef134b2e48869449b1db0b07b2a229069309ce7b9dd39","1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a",{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true},"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","ee65fe452abe1309389c5f50710f24114e08a302d40708101c4aa950a2a7d044","63786b6f821dee19eb898afb385bd58f1846e6cba593a35edcf9631ace09ba25","c5a14bdeb170e0e67fb4200c54e0e02fd0ec94aca894c212c9d43c2916891542","a39f2a304ccc39e70914e9db08f971d23b862b6f0e34753fad86b895fe566533","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","d88a5e779faf033be3d52142a04fbe1cb96009868e3bbdd296b2bc6c59e06c0e","8b677e0b88f3c4501c6f3ec44d3ccad1c2ba08efd8faf714b9b631b5dba1421b","8a19491eba2108d5c333c249699f40aff05ad312c04a17504573b27d91f0aede","199f9ead0daf25ae4c5632e3d1f42570af59685294a38123eef457407e13f365","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","ddef25f825320de051dcb0e62ffce621b41c67712b5b4105740c32fd83f4c449","1b3dffaa4ca8e38ac434856843505af767a614d187fb3a5ef4fcebb023c355aa","15fe687c59d62741b4494d5e623d497d55eb38966ecf5bea7f36e48fc3fbe15e",{"version":"2c3b8be03577c98530ef9cb1a76e2c812636a871f367e9edf4c5f3ce702b77f8","affectsGlobalScope":true},"1ba59c8bbeed2cb75b239bb12041582fa3e8ef32f8d0bd0ec802e38442d3f317"],"options":{"allowSyntheticDefaultImports":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":99,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":99,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"fileIdsList":[[73,201,245],[73,74,76,201,245],[73,75,201,245],[201,245],[73,75,76,77,78,79,80,201,245],[75,201,245],[69,70,201,245],[63,201,245],[63,66,201,245],[63,64,65,67,201,245],[69,201,245],[68,201,245],[68,69,71,72,201,245],[201,245,537],[201,245,248,289,295,298],[201,245,300],[201,245,298,312,315],[201,245,298,299,300,301,316],[201,245,312,332,334,363,364],[201,245,312,332,376,378],[201,245,377],[201,245,312,332],[201,245,365,378,379,380,381],[201,245,312,332,363],[201,245,291,295,312,335,338],[201,245,336,337],[201,245,315,335],[201,245,315],[201,245,312,339,350],[201,245,332,369],[201,245,312,332,369,370],[201,245,312,367,369],[201,245,295,312,332,369,370],[201,245,295,312,332,369,372],[201,245,296,297,312],[201,245,309,312,332,366,369,370,371,372,373,374,375],[201,245,312,322,328,332,368],[201,245,352,353],[201,245,353,354],[201,245,329],[201,245,312,329],[201,245,329,330,331],[201,245,296,297,312,317,322,328],[201,245,312,357],[201,245,357,358,359,360],[201,245,312,356],[201,245,295,302],[201,245,304,306,308],[201,245,297],[201,245,302,303,309,310,311],[201,245,396],[201,245,393,394,395,396,397,398,399,400,401,402,403,404,405],[201,245,386],[201,245,342],[201,245,393,394,395],[201,245,393,394],[201,245,342,396,397],[201,245,394],[201,245,388],[201,245,385,387],[201,245,406],[201,245,490],[201,245,477,478,479],[201,245,472,473,474],[201,245,450,451,452,453],[201,245,416,490],[201,245,416],[201,245,416,417,418,419,464],[201,245,454],[201,245,449,455,456,457,458,459,460,461,462,463],[201,245,464],[201,245,415],[201,245,468,470,471,489,490],[201,245,468,470],[201,245,465,468,490],[201,245,475,476,480,481,486],[201,245,469,471,481,489],[201,245,488,489],[201,245,465,469,471,487,488],[201,245,469,490],[201,245,467],[201,245,467,469,490],[201,245,465,466],[201,245,482,483,484,485],[201,245,471,490],[201,245,426],[201,245,420,427],[201,245,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],[201,245,446,490],[201,245,537,538,539,540,541],[201,245,537,539],[201,245,260,295,543],[201,245,251,295],[201,245,288,295,550],[201,245,260,295],[201,245,553,555],[201,245,552,553,554],[201,245,257,260,295,547,548,549],[201,245,544,548,550,558,559],[201,245,258,295],[201,245,257,260,262,265,277,288,295],[201,245,305],[201,245,295],[201,242,245],[201,244,245],[201,245,250,280],[201,245,246,251,257,258,265,277,288],[201,245,246,247,257,265],[201,245,248,289],[201,245,249,250,258,266],[201,245,250,277,285],[201,245,251,253,257,265],[201,244,245,252],[201,245,253,254],[201,245,255,257],[201,244,245,257],[201,245,257,258,259,277,288],[201,245,257,258,259,272,277,280],[201,240,245],[201,240,245,253,257,260,265,277,288],[201,245,257,258,260,261,265,277,285,288],[201,245,260,262,277,285,288],[201,245,257,263],[201,245,264,288],[201,245,253,257,265,277],[201,245,266],[201,245,267],[201,244,245,268],[201,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[201,245,270],[201,245,271],[201,245,257,272,273],[201,245,272,274,289,291],[201,245,257,277,278,280],[201,245,279,280],[201,245,277,278],[201,245,280],[201,245,281],[201,242,245,277,282],[201,245,257,283,284],[201,245,283,284],[201,245,250,265,277,285],[201,245,286],[197,198,199,200,201,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[245],[201,245,265,287],[201,245,260,271,288],[201,245,250,289],[201,245,277,290],[201,245,264,291],[201,245,292],[201,245,257,259,268,277,280,288,290,291,293],[201,245,277,294],[201,245,570,609],[201,245,570,594,609],[201,245,609],[201,245,570],[201,245,570,595,609],[201,245,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],[201,245,595,609],[201,245,258,277,295,546],[201,245,258,560],[201,245,260,295,547,557],[201,245,612],[201,245,257,260,262,265,277,285,288,294,295],[201,245,307],[201,245,263,295],[201,245,349],[201,245,312,347,348],[172,201,245],[201,245,312,333],[201,245,312],[201,245,383],[201,245,340,343],[201,245,340,343,344,345],[201,245,312,320],[201,245,257,295,312,319,320,321],[201,245,295,312,318,319,321],[201,245,304,346],[201,245,312,314],[201,245,313],[201,245,326,327],[201,245,312,322,323,324,325],[201,245,312,322,328,332,339,351,355,361,362],[201,245,312,322,328],[201,245,382,384],[201,245,341],[61,201,245],[57,201,245],[57,58,59,60,201,245],[201,210,214,245,288],[201,210,245,277,288],[201,245,277],[201,205,245],[201,207,210,245,288],[201,245,265,285],[201,205,245,295],[201,207,210,245,265,288],[201,202,203,204,206,209,245,257,277,288],[201,210,218,245],[201,203,208,245],[201,210,234,235,245],[201,203,206,210,245,280,288,295],[201,210,245],[201,202,245],[201,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,245],[201,210,227,230,245,253],[201,210,218,219,220,245],[201,208,210,219,221,245],[201,209,245],[201,203,205,210,245],[201,210,214,219,221,245],[201,214,245],[201,208,210,213,245,288],[201,203,207,210,218,245],[201,210,227,245],[201,205,210,234,245,280,293,295],[171,201,245],[159,160,161,201,245],[162,163,201,245],[159,160,162,164,165,170,201,245],[160,162,201,245],[170,201,245],[162,201,245],[159,160,162,165,166,167,168,169,201,245],[62,81,83,85,87,123,133,134,135,138,143,144,145,158,175,176,177,178,179,183,190,191,192,193,194,201,245],[83,84,145,201,245,407],[92,96,97,201,245],[83,201,245],[101,102,201,245],[83,92,201,245],[201,245,411],[87,92,201,245],[62,81,83,201,245],[92,201,245],[83,87,92,106,201,245],[174,201,245],[141,201,245],[83,84,98,201,245,407,491],[83,84,145,201,245,407,491],[194,201,245,407],[83,103,104,105,201,245,407],[201,245,407,413],[83,84,126,201,245,407,491],[83,87,106,107,201,245,407],[83,108,201,245,407],[83,87,128,201,245,407],[62,175,201,245,407],[89,201,245],[81,83,201,245],[81,201,245],[81,83,135,201,245],[135,136,137,138,139,201,245],[124,201,245],[125,126,201,245],[83,87,92,93,94,95,98,99,100,101,102,103,104,105,107,108,109,123,127,201,245],[83,87,141,201,245],[128,201,245,407,491],[124,125,127,128,142,201,245],[94,95,99,100,101,103,104,105,129,130,131,132,133,134,140,201,245],[187,201,245,407],[188,201,245,407],[81,186,201,245,407],[83,110,120,123,201,245],[83,92,110,201,245],[87,112,114,115,123,201,245],[113,201,245],[111,201,245,407],[201,245,407,510],[116,201,245,407],[84,116,201,245,407],[110,111,115,116,117,118,119,121,122,201,245],[83,145,201,245],[83,145,146,201,245],[83,145,146,147,148,151,152,153,154,155,156,157,201,245],[201,245,407,491],[83,145,146,201,245,407,491],[83,145,146,158,201,245,407,491],[93,146,201,245,407,411],[147,148,149,150,151,152,153,154,155,156,157,158,201,245],[83,145,149,150,201,245],[83,149,150,201,245],[88,201,245,407,491],[88,89,90,91,201,245],[84,201,245,407],[84,201,245,407,491],[84,85,86,201,245],[201,245,407,411],[145,201,245],[62,195,201,245],[62,201,245],[62,92,175,176,201,245],[62,83,201,245],[62,81,140,201,245],[62,143,201,245],[62,81,184,185,186,187,188,189,201,245],[62,83,191,201,245,407],[62,83,85,193,201,245,407],[62,83,84,85,182,201,245,407],[62,83,85,180,201,245,407],[62,83,192,201,245,407],[62,83,84,181,201,245,407],[62,190,201,245,407],[180,181,182,201,245],[173,201,245],[82,201,245]],"referencedMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"exportedModulesMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"semanticDiagnosticsPerFile":[74,75,76,80,81,77,78,79,71,70,64,67,65,68,66,63,72,69,73,539,537,299,300,301,316,317,298,365,379,378,380,382,364,381,339,338,336,337,351,370,371,368,372,373,374,375,367,366,376,369,354,355,353,330,331,332,329,358,360,361,359,357,356,303,309,302,310,311,312,404,401,400,397,406,393,402,396,395,403,398,405,399,394,389,388,387,407,477,478,480,479,472,473,475,474,450,452,451,454,453,417,415,418,465,419,455,464,456,459,457,460,462,458,461,463,416,491,476,471,481,487,488,490,489,469,470,466,468,467,482,486,483,484,485,420,421,424,422,423,426,427,428,429,425,430,431,432,433,434,435,449,436,437,438,439,440,441,442,445,443,444,446,447,448,386,542,538,540,541,544,545,551,543,556,552,555,553,550,560,559,318,561,557,562,297,305,306,554,563,546,564,242,243,244,245,246,247,199,248,249,250,251,252,253,254,256,255,257,258,259,241,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,278,280,281,282,283,284,285,286,197,295,201,198,200,287,288,289,290,291,292,293,294,565,566,567,548,549,568,569,594,595,570,573,592,593,583,582,580,575,588,586,590,574,587,591,576,577,589,571,578,579,581,585,596,584,572,609,608,603,605,604,597,598,600,602,606,607,599,601,547,610,558,611,313,613,612,614,307,308,352,304,296,377,350,348,349,173,334,333,383,384,340,344,346,345,343,319,321,322,320,347,315,314,335,323,328,326,324,325,327,363,362,385,342,341,62,58,61,60,57,59,11,12,14,13,2,15,16,17,18,19,20,21,22,3,4,26,23,24,25,27,28,29,5,30,31,32,33,6,37,34,35,36,38,7,39,44,45,40,41,42,43,8,49,46,47,48,50,9,51,52,53,54,55,1,10,56,218,229,216,230,239,208,207,238,233,237,210,226,209,236,205,206,211,212,217,215,203,240,231,221,220,222,224,219,223,234,213,214,225,204,228,227,232,202,235,172,162,164,171,166,167,165,168,159,160,161,163,169,170,195,391,392,408,101,98,95,134,97,409,103,104,132,410,129,109,99,412,177,102,131,105,178,194,413,126,414,96,176,107,133,94,108,100,175,130,492,493,494,495,496,497,498,499,500,501,502,139,135,136,137,138,140,503,124,125,127,504,128,142,505,143,141,506,187,185,189,188,186,184,507,508,509,121,144,111,510,122,117,119,110,116,118,115,114,113,511,512,513,514,123,120,150,147,149,148,158,516,517,518,519,515,155,156,154,152,151,157,153,88,89,90,91,520,521,92,112,85,84,179,86,145,522,523,87,528,524,525,93,411,526,527,146,196,191,193,182,180,192,181,190,529,530,531,532,533,534,535,183,174,390,83,82,536,106],"affectedFilesPendingEmit":[[74,1],[75,1],[76,1],[80,1],[81,1],[77,1],[78,1],[79,1],[71,1],[70,1],[64,1],[67,1],[65,1],[68,1],[66,1],[63,1],[72,1],[69,1],[73,1],[539,1],[537,1],[299,1],[300,1],[301,1],[316,1],[317,1],[298,1],[365,1],[379,1],[378,1],[380,1],[382,1],[364,1],[381,1],[339,1],[338,1],[336,1],[337,1],[351,1],[370,1],[371,1],[368,1],[372,1],[373,1],[374,1],[375,1],[367,1],[366,1],[376,1],[369,1],[354,1],[355,1],[353,1],[330,1],[331,1],[332,1],[329,1],[358,1],[360,1],[361,1],[359,1],[357,1],[356,1],[303,1],[309,1],[302,1],[310,1],[311,1],[312,1],[404,1],[401,1],[400,1],[397,1],[406,1],[393,1],[402,1],[396,1],[395,1],[403,1],[398,1],[405,1],[399,1],[394,1],[389,1],[388,1],[387,1],[407,1],[477,1],[478,1],[480,1],[479,1],[472,1],[473,1],[475,1],[474,1],[450,1],[452,1],[451,1],[454,1],[453,1],[417,1],[415,1],[418,1],[465,1],[419,1],[455,1],[464,1],[456,1],[459,1],[457,1],[460,1],[462,1],[458,1],[461,1],[463,1],[416,1],[491,1],[476,1],[471,1],[481,1],[487,1],[488,1],[490,1],[489,1],[469,1],[470,1],[466,1],[468,1],[467,1],[482,1],[486,1],[483,1],[484,1],[485,1],[420,1],[421,1],[424,1],[422,1],[423,1],[426,1],[427,1],[428,1],[429,1],[425,1],[430,1],[431,1],[432,1],[433,1],[434,1],[435,1],[449,1],[436,1],[437,1],[438,1],[439,1],[440,1],[441,1],[442,1],[445,1],[443,1],[444,1],[446,1],[447,1],[448,1],[386,1],[542,1],[538,1],[540,1],[541,1],[544,1],[545,1],[551,1],[543,1],[556,1],[552,1],[555,1],[553,1],[550,1],[560,1],[559,1],[318,1],[561,1],[557,1],[562,1],[297,1],[305,1],[306,1],[554,1],[563,1],[546,1],[564,1],[242,1],[243,1],[244,1],[245,1],[246,1],[247,1],[199,1],[248,1],[249,1],[250,1],[251,1],[252,1],[253,1],[254,1],[256,1],[255,1],[257,1],[258,1],[259,1],[241,1],[260,1],[261,1],[262,1],[263,1],[264,1],[265,1],[266,1],[267,1],[268,1],[269,1],[270,1],[271,1],[272,1],[273,1],[274,1],[275,1],[276,1],[277,1],[279,1],[278,1],[280,1],[281,1],[282,1],[283,1],[284,1],[285,1],[286,1],[197,1],[295,1],[201,1],[198,1],[200,1],[287,1],[288,1],[289,1],[290,1],[291,1],[292,1],[293,1],[294,1],[565,1],[566,1],[567,1],[548,1],[549,1],[568,1],[569,1],[594,1],[595,1],[570,1],[573,1],[592,1],[593,1],[583,1],[582,1],[580,1],[575,1],[588,1],[586,1],[590,1],[574,1],[587,1],[591,1],[576,1],[577,1],[589,1],[571,1],[578,1],[579,1],[581,1],[585,1],[596,1],[584,1],[572,1],[609,1],[608,1],[603,1],[605,1],[604,1],[597,1],[598,1],[600,1],[602,1],[606,1],[607,1],[599,1],[601,1],[547,1],[610,1],[558,1],[611,1],[313,1],[613,1],[612,1],[614,1],[307,1],[308,1],[352,1],[304,1],[296,1],[377,1],[350,1],[348,1],[349,1],[173,1],[334,1],[333,1],[383,1],[384,1],[340,1],[344,1],[346,1],[345,1],[343,1],[319,1],[321,1],[322,1],[320,1],[347,1],[315,1],[314,1],[335,1],[323,1],[328,1],[326,1],[324,1],[325,1],[327,1],[363,1],[362,1],[385,1],[342,1],[341,1],[62,1],[58,1],[61,1],[60,1],[57,1],[59,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[218,1],[229,1],[216,1],[230,1],[239,1],[208,1],[207,1],[238,1],[233,1],[237,1],[210,1],[226,1],[209,1],[236,1],[205,1],[206,1],[211,1],[212,1],[217,1],[215,1],[203,1],[240,1],[231,1],[221,1],[220,1],[222,1],[224,1],[219,1],[223,1],[234,1],[213,1],[214,1],[225,1],[204,1],[228,1],[227,1],[232,1],[202,1],[235,1],[172,1],[162,1],[164,1],[171,1],[166,1],[167,1],[165,1],[168,1],[159,1],[160,1],[161,1],[163,1],[169,1],[170,1],[195,1],[391,1],[392,1],[408,1],[101,1],[98,1],[95,1],[134,1],[97,1],[409,1],[103,1],[104,1],[132,1],[410,1],[129,1],[109,1],[99,1],[412,1],[177,1],[102,1],[131,1],[105,1],[178,1],[194,1],[413,1],[126,1],[414,1],[96,1],[176,1],[107,1],[133,1],[94,1],[108,1],[100,1],[175,1],[130,1],[492,1],[493,1],[494,1],[495,1],[496,1],[497,1],[498,1],[499,1],[500,1],[501,1],[502,1],[139,1],[135,1],[136,1],[137,1],[138,1],[140,1],[503,1],[124,1],[125,1],[127,1],[504,1],[128,1],[142,1],[505,1],[143,1],[141,1],[506,1],[187,1],[185,1],[189,1],[188,1],[186,1],[184,1],[507,1],[508,1],[509,1],[121,1],[144,1],[111,1],[510,1],[122,1],[117,1],[119,1],[110,1],[116,1],[118,1],[115,1],[114,1],[113,1],[511,1],[512,1],[513,1],[514,1],[123,1],[120,1],[150,1],[147,1],[149,1],[148,1],[158,1],[516,1],[517,1],[518,1],[519,1],[515,1],[155,1],[156,1],[154,1],[152,1],[151,1],[157,1],[153,1],[88,1],[89,1],[90,1],[91,1],[520,1],[521,1],[92,1],[112,1],[85,1],[84,1],[179,1],[86,1],[145,1],[522,1],[523,1],[87,1],[528,1],[524,1],[525,1],[93,1],[411,1],[526,1],[527,1],[146,1],[196,1],[191,1],[193,1],[182,1],[180,1],[192,1],[181,1],[190,1],[529,1],[530,1],[531,1],[532,1],[533,1],[534,1],[535,1],[183,1],[174,1],[390,1],[83,1],[82,1],[536,1],[106,1]]},"version":"4.9.5"}
./.code/agents/1/exec-call_FBIwoFXQ52mBUHnfzcN9IQzW.txt:7557:frontend/node_modules/.cache/tsconfig.tsbuildinfo:1:{"program":{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.sharedmemory.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../react-router/dist/development/routeModules-rOzWJJ9x.d.ts","../react-router/dist/development/index-react-server-client-BKpa2trA.d.ts","../react-router/node_modules/cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/shared.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-localstorage.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-memory.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/key-manifest.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-manager.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/index.d.ts","../@auth0/auth0-spa-js/dist/typings/global.d.ts","../@auth0/auth0-spa-js/dist/typings/TokenExchange.d.ts","../@auth0/auth0-spa-js/dist/typings/Auth0Client.d.ts","../@auth0/auth0-spa-js/dist/typings/errors.d.ts","../@auth0/auth0-spa-js/dist/typings/index.d.ts","../@auth0/auth0-react/dist/auth-state.d.ts","../@auth0/auth0-react/dist/auth0-context.d.ts","../@auth0/auth0-react/dist/auth0-provider.d.ts","../@auth0/auth0-react/dist/use-auth0.d.ts","../@auth0/auth0-react/dist/with-auth0.d.ts","../@auth0/auth0-react/dist/with-authentication-required.d.ts","../@auth0/auth0-react/dist/errors.d.ts","../@auth0/auth0-react/dist/index.d.ts","../../src/theme/theme.js","../../src/theme/Provider.js","../../src/context/GameProvider.js","../../src/context/AuthContext.js","../../src/context/SheetSyncContext.js","../../src/context/index.js","../../src/components/ui/Button.js","../../src/components/ui/Card.js","../../src/components/ui/Input.js","../../src/components/ui/Select.js","../../src/components/ui/index.js","../../src/hooks/useOddsCalculation.js","../../src/components/ShotResultWidget.js","../../src/components/BettingOpportunityWidget.js","../../src/components/ProbabilityVisualization.js","../../src/components/EducationalTooltip.js","../../src/components/BettingOddsPanel.js","../../src/components/GameStateWidget.js","../../src/components/StrategicAnalysisWidget.js","../../src/components/AnalyticsDashboard.js","../../src/components/HoleStrategyDisplay.js","../../src/components/EnhancedBettingWidget.js","../../src/components/EnhancedScoringWidget.js","../../src/components/InteractivePlayerCard.js","../../src/utils/api.js","../../src/components/ShotAnalysisWidget.js","../../src/components/ShotVisualizationOverlay.js","../../src/components/GameHistory.js","../../src/components/simulation/SimulationDecisionPanel.tsx","../../src/components/simulation/GamePlay.js","../../src/config/environment.js","../../src/components/simulation/__fixtures__/simulationMockData.js","../../src/components/simulation/__fixtures__/index.js","../../src/components/simulation/TurnBasedInterface.js","../../src/components/simulation/SimulationMode.js","../../src/components/simulation/MonteCarloSimulation.js","../../src/components/simulation/Timeline.js","../../src/components/simulation/PokerBettingPanel.js","../../src/components/simulation/styles/enhancedSimulationLayout.js","../../src/components/simulation/EnhancedSimulationLayout.js","../../src/components/simulation/HoleVisualization.tsx","../../src/components/simulation/index.js","../../src/components/game/CourseImport.js","../../src/components/game/CourseManager.js","../../src/components/PlayerProfileManager.js","../../src/components/game/GameSetupForm.js","../../src/components/game/UnifiedGameInterface.js","../../src/components/GameDashboard.js","../../src/components/WolfGoatPigDashboard.js","../../src/components/HoleVisualization.js","../../src/components/EnhancedWGPInterface.js","../../src/components/ShotRangeAnalyzer.js","../../src/components/ColdStartHandler.js","../../src/components/auth/LoginButton.js","../../src/components/auth/LogoutButton.js","../../src/components/auth/Profile.js","../../src/components/auth/ProtectedRoute.js","../../src/components/auth/AuthHealthCheck.js","../../src/components/auth/index.js","../../src/components/index.js","../../src/components/game/WolfGoatPigGame.js","../../src/components/game/index.js","../../src/components/simulation/FeedAnalyzer.js","../../src/context/TutorialContext.js","../../src/hooks/useTutorialProgress.js","../../src/components/tutorial/ProgressTracker.js","../../src/components/tutorial/TutorialOverlay.js","../../src/components/tutorial/TutorialModule.js","../../src/components/tutorial/InteractiveElement.js","../../src/components/tutorial/modules/GolfBasicsModule.js","../../src/components/tutorial/modules/GameOverviewModule.js","../../src/components/tutorial/modules/TeamFormationModule.js","../../src/components/tutorial/modules/BettingSystemModule.js","../../src/components/tutorial/modules/AdvancedRulesModule.js","../../src/components/tutorial/modules/AnalysisToolsModule.js","../../src/components/tutorial/modules/PracticeGameModule.js","../../src/components/tutorial/TutorialSystem.js","../zod/v3/helpers/typeAliases.d.cts","../zod/v3/helpers/util.d.cts","../zod/v3/index.d.cts","../zod/v3/ZodError.d.cts","../zod/v3/locales/en.d.cts","../zod/v3/errors.d.cts","../zod/v3/helpers/parseUtil.d.cts","../zod/v3/helpers/enumUtil.d.cts","../zod/v3/helpers/errorUtil.d.cts","../zod/v3/helpers/partialUtil.d.cts","../zod/v3/standard-schema.d.cts","../zod/v3/types.d.cts","../zod/v3/external.d.cts","../zod/index.d.cts","../ghin/dist/index.d.ts","../../src/services/ghinService.js","../../src/components/WGPAnalyticsDashboard.js","../../src/components/SheetIntegrationDashboard.js","../../src/components/GoogleSheetsLiveSync.js","../../src/components/Leaderboard.js","../../src/context/MockAuthContext.js","../../src/pages/HomePage.js","../../src/pages/SetupPage.js","../../src/pages/GamePage.js","../../src/pages/index.js","../../src/components/signup/SignupCalendar.js","../../src/components/signup/DailySignupView.js","../../src/components/signup/PlayerAvailability.js","../../src/components/signup/AllPlayersAvailability.js","../../src/components/signup/MatchmakingSuggestions.js","../../src/components/signup/EmailPreferences.js","../../src/pages/SignupPage.js","../../src/pages/AboutPage.js","../../src/pages/RulesPage.js","../../src/pages/AdminPage.js","../../src/components/Navigation.js","../../src/App.js","../../src/index.js","../@types/node/ts5.1/compatibility/disposable.d.ts","../@types/node/ts5.6/compatibility/float16array.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/ts5.6/globals.typedarray.d.ts","../@types/node/ts5.6/buffer.buffer.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/globals.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/dom-events.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/ts5.1/index.d.ts","../collect-v8-coverage/index.d.ts","../@types/istanbul-lib-coverage/index.d.ts","../@jest/console/build/types.d.ts","../@jest/console/build/BufferedConsole.d.ts","../@jest/console/build/CustomConsole.d.ts","../@jest/console/build/NullConsole.d.ts","../@jest/types/build/Global.d.ts","../@jest/types/build/Circus.d.ts","../chalk/index.d.ts","../@types/istanbul-lib-report/index.d.ts","../@types/istanbul-reports/index.d.ts","../@types/yargs-parser/index.d.ts","../@types/yargs/index.d.ts","../@jest/types/build/Config.d.ts","../@jest/types/build/TestResult.d.ts","../@jest/types/build/Transform.d.ts","../@jest/types/build/index.d.ts","../@types/stack-utils/index.d.ts","../jest-message-util/build/types.d.ts","../jest-message-util/build/index.d.ts","../@jest/console/build/getConsoleOutput.d.ts","../@jest/console/build/index.d.ts","../@types/graceful-fs/index.d.ts","../jest-haste-map/build/HasteFS.d.ts","../jest-haste-map/build/types.d.ts","../jest-haste-map/build/ModuleMap.d.ts","../jest-haste-map/build/index.d.ts","../jest-resolve/build/ModuleNotFoundError.d.ts","../jest-resolve/build/shouldLoadAsEsm.d.ts","../jest-resolve/build/types.d.ts","../jest-resolve/build/resolver.d.ts","../jest-resolve/build/utils.d.ts","../jest-resolve/build/index.d.ts","../@jest/test-result/build/types.d.ts","../@jest/test-result/build/formatTestResults.d.ts","../@jest/test-result/build/helpers.d.ts","../@jest/test-result/build/index.d.ts","../jest-changed-files/build/types.d.ts","../jest-changed-files/build/index.d.ts","../jest-mock/build/index.d.ts","../@jest/fake-timers/build/legacyFakeTimers.d.ts","../@jest/fake-timers/build/modernFakeTimers.d.ts","../@jest/fake-timers/build/index.d.ts","../@jest/environment/build/index.d.ts","../jest-diff/build/cleanupSemantic.d.ts","../pretty-format/build/types.d.ts","../pretty-format/build/index.d.ts","../jest-diff/build/types.d.ts","../jest-diff/build/diffLines.d.ts","../jest-diff/build/printDiffs.d.ts","../jest-diff/build/index.d.ts","../jest-matcher-utils/build/index.d.ts","../expect/build/jestMatchersObject.d.ts","../expect/build/types.d.ts","../expect/build/index.d.ts","../@jest/globals/build/index.d.ts","../callsites/index.d.ts","../@jest/source-map/build/types.d.ts","../@jest/source-map/build/getCallsite.d.ts","../@jest/source-map/build/index.d.ts","../@jest/transform/node_modules/source-map/source-map.d.ts","../@jest/transform/build/types.d.ts","../@jest/transform/build/ScriptTransformer.d.ts","../@jest/transform/build/shouldInstrument.d.ts","../@jest/transform/build/enhanceUnexpectedTokenMessage.d.ts","../@jest/transform/build/index.d.ts","../jest-runtime/build/types.d.ts","../jest-runtime/build/index.d.ts","../@jest/core/build/types.d.ts","../@jest/core/build/SearchSource.d.ts","../@jest/reporters/build/getResultHeader.d.ts","../@jest/reporters/build/generateEmptyCoverage.d.ts","../@jest/reporters/build/CoverageWorker.d.ts","../@jest/reporters/build/types.d.ts","../@jest/reporters/build/BaseReporter.d.ts","../@jest/reporters/build/CoverageReporter.d.ts","../@jest/reporters/build/DefaultReporter.d.ts","../@jest/reporters/build/NotifyReporter.d.ts","../@jest/reporters/build/SummaryReporter.d.ts","../@jest/reporters/build/VerboseReporter.d.ts","../@jest/reporters/build/index.d.ts","../emittery/index.d.ts","../@jest/core/build/TestWatcher.d.ts","../@jest/core/build/TestScheduler.d.ts","../@jest/core/build/cli/index.d.ts","../@jest/core/build/version.d.ts","../@jest/core/build/jest.d.ts","../jest-cli/build/cli/index.d.ts","../jest-cli/build/index.d.ts","../jest/build/jest.d.ts","../@types/aria-query/index.d.ts","../@testing-library/jest-dom/types/matchers.d.ts","../@testing-library/jest-dom/types/jest.d.ts","../@testing-library/jest-dom/types/index.d.ts","../../src/setupTests.js","../../src/__mocks__/react-router-dom.js","../../src/__tests__/fixtures/gameFixtures.js","../@testing-library/dom/types/matches.d.ts","../@testing-library/dom/types/wait-for.d.ts","../@testing-library/dom/types/query-helpers.d.ts","../@testing-library/dom/types/queries.d.ts","../@testing-library/dom/types/get-queries-for-element.d.ts","../@testing-library/dom/types/screen.d.ts","../@testing-library/dom/types/wait-for-element-to-be-removed.d.ts","../@testing-library/dom/types/get-node-text.d.ts","../@testing-library/dom/types/events.d.ts","../@testing-library/dom/types/pretty-dom.d.ts","../@testing-library/dom/types/role-helpers.d.ts","../@testing-library/dom/types/config.d.ts","../@testing-library/dom/types/suggestions.d.ts","../@testing-library/dom/types/index.d.ts","../@testing-library/react/types/index.d.ts","../../src/__tests__/utils/testHelpers.js","../../src/components/EmailSettings.js","../../src/components/GHINIntegration.js","../../src/hooks/usePlayerProfile.js","../../src/components/GameStatsTracker.js","../../src/components/PerformanceAnalytics.js","../../src/components/PlayerStatistics.js","../@testing-library/user-event/dist/types/event/eventMap.d.ts","../@testing-library/user-event/dist/types/event/types.d.ts","../@testing-library/user-event/dist/types/event/dispatchEvent.d.ts","../@testing-library/user-event/dist/types/event/focus.d.ts","../@testing-library/user-event/dist/types/event/input.d.ts","../@testing-library/user-event/dist/types/utils/click/isClickableInput.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Blob.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/DataTransfer.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/FileList.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Clipboard.d.ts","../@testing-library/user-event/dist/types/utils/edit/timeValue.d.ts","../@testing-library/user-event/dist/types/utils/edit/isContentEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/isEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/maxLength.d.ts","../@testing-library/user-event/dist/types/utils/edit/setFiles.d.ts","../@testing-library/user-event/dist/types/utils/focus/cursor.d.ts","../@testing-library/user-event/dist/types/utils/focus/getActiveElement.d.ts","../@testing-library/user-event/dist/types/utils/focus/getTabDestination.d.ts","../@testing-library/user-event/dist/types/utils/focus/isFocusable.d.ts","../@testing-library/user-event/dist/types/utils/focus/selection.d.ts","../@testing-library/user-event/dist/types/utils/focus/selector.d.ts","../@testing-library/user-event/dist/types/utils/keyDef/readNextDescriptor.d.ts","../@testing-library/user-event/dist/types/utils/misc/cloneEvent.d.ts","../@testing-library/user-event/dist/types/utils/misc/findClosest.d.ts","../@testing-library/user-event/dist/types/utils/misc/getDocumentFromNode.d.ts","../@testing-library/user-event/dist/types/utils/misc/getTreeDiff.d.ts","../@testing-library/user-event/dist/types/utils/misc/getWindow.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDescendantOrSelf.d.ts","../@testing-library/user-event/dist/types/utils/misc/isElementType.d.ts","../@testing-library/user-event/dist/types/utils/misc/isVisible.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDisabled.d.ts","../@testing-library/user-event/dist/types/utils/misc/level.d.ts","../@testing-library/user-event/dist/types/utils/misc/wait.d.ts","../@testing-library/user-event/dist/types/utils/pointer/cssPointerEvents.d.ts","../@testing-library/user-event/dist/types/utils/index.d.ts","../@testing-library/user-event/dist/types/document/UI.d.ts","../@testing-library/user-event/dist/types/document/getValueOrTextContent.d.ts","../@testing-library/user-event/dist/types/document/copySelection.d.ts","../@testing-library/user-event/dist/types/document/trackValue.d.ts","../@testing-library/user-event/dist/types/document/index.d.ts","../@testing-library/user-event/dist/types/event/selection/getInputRange.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelection.d.ts","../@testing-library/user-event/dist/types/event/selection/moveSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/selectAll.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionRange.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/updateSelectionOnFocus.d.ts","../@testing-library/user-event/dist/types/event/selection/index.d.ts","../@testing-library/user-event/dist/types/event/index.d.ts","../@testing-library/user-event/dist/types/system/pointer/buttons.d.ts","../@testing-library/user-event/dist/types/system/pointer/shared.d.ts","../@testing-library/user-event/dist/types/system/pointer/index.d.ts","../@testing-library/user-event/dist/types/system/index.d.ts","../@testing-library/user-event/dist/types/system/keyboard.d.ts","../@testing-library/user-event/dist/types/options.d.ts","../@testing-library/user-event/dist/types/convenience/click.d.ts","../@testing-library/user-event/dist/types/convenience/hover.d.ts","../@testing-library/user-event/dist/types/convenience/tab.d.ts","../@testing-library/user-event/dist/types/convenience/index.d.ts","../@testing-library/user-event/dist/types/keyboard/index.d.ts","../@testing-library/user-event/dist/types/clipboard/copy.d.ts","../@testing-library/user-event/dist/types/clipboard/cut.d.ts","../@testing-library/user-event/dist/types/clipboard/paste.d.ts","../@testing-library/user-event/dist/types/clipboard/index.d.ts","../@testing-library/user-event/dist/types/pointer/index.d.ts","../@testing-library/user-event/dist/types/utility/clear.d.ts","../@testing-library/user-event/dist/types/utility/selectOptions.d.ts","../@testing-library/user-event/dist/types/utility/type.d.ts","../@testing-library/user-event/dist/types/utility/upload.d.ts","../@testing-library/user-event/dist/types/utility/index.d.ts","../@testing-library/user-event/dist/types/setup/api.d.ts","../@testing-library/user-event/dist/types/setup/directApi.d.ts","../@testing-library/user-event/dist/types/setup/setup.d.ts","../@testing-library/user-event/dist/types/setup/index.d.ts","../@testing-library/user-event/dist/types/index.d.ts","../../src/components/__tests__/BettingOddsPanel.test.js","../../src/components/__tests__/GameDashboard.test.js","../../src/components/__tests__/Navigation.test.js","../../src/components/__tests__/NewComponents.test.js","../../src/components/__tests__/PerformanceAnalytics.test.js","../../src/components/__tests__/PlayerProfileManager.test.js","../../src/components/__tests__/ShotAnalysisWidget.test.js","../../src/components/__tests__/ShotVisualizationOverlay.test.js","../../src/components/__tests__/UnifiedGameInterface.integration.test.js","../../src/components/__tests__/WGPAnalyticsDashboard.test.js","../../src/components/analytics/PostHoleAnalytics.js","../../src/components/email/EmailSettings.js","../../src/components/game/TVPokerLayout.js","../../src/components/game/__tests__/UnifiedGameInterface.test.js","../../src/components/practice/EnhancedPracticeMode.js","../../src/components/signup/__tests__/AllPlayersAvailability.test.js","../../src/components/signup/__tests__/MatchmakingSuggestions.test.js","../../src/components/signup/__tests__/PlayerAvailability.test.js","../../src/components/simulation/GameSetup.tsx","../../src/components/simulation/__tests__/GamePlay.test.js","../../src/components/simulation/__tests__/GameSetup.test.js","../../src/components/simulation/__tests__/SimulationMode.probabilities.test.js","../../src/components/simulation/__tests__/SimulationMode.test.js","../../src/components/tutorial/index.js","../../src/components/tutorial/__tests__/InteractiveElement.test.js","../../src/components/tutorial/__tests__/ProgressTracker.test.js","../../src/components/tutorial/__tests__/TutorialSystem.test.js","../../src/components/tutorial/__tests__/hooks.test.js","../../src/components/ui/__tests__/Button.test.js","../../src/components/ui/__tests__/UIComponents.test.js","../../src/context/__tests__/GameProvider.shotProbabilities.test.js","../../src/context/__tests__/GameProvider.test.js","../../src/hooks/useAuth.js","../../src/hooks/useGameApi.js","../../src/hooks/usePostHoleAnalytics.js","../../src/hooks/useSimulationApi.js","../../src/hooks/__tests__/usePlayerProfile.test.js","../../src/pages/__tests__/AboutPage.test.js","../../src/pages/__tests__/AdminPage.test.js","../../src/pages/__tests__/GamePage.test.js","../../src/pages/__tests__/HomePage.test.js","../../src/pages/__tests__/RulesPage.test.js","../../src/pages/__tests__/SetupPage.test.js","../../src/pages/__tests__/SignupPage.test.js","../../src/utils/__tests__/api.test.js","../@babel/types/lib/index.d.ts","../@types/babel__generator/index.d.ts","../@babel/parser/typings/babel-parser.d.ts","../@types/babel__template/index.d.ts","../@types/babel__traverse/index.d.ts","../@types/babel__core/index.d.ts","../@types/connect/index.d.ts","../@types/body-parser/index.d.ts","../@types/bonjour/index.d.ts","../@types/mime/index.d.ts","../@types/send/index.d.ts","../@types/qs/index.d.ts","../@types/range-parser/index.d.ts","../@types/express-serve-static-core/index.d.ts","../@types/connect-history-api-fallback/index.d.ts","../@types/eslint/helpers.d.ts","../@types/estree/index.d.ts","../@types/json-schema/index.d.ts","../@types/eslint/index.d.ts","../@types/eslint-scope/index.d.ts","../@types/http-errors/index.d.ts","../@types/serve-static/index.d.ts","../@types/express/node_modules/@types/express-serve-static-core/index.d.ts","../@types/express/index.d.ts","../@types/html-minifier-terser/index.d.ts","../@types/http-proxy/index.d.ts","../@types/json5/index.d.ts","../@types/node-forge/index.d.ts","../@types/parse-json/index.d.ts","../@types/prettier/index.d.ts","../@types/q/index.d.ts","../@types/resolve/index.d.ts","../@types/retry/index.d.ts","../@types/semver/classes/semver.d.ts","../@types/semver/functions/parse.d.ts","../@types/semver/functions/valid.d.ts","../@types/semver/functions/clean.d.ts","../@types/semver/functions/inc.d.ts","../@types/semver/functions/diff.d.ts","../@types/semver/functions/major.d.ts","../@types/semver/functions/minor.d.ts","../@types/semver/functions/patch.d.ts","../@types/semver/functions/prerelease.d.ts","../@types/semver/functions/compare.d.ts","../@types/semver/functions/rcompare.d.ts","../@types/semver/functions/compare-loose.d.ts","../@types/semver/functions/compare-build.d.ts","../@types/semver/functions/sort.d.ts","../@types/semver/functions/rsort.d.ts","../@types/semver/functions/gt.d.ts","../@types/semver/functions/lt.d.ts","../@types/semver/functions/eq.d.ts","../@types/semver/functions/neq.d.ts","../@types/semver/functions/gte.d.ts","../@types/semver/functions/lte.d.ts","../@types/semver/functions/cmp.d.ts","../@types/semver/functions/coerce.d.ts","../@types/semver/classes/comparator.d.ts","../@types/semver/classes/range.d.ts","../@types/semver/functions/satisfies.d.ts","../@types/semver/ranges/max-satisfying.d.ts","../@types/semver/ranges/min-satisfying.d.ts","../@types/semver/ranges/to-comparators.d.ts","../@types/semver/ranges/min-version.d.ts","../@types/semver/ranges/valid.d.ts","../@types/semver/ranges/outside.d.ts","../@types/semver/ranges/gtr.d.ts","../@types/semver/ranges/ltr.d.ts","../@types/semver/ranges/intersects.d.ts","../@types/semver/ranges/simplify.d.ts","../@types/semver/ranges/subset.d.ts","../@types/semver/internals/identifiers.d.ts","../@types/semver/index.d.ts","../@types/serve-index/index.d.ts","../@types/sockjs/index.d.ts","../@types/trusted-types/lib/index.d.ts","../@types/trusted-types/index.d.ts","../@types/ws/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9","746d62152361558ea6d6115cf0da4dd10ede041d14882ede3568bce5dc4b4f1f","d11a03592451da2d1065e09e61f4e2a9bf68f780f4f6623c18b57816a9679d17","aea179452def8a6152f98f63b191b84e7cbd69b0e248c91e61fb2e52328abe8c",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"f3d4da15233e593eacb3965cde7960f3fddf5878528d882bcedd5cbaba0193c7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"6c55633c733c8378db65ac3da7a767c3cf2cf3057f0565a9124a16a3a2019e87","affectsGlobalScope":true},{"version":"fb4416144c1bf0323ccbc9afb0ab289c07312214e8820ad17d709498c865a3fe","affectsGlobalScope":true},{"version":"5b0ca94ec819d68d33da516306c15297acec88efeb0ae9e2b39f71dbd9685ef7","affectsGlobalScope":true},{"version":"34c839eaaa6d78c8674ae2c37af2236dee6831b13db7b4ef4df3ec889a04d4f2","affectsGlobalScope":true},{"version":"34478567f8a80171f88f2f30808beb7da15eac0538ae91282dd33dce928d98ed","affectsGlobalScope":true},{"version":"ab7d58e6161a550ff92e5aff755dc37fe896245348332cd5f1e1203479fe0ed1","affectsGlobalScope":true},{"version":"6bda95ea27a59a276e46043b7065b55bd4b316c25e70e29b572958fa77565d43","affectsGlobalScope":true},{"version":"aedb8de1abb2ff1095c153854a6df7deae4a5709c37297f9d6e9948b6806fa66","affectsGlobalScope":true},{"version":"a4da0551fd39b90ca7ce5f68fb55d4dc0c1396d589b612e1902f68ee090aaada","affectsGlobalScope":true},{"version":"11ffe3c281f375fff9ffdde8bbec7669b4dd671905509079f866f2354a788064","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"bf237922b06c558ee82c997549c28541d2e4c60a7c449c635cd7116663bff11b","ec646851bb3302d774d4fbec3555fdf0cea4dc30a7f2c663d66387653abecdd6","5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd",{"version":"7f9844af49faece125da77aa099fd5c1da64270e31b414edef84f159a15f61b7","affectsGlobalScope":true},"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","fcc9e6f2da1759e4abe577f938f7d6eec119963abae917c290913a537cf8cd89","67b56598de49ea49e177ed09417ec97c642775a4fe73259df996923517eb652d","98d8c2cce0da7f218eda38d46b3d715adfb4c99c59ad67dbe0fd105113292f9f","d562cf993f138dc03c5b1aed57d7d80e96555ce41365e0e79db9b93a0b49a6b2","4e7fded78c59e63cc94cd8c0c920b287b885ae0512c412e0f7a890b0d700bc3d","7fc1326aae51ca02c357b8391270858387cce4afa9928d6580a42119dfcca9eb","a95d033d647339e3932fd15c01ae763c0e6fba915418c01b2fb1b1d4063a6d7f","9ec473f428d74650f0ce05b81e6a27fc84906a36838fd11875fcae5193f3cbbb","acdd8a10fac8748502509cb57bdd53a7c5b85fa4a2ee3a560c00a40404ff65cb","59bd81abd493fa554955bf7dd7006273192ea8d553d3e4a819e866a14725cdfe","a29acac88d5df222deeb58568f2e56b42075d9b043b4f158b7a55a8eed18985f","56d09baa6411529b9edfed10d627aa294412c3aa33d26e1254b8f1422ecfbfd9","31feea0066a629bfcacfc80bd5ec1551d26cf7a8dad949dc24cde82307748a45","b23ee85f4ae6affbd6d92df4a305756b2d7a7d687108bac625b83d662aabe063","c541b4b619ff47a8f1d2e242f69cab2f1490797934a31b9d15fe1b9d59183626","10f0161e27ec211a27512406022e5381ee1eff148c356579a07392c1cab67205","50d0abf4fb3d7fa0d929459ec9560f6761eb9e80bc568e6367868f6402fae0b5","4be1e84f8a23aa1c9b37669820a5dc6c0d664131c2549b54b40ec225abcff77c","2d6acf4fe93fb92f0259c6bbed436112c7daf0ad9e1318f2f0bd2613083261f0","58024638b80b48562cce5f0e5f65ce5924a2309224400787a4e40dea0ce3c7f4","ed7ed4acdc5b5e7f531cb8a2b62cadc0a8a88d054637965ba585a370f3538dbc","59453dd1a944cc11ef41fc0e21d4afaa4906eb4015fc605b423776ab26be5c35","12bb43d7c61d1b5e4340ed3599bbdcdd8d781994f08a94f010c88d4d26f285bb","f40d60f92714d69e75d0f03e3b51acbe2ff52064dd0e4774fa818ff72f043ea4","797cfbacb483d815b7819b3cf867533af99a630f2beea11cc26592b0c2d42cb1","4b26040bc29ea84ee18561c65d6994a07cfb168240c5bda0eb04bfb48190b219","06709b34a5d72762ab905843ac3443277ab884dc32fce8b3b0d51bcdb5064b74","cbb6fbcffa54cb81308247f17b64f1cb22ca015fba420fdb7c2c61c3a2adfcda","d37a6f1e29ec3244911f7d28cf815251ef113387c8618426acdab8d153940bbc","0e0af8c8426a911142d13768859c1b49e120f60bb153ce6dd197e30f9b8b6820","87e68d28db4ab68bfa35d6d1b57ea233d90e1c678f3da187f796075ff3a8e85d","afdf59e4068da139bff61ba0887ae9c76f46373f95932efd54ee7910b6502a1a","b07d57ba8d3e203d16450dd2426270030368821d3d418b291a05801a362d4d99","ecd8abab263e35cda153af96d4f29c711ff477a4c2bd81698cdfc727836547e3","e9a208aad09ea42f46bdd52d309774b73e7a02762281c51377973025a9cb7250","d264ffe701d5be437313c4f6f7d8f27ce029fc5cc3c51e42e9b60bed6d943e34","d2dcfbb9046a3f918ba22ebc91310f31606cebca173944df0544dc14ed26939a","2bef42b3474c69a11119442d099d6ee4952a9e1ee2674a76df68e67ee853c9f8","0880a3c557fb7ce460173df4c71dc39365359c053da107caad5fbe03a249c69e","f636742cc740b78907aa1010d1fc25cd7d2e5966a3aa149d74ce9370627ff852","b8ef751a4bad89dfe59fa19218e89bdb5c74e6cba080bdbee9921e1c9bf4a615","930d085f4aaabd1cc8d0f4f4837d13e04e948e77c8cf97a2e64c997088fbffcf","df1fd1099460e2d762f69fccb745265e72c14b8048f3e7de60767bbf714f6ad0","dba7c59c1095d9d149ec234ad3846af7fcb0bf6c11822f76d78c19fd0e086473","de378d46014d3f7e673fecf74f8d02bc27a30ffd85ca378927fba171f83f2f66","ec8924ce154b4a9dc676762fd43a7f785fc2cb6a21a0250b34216c8ed757f0bd","6da8dd746a2c6c74c7a874d809f62f908439319fed0505b579774066ce551bcb","a0cbce32b63aa070e5f4aa15e918886492e71c9753426d573e8a9deac1dd8abe","2431e657962c860594400df7d3c49f3c6eefb7e193f158bd9e7f0f965256a33c","30e5961d52cdabbbdaa5169c3c71a77a5aa0f8ac70ebb1f250f6fdaa2007ed3d","37e82fceaba98ef3038072809e67d0b8ed4b37c3a4aa82ed7dbf48676bf2750e","3fa0235c0ee6318d87108b06d6f922f525dcf039a32231d1667b96e202a8b009","5b7c7e06d9f383a1ee8d3b700c4d1419331f4166aa340c7788a35bec98331f34","2df3bf27c69b2c5d47b17649447817b802ad9166d31bfb7c33806195c03a8d83","ee235306953241273af6e40d709d4097476ecb599229473fb55b461288ed1993","2bef48831eaf4bf89166732f51f741488205c30f5184adc03a34a63a6c9a70bd","5fb0a11bc0cb66afc528b180067199bc542c46f6fd95649c3137f3a94bf8412b","6b6814ee731c1e6ee609b98086b273d1aa13333182edd24be8be569c7b7d07df","18cce8e15d2846c71faa2543b08b70b1c04bac9a26427eb98a4e0bad24976a90","ab3a5590e693ad5fb0a1a19c17e2b01258c88fe4617a4cae9d4058cc18946d08","8b4025f2c3f2aed06120f2d20f55d5bc10a06c7a40e058eafe13af9240f85c7c","698972a628b6dbbc1d4d917d422b56e429501ec8758270e527c70401227d094a","212e0c8f420a4c1866546cb7d50ba94537c25aaa715e84685d8995798125b9b9","39b74fe9bd08e3154f281117a5fe5bfa6b1afdfe8556eda1fc82428828329fd4","8b80893422089fff8f07496f4f66f1207847f6a9645c88d75c2877fabd453f11","cf41eb0cb37e385c1d777bdfefc05f0617857fd72d3a455d6d4f81e5e31a397f","583b9e0633074c66e97445426ac0b07bdb388f87e92449baae08cd5ab9cbf846","07646330c0cf3e5429bf2fce8647b0369a9cef8dc9b7a327e2ff47c4d1b916e3","eb277e8bb50c4fbc16ac5e8238b88880626f3ad672d7af92f2d29eaa522a9399","bfdff632c328e37b1946e1b6d7120933c145fac5a6eed6c8adaba5f5e56e64e3","b04f1498e13102326e1968fac4c2d37ca0c2b7abd76812892d9496151083aa91","c413aa82126a73c6280ce1177d151c01640790b5913e6ac80b62b0cce0ebaed3","93436c1aebb65cf409cf9879764d584439bbccc2f87e05763c30b70ead288013","2bbe03e00b2dd6db70bee6237f166c7fbc2b6e301918b3e9a6b62cf0df6eb370","522b79a823b5d466fbfe86cd25473045a8ad45f2a9b9df00e19fe5f3d00ab635","db17b27cc4514d286387592824d7bd39dea6737b799787d72acaa6556d40092e","0d6d484d91ba60f459fc8fcb35d08f6791711f05c8156bb6fc17b0a6fca81541","7bfc9cdd904b12b8f14d2160a092c90afd13cedffe96b8b50a71806431a01873","4981a6995ea12a015408f795188b03a7476c5148b051ea55126a82b62e06708f","843b27075f3ed5a868bad8c9f29b9d275f8a61b3e3c4e760ff6d64e1bf9a6f9c","3c54e9f8641d69914fbda6cac089757a412fb904f0a075dbc65bce568f4a90b7","472d9a32c8571cbfbddbe80686e464464ab008caa48c65677b0d35a0e506d06c","9daca9b36125be1487105a71756caff00669c1871a01209f63b3f9285c5503ec","9567454f4649cdcd899ec3328e8ddf843e0cfd59b832b3e23879d56ca4fadb35","2687e7d974ad531a64538810770312b81193fb7f143cd09fa89e05aad414cb55","c00565777871b6d76d065c51af1d2fbc414f8804498f8692861f0ef3759d8812","12a3233962e3103fd3e4f4de0c26e0f17cd7c3d37b0aaa0743b8dcc7038d0e33","4da29c03d43f81993290813ab4d7b3d29812ce0cc1ccfce9784d076f726fe753","fb58a4485f54c463027b36c4843098de5fdb536594f49ed81f783252561f77f6","6c09333a0c899f83c1444a379ebdcebeea8fd6b25fc6bec2e0e1e5724bcdecc5","ec85cf13bd5d52a3b29672c8d5509e0d6478721d814d933578fc769e82ac7f2d","939c575afa1e1720c9cafcf09d5ad218f7ffcc36743b7cf33581dff722fde7fc","315000295ec26a0a60741a2021d3b84b8f2cc2b8f636de5851436f7464f7ab98","b7956653d6f5d55877326e67cedd538243d9953819e019242502c432381fcee5","d655eefdb3a03cdab08a7d48ff49f42feef1974b3702a1b3010888d51e2428f5","8bd215328a9fd468ffa6f0c1bec8727e9081eadcc4659f3ea56b2e54412a4cc9","d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","833e92c058d033cde3f29a6c7603f517001d1ddd8020bc94d2067a3bc69b2a8e","08b2fae7b0f553ad9f79faec864b179fc58bc172e295a70943e8585dd85f600c","f12edf1672a94c578eca32216839604f1e1c16b40a1896198deabf99c882b340","e3498cf5e428e6c6b9e97bd88736f26d6cf147dedbfa5a8ad3ed8e05e059af8a","dba3f34531fd9b1b6e072928b6f885aa4d28dd6789cbd0e93563d43f4b62da53","f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","2329d90062487e1eaca87b5e06abcbbeeecf80a82f65f949fd332cfcf824b87b","25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","4fdb529707247a1a917a4626bfb6a293d52cd8ee57ccf03830ec91d39d606d6d","a9ebb67d6bbead6044b43714b50dcb77b8f7541ffe803046fdec1714c1eba206","5780b706cece027f0d4444fbb4e1af62dc51e19da7c3d3719f67b22b033859b9","7253b2045ea6b599d85ef9dd7ce2bf5439a1a98a27f078ba2115bedf61d738c7","ca58ededf2c0cd0563e8d83fef922817ff2a1ed9bd750242b17146354c1c5243","9d34b57d308ce327e484887106e68e2a82beaf263fea298e4ada5b3925ccbb8d","fe1f945db9c3cb35788d028ce9338b06256cd6041f2597668b9359f2b4fd4197","641fe481fff812b6a151b7fe0996468ced591244c6682b6ba2610b0bf016a9c6","63e5f3ffc50b8c29acf5396c0468a290c927cb7a5208ffb74add35670867e476","06c3f71832c76a82329b45610793b56d0b78fb02603d90f8a7629f49cb0dec1f","ca586208341738cb5e6d144536d83f91d96856c5828307088d242d52e4d439d4","fde0e854df7095db9f8b5cbe3804845a437750ff3c9edcaf2572e66885b230a3","6a63ec446b7fda7a8f1307c1a4659d6b8d1c617400b46d6b49f3d97ddfa93905","c461e128927c8492fff179d344735023ae189c4b626af91adb7b63c6c4b7248f","6b2706a5cee62ef25fdb7a9a268f558a15de9df894984ed13a07c8318576ef51","353fe785452a3c2d6ff2a41fb0684bd2878e78f3728fc5dae98634ccfaa9beae","521bbccf0edf1f69c488c6828716bdfb04acb69ea3ee5e3b7140bfa22ed6c342","dfdb07c32025c9aac5707797e48c46c8fc1416c3c3a5cab9677a75ab78a787ae","e1e115f590a02130c539f61c20460291711dccbdaa3fe4bbad43ab770dd4306e","e4fe42173b249ff533174cfbde4510ce5345da50c2f717b3ca27eda49929dad1","0dbd184576784dbc0b0caa1f022bbb1024a4f27b77e9bf5738c73841c218f4ab","17023bb4eba80df5152e45fa10ec0fa4105fa1c59cb30a51d5724c77cf041151","05b84716272aee3042dbeb319aa5b1ff5b8e77b62ae24be00b88cf8e04cab4a2","86d850e3572c2ed8f56d73a1ce7c5c4f3ea5a62170b82db65f3055f73614099d","4ab4cb977736067eda6f2ff73e521424a818319a1a70616ad2db2ba0b9dd5322","fa790e874499cb17016556f3168948f8d751dcb35a0862a9b9c55bb2ec353d48","795692a29dca5a39f904825a4abc78f9acc3a54ecc6858d8a268c52679f21751",{"version":"6876211ece0832abdfe13c43c65a555549bb4ca8c6bb4078d68cf923aeb6009e","affectsGlobalScope":true},{"version":"394fda71d5d6bd00a372437dff510feab37b92f345861e592f956d6995e9c1ce","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},{"version":"c564fc7c6f57b43ebe0b69bc6719d38ff753f6afe55dadf2dba36fb3558f39b6","affectsGlobalScope":true},{"version":"109b9c280e8848c08bf4a78fff1fed0750a6ca1735671b5cf08b71bae5448c03","affectsGlobalScope":true},"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","e525f9e67f5ddba7b5548430211cae2479070b70ef1fd93550c96c10529457bd","ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","17fe9131bec653b07b0a1a8b99a830216e3e43fe0ea2605be318dc31777c8bbf","3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","2c9875466123715464539bfd69bcaccb8ff6f3e217809428e0d7bd6323416d01","ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","2472ef4c28971272a897fdb85d4155df022e1f5d9a474a526b8fc2ef598af94e","6c8e442ba33b07892169a14f7757321e49ab0f1032d676d321a1fdab8a67d40c","b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","19851a6596401ca52d42117108d35e87230fc21593df5c4d3da7108526b6111c","3825bf209f1662dfd039010a27747b73d0ef379f79970b1d05601ec8e8a4249f","0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","40bfc70953be2617dc71979c14e9e99c5e65c940a4f1c9759ddb90b0f8ff6b1a","da52342062e70c77213e45107921100ba9f9b3a30dd019444cf349e5fb3470c4","e9ace91946385d29192766bf783b8460c7dbcbfc63284aa3c9cae6de5155c8bc","40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","561c60d8bfe0fec2c08827d09ff039eca0c1f9b50ef231025e5a549655ed0298","1e30c045732e7db8f7a82cf90b516ebe693d2f499ce2250a977ec0d12e44a529","84b736594d8760f43400202859cda55607663090a43445a078963031d47e25e7","499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","e38d4fdf79e1eadd92ed7844c331dbaa40f29f21541cfee4e1acff4db09cda33","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","7c10a32ae6f3962672e6869ee2c794e8055d8225ef35c91c0228e354b4e5d2d3","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e",{"version":"f4b4faedc57701ae727d78ba4a83e466a6e3bdcbe40efbf913b17e860642897c","affectsGlobalScope":true},"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7",{"version":"003ec918ec442c3a4db2c36dc0c9c766977ea1c8bcc1ca7c2085868727c3d3f6","affectsGlobalScope":true},"938f94db8400d0b479626b9006245a833d50ce8337f391085fad4af540279567","c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c",{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true},"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a",{"version":"12fb9c13f24845000d7bd9660d11587e27ef967cbd64bd9df19ae3e6aa9b52d4","affectsGlobalScope":true},"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","5078cd62dbdf91ae8b1dc90b1384dec71a9c0932d62bdafb1a811d2a8e26bef2","a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c",{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true},"2f32444438ecb1fa4519f6ec3977d69ce0e3acfa18b803e5cd725c204501f350","0ab3c844f1eb5a1d94c90edc346a25eb9d3943af7a7812f061bf2d627d8afac0","b0a84d9348601dbc217017c0721d6064c3b1af9b392663348ba146fdae0c7afd","161f09445a8b4ba07f62ae54b27054e4234e7957062e34c6362300726dabd315","77fced47f495f4ff29bb49c52c605c5e73cd9b47d50080133783032769a9d8a6","e6057f9e7b0c64d4527afeeada89f313f96a53291705f069a9193c18880578cb",{"version":"34ecb9596317c44dab586118fb62c1565d3dad98d201cd77f3e6b0dde453339c","affectsGlobalScope":true},"0f5cda0282e1d18198e2887387eb2f026372ebc4e11c4e4516fef8a19ee4d514","e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86",{"version":"237581f5ec4620a17e791d3bb79bad3af01e27a274dbee875ac9b0721a4fe97d","affectsGlobalScope":true},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true},"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","e6d81b1f7ab11dc1b1ad7ad29fcfad6904419b36baf55ed5e80df48d56ac3aff","1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","b6b8e3736383a1d27e2592c484a940eeb37ec4808ba9e74dd57679b2453b5865","d6f36b683c59ac0d68a1d5ee906e578e2f5e9a285bca80ff95ce61cdc9ddcdeb","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093",{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true},"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","b338a6e6c1d456e65a6ea78da283e3077fe8edf7202ae10490abbba5b952b05e",{"version":"2918b7c516051c30186a1055ebcdb3580522be7190f8a2fff4100ea714c7c366","affectsGlobalScope":true},"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","982efeb2573605d4e6d5df4dc7e40846bda8b9e678e058fc99522ab6165c479e","e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055",{"version":"d67fc92a91171632fc74f413ce42ff1aa7fbcc5a85b127101f7ec446d2039a1f","affectsGlobalScope":true},{"version":"d40e4631100dbc067268bce96b07d7aff7f28a541b1bfb7ef791c64a696b3d33","affectsGlobalScope":true},"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","42180b657831d1b8fead051698618b31da623fb71ff37f002cb9d932cfa775f1","4f98d6fb4fe7cbeaa04635c6eaa119d966285d4d39f0eb55b2654187b0b27446",{"version":"e4c653466d0497d87fa9ffd00e59a95f33bc1c1722c3f5c84dab2e950c18da70","affectsGlobalScope":true},"e6dcc3b933e864e91d4bea94274ad69854d5d2a1311a4b0e20408a57af19e95d","2119ab23f794e7b563cc1a005b964e2f59b8ebcb3dfe2ce61d0c782bfd5e02a2","0fd641a3b3e3ec89058051a284135a3f30b94a325fb809c4e4159ec5495b5cdc","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","e66eb237e7629bdc09f5f99fd69b73a0511fafb799783496a37432dde5ce0bf0","fdec06934bf00cb7c1187b7f2f1ac6bf2f327ab5af71a543c48d919baa194f1a","9c8f99dfcd80875222e3a4923525595503174088a6eedce78ae3ea81fd650323","652c8e676e1b94c7829671c0eb237528f76a0ba67ac846c065bceb4088ebddd7","caac4c00061a947d2b1010bb6464f06197f2671bdf948fa1aa40bf1e244ee2a0","95b6c669e7ed7c5358c03f8aa24986640f6125ee81bb99e70e9155974f7fd253","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","c3e5b75e1af87b8e67e12e21332e708f7eccee6aac6261cfe98ca36652cdcb53","f7dd7280ee4f0420865e6423fe199aeac63d1d66203a8b631077cdc15501ef1f","ef62b4aa372f77458d84c26614b44129f929e263c81b5cd1034f5828a5530412","8610558ae88a43ad794c4ab1da4f0e8e174e0357c88f6cbb21f523e67414e9a9","0b0feb9837c561c0a67b61024328045bb16bac6e4b10f7b0b217d3b8b43b0b12","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","d1c6c35d174dbe63a76ed8ac6621cca8dbe8794961a2121feb5f0239747d1b7e","051c1bc0efd3690031a97ac49133c9486c22bd07852e75a11ed4b40ceb722569","a22270cba4f004f64a61cec3e39574416e3ca72e848f53a36ba3add746243217","447b9b631351b40faa0e961e6cbb5e269bc1fa61f7a615b8077b31a94aaefae3","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","e641fd321ca5fe17b532bd3b5a6e85a8741bbde7a9d7110d8ed272605c1c4a25","9d63720cd09e8b0ae76e0ade1993b7ec600e6729e453f459d4039d6914914c1a","8b324c8813c2bee210a7a79eede7abc4b5c60132fd497e140ce312a856af22a4","ff2d2f19561cd3a594d7cfeeb29797e62c8d9ef62df65916e6be9bdcfbaf8f7d","d59191f0bb663800c0856116d69ae11125eeae891d0a46c0be52f3c78ed4890e","d8360fe15a60f549584a9ff7d0e6129ed77abdbcf062b4da1a10a78175d34f71","a57b37eae916e680e5e15b36d17b22bb05834115041fe940f11d9e714501ff84","e53086c8f861bee1717e3e001498d2a493f786c6fcbb0027fc4352f00fcaa3cd","446242adee16900500f9d9dba2678258641f7e8f692f43c18dde8872167107bb","6ef7ba3b3d2514336c59d1af84e2d7550a886a5be193d9cb980cc6d16698236f","185e38aa301aaaaf3870183acd48f9b4da7baa5282cb9ed102a10004b0751cc2","1f0c7b51e98442f125414c1d43c6a04abc8ee800066834d742eb99b0e542d327","131c58b9b527fa99139dabaaf585ed52e9f5c450c1347c87bcb9af9b884e63ea","2642f053f18152ed5ba6403217f932e4fa0be0077f38734b168ab92da948b3c4","5718fb71731197c4e623120e93c5ece9061f569aa4dc28ffcbb8b4fb5ffe2ba6","9bc5d8cd23570760dc417cb10b01079bdb919b4dfeaab9c4341cf11d37d7a29e","0671e90198a35ffd8e5dd35c5ce0fd4839305f6fe9878ca9851a25c097a7874a","a3d9df9d57f7e47f70e013a46cf1c38177579dbb2c5b567bde24c7a67ed1303d","b4ac0ae1e7ed09d2ab8496d65c04643742a1811c6c5f34d9f9504a3868bc02e8","b63b8dfe391e40354edfb991062b8e8e28ef36a28644a7904f6a38f51a8a2386","375ecb9cebdd43c6fd230cfc02c6640344aadf920319b73a3c8514f45f23167c","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73","67c51fa68aadbb50e4ffc650b704620e0393bddb3d3eac3a6195bf1956562fe4","8187d9966b8fa5a2d0e53c71903adb5aa71ebc2a23410ab2d37eb764db800829","d851073758ff1ce39bb428d8a3b3385ca26da1745ca742789e876d67dc0aae43","0cee5b30f4300e628927dde7e7ae7b5bc32250a685242474d069b9346da8a2b1","6fdc7cbbbc0601f9bb153c30c0e8063321cd1c9211ad512b9fde1d1f785b35dd","6ae7157666262b5c0402463531996601150583cb1f4f9421f184a0eec9049f10","fbd0ac5a6097c20307587444815092eb1825d831991363423ef0ce70ef053e82","ec0b2f8ed3cc053fdb004ab4979c32625179a746717504e08fc30cef9ec9d7a3","2887592574fcdfd087647c539dcb0fbe5af2521270dad4a37f9d17c16190d579","ed434fd49cf57789f99d3d2f4fb4d5f4930825280ceaae21200d840609345161","3ea3b60de13285b50d9752812d3a6d2cae078d89031713613f58cd2f5565589a","4b0465994a4b18dd63a9af850c74024e6184deac2477ab87135f7d1b11a07178","3031ed6baeacbaf771576f64094d8a977e5be37b04d4dbb335fff9cc1d95a147","5f02cf0f7cc845c12b09607f97e57f942c313ebee6c33a3efbc346f19b499c7f","8e1eb67ef6924cd14793af526f9a4e3195b5734920a75ec29900731b1997f2ce","07fa4bb359f3cacde0e0b6d75cd9a53b88168088be58e01b385cd12e12a6d5d4","52d5d4a344ea0781bf00874c4829e3cfb0c12e1fa28c17740e773bc247fa663c","89ebb5291da50663149fc01245eeca4f8bf1a2bd8a3fe84ea62d926d53a6460f","792128daaa6209b5d52148b1952b56aad02fcf72435283a2d5ac1fb22113cd91","c474689555d4e49d5210e6c6d95f939e31f49158af350cbc403e4fdda5d32386","d4c5aebfd4d5468e03fee82920222d861737cc6ec5c9829474a36e379753fc52","f8fd01e7967e335266c6113c5d9bf15113768c5747265420dae0fdf1868eb05c","7a89d77bf137521a06ff5b3ce7297c663f3c27912b09320fa520c1b2d6bab9e5","7647ed4e66d98048478e6245f50b794a916ffa456fb362672e52c01e1b09a644","9a22045cb43de6fab0b5e524e4cef807e5a2c6e0a49044de56b65448e1572a14","4441e06cf8e7ffff0519950e34df3608ca1016f09f83fdfb7f71ab7376ac5a47","45d0cb97f71ad1fd0688b8a95c2a2b3cce347cd458ec365af4079c0273b49dc6","6c86a8ced863164acfbe7753660a7ba4aa97cdaa1e3b8d193a18316f906d4bbf","2dd10019ccc6f059b703db2f58f6f385625d235869fe562978b5a913e5db4c69","e4c66039756093e60d857430f451ffff1ca3fa5a951367b67dcc8f29b47b2d72","48433ed0754c860ebfeeec213f9c5943cc6b8aa7b70ce1bd9c5c6a490ed91229","c2708a205c4afa73bfeebaf0e939390b3b3fe9cd1788b09389ee0d736cd75a72","8f6d44ee7619da14f50cf051a243c41793ff1dccda8d8a3bb2255989df114c30","2aca83fda179d79a68a259bc47999615976b935d2eeb391304db8a095af721e6","26b3b07bb0229b36ba87ec2b0ca1a42a927c2e8a8bd5ae9339d5a82d950eb3ce","8767c93beffebe9eda0c03e4893ab2fe9b62ff65bf767a003cbba50cfe810a28","d7f211b5ba9e9fc21ba0fbf12b3ceda8680f672da595068dbb4d2d1f9a0c83b1","e613a48817a40243523fa26bb5e3396e6d60c79a1c0c59274889560f34cfdde7","ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","80b232969d72e6f08081a4a0b558537db2671a1a60bb44559d5e3b5f1fc89cd6",{"version":"841784cfa9046a2b3e453d638ea5c3e53680eb8225a45db1c13813f6ea4095e5","affectsGlobalScope":true},"646ef1cff0ec3cf8e96adb1848357788f244b217345944c2be2942a62764b771","0ab7506c71d3467c8db4fdc2512e5960afcfeb0a4f51467d79c9b51af5ec9e63","d45bd3d7c328e85331b3deb75be0f5bef5746ff9efa27900c769ad0e3461acb4","0eb2ed1c1c8d87ba91ae080e95a5f4891e3bdd31626b894655985760a2e56afd","3cfb7c0c642b19fb75132154040bb7cd840f0002f9955b14154e69611b9b3f81","8387ec1601cf6b8948672537cf8d430431ba0d87b1f9537b4597c1ab8d3ade5b","d16f1c460b1ca9158e030fdf3641e1de11135e0c7169d3e8cf17cc4cc35d5e64","a934063af84f8117b8ce51851c1af2b76efe960aa4c7b48d0343a1b15c01aedf","e3c5ad476eb2fca8505aee5bdfdf9bf11760df5d0f9545db23f12a5c4d72a718","d0570ce419fb38287e7b39c910b468becb5b2278cf33b1000a3d3e82a46ecae2","3aca7f4260dad9dcc0a0333654cb3cde6664d34a553ec06c953bce11151764d7","a0a6f0095f25f08a7129bc4d7cb8438039ec422dc341218d274e1e5131115988","b58f396fe4cfe5a0e4d594996bc8c1bfe25496fbc66cf169d41ac3c139418c77","45785e608b3d380c79e21957a6d1467e1206ac0281644e43e8ed6498808ace72","bece27602416508ba946868ad34d09997911016dbd6893fb884633017f74e2c5","2a90177ebaef25de89351de964c2c601ab54d6e3a157cba60d9cd3eaf5a5ee1a","82200e963d3c767976a5a9f41ecf8c65eca14a6b33dcbe00214fcbe959698c46","b4966c503c08bbd9e834037a8ab60e5f53c5fd1092e8873c4a1c344806acdab2","480c20eddc2ee5f57954609b2f7a3368f6e0dda4037aa09ccf0d37e0b20d4e5c","40a9e5673448badb43d693daf20698c452782ae1682887b9d1ccbf207589781a","f2834e7008d641386a0d313ef33e974effb5815755254506341a0f3ba846a506","2e44250d356340733b1f210ad994bf11a0ae802186d5ad6b602661030f811db2","d01f869e0aa82d99b590ac59b6906d0f4ccae1d903d1dd1e622d944f4741b829","8d5a0a154fda1d5422fc0a0432821d5485ef88588ceb267651bf0ac786addcfa","b25d24260ac27016213b336707cb6bd279e12b946304118837ca0bd93831bb0b","81b8cf069b2fad8ff8112f832db6a32b7735b3291855ae71876e8dd07687a438","da0f84fcd93700b4a5fbf9c6f166a6cc19fc798231bff56dd1e3875bfc6966eb","634ff08e0143bec98401c737de7bfc6883bfec09200bd3806d2a4cfc79c62aaa","90a86863e3a57143c50fec5129d844ec12cef8fe44d120e56650ed51a6ce9867","472c0a98c5de98b8f5206132c941b052f5cc1ae78860cb8712ac4f1ebf4550ca","538c4903ef9f8df7d84c6cf2e065d589a2532d152fa44105c7093a606393b814","cfcb6acbb793a78b20899e6537c010bfbbf939c77471abcdc2a41faf9682ca1a","a7798e86de8e76844f774f8e0e338149893789cdc08970381f0ae78c86e8667f","eebc21bb922816f92302a1f9dcefc938e74d4af8c0a111b2a52519d7e25d4868","6b359d3c3138a9f4d3a9c9a8fda24be6fd15bd789e692252b53e68ce99db8edc","9488b648a6a4146b26c0fd4e85984f617056293092a89861f5259a69be16ca5c","e156513655462b5811a8f980e32ccd204c19042f8c9756430fe4e8d6f7c1326e","5679b694d138b8c4b3d56c9b1210f903c6b0ca2b5e7f1682a2dd41a6c955f094","ca8da035b76fb0136d2c1390dda650b7979202dbe0f5dc7eaefcde1c76dee4f4","4b1022a607444684abeee6537e4cace97263d1ef047c31b012c41fdc15838a79",{"version":"dd0271250f1e4314e52d7e0da9f3b25a708827f8a43ceff847a2a5e3fd3283e8","affectsGlobalScope":true},{"version":"47971d8a8639a2a2dd684091c6e7660ec5909fed540c4479ca24e22ac237194e","affectsGlobalScope":true},"e1075312b07671ef1cbf46409a0fa2eb2b90bb59c6215c94f0e530113013eeda","1bfd63c3f3749c5dc925bb0c05f229f9a376b8d3f8173d0e01901c08202caf6f","da850b4fdbabdd528f8b9c2784c5ba3b3bedc4e2e1e34dcd08b6407f9ec61a25","e61c918bb5f4a39b795a06e22bc4d44befcefd22f6a5c8a732c9ed0b565a6128","ee56351989b0e6f31fd35c9048e222146ced0aac68c64ce2e034f7c881327d6d","f58b2f1c8f4bcf519377d39f9555631b6507977ad2f4d8b73ac04622716dc925","4c805d3d1228c73877e7550afd8b881d89d9bc0c6b73c88940cffcdd2931b1f6","4aa74b4bc57c535815ae004550c59a953c8f8c3c61418ac47a7dcfefba76d1ba","78b17ceb133d95df989a1e073891259b54c968f71f416cd76185308af4f9a185","d76e5d04d111581b97e0aa35de3063022d20d572f22f388d3846a73f6ce0b788","0a53bb48eba6e9f5a56e3b85529fbbe786d96e84871579d10593d4f3ae0f9dba","d34fb8b0a66f0a406c7ce63a36f16dda7ff4500b11b0bd30a491aa0d59336d1f","282b31893b18a06114e5173f775dd085597ca220d183b8bd474d21846c048334","ed27d5ce258f069acf0036471d1fbb56b4cb3c16d7401b52a51297eca651db62","ec203a515afd88589bf1d384535024f5b90ebe6b5c416fb3dcca0abd428a8ba4","32a2a1374b57f0744d284ca93b477bd97825922513a24dfe262cbf3497377d96","a8b60d24dc1eb26c0e987f9461c893744339a7f48e4496f8077f258a644cffab",{"version":"3f9df27a77a23d69088e369b42af5f95bcb3e605e6b5c2395f0bfcd82045e051","affectsGlobalScope":true},"9fd080a9458c6d6f3eb6d4e2b12a3ec498d7d219863e9dca0646bdee9acce875",{"version":"e5d31928bee2ba0e72aeb858881891f8948326e4f91823028d0aea5c6f9e7564","affectsGlobalScope":true},"9a9ba9f6fd097bb2f57d68da8a39403bbe4dc818b8ccd155a780e4e23fa556f2","e50c4cd1f5cbce3e74c19a5bbf503c460e6ae86597e6d648a98c7f6c90b596dd",{"version":"fa140f881e20591ce163039a7968b54c5e51c11228708b4f9147473d06471cf5","affectsGlobalScope":true},"295eca0c47be1191690fd2fe588195fff9d4dc43852aceb8b4cab2aa634579f0","59ee7346e19b0050508a592702871dc943083c6dcb69a47d52e888115d840781","067712491fb2094c212c733dd8e2d56e74c309a9ce9dac9e919286b7245a1eb4","a5eae58ac55bd30c42359e4b01fb2be5eddac336869d3f04ffb4daa54b58f009","d12d691ef8933e8db39f2ca81d6973940ff5e37bb421752f5b6e7bc15dea3abf","4c5f8bd9b3a1aae4e4fddfee41667e495a045f73ed603993038fa6a8ba92fa14","dfb274ab0f319cf18ce7152067c25f984c7fd1924fc72b3f66734588444c934a","108c8c05cbc3fbbbd4ff4fc0779c9bef55655c28528eb0f77829795dc9f0b484","a7e5444d24cdec45f113f4fb8a687e1c83a5d30c55d2da19a04be71108ad77bd","41ec17e218b7358fcff25c719bc419fec8ec98f13e561b9a33b07392d4fec24c","23c204326746e981e02d7f0a15ab6f8015f9035998cb3766c9ddbf8ea247aea2","25f994b5d76ce6a3186a3319555bbba79706dac2174019915c39ac6080e98c7e","dfa4e2c6a612d43851ccbc499598cb006a3a78bc8c7f972c52078f862fa84e47","02c1705fa902f172be6e9020d74bcd92ce5db8d2ef3e1b03aabc2ac8eb46c3db","99d2d8a0c7bb3dd77459552269a7b5865fa912cedab69db686d40d2586b551f7","b47abe58626d76d258472b1d5f76752dd29efe681545f32698db84e7f83517df","3a99bbbbbf42e45c3d203e7c74f1319b79f9821c5e5f3cdd03249184d3e003ce","aaacc0e12ab4de27bdf131f666e315d8e60abec26c7f87501e0a7806fc824ae6","3b4195afd41a9215afc7be0820f8083f6bd2e85e5e0b45bb0061fb041944711e","108df8095f5e25d7189dd0d1433ac2df75ec40c779d8faf7d2670f1485beb643","ddd3c1d3c9ff67140191a3cf49b09875e20f28f2fc5535ae5ea16e14293a989b","7b496e53d5f7e1737adcb5610516476ee055bf547918797348f245c68e7418fe","577f44389d7faedd7fc9c0330caf73140e5d0d5f6c968210bff78be569f398a7","3046c57724587a59bceefadd30040d418e9df81b9f3cfd680618a3511302ed7a","15ccc911ed15397e838471bfe6d476c28deffe976c05cb057e6b1ea7491242c2","64b5a5ebdaead77a9a564aa938f4fb7a45e27cda7441d3bee8c9de8a4df5a04f","a48037f7af5f80df8973db5e562e17566407541de284b8dadf1879ea3aed8a2f","dab97d96ce986857150db03f0d435b44c060d126b4a387c7807f4e9f6c92e531","85f39366ea7bc5e34b596fc97de18a7e377856755e789d8e931054f2191d9b8b","daf3ea3d49f6e8a2fa70b7ca1f21bd97f1b65021b31fbfccb73dd55f86abb792","b15bd260805f9dd06cd4b2b741057209994823942c5696fd835e8a04fb4aab6b","6635a824edf99ed52dbd3502d5bce35990c3ed5e2ec5cef88229df8ac0c52b06","d6577effa37aae713c34363b7cc4c84851cbabe399882c60e2b70bcbb02bfa01","8eaf80ad438890fe5880c39a7bbf2c998ce7d29d4c14dd56d82db63bd871eefb","9b3e7f776f312c76ac67e1060e5398d7ac2c69d6a3a928a9daaae2eb05b15f56","202042eccb4789b7dee51ba9ecab0b854834ea5c1d6a3946504bfc733d4468c3","2b2ef76a9f36094b07ee6f76a5ac6903f2f65c0a20283201814a8d1e752cb592","8882e4e087d0bc8cc713cb3d8090c45d33e373e6f5c83e0f8d00fe6a950ef875","42979c197a22211d72c9cf1de8559f0a39de0b0687eea63c6407a69d9d73c13f","cc36098e27200f5daceffff4a4694148746aaa1b369536186fa1caa43d8b4bde","07133796953f82127aebef603392f1430690fe6cfd5d3d4c2bd3b277c6566d79","9079300efc80cdcb5a5cd153bdc354ac3439619e661e5f35413f81f94d4aa897","3655e77b67da6b52b34f7abd79890cdbc9ce2e2a3579fc2568f07d77d1d60ec9","95a1ff30ceba2b8c185a76002e2a4578cca9a593d8b642b7d5b13275ece952b9","2a43ea656e1e3ae2ec876766d9d4576a53b079a1cd352367db12fc721033c08b","e8835cfaf67d1730e430a800d447ea79d33c59fc990455965ca85dcc16c6ec64","98631e5438157a2bc50970527c20d9a0d02def63700cb8f21ee19520a982fbc0","93a5f2ecf21f69045a129ef7821396276c117b34eb39d0b5510ff90c34839f56","4d054866f6bed47338a905264c4cc16108dfb55353a97d67b5beb0393f78fbc4","cc611eddaabd228585429f406dc5b2ef53db92e954f3fab97f8cc67b84b0a67b","51d3abc39997f19e1e0e13fe545c786465259a3f6625b27828e47847a00acc27","982c00b942df3ad3aa49500b7f253bad1f2624d4c5e0e0eea1ee20529d90296f","a9f610a8bd1aa513ca9ee39a05566e7439b45ef24670858f4b0a3b1b33a17923","a7b268ed0284472916b39062cea1ec8ca946b048b7f8992b14221d4318cb7f5b","7748692e43d33e0f58fd69f9e84f568430d147be8a5fec55aea68c73f63908a1","cee3e7bec863f019aa744e00dd7a8470f2f6ff951c498c501ad6e296aca9f418","98e5bfadb80d850109194eb7cbdae761564cf0aa4cdd39e70eb73fe628af6bf8","5da731f0b18d358e4e0ca682928298de26c6eabee5990d03333e0e8aef335ea2","5ed1241d2008dfabf2145443b9fb285b7bdcd8211266187ed9dfb2ae5b80f869","f60e1afcef13dcd11edafbd3f7720a5a50c3d2d90b4cb27cea58adb16efd12ed","e6a1fc7243e8a4f92cbafa2bac261e3540968403f082df44ae521b8e2658efbd","b745f5b14ad0407d94b3b3e764ceb6e6c1c0873528461421046751f7a3c84b17","554028fd3b11a78660ed0cb98b5fd343bc9b8a9b8495114e6ae5d13aed49f242","e4125c670944f6369be310c830b37391a82b4f8f500399a17b041962e1fe1dd2","60cded932be8d4f5de5c3a7f56c5e01438ce8ec7f110d4c87fdf2bfdb910dbd0","06e0622d8d29254863de52ca0da62329d78c5e02086481fbcef6c9cd74796d84","ad5346fa860e1577699a7a1e6543f7e811dd209164ed4e226566595c50ad3dd4","749ad4dbb8d1d33ab4283f8ffa875669e067f917cf1d17162e149b571c689f9a","dc278a8129f50ef9555060cf12ba10a11c2a816bad01c2f1abd2f87f6ac3796c","ee94a249d6f6c94e2656e1abc6820a25a88ec1351c21929d1365d60a4381d797","bc5a1ad94db45ea72a8632a18d57efe131671c54c51347c8c9a266f5ca059d8f","1ecb3bf08e05193e81b052ca5180d2a2cfcf64602d57312dd7a5686755938b88","ee2a7977e7cc78906b894656baaf8d4080962056ee12b2024fa2f42bf8e447bf","88124457c6ce628eb357aefa18c0e23a58d92997bed3e28a5e53217a9d8ec590","bda82ce02ca6b44902394fd57e57b1b41e4de290727d92cef3cb537b21cbc5af","c288bf4485ccf06ac2da23408bbdd47c987b1ea7db59f7d3caf736d115323e42","c0007fbf0456531d2c2ac6243689559d4ea2b5a5bba9ddb28c006db5a15fe32d","c7d9afa4d252d9dee7c7c0c3752db5efcbaa39dda3df9a1e193aea3a0d056ac1","475709fda88e76c7b3bcf00a2ffa16eb2d91088caa6d9f4abdf9a6592664f676","ec1bc8ff1a835119253f23d674c3e13ba983744620a0655f73dc61f6aaeea004","4f9b48c8b5098f29ddf9041e81676fb06b078e1dfe76e1b160f93ca214d05ff3","94c5a9b9991dc4e164779653c1f2af90ad961fd23d9164c0b6e570be7456ce31","13ed3c245e4a6a8b90d3f0909198c01fd7cb48e41364c1ece3c11edecb9dc9c7","81212195a5a76330d166ecfd85eb7119e93d3b814177643fa8a10f4b40055fbf","b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","82e5a50e17833a10eb091923b7e429dc846d42f1c6161eb6beeb964288d98a15","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","f9e22729fa06ed20f8b1fe60670b7c74933fdfd44d869ddfb1919c15a5cf12fb","d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed",{"version":"a8932b7a5ef936687cc5b2492b525e2ad5e7ed321becfea4a17d5a6c80f49e92","affectsGlobalScope":true},"689be50b735f145624c6f391042155ae2ff6b90a93bac11ca5712bc866f6010c",{"version":"64d4b35c5456adf258d2cf56c341e203a073253f229ef3208fc0d5020253b241","affectsGlobalScope":true},"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","dd0c1b380ba3437adedef134b2e48869449b1db0b07b2a229069309ce7b9dd39","1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a",{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true},"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","ee65fe452abe1309389c5f50710f24114e08a302d40708101c4aa950a2a7d044","63786b6f821dee19eb898afb385bd58f1846e6cba593a35edcf9631ace09ba25","c5a14bdeb170e0e67fb4200c54e0e02fd0ec94aca894c212c9d43c2916891542","a39f2a304ccc39e70914e9db08f971d23b862b6f0e34753fad86b895fe566533","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","d88a5e779faf033be3d52142a04fbe1cb96009868e3bbdd296b2bc6c59e06c0e","8b677e0b88f3c4501c6f3ec44d3ccad1c2ba08efd8faf714b9b631b5dba1421b","8a19491eba2108d5c333c249699f40aff05ad312c04a17504573b27d91f0aede","199f9ead0daf25ae4c5632e3d1f42570af59685294a38123eef457407e13f365","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","ddef25f825320de051dcb0e62ffce621b41c67712b5b4105740c32fd83f4c449","1b3dffaa4ca8e38ac434856843505af767a614d187fb3a5ef4fcebb023c355aa","15fe687c59d62741b4494d5e623d497d55eb38966ecf5bea7f36e48fc3fbe15e",{"version":"2c3b8be03577c98530ef9cb1a76e2c812636a871f367e9edf4c5f3ce702b77f8","affectsGlobalScope":true},"1ba59c8bbeed2cb75b239bb12041582fa3e8ef32f8d0bd0ec802e38442d3f317"],"options":{"allowSyntheticDefaultImports":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":99,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":99,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"fileIdsList":[[73,201,245],[73,74,76,201,245],[73,75,201,245],[201,245],[73,75,76,77,78,79,80,201,245],[75,201,245],[69,70,201,245],[63,201,245],[63,66,201,245],[63,64,65,67,201,245],[69,201,245],[68,201,245],[68,69,71,72,201,245],[201,245,537],[201,245,248,289,295,298],[201,245,300],[201,245,298,312,315],[201,245,298,299,300,301,316],[201,245,312,332,334,363,364],[201,245,312,332,376,378],[201,245,377],[201,245,312,332],[201,245,365,378,379,380,381],[201,245,312,332,363],[201,245,291,295,312,335,338],[201,245,336,337],[201,245,315,335],[201,245,315],[201,245,312,339,350],[201,245,332,369],[201,245,312,332,369,370],[201,245,312,367,369],[201,245,295,312,332,369,370],[201,245,295,312,332,369,372],[201,245,296,297,312],[201,245,309,312,332,366,369,370,371,372,373,374,375],[201,245,312,322,328,332,368],[201,245,352,353],[201,245,353,354],[201,245,329],[201,245,312,329],[201,245,329,330,331],[201,245,296,297,312,317,322,328],[201,245,312,357],[201,245,357,358,359,360],[201,245,312,356],[201,245,295,302],[201,245,304,306,308],[201,245,297],[201,245,302,303,309,310,311],[201,245,396],[201,245,393,394,395,396,397,398,399,400,401,402,403,404,405],[201,245,386],[201,245,342],[201,245,393,394,395],[201,245,393,394],[201,245,342,396,397],[201,245,394],[201,245,388],[201,245,385,387],[201,245,406],[201,245,490],[201,245,477,478,479],[201,245,472,473,474],[201,245,450,451,452,453],[201,245,416,490],[201,245,416],[201,245,416,417,418,419,464],[201,245,454],[201,245,449,455,456,457,458,459,460,461,462,463],[201,245,464],[201,245,415],[201,245,468,470,471,489,490],[201,245,468,470],[201,245,465,468,490],[201,245,475,476,480,481,486],[201,245,469,471,481,489],[201,245,488,489],[201,245,465,469,471,487,488],[201,245,469,490],[201,245,467],[201,245,467,469,490],[201,245,465,466],[201,245,482,483,484,485],[201,245,471,490],[201,245,426],[201,245,420,427],[201,245,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],[201,245,446,490],[201,245,537,538,539,540,541],[201,245,537,539],[201,245,260,295,543],[201,245,251,295],[201,245,288,295,550],[201,245,260,295],[201,245,553,555],[201,245,552,553,554],[201,245,257,260,295,547,548,549],[201,245,544,548,550,558,559],[201,245,258,295],[201,245,257,260,262,265,277,288,295],[201,245,305],[201,245,295],[201,242,245],[201,244,245],[201,245,250,280],[201,245,246,251,257,258,265,277,288],[201,245,246,247,257,265],[201,245,248,289],[201,245,249,250,258,266],[201,245,250,277,285],[201,245,251,253,257,265],[201,244,245,252],[201,245,253,254],[201,245,255,257],[201,244,245,257],[201,245,257,258,259,277,288],[201,245,257,258,259,272,277,280],[201,240,245],[201,240,245,253,257,260,265,277,288],[201,245,257,258,260,261,265,277,285,288],[201,245,260,262,277,285,288],[201,245,257,263],[201,245,264,288],[201,245,253,257,265,277],[201,245,266],[201,245,267],[201,244,245,268],[201,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[201,245,270],[201,245,271],[201,245,257,272,273],[201,245,272,274,289,291],[201,245,257,277,278,280],[201,245,279,280],[201,245,277,278],[201,245,280],[201,245,281],[201,242,245,277,282],[201,245,257,283,284],[201,245,283,284],[201,245,250,265,277,285],[201,245,286],[197,198,199,200,201,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[245],[201,245,265,287],[201,245,260,271,288],[201,245,250,289],[201,245,277,290],[201,245,264,291],[201,245,292],[201,245,257,259,268,277,280,288,290,291,293],[201,245,277,294],[201,245,570,609],[201,245,570,594,609],[201,245,609],[201,245,570],[201,245,570,595,609],[201,245,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],[201,245,595,609],[201,245,258,277,295,546],[201,245,258,560],[201,245,260,295,547,557],[201,245,612],[201,245,257,260,262,265,277,285,288,294,295],[201,245,307],[201,245,263,295],[201,245,349],[201,245,312,347,348],[172,201,245],[201,245,312,333],[201,245,312],[201,245,383],[201,245,340,343],[201,245,340,343,344,345],[201,245,312,320],[201,245,257,295,312,319,320,321],[201,245,295,312,318,319,321],[201,245,304,346],[201,245,312,314],[201,245,313],[201,245,326,327],[201,245,312,322,323,324,325],[201,245,312,322,328,332,339,351,355,361,362],[201,245,312,322,328],[201,245,382,384],[201,245,341],[61,201,245],[57,201,245],[57,58,59,60,201,245],[201,210,214,245,288],[201,210,245,277,288],[201,245,277],[201,205,245],[201,207,210,245,288],[201,245,265,285],[201,205,245,295],[201,207,210,245,265,288],[201,202,203,204,206,209,245,257,277,288],[201,210,218,245],[201,203,208,245],[201,210,234,235,245],[201,203,206,210,245,280,288,295],[201,210,245],[201,202,245],[201,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,245],[201,210,227,230,245,253],[201,210,218,219,220,245],[201,208,210,219,221,245],[201,209,245],[201,203,205,210,245],[201,210,214,219,221,245],[201,214,245],[201,208,210,213,245,288],[201,203,207,210,218,245],[201,210,227,245],[201,205,210,234,245,280,293,295],[171,201,245],[159,160,161,201,245],[162,163,201,245],[159,160,162,164,165,170,201,245],[160,162,201,245],[170,201,245],[162,201,245],[159,160,162,165,166,167,168,169,201,245],[62,81,83,85,87,123,133,134,135,138,143,144,145,158,175,176,177,178,179,183,190,191,192,193,194,201,245],[83,84,145,201,245,407],[92,96,97,201,245],[83,201,245],[101,102,201,245],[83,92,201,245],[201,245,411],[87,92,201,245],[62,81,83,201,245],[92,201,245],[83,87,92,106,201,245],[174,201,245],[141,201,245],[83,84,98,201,245,407,491],[83,84,145,201,245,407,491],[194,201,245,407],[83,103,104,105,201,245,407],[201,245,407,413],[83,84,126,201,245,407,491],[83,87,106,107,201,245,407],[83,108,201,245,407],[83,87,128,201,245,407],[62,175,201,245,407],[89,201,245],[81,83,201,245],[81,201,245],[81,83,135,201,245],[135,136,137,138,139,201,245],[124,201,245],[125,126,201,245],[83,87,92,93,94,95,98,99,100,101,102,103,104,105,107,108,109,123,127,201,245],[83,87,141,201,245],[128,201,245,407,491],[124,125,127,128,142,201,245],[94,95,99,100,101,103,104,105,129,130,131,132,133,134,140,201,245],[187,201,245,407],[188,201,245,407],[81,186,201,245,407],[83,110,120,123,201,245],[83,92,110,201,245],[87,112,114,115,123,201,245],[113,201,245],[111,201,245,407],[201,245,407,510],[116,201,245,407],[84,116,201,245,407],[110,111,115,116,117,118,119,121,122,201,245],[83,145,201,245],[83,145,146,201,245],[83,145,146,147,148,151,152,153,154,155,156,157,201,245],[201,245,407,491],[83,145,146,201,245,407,491],[83,145,146,158,201,245,407,491],[93,146,201,245,407,411],[147,148,149,150,151,152,153,154,155,156,157,158,201,245],[83,145,149,150,201,245],[83,149,150,201,245],[88,201,245,407,491],[88,89,90,91,201,245],[84,201,245,407],[84,201,245,407,491],[84,85,86,201,245],[201,245,407,411],[145,201,245],[62,195,201,245],[62,201,245],[62,92,175,176,201,245],[62,83,201,245],[62,81,140,201,245],[62,143,201,245],[62,81,184,185,186,187,188,189,201,245],[62,83,191,201,245,407],[62,83,85,193,201,245,407],[62,83,84,85,182,201,245,407],[62,83,85,180,201,245,407],[62,83,192,201,245,407],[62,83,84,181,201,245,407],[62,190,201,245,407],[180,181,182,201,245],[173,201,245],[82,201,245]],"referencedMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"exportedModulesMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"semanticDiagnosticsPerFile":[74,75,76,80,81,77,78,79,71,70,64,67,65,68,66,63,72,69,73,539,537,299,300,301,316,317,298,365,379,378,380,382,364,381,339,338,336,337,351,370,371,368,372,373,374,375,367,366,376,369,354,355,353,330,331,332,329,358,360,361,359,357,356,303,309,302,310,311,312,404,401,400,397,406,393,402,396,395,403,398,405,399,394,389,388,387,407,477,478,480,479,472,473,475,474,450,452,451,454,453,417,415,418,465,419,455,464,456,459,457,460,462,458,461,463,416,491,476,471,481,487,488,490,489,469,470,466,468,467,482,486,483,484,485,420,421,424,422,423,426,427,428,429,425,430,431,432,433,434,435,449,436,437,438,439,440,441,442,445,443,444,446,447,448,386,542,538,540,541,544,545,551,543,556,552,555,553,550,560,559,318,561,557,562,297,305,306,554,563,546,564,242,243,244,245,246,247,199,248,249,250,251,252,253,254,256,255,257,258,259,241,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,278,280,281,282,283,284,285,286,197,295,201,198,200,287,288,289,290,291,292,293,294,565,566,567,548,549,568,569,594,595,570,573,592,593,583,582,580,575,588,586,590,574,587,591,576,577,589,571,578,579,581,585,596,584,572,609,608,603,605,604,597,598,600,602,606,607,599,601,547,610,558,611,313,613,612,614,307,308,352,304,296,377,350,348,349,173,334,333,383,384,340,344,346,345,343,319,321,322,320,347,315,314,335,323,328,326,324,325,327,363,362,385,342,341,62,58,61,60,57,59,11,12,14,13,2,15,16,17,18,19,20,21,22,3,4,26,23,24,25,27,28,29,5,30,31,32,33,6,37,34,35,36,38,7,39,44,45,40,41,42,43,8,49,46,47,48,50,9,51,52,53,54,55,1,10,56,218,229,216,230,239,208,207,238,233,237,210,226,209,236,205,206,211,212,217,215,203,240,231,221,220,222,224,219,223,234,213,214,225,204,228,227,232,202,235,172,162,164,171,166,167,165,168,159,160,161,163,169,170,195,391,392,408,101,98,95,134,97,409,103,104,132,410,129,109,99,412,177,102,131,105,178,194,413,126,414,96,176,107,133,94,108,100,175,130,492,493,494,495,496,497,498,499,500,501,502,139,135,136,137,138,140,503,124,125,127,504,128,142,505,143,141,506,187,185,189,188,186,184,507,508,509,121,144,111,510,122,117,119,110,116,118,115,114,113,511,512,513,514,123,120,150,147,149,148,158,516,517,518,519,515,155,156,154,152,151,157,153,88,89,90,91,520,521,92,112,85,84,179,86,145,522,523,87,528,524,525,93,411,526,527,146,196,191,193,182,180,192,181,190,529,530,531,532,533,534,535,183,174,390,83,82,536,106],"affectedFilesPendingEmit":[[74,1],[75,1],[76,1],[80,1],[81,1],[77,1],[78,1],[79,1],[71,1],[70,1],[64,1],[67,1],[65,1],[68,1],[66,1],[63,1],[72,1],[69,1],[73,1],[539,1],[537,1],[299,1],[300,1],[301,1],[316,1],[317,1],[298,1],[365,1],[379,1],[378,1],[380,1],[382,1],[364,1],[381,1],[339,1],[338,1],[336,1],[337,1],[351,1],[370,1],[371,1],[368,1],[372,1],[373,1],[374,1],[375,1],[367,1],[366,1],[376,1],[369,1],[354,1],[355,1],[353,1],[330,1],[331,1],[332,1],[329,1],[358,1],[360,1],[361,1],[359,1],[357,1],[356,1],[303,1],[309,1],[302,1],[310,1],[311,1],[312,1],[404,1],[401,1],[400,1],[397,1],[406,1],[393,1],[402,1],[396,1],[395,1],[403,1],[398,1],[405,1],[399,1],[394,1],[389,1],[388,1],[387,1],[407,1],[477,1],[478,1],[480,1],[479,1],[472,1],[473,1],[475,1],[474,1],[450,1],[452,1],[451,1],[454,1],[453,1],[417,1],[415,1],[418,1],[465,1],[419,1],[455,1],[464,1],[456,1],[459,1],[457,1],[460,1],[462,1],[458,1],[461,1],[463,1],[416,1],[491,1],[476,1],[471,1],[481,1],[487,1],[488,1],[490,1],[489,1],[469,1],[470,1],[466,1],[468,1],[467,1],[482,1],[486,1],[483,1],[484,1],[485,1],[420,1],[421,1],[424,1],[422,1],[423,1],[426,1],[427,1],[428,1],[429,1],[425,1],[430,1],[431,1],[432,1],[433,1],[434,1],[435,1],[449,1],[436,1],[437,1],[438,1],[439,1],[440,1],[441,1],[442,1],[445,1],[443,1],[444,1],[446,1],[447,1],[448,1],[386,1],[542,1],[538,1],[540,1],[541,1],[544,1],[545,1],[551,1],[543,1],[556,1],[552,1],[555,1],[553,1],[550,1],[560,1],[559,1],[318,1],[561,1],[557,1],[562,1],[297,1],[305,1],[306,1],[554,1],[563,1],[546,1],[564,1],[242,1],[243,1],[244,1],[245,1],[246,1],[247,1],[199,1],[248,1],[249,1],[250,1],[251,1],[252,1],[253,1],[254,1],[256,1],[255,1],[257,1],[258,1],[259,1],[241,1],[260,1],[261,1],[262,1],[263,1],[264,1],[265,1],[266,1],[267,1],[268,1],[269,1],[270,1],[271,1],[272,1],[273,1],[274,1],[275,1],[276,1],[277,1],[279,1],[278,1],[280,1],[281,1],[282,1],[283,1],[284,1],[285,1],[286,1],[197,1],[295,1],[201,1],[198,1],[200,1],[287,1],[288,1],[289,1],[290,1],[291,1],[292,1],[293,1],[294,1],[565,1],[566,1],[567,1],[548,1],[549,1],[568,1],[569,1],[594,1],[595,1],[570,1],[573,1],[592,1],[593,1],[583,1],[582,1],[580,1],[575,1],[588,1],[586,1],[590,1],[574,1],[587,1],[591,1],[576,1],[577,1],[589,1],[571,1],[578,1],[579,1],[581,1],[585,1],[596,1],[584,1],[572,1],[609,1],[608,1],[603,1],[605,1],[604,1],[597,1],[598,1],[600,1],[602,1],[606,1],[607,1],[599,1],[601,1],[547,1],[610,1],[558,1],[611,1],[313,1],[613,1],[612,1],[614,1],[307,1],[308,1],[352,1],[304,1],[296,1],[377,1],[350,1],[348,1],[349,1],[173,1],[334,1],[333,1],[383,1],[384,1],[340,1],[344,1],[346,1],[345,1],[343,1],[319,1],[321,1],[322,1],[320,1],[347,1],[315,1],[314,1],[335,1],[323,1],[328,1],[326,1],[324,1],[325,1],[327,1],[363,1],[362,1],[385,1],[342,1],[341,1],[62,1],[58,1],[61,1],[60,1],[57,1],[59,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[218,1],[229,1],[216,1],[230,1],[239,1],[208,1],[207,1],[238,1],[233,1],[237,1],[210,1],[226,1],[209,1],[236,1],[205,1],[206,1],[211,1],[212,1],[217,1],[215,1],[203,1],[240,1],[231,1],[221,1],[220,1],[222,1],[224,1],[219,1],[223,1],[234,1],[213,1],[214,1],[225,1],[204,1],[228,1],[227,1],[232,1],[202,1],[235,1],[172,1],[162,1],[164,1],[171,1],[166,1],[167,1],[165,1],[168,1],[159,1],[160,1],[161,1],[163,1],[169,1],[170,1],[195,1],[391,1],[392,1],[408,1],[101,1],[98,1],[95,1],[134,1],[97,1],[409,1],[103,1],[104,1],[132,1],[410,1],[129,1],[109,1],[99,1],[412,1],[177,1],[102,1],[131,1],[105,1],[178,1],[194,1],[413,1],[126,1],[414,1],[96,1],[176,1],[107,1],[133,1],[94,1],[108,1],[100,1],[175,1],[130,1],[492,1],[493,1],[494,1],[495,1],[496,1],[497,1],[498,1],[499,1],[500,1],[501,1],[502,1],[139,1],[135,1],[136,1],[137,1],[138,1],[140,1],[503,1],[124,1],[125,1],[127,1],[504,1],[128,1],[142,1],[505,1],[143,1],[141,1],[506,1],[187,1],[185,1],[189,1],[188,1],[186,1],[184,1],[507,1],[508,1],[509,1],[121,1],[144,1],[111,1],[510,1],[122,1],[117,1],[119,1],[110,1],[116,1],[118,1],[115,1],[114,1],[113,1],[511,1],[512,1],[513,1],[514,1],[123,1],[120,1],[150,1],[147,1],[149,1],[148,1],[158,1],[516,1],[517,1],[518,1],[519,1],[515,1],[155,1],[156,1],[154,1],[152,1],[151,1],[157,1],[153,1],[88,1],[89,1],[90,1],[91,1],[520,1],[521,1],[92,1],[112,1],[85,1],[84,1],[179,1],[86,1],[145,1],[522,1],[523,1],[87,1],[528,1],[524,1],[525,1],[93,1],[411,1],[526,1],[527,1],[146,1],[196,1],[191,1],[193,1],[182,1],[180,1],[192,1],[181,1],[190,1],[529,1],[530,1],[531,1],[532,1],[533,1],[534,1],[535,1],[183,1],[174,1],[390,1],[83,1],[82,1],[536,1],[106,1]]},"version":"4.9.5"}
./.code/agents/1/exec-call_FBIwoFXQ52mBUHnfzcN9IQzW.txt:7567:frontend/node_modules/.cache/babel-loader/21f41cb11065df99f93c670d4587140cd8953f50c9b675fa4d5c3ca024f77708.json:1:{"ast":null,"code":"// src/client/ghin/index.ts\nimport { z as z22 } from \"zod\";\n\n// src/errors/index.ts\nvar GhinError = class extends Error {\n  code;\n  statusCode;\n  cause;\n  constructor(message, code, statusCode, cause) {\n    super(message);\n    this.name = \"GhinError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.cause = cause;\n  }\n};\nvar AuthenticationError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"AUTHENTICATION_ERROR\", statusCode, cause);\n    this.name = \"AuthenticationError\";\n  }\n};\nvar NetworkError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"NETWORK_ERROR\", statusCode, cause);\n    this.name = \"NetworkError\";\n  }\n};\nvar ValidationError = class extends GhinError {\n  field;\n  constructor(message, field, cause) {\n    super(message, \"VALIDATION_ERROR\", void 0, cause);\n    this.name = \"ValidationError\";\n    this.field = field;\n  }\n};\nvar RateLimitError = class extends GhinError {\n  retryAfter;\n  constructor(message, retryAfter, cause) {\n    super(message, \"RATE_LIMIT_ERROR\", 429, cause);\n    this.name = \"RateLimitError\";\n    this.retryAfter = retryAfter;\n  }\n};\nvar ConfigurationError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CONFIGURATION_ERROR\", void 0, cause);\n    this.name = \"ConfigurationError\";\n  }\n};\nvar CacheError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CACHE_ERROR\", void 0, cause);\n    this.name = \"CacheError\";\n  }\n};\n\n// src/models/cache-client.ts\nimport { z } from \"zod\";\nvar schemaStringOrUndefined = z.union([z.string(), z.undefined()]);\nvar schemaPromiseOrNonPromiseStringOrUndefined = z.union([z.promise(schemaStringOrUndefined), schemaStringOrUndefined]);\nvar schemaPromiseOrNonPromiseVoid = z.union([z.promise(z.void()), z.void()]);\nvar schemaCacheClient = z.object({\n  read: z.function().args().returns(schemaPromiseOrNonPromiseStringOrUndefined),\n  write: z.function().args(z.string()).returns(schemaPromiseOrNonPromiseVoid)\n});\n\n// src/models/client-config.ts\nimport { z as z3 } from \"zod\";\n\n// src/models/validation.ts\nimport { z as z2 } from \"zod\";\nvar boolean = z2.union([z2.boolean(), z2.literal(\"true\"), z2.literal(\"false\"), z2.null()]).transform(value => value === true || value === \"true\");\nvar date = z2.union([z2.date(), z2.string()]).refine(value => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform(value => value ? new Date(value) : void 0);\nvar emptyString = z2.string().trim();\nvar emptyStringToNull = emptyString.nullable().transform(value => value || null);\nvar float = z2.coerce.number();\nvar gender = z2.enum([\"M\", \"F\"]);\nvar handicap = z2.union([float, z2.string(), z2.null()]).refine(value => {\n  if (typeof value === \"number\") {\n    return true;\n  }\n  if (typeof value === \"string\" && value === \"NH\") {\n    return true;\n  }\n  return false;\n}).transform(value => {\n  if (value === \"NH\") {\n    return null;\n  }\n  return value;\n});\nvar number = float.int();\nvar string = emptyString.min(1);\nvar monthDay = string.or(emptyString).transform(value => {\n  if (!value) {\n    return null;\n  }\n  const [month, day] = value.split(\"/\");\n  return `${month?.toString().padStart(2, \"0\")}-${day?.toString().padStart(2, \"0\")}`;\n});\nvar shortDate = z2.union([z2.date(), z2.string(), z2.null()]).refine(value => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform(value => {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const [year, month, day] = value.split(\"-\");\n  return /* @__PURE__ */new Date(`${year}-${month}-${day}T00:00Z`);\n});\n\n// src/models/client-config.ts\nvar schemaClientConfig = z3.object({\n  cache: schemaCacheClient.optional(),\n  password: string,\n  username: string\n});\n\n// src/client/in-memory-cache-client/index.ts\nvar InMemoryCacheClient = class {\n  value = (() => void 0)();\n  async read() {\n    return this.value;\n  }\n  async write(value) {\n    this.value = value;\n  }\n};\n\n// src/client/request-client/index.ts\nimport { Mutex } from \"async-mutex\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { err as err2, ok as ok2 } from \"neverthrow\";\n\n// src/utils/retry.ts\nimport { err, ok } from \"neverthrow\";\nvar DEFAULT_RETRY_CONFIG = {\n  maxAttempts: 3,\n  baseDelay: 1e3,\n  // 1 second\n  maxDelay: 1e4,\n  // 10 seconds\n  backoffMultiplier: 2,\n  retryableStatusCodes: [408, 429, 500, 502, 503, 504]\n};\nfunction isRetryableError(error) {\n  if (error instanceof NetworkError) {\n    return error.statusCode ? DEFAULT_RETRY_CONFIG.retryableStatusCodes.includes(error.statusCode) : true;\n  }\n  if (error instanceof RateLimitError) {\n    return true;\n  }\n  return false;\n}\nfunction calculateDelay(attempt, config) {\n  const delay = config.baseDelay * config.backoffMultiplier ** (attempt - 1);\n  return Math.min(delay, config.maxDelay);\n}\nasync function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nasync function withRetry(operation) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const finalConfig = {\n    ...DEFAULT_RETRY_CONFIG,\n    ...config\n  };\n  for (let attempt = 1; attempt <= finalConfig.maxAttempts; attempt++) {\n    const result = await operation();\n    if (result.isOk()) {\n      return result;\n    }\n    const error = result.error;\n    if (attempt === finalConfig.maxAttempts) {\n      return result;\n    }\n    if (!isRetryableError(error)) {\n      return result;\n    }\n    const delay = calculateDelay(attempt, finalConfig);\n    const jitter = Math.random() * 0.1 * delay;\n    const totalDelay = delay + jitter;\n    await sleep(totalDelay);\n  }\n  return err(new Error(\"Retry exhausted\"));\n}\n\n// src/client/request-client/models/access-token.ts\nimport { z as z4 } from \"zod\";\nvar schemaAccessToken = z4.object({\n  expiresIn: string,\n  token: string\n}).transform(_ref => {\n  let {\n    expiresIn: tmpExpiresIn,\n    ...values\n  } = _ref;\n  const now = /* @__PURE__ */new Date();\n  const secondsUntilExpiry = Number(tmpExpiresIn.replace(/[^0-9]/g, \"\"));\n  const millisecondsUntilExpiry = secondsUntilExpiry * 1e3;\n  const expiresIn = new Date(now.getTime() + millisecondsUntilExpiry);\n  return {\n    ...values,\n    expiresIn\n  };\n});\n\n// src/client/request-client/models/client-config.ts\nimport { z as z5 } from \"zod\";\nvar schemaClientConfig2 = z5.object({\n  cache: schemaCacheClient,\n  password: string,\n  username: string\n});\n\n// src/client/request-client/models/session.ts\nimport { z as z6 } from \"zod\";\nvar schemaSession = z6.object({\n  appId: string,\n  authVersion: string,\n  fid: string,\n  sdkVersion: string\n});\nvar schemaSessionResponse = z6.object({\n  authToken: schemaAccessToken\n});\n\n// src/client/request-client/models/login.ts\nimport { z as z7 } from \"zod\";\nvar schemaLoginResponse = z7.object({\n  golfer_user: z7.object({\n    golfer_user_token: string\n  })\n});\n\n// src/client/request-client/index.ts\nvar FIREBASE_SESSION_URL = new URL(\"https://firebaseinstallations.googleapis.com/v1/projects/ghin-mobile-app/installations\");\nvar GOOGLE_API_KEY = \"AIzaSyBxgTOAWxiud0HuaE5tN-5NTlzFnrtyz-I\";\nvar DEFAULT_USER_AGENT = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36\";\nvar CLIENT_SOURCE = \"GHINcom\";\nvar SESSION_DEFAULTS = {\n  appId: \"1:884417644529:web:47fb315bc6c70242f72650\",\n  authVersion: \"FIS_v2\",\n  fid: \"fg6JfS0U01YmrelthLX9Iz\",\n  sdkVersion: \"w:0.5.7\"\n};\nvar FETCH_HEADER_DEFAULTS = {\n  \"Content-Type\": \"application/json\",\n  \"User-Agent\": DEFAULT_USER_AGENT\n};\nvar apiPathnames = {\n  course_countries: \"/get_countries_and_states.json\",\n  course_details: \"/crsCourseMethods.asmx/GetCourseDetails.json\",\n  course_handicaps: \"/playing_handicaps.json\",\n  course_search: \"/crsCourseMethods.asmx/SearchCourses.json\",\n  golfer: \"/search_golfer.json\",\n  golfers_search: \"/golfers.json\",\n  login: \"/golfer_login.json\",\n  scores: \"/scores.json\"\n};\nvar toFullApiUrl = (baseUrl, pathname) => new URL(`${baseUrl.pathname}${apiPathnames[pathname]}`, baseUrl);\nvar makeAuthHeaders = accessToken => ({\n  Authorization: `Bearer ${accessToken}`\n});\nvar RequestClient = class {\n  accessToken;\n  apiVersion = \"v1\";\n  config;\n  baseUrl = (() => new URL(`https://api2.ghin.com/api/${this.apiVersion}`))();\n  lock;\n  sessionToken;\n  constructor(config) {\n    const results = schemaClientConfig2.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid RequestClientConfig: ${results.error.message}`);\n    }\n    this.lock = new Mutex();\n    this.config = schemaClientConfig2.parse(results.data);\n  }\n  async _fetch(_ref2) {\n    let {\n      options,\n      schema,\n      url\n    } = _ref2;\n    try {\n      const response = await fetch(url.toString(), options);\n      if (!response.ok || response.status >= 400) {\n        let body;\n        try {\n          body = await response.json();\n        } catch {\n          body = await response.text();\n        }\n        if (response.status === 401 || response.status === 403) {\n          return err2(new AuthenticationError(`Authentication failed: ${response.status} ${response.statusText}`, response.status, new Error(JSON.stringify(body))));\n        }\n        if (response.status === 429) {\n          const retryAfter = response.headers.get(\"Retry-After\");\n          const retryAfterSeconds = retryAfter ? Number.parseInt(retryAfter, 10) : void 0;\n          return err2(new RateLimitError(`Rate limit exceeded: ${response.status} ${response.statusText}`, retryAfterSeconds, new Error(JSON.stringify(body))));\n        }\n        if (response.status >= 500) {\n          return err2(new NetworkError(`Server error: ${response.status} ${response.statusText}`, response.status, new Error(JSON.stringify(body))));\n        }\n        return err2(new NetworkError(`Request failed: ${response.status} ${response.statusText}`, response.status, new Error(JSON.stringify(body))));\n      }\n      const raw = await response.json();\n      const parsed = schema.safeParse(raw);\n      if (!parsed.success) {\n        return err2(new ValidationError(`Response validation failed: ${JSON.stringify(parsed.error)}`, void 0, new Error(`URL: ${url.toString()}`)));\n      }\n      return ok2(parsed.data);\n    } catch (error) {\n      if (error instanceof Error) {\n        return err2(new NetworkError(`Network request failed: ${error.message}`, void 0, error));\n      }\n      return err2(new NetworkError(`Unknown network error: ${String(error)}`));\n    }\n  }\n  async refreshSessionToken() {\n    const url = new URL(FIREBASE_SESSION_URL);\n    const body = JSON.stringify(SESSION_DEFAULTS);\n    const result = await this._fetch({\n      options: {\n        body,\n        headers: {\n          ...FETCH_HEADER_DEFAULTS,\n          \"x-goog-api-key\": GOOGLE_API_KEY\n        },\n        method: \"POST\"\n      },\n      schema: schemaSessionResponse,\n      url\n    });\n    return result.map(response => response.authToken);\n  }\n  isAccessTokenValid(accessToken) {\n    if (!accessToken) {\n      return false;\n    }\n    try {\n      const decoded = jwtDecode(accessToken);\n      const expirationDate = new Date(decoded.exp * 1e3);\n      return expirationDate > /* @__PURE__ */new Date();\n    } catch {\n      return false;\n    }\n  }\n  async getAccessToken() {\n    const isAccessTokenValid = this.isAccessTokenValid(this.accessToken);\n    if (isAccessTokenValid) {\n      return ok2(this.accessToken);\n    }\n    try {\n      const cachedAccessToken = await this.config.cache.read();\n      const isCachedTokenValid = this.isAccessTokenValid(cachedAccessToken);\n      if (isCachedTokenValid) {\n        this.accessToken = cachedAccessToken;\n        return ok2(cachedAccessToken);\n      }\n    } catch (error) {\n      return err2(new CacheError(`Failed to read from cache: ${error instanceof Error ? error.message : String(error)}`, error instanceof Error ? error : void 0));\n    }\n    const refreshResult = await this.refreshAccessToken();\n    if (refreshResult.isErr()) {\n      return refreshResult;\n    }\n    const accessToken = refreshResult.value;\n    this.accessToken = accessToken;\n    try {\n      await this.config.cache.write(accessToken);\n    } catch (error) {\n      return err2(new CacheError(`Failed to write to cache: ${error instanceof Error ? error.message : String(error)}`, error instanceof Error ? error : void 0));\n    }\n    return ok2(accessToken);\n  }\n  async refreshAccessToken() {\n    const sessionResult = await this.refreshSessionToken();\n    if (sessionResult.isErr()) {\n      return err2(sessionResult.error);\n    }\n    this.sessionToken = sessionResult.value;\n    const url = toFullApiUrl(this.baseUrl, \"login\");\n    const body = JSON.stringify({\n      token: this.sessionToken.token,\n      user: {\n        email_or_ghin: this.config.username,\n        password: this.config.password\n      }\n    });\n    const response = await this._fetch({\n      options: {\n        body,\n        headers: FETCH_HEADER_DEFAULTS,\n        method: \"POST\"\n      },\n      schema: schemaLoginResponse,\n      url\n    });\n    return response.map(resp => resp?.golfer_user?.golfer_user_token);\n  }\n  async fetch(_ref3) {\n    let {\n      entity,\n      schema,\n      options = {}\n    } = _ref3;\n    const accessTokenResult = await this.lock.runExclusive(async () => this.getAccessToken());\n    if (accessTokenResult.isErr()) {\n      return err2(accessTokenResult.error);\n    }\n    const accessToken = accessTokenResult.value;\n    const url = toFullApiUrl(this.baseUrl, entity);\n    const {\n      headers,\n      searchParams,\n      ...requestInitOptions\n    } = options;\n    const actualOptions = {\n      ...requestInitOptions,\n      headers: {\n        ...FETCH_HEADER_DEFAULTS,\n        source: CLIENT_SOURCE,\n        ...makeAuthHeaders(accessToken),\n        ...headers\n      }\n    };\n    if (searchParams) {\n      url.search = searchParams.toString();\n    }\n    return withRetry(() => this._fetch({\n      options: actualOptions,\n      schema,\n      url\n    }));\n  }\n};\n\n// src/client/ghin/models/course/country.ts\nimport { z as z8 } from \"zod\";\nvar FOREIGN_COUNTRY_CODE = \"Fo\";\nvar schemaCourseCountryCode = string.refine(value => {\n  if (value === FOREIGN_COUNTRY_CODE) {\n    return true;\n  }\n  return /^[A-Z]{3}$/.test(value);\n}, 'Invalid country code. Expected format: ISO 3166-1 alpha-3 code or \"Fo\" for foreign countries');\nvar schemaCourseCountryState = z8.object({\n  code: string,\n  //schemaCourseCountryCode,\n  course_code: string,\n  //schemaCourseCountryCode.nullable(),\n  name: string\n});\nvar schemaCourseCountry = z8.object({\n  code: string,\n  crs_code: z8.string().trim().transform(value => value || null).nullable(),\n  name: string,\n  states: z8.array(schemaCourseCountryState)\n});\n\n// src/client/ghin/models/course/request.ts\nimport { z as z9 } from \"zod\";\n\n// src/client/ghin/models/course/state.ts\nvar FOREIGN_STATE_CODE = \"*F\";\nvar courseStateCodeRegex = /^[A-Z]{1,2}-[A-Z*0-9]{1,4}$/;\nvar schemaCourseSearchState = string.refine(value => {\n  if (value === FOREIGN_STATE_CODE) {\n    return true;\n  }\n  return courseStateCodeRegex.test(value);\n}, {\n  message: \"Invalid state code format. Expected format: US-OH, LC-01, MX-*A, or *F\"\n});\n\n// src/client/ghin/models/course/request.ts\nvar schemaCourseSearchRequest = z9.object({\n  country: schemaCourseCountryCode.optional(),\n  facility_id: number.optional(),\n  name: string.optional(),\n  state: schemaCourseSearchState.optional(),\n  updated_at: date.optional()\n}).refine(_ref4 => {\n  let {\n    country,\n    state,\n    facility_id,\n    updated_at\n  } = _ref4;\n  switch (true) {\n    case Boolean(country && state):\n      return true;\n    case Boolean(facility_id):\n      return true;\n    case Boolean(updated_at):\n      return true;\n    default:\n      return false;\n  }\n}, {\n  message: \"At least one of the following are required: country + state, facility_id, or updated_at must be provided\"\n});\nvar schemaCourseDetailsRequest = z9.object({\n  course_id: number,\n  include_altered_tees: boolean.optional()\n}).transform(data => ({\n  ...data,\n  include_altered_tees: data.include_altered_tees ?? false\n}));\n\n// src/client/ghin/models/course/response.ts\nimport { z as z11 } from \"zod\";\n\n// src/client/ghin/models/course/course.ts\nimport { z as z10 } from \"zod\";\n\n// src/client/ghin/models/course/geolocation.ts\nvar schemaGeoCoordinate = float.transform(value => value ? value : null).nullable();\n\n// src/client/ghin/models/course/course.ts\nvar schemaStatus = string.transform(value => value.toUpperCase()).pipe(z10.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourse = z10.object({\n  Address1: string.nullable(),\n  Address2: string.nullable(),\n  City: string.nullable(),\n  Country: string.nullable(),\n  CourseID: number,\n  CourseName: string,\n  CourseStatus: schemaStatus,\n  Email: string.email().nullable(),\n  EntCountryCode: number.nullable(),\n  EntStateCode: number.nullable(),\n  FacilityID: number,\n  FacilityName: string,\n  FacilityStatus: schemaStatus,\n  FullName: string,\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  LegacyCRPCourseId: number.nullable(),\n  Ratings: z10.array(z10.unknown()),\n  State: string.nullable(),\n  Telephone: string.nullable(),\n  UpdatedOn: shortDate.nullable(),\n  Zip: z10.string().trim().transform(zip => zip?.trim() || null).nullable().or(z10.array(z10.unknown()))\n});\n\n// src/client/ghin/models/course/response.ts\nvar schemaStatus2 = string.transform(value => value.toUpperCase()).pipe(z11.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourseCountriesResponse = z11.object({\n  countries: z11.array(schemaCourseCountry.passthrough())\n});\nvar schemaCourseSearchResponse = z11.object({\n  courses: z11.array(schemaCourse.passthrough())\n});\nvar schemaCourseDetailsFacility = z11.object({\n  FacilityId: number,\n  FacilityName: string,\n  FacilityNumber: number.nullable(),\n  FacilityStatus: string,\n  GeoLocationFormattedAddress: string.nullable(),\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  GolfAssociationId: number.nullable()\n});\nvar schemaCourseDetailsSeason = z11.object({\n  IsAllYear: boolean,\n  SeasonEndDate: monthDay.nullable(),\n  SeasonName: string,\n  SeasonStartDate: monthDay.nullable()\n});\nvar schemaCourseDetailsTeeSetRatings = z11.object({\n  BogeyRating: float,\n  CourseRating: float,\n  RatingType: z11.enum([\"Front\", \"Back\", \"Total\"]),\n  SlopeRating: float\n});\nvar schemaCourseDetailsTeeSetHole = z11.object({\n  Allocation: number,\n  HoleId: number,\n  Length: number,\n  Number: number,\n  Par: number\n});\nvar schemaCourseDetailsTeeSet = z11.object({\n  EligibleSides: z11.unknown(),\n  Gender: z11.enum([\"Male\", \"Female\", \"Mixed\"]).nullable(),\n  Holes: z11.array(schemaCourseDetailsTeeSetHole),\n  HolesNumber: number,\n  IsShorter: boolean.nullable(),\n  LegacyCRPTeeId: number,\n  Ratings: z11.array(schemaCourseDetailsTeeSetRatings),\n  StrokeAllocation: boolean,\n  TeeSetRatingId: number,\n  TeeSetRatingName: string,\n  TotalMeters: number,\n  TotalPar: number,\n  TotalYardage: number\n});\nvar schemaCourseDetailsResponse = z11.object({\n  CourseCity: string,\n  CourseId: number,\n  CourseName: string,\n  CourseNumber: number.nullable(),\n  CourseState: schemaCourseSearchState,\n  CourseStatus: schemaStatus2,\n  Facility: schemaCourseDetailsFacility,\n  Season: schemaCourseDetailsSeason,\n  TeeSets: z11.array(schemaCourseDetailsTeeSet)\n});\n\n// src/client/ghin/models/golfers/search.ts\nimport { z as z12 } from \"zod\";\nvar schemaGolferStatus = z12.enum([\"Active\", \"Inactive\"]).transform(value => value.toUpperCase());\nvar schemaGolferSearchRequest = z12.object({\n  country: string.transform(value => value?.toUpperCase()),\n  first_name: string,\n  from_ghin: boolean,\n  ghin: number,\n  last_name: string.optional(),\n  order: z12.enum([\"asc\", \"desc\"]),\n  page: number,\n  per_page: number.max(100),\n  sorting_criteria: z12.enum([\"country\", \"full_name\", \"handicap_index\", \"state\", \"status\"]),\n  state: string.transform(value => value?.toUpperCase()),\n  status: schemaGolferStatus\n}).partial();\nvar schemaGolfer = z12.object({\n  ghin: number,\n  first_name: string,\n  last_name: string,\n  association_id: number,\n  association_name: string,\n  handicap_index: handicap,\n  club_affiliation_id: number,\n  club_id: number,\n  club_name: emptyStringToNull,\n  country: emptyStringToNull,\n  entitlement: boolean,\n  gender,\n  hard_cap: boolean,\n  has_digital_profile: boolean,\n  hi_display: string,\n  hi_value: handicap,\n  is_home_club: boolean,\n  low_hi_date: date.nullable(),\n  low_hi_display: string,\n  low_hi_value: handicap,\n  low_hi: handicap,\n  message_club_authorized: string.nullable(),\n  middle_name: emptyStringToNull.nullable().optional(),\n  phone_number: emptyStringToNull.nullable().optional(),\n  prefix: emptyStringToNull.optional(),\n  rev_date: date.nullable(),\n  soft_cap: boolean,\n  state: emptyStringToNull,\n  status: z12.enum([\"Active\", \"Inactive\"]),\n  suffix: emptyStringToNull.optional()\n});\nvar schemaGolferSearchResponse = z12.object({\n  golfers: z12.array(schemaGolfer)\n});\n\n// src/client/ghin/models/handicaps/course-player-handicap.ts\nimport { z as z13 } from \"zod\";\nvar schemaPlayerCourseHandicap = z13.object({\n  playing_handicap: number,\n  playing_handicap_display: string,\n  shots_off: number\n});\nvar schemaCoursePercentPlayerHandicap = z13.record(string, schemaPlayerCourseHandicap);\n\n// src/client/ghin/models/handicaps/request.ts\nimport { z as z14 } from \"zod\";\nvar schemaTeeSetSide = z14.enum([\"All 18\", \"F9\", \"B9\"]);\nvar schemaGolferCourseHandicapBaseRequest = z14.object({\n  ghin: number.optional(),\n  handicap_index: number.optional(),\n  tee_set_id: number,\n  tee_set_side: schemaTeeSetSide\n});\nvar schemaGolferCourseHandicapRequest = schemaGolferCourseHandicapBaseRequest.refine(_ref5 => {\n  let {\n    ghin,\n    handicap_index\n  } = _ref5;\n  if (ghin && handicap_index) {\n    throw new Error(\"Cannot provide both ghin and handicap_index\");\n  }\n  if (!Number.isSafeInteger(ghin) && !Number.isSafeInteger(handicap_index)) {\n    throw new Error(\"Must provide either ghin or handicap_index\");\n  }\n  return true;\n});\nvar schemaCourseHandicapsRequest = z14.object({\n  golfers: z14.array(schemaGolferCourseHandicapBaseRequest.omit({\n    ghin: true\n  }).extend({\n    golfer_id: number.optional()\n  })),\n  source: z14.literal(CLIENT_SOURCE).default(CLIENT_SOURCE).optional()\n});\n\n// src/client/ghin/models/handicaps/response.ts\nimport { z as z15 } from \"zod\";\nvar schemaGolferHandicapClub = z15.object({\n  active: boolean,\n  association_id: number,\n  club_name: string,\n  id: number\n});\nvar schemaGolferHandicapResponse = z15.object({\n  golfer: z15.object({\n    clubs: z15.array(schemaGolferHandicapClub),\n    handicap_index: handicap\n  })\n}).passthrough();\nvar schemaCoursePlayerHandicapsResponse = z15.object({\n  100: schemaCoursePercentPlayerHandicap,\n  95: schemaCoursePercentPlayerHandicap,\n  90: schemaCoursePercentPlayerHandicap,\n  85: schemaCoursePercentPlayerHandicap,\n  80: schemaCoursePercentPlayerHandicap,\n  75: schemaCoursePercentPlayerHandicap,\n  70: schemaCoursePercentPlayerHandicap,\n  65: schemaCoursePercentPlayerHandicap,\n  60: schemaCoursePercentPlayerHandicap,\n  55: schemaCoursePercentPlayerHandicap,\n  50: schemaCoursePercentPlayerHandicap,\n  45: schemaCoursePercentPlayerHandicap,\n  40: schemaCoursePercentPlayerHandicap,\n  35: schemaCoursePercentPlayerHandicap,\n  30: schemaCoursePercentPlayerHandicap,\n  25: schemaCoursePercentPlayerHandicap,\n  20: schemaCoursePercentPlayerHandicap,\n  15: schemaCoursePercentPlayerHandicap,\n  10: schemaCoursePercentPlayerHandicap,\n  5: schemaCoursePercentPlayerHandicap\n});\n\n// src/client/ghin/models/scores/adjustment.ts\nimport { z as z16 } from \"zod\";\nvar schemaScoringAdjustment = z16.object({\n  display: string,\n  type: string,\n  value: float\n});\n\n// src/client/ghin/models/scores/hole-detail.ts\nimport { z as z17 } from \"zod\";\nvar schemaHoleDetail = z17.object({\n  adjusted_gross_score: number,\n  approach_shot_accuracy: float.nullable().default(0),\n  drive_accuracy: float.nullable(),\n  fairway_hit: boolean.nullable(),\n  gir_flag: z17.any(),\n  hole_number: number,\n  id: number,\n  most_likely_score: number.nullable(),\n  par: number,\n  putts: number.nullable(),\n  raw_score: number,\n  stroke_allocation: number,\n  x_hole: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nimport { z as z20 } from \"zod\";\n\n// src/client/ghin/models/scores/score.ts\nimport { z as z19 } from \"zod\";\n\n// src/client/ghin/models/scores/statistics.ts\nimport { z as z18 } from \"zod\";\nvar schemaStatistics = z18.object({\n  birdies_or_better_percent: float,\n  bogeys_percent: float,\n  double_bogeys_percent: float,\n  fairway_hits_percent: float,\n  gir_percent: float,\n  last_stats_update_date: date,\n  last_stats_update_type: emptyStringToNull,\n  missed_general_approach_shot_accuracy_percent: float,\n  missed_left_approach_shot_accuracy_percent: float,\n  missed_left_percent: float,\n  missed_long_approach_shot_accuracy_percent: float,\n  missed_long_percent: float,\n  missed_right_approach_shot_accuracy_percent: float,\n  missed_right_percent: float,\n  missed_short_approach_shot_accuracy_percent: float,\n  missed_short_percent: float,\n  one_putt_or_better_percent: float,\n  par3s_average: float,\n  par4s_average: float,\n  par5s_average: float,\n  pars_percent: float,\n  putts_total: number,\n  three_putt_or_worse_percent: float,\n  triple_bogeys_or_worse_percent: float,\n  two_putt_or_better_percent: float,\n  two_putt_percent: float,\n  up_and_downs_total: number\n});\n\n// src/client/ghin/models/scores/score.ts\nvar rawScoreTypes = [\"A\", \"C\", \"E\", \"H\", \"N\", \"P\", \"T\"];\nvar schemaRawScoreTypes = z19.enum(rawScoreTypes);\nvar scoreTypes = [\"AWAY\", \"COMPETITION\", \"EXCEPTIONAL\", \"HOME\", \"9_HOLE_ROUNDS\", \"PENALTY\", \"TOURNAMENT\"];\nvar schemaScoreType = z19.enum(scoreTypes);\nvar scoreTypesMap = {\n  A: \"AWAY\",\n  C: \"COMPETITION\",\n  E: \"EXCEPTIONAL\",\n  H: \"HOME\",\n  N: \"9_HOLE_ROUNDS\",\n  P: \"PENALTY\",\n  T: \"TOURNAMENT\"\n};\nvar schemaScoreTypeWithTransform = schemaRawScoreTypes.transform(value => scoreTypesMap[value]);\nvar scoreStatuses = [\"VALIDATED\", \"UNDER_REVIEW\"];\nvar schemaScoreStatus = z19.enum(scoreStatuses);\nvar rawScoreStatuses = [\"Validated\", \"UnderReview\"];\nvar schemaRawScoreStatus = z19.enum(rawScoreStatuses);\nvar scoreStatusesMap = {\n  Validated: \"VALIDATED\",\n  UnderReview: \"UNDER_REVIEW\"\n};\nvar schemaScoreStatusWithTransform = schemaRawScoreStatus.transform(value => scoreStatusesMap[value]);\nvar schemaScore = z19.object({\n  adjusted_gross_score: number,\n  adjustments: z19.array(schemaScoringAdjustment),\n  back9_adjusted: number.nullable(),\n  back9_course_rating: float.nullable(),\n  back9_slope_rating: float.nullable(),\n  course_rating: float,\n  differential: float,\n  edited: boolean,\n  exceptional: boolean,\n  front9_adjusted: number.nullable(),\n  front9_course_rating: float.nullable(),\n  front9_slope_rating: float.nullable(),\n  gender,\n  golfer_id: number,\n  hole_details: z19.array(schemaHoleDetail),\n  id: number,\n  is_manual: boolean,\n  is_recent: boolean,\n  message_club_authorized: string.nullable(),\n  net_score_differential: float.nullable(),\n  number_of_holes: number,\n  number_of_played_holes: number,\n  order_number: number,\n  parent_id: number.nullable(),\n  pcc: float,\n  penalty_method: string.nullable(),\n  penalty_type: string.nullable(),\n  penalty: boolean.optional(),\n  played_at: date,\n  posted_at: date,\n  revision: boolean,\n  score_day_order: number,\n  score_type_display_full: string,\n  score_type_display_short: string,\n  score_type: schemaScoreTypeWithTransform,\n  season_end_date_at: monthDay,\n  season_start_date_at: monthDay,\n  slope_rating: float,\n  statistics: schemaStatistics.nullable().optional(),\n  status: schemaScoreStatusWithTransform,\n  unadjusted_differential: float,\n  used: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nvar schemaScoresRequest = z20.object({\n  course_id: number,\n  from_date_played: date,\n  limit: number.default(100),\n  offset: number.default(0),\n  score_types: z20.array(z20.enum(rawScoreTypes)),\n  statuses: z20.array(string),\n  tee_set_id: number,\n  to_date_played: date\n}).partial().default({}).optional();\n\n// src/client/ghin/models/scores/response.ts\nimport { z as z21 } from \"zod\";\nvar schemaNumberOrDash = z21.union([number, z21.literal(\"-\")]).transform(value => value === \"-\" ? null : Number(value));\nvar schemaFloatOrDash = z21.union([float, z21.literal(\"-\")]).transform(value => value === \"-\" ? null : Number.parseFloat(value.toString()));\nvar schemaScoresResponse = z21.object({\n  average: schemaFloatOrDash.default(0),\n  highest_score: schemaNumberOrDash,\n  lowest_score: schemaNumberOrDash,\n  scores: z21.array(schemaScore),\n  total_count: schemaNumberOrDash.default(0)\n});\n\n// src/client/ghin/index.ts\nvar searchParameters = {\n  GOLFER_ID: \"golfer_id\",\n  SOURCE: \"source\"\n};\nvar GhinClient = class {\n  httpClient;\n  courses;\n  golfers;\n  handicaps;\n  constructor(config) {\n    const results = schemaClientConfig.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid GhinClientConfig: ${results.error.message}`);\n    }\n    this.httpClient = new RequestClient({\n      ...results.data,\n      cache: results.data.cache ?? new InMemoryCacheClient()\n    });\n    this.courses = {\n      getCountries: this.coursesGetCountries.bind(this),\n      getDetails: this.courseGetDetails.bind(this),\n      search: this.courseSearch.bind(this)\n    };\n    this.handicaps = {\n      getOne: this.handicapsGetOne.bind(this),\n      getCoursePlayerHandicaps: this.handicapsGetCoursePlayerHandicaps.bind(this)\n    };\n    this.golfers = {\n      getOne: this.golfersGetOne.bind(this),\n      getScores: this.golfersGetScores.bind(this),\n      search: this.golfersSearch.bind(this)\n    };\n  }\n  async coursesGetCountries() {\n    try {\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_countries\",\n        options,\n        schema: schemaCourseCountriesResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.countries;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseGetDetails(request) {\n    try {\n      const validRequest = schemaCourseDetailsRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_details\",\n        options,\n        schema: schemaCourseDetailsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course details request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseSearch(request) {\n    try {\n      const validRequest = schemaCourseSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_search\",\n        options,\n        schema: schemaCourseSearchResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.courses;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetOne(ghin) {\n    try {\n      const ghinNumber = number.parse(ghin);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE], [\"ghin\", ghinNumber.toString()]]);\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfer\",\n        options,\n        schema: schemaGolferHandicapResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfer;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetCoursePlayerHandicaps(request) {\n    try {\n      const golfers = z22.array(schemaGolferCourseHandicapRequest).parse(request).map(_ref6 => {\n        let {\n          ghin,\n          ...golfer\n        } = _ref6;\n        return {\n          ...golfer,\n          [searchParameters.GOLFER_ID]: ghin\n        };\n      });\n      const searchParams = new URLSearchParams();\n      const courseHandicapRequest = {\n        golfers,\n        source: CLIENT_SOURCE\n      };\n      const options = {\n        body: JSON.stringify(courseHandicapRequest),\n        method: \"POST\",\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_handicaps\",\n        options,\n        schema: schemaCoursePlayerHandicapsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course handicap request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersSearch(request) {\n    try {\n      const {\n        ghin,\n        ...params\n      } = schemaGolferSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const searchDefaults = {\n        from_ghin: true,\n        per_page: 25,\n        sorting_criteria: \"full_name\",\n        order: \"asc\",\n        page: 1\n      };\n      for (const [key, value] of Object.entries(searchDefaults)) {\n        searchParams.set(key, value.toString());\n      }\n      if (ghin) {\n        searchParams.set(searchParameters.GOLFER_ID, ghin.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfers_search\",\n        schema: schemaGolferSearchResponse,\n        options\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfers;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid golfer search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetOne(ghinNumber) {\n    try {\n      const ghin = number.parse(ghinNumber);\n      const results = await this.golfersSearch({\n        ghin,\n        status: \"Active\"\n      });\n      return results.find(golfer => golfer.status === \"Active\");\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetScores(ghinNumber, request) {\n    try {\n      const validRequest = schemaScoresRequest.parse(request) ?? {};\n      const ghin = number.parse(ghinNumber);\n      const searchParams = new URLSearchParams([[searchParameters.GOLFER_ID, ghin.toString()], [\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        if (value === null) {\n          continue;\n        }\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            searchParams.append(key, v.toString());\n          }\n          continue;\n        }\n        if (typeof value === \"object\" && value instanceof Date) {\n          searchParams.set(key, value.toISOString().split(\"T\")[0]);\n          continue;\n        }\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"scores\",\n        options,\n        schema: schemaScoresResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid scores request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n};\nexport { GhinClient };","map":{"version":3,"names":["z","z22","GhinError","Error","code","statusCode","cause","constructor","message","name","AuthenticationError","NetworkError","ValidationError","field","RateLimitError","retryAfter","ConfigurationError","CacheError","schemaStringOrUndefined","union","string","undefined","schemaPromiseOrNonPromiseStringOrUndefined","promise","schemaPromiseOrNonPromiseVoid","void","schemaCacheClient","object","read","function","args","returns","write","z3","z2","boolean","literal","null","transform","value","date","refine","Number","isNaN","Date","parse","toString","emptyString","trim","emptyStringToNull","nullable","float","coerce","number","gender","enum","handicap","int","min","monthDay","or","month","day","split","padStart","shortDate","year","schemaClientConfig","cache","optional","password","username","InMemoryCacheClient","Mutex","jwtDecode","err","err2","ok","ok2","DEFAULT_RETRY_CONFIG","maxAttempts","baseDelay","maxDelay","backoffMultiplier","retryableStatusCodes","isRetryableError","error","includes","calculateDelay","attempt","config","delay","Math","sleep","ms","Promise","resolve","setTimeout","withRetry","operation","arguments","length","finalConfig","result","isOk","jitter","random","totalDelay","z4","schemaAccessToken","expiresIn","token","_ref","tmpExpiresIn","values","now","secondsUntilExpiry","replace","millisecondsUntilExpiry","getTime","z5","schemaClientConfig2","z6","schemaSession","appId","authVersion","fid","sdkVersion","schemaSessionResponse","authToken","z7","schemaLoginResponse","golfer_user","golfer_user_token","FIREBASE_SESSION_URL","URL","GOOGLE_API_KEY","DEFAULT_USER_AGENT","CLIENT_SOURCE","SESSION_DEFAULTS","FETCH_HEADER_DEFAULTS","apiPathnames","course_countries","course_details","course_handicaps","course_search","golfer","golfers_search","login","scores","toFullApiUrl","baseUrl","pathname","makeAuthHeaders","accessToken","Authorization","RequestClient","apiVersion","lock","sessionToken","results","safeParse","success","data","_fetch","_ref2","options","schema","url","response","fetch","status","body","json","text","statusText","JSON","stringify","headers","get","retryAfterSeconds","parseInt","raw","parsed","String","refreshSessionToken","method","map","isAccessTokenValid","decoded","expirationDate","exp","getAccessToken","cachedAccessToken","isCachedTokenValid","refreshResult","refreshAccessToken","isErr","sessionResult","user","email_or_ghin","resp","_ref3","entity","accessTokenResult","runExclusive","searchParams","requestInitOptions","actualOptions","source","search","z8","FOREIGN_COUNTRY_CODE","schemaCourseCountryCode","test","schemaCourseCountryState","course_code","schemaCourseCountry","crs_code","states","array","z9","FOREIGN_STATE_CODE","courseStateCodeRegex","schemaCourseSearchState","schemaCourseSearchRequest","country","facility_id","state","updated_at","_ref4","Boolean","schemaCourseDetailsRequest","course_id","include_altered_tees","z11","z10","schemaGeoCoordinate","schemaStatus","toUpperCase","pipe","schemaCourse","Address1","Address2","City","Country","CourseID","CourseName","CourseStatus","Email","email","EntCountryCode","EntStateCode","FacilityID","FacilityName","FacilityStatus","FullName","GeoLocationLatitude","GeoLocationLongitude","LegacyCRPCourseId","Ratings","unknown","State","Telephone","UpdatedOn","Zip","zip","schemaStatus2","schemaCourseCountriesResponse","countries","passthrough","schemaCourseSearchResponse","courses","schemaCourseDetailsFacility","FacilityId","FacilityNumber","GeoLocationFormattedAddress","GolfAssociationId","schemaCourseDetailsSeason","IsAllYear","SeasonEndDate","SeasonName","SeasonStartDate","schemaCourseDetailsTeeSetRatings","BogeyRating","CourseRating","RatingType","SlopeRating","schemaCourseDetailsTeeSetHole","Allocation","HoleId","Length","Par","schemaCourseDetailsTeeSet","EligibleSides","Gender","Holes","HolesNumber","IsShorter","LegacyCRPTeeId","StrokeAllocation","TeeSetRatingId","TeeSetRatingName","TotalMeters","TotalPar","TotalYardage","schemaCourseDetailsResponse","CourseCity","CourseId","CourseNumber","CourseState","Facility","Season","TeeSets","z12","schemaGolferStatus","schemaGolferSearchRequest","first_name","from_ghin","ghin","last_name","order","page","per_page","max","sorting_criteria","partial","schemaGolfer","association_id","association_name","handicap_index","club_affiliation_id","club_id","club_name","entitlement","hard_cap","has_digital_profile","hi_display","hi_value","is_home_club","low_hi_date","low_hi_display","low_hi_value","low_hi","message_club_authorized","middle_name","phone_number","prefix","rev_date","soft_cap","suffix","schemaGolferSearchResponse","golfers","z13","schemaPlayerCourseHandicap","playing_handicap","playing_handicap_display","shots_off","schemaCoursePercentPlayerHandicap","record","z14","schemaTeeSetSide","schemaGolferCourseHandicapBaseRequest","tee_set_id","tee_set_side","schemaGolferCourseHandicapRequest","_ref5","isSafeInteger","schemaCourseHandicapsRequest","omit","extend","golfer_id","default","z15","schemaGolferHandicapClub","active","id","schemaGolferHandicapResponse","clubs","schemaCoursePlayerHandicapsResponse","z16","schemaScoringAdjustment","display","type","z17","schemaHoleDetail","adjusted_gross_score","approach_shot_accuracy","drive_accuracy","fairway_hit","gir_flag","any","hole_number","most_likely_score","par","putts","raw_score","stroke_allocation","x_hole","z20","z19","z18","schemaStatistics","birdies_or_better_percent","bogeys_percent","double_bogeys_percent","fairway_hits_percent","gir_percent","last_stats_update_date","last_stats_update_type","missed_general_approach_shot_accuracy_percent","missed_left_approach_shot_accuracy_percent","missed_left_percent","missed_long_approach_shot_accuracy_percent","missed_long_percent","missed_right_approach_shot_accuracy_percent","missed_right_percent","missed_short_approach_shot_accuracy_percent","missed_short_percent","one_putt_or_better_percent","par3s_average","par4s_average","par5s_average","pars_percent","putts_total","three_putt_or_worse_percent","triple_bogeys_or_worse_percent","two_putt_or_better_percent","two_putt_percent","up_and_downs_total","rawScoreTypes","schemaRawScoreTypes","scoreTypes","schemaScoreType","scoreTypesMap","A","C","E","H","N","P","T","schemaScoreTypeWithTransform","scoreStatuses","schemaScoreStatus","rawScoreStatuses","schemaRawScoreStatus","scoreStatusesMap","Validated","UnderReview","schemaScoreStatusWithTransform","schemaScore","adjustments","back9_adjusted","back9_course_rating","back9_slope_rating","course_rating","differential","edited","exceptional","front9_adjusted","front9_course_rating","front9_slope_rating","hole_details","is_manual","is_recent","net_score_differential","number_of_holes","number_of_played_holes","order_number","parent_id","pcc","penalty_method","penalty_type","penalty","played_at","posted_at","revision","score_day_order","score_type_display_full","score_type_display_short","score_type","season_end_date_at","season_start_date_at","slope_rating","statistics","unadjusted_differential","used","schemaScoresRequest","from_date_played","limit","offset","score_types","statuses","to_date_played","z21","schemaNumberOrDash","schemaFloatOrDash","parseFloat","schemaScoresResponse","average","highest_score","lowest_score","total_count","searchParameters","GOLFER_ID","SOURCE","GhinClient","httpClient","handicaps","getCountries","coursesGetCountries","bind","getDetails","courseGetDetails","courseSearch","getOne","handicapsGetOne","getCoursePlayerHandicaps","handicapsGetCoursePlayerHandicaps","golfersGetOne","getScores","golfersGetScores","golfersSearch","URLSearchParams","request","validRequest","key","Object","entries","set","ZodError","ghinNumber","_ref6","courseHandicapRequest","params","searchDefaults","find","Array","isArray","v","append","toISOString"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/ghin/dist/index.js"],"sourcesContent":["// src/client/ghin/index.ts\nimport { z as z22 } from \"zod\";\n\n// src/errors/index.ts\nvar GhinError = class extends Error {\n  code;\n  statusCode;\n  cause;\n  constructor(message, code, statusCode, cause) {\n    super(message);\n    this.name = \"GhinError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.cause = cause;\n  }\n};\nvar AuthenticationError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"AUTHENTICATION_ERROR\", statusCode, cause);\n    this.name = \"AuthenticationError\";\n  }\n};\nvar NetworkError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"NETWORK_ERROR\", statusCode, cause);\n    this.name = \"NetworkError\";\n  }\n};\nvar ValidationError = class extends GhinError {\n  field;\n  constructor(message, field, cause) {\n    super(message, \"VALIDATION_ERROR\", void 0, cause);\n    this.name = \"ValidationError\";\n    this.field = field;\n  }\n};\nvar RateLimitError = class extends GhinError {\n  retryAfter;\n  constructor(message, retryAfter, cause) {\n    super(message, \"RATE_LIMIT_ERROR\", 429, cause);\n    this.name = \"RateLimitError\";\n    this.retryAfter = retryAfter;\n  }\n};\nvar ConfigurationError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CONFIGURATION_ERROR\", void 0, cause);\n    this.name = \"ConfigurationError\";\n  }\n};\nvar CacheError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CACHE_ERROR\", void 0, cause);\n    this.name = \"CacheError\";\n  }\n};\n\n// src/models/cache-client.ts\nimport { z } from \"zod\";\nvar schemaStringOrUndefined = z.union([z.string(), z.undefined()]);\nvar schemaPromiseOrNonPromiseStringOrUndefined = z.union([\n  z.promise(schemaStringOrUndefined),\n  schemaStringOrUndefined\n]);\nvar schemaPromiseOrNonPromiseVoid = z.union([z.promise(z.void()), z.void()]);\nvar schemaCacheClient = z.object({\n  read: z.function().args().returns(schemaPromiseOrNonPromiseStringOrUndefined),\n  write: z.function().args(z.string()).returns(schemaPromiseOrNonPromiseVoid)\n});\n\n// src/models/client-config.ts\nimport { z as z3 } from \"zod\";\n\n// src/models/validation.ts\nimport { z as z2 } from \"zod\";\nvar boolean = z2.union([z2.boolean(), z2.literal(\"true\"), z2.literal(\"false\"), z2.null()]).transform((value) => value === true || value === \"true\");\nvar date = z2.union([z2.date(), z2.string()]).refine((value) => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform((value) => value ? new Date(value) : void 0);\nvar emptyString = z2.string().trim();\nvar emptyStringToNull = emptyString.nullable().transform((value) => value || null);\nvar float = z2.coerce.number();\nvar gender = z2.enum([\"M\", \"F\"]);\nvar handicap = z2.union([float, z2.string(), z2.null()]).refine((value) => {\n  if (typeof value === \"number\") {\n    return true;\n  }\n  if (typeof value === \"string\" && value === \"NH\") {\n    return true;\n  }\n  return false;\n}).transform((value) => {\n  if (value === \"NH\") {\n    return null;\n  }\n  return value;\n});\nvar number = float.int();\nvar string = emptyString.min(1);\nvar monthDay = string.or(emptyString).transform((value) => {\n  if (!value) {\n    return null;\n  }\n  const [month, day] = value.split(\"/\");\n  return `${month?.toString().padStart(2, \"0\")}-${day?.toString().padStart(2, \"0\")}`;\n});\nvar shortDate = z2.union([z2.date(), z2.string(), z2.null()]).refine((value) => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform((value) => {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const [year, month, day] = value.split(\"-\");\n  return /* @__PURE__ */ new Date(`${year}-${month}-${day}T00:00Z`);\n});\n\n// src/models/client-config.ts\nvar schemaClientConfig = z3.object({\n  cache: schemaCacheClient.optional(),\n  password: string,\n  username: string\n});\n\n// src/client/in-memory-cache-client/index.ts\nvar InMemoryCacheClient = class {\n  value = void 0;\n  async read() {\n    return this.value;\n  }\n  async write(value) {\n    this.value = value;\n  }\n};\n\n// src/client/request-client/index.ts\nimport { Mutex } from \"async-mutex\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { err as err2, ok as ok2 } from \"neverthrow\";\n\n// src/utils/retry.ts\nimport { err, ok } from \"neverthrow\";\nvar DEFAULT_RETRY_CONFIG = {\n  maxAttempts: 3,\n  baseDelay: 1e3,\n  // 1 second\n  maxDelay: 1e4,\n  // 10 seconds\n  backoffMultiplier: 2,\n  retryableStatusCodes: [408, 429, 500, 502, 503, 504]\n};\nfunction isRetryableError(error) {\n  if (error instanceof NetworkError) {\n    return error.statusCode ? DEFAULT_RETRY_CONFIG.retryableStatusCodes.includes(error.statusCode) : true;\n  }\n  if (error instanceof RateLimitError) {\n    return true;\n  }\n  return false;\n}\nfunction calculateDelay(attempt, config) {\n  const delay = config.baseDelay * config.backoffMultiplier ** (attempt - 1);\n  return Math.min(delay, config.maxDelay);\n}\nasync function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\nasync function withRetry(operation, config = {}) {\n  const finalConfig = { ...DEFAULT_RETRY_CONFIG, ...config };\n  for (let attempt = 1; attempt <= finalConfig.maxAttempts; attempt++) {\n    const result = await operation();\n    if (result.isOk()) {\n      return result;\n    }\n    const error = result.error;\n    if (attempt === finalConfig.maxAttempts) {\n      return result;\n    }\n    if (!isRetryableError(error)) {\n      return result;\n    }\n    const delay = calculateDelay(attempt, finalConfig);\n    const jitter = Math.random() * 0.1 * delay;\n    const totalDelay = delay + jitter;\n    await sleep(totalDelay);\n  }\n  return err(new Error(\"Retry exhausted\"));\n}\n\n// src/client/request-client/models/access-token.ts\nimport { z as z4 } from \"zod\";\nvar schemaAccessToken = z4.object({\n  expiresIn: string,\n  token: string\n}).transform(({ expiresIn: tmpExpiresIn, ...values }) => {\n  const now = /* @__PURE__ */ new Date();\n  const secondsUntilExpiry = Number(tmpExpiresIn.replace(/[^0-9]/g, \"\"));\n  const millisecondsUntilExpiry = secondsUntilExpiry * 1e3;\n  const expiresIn = new Date(now.getTime() + millisecondsUntilExpiry);\n  return {\n    ...values,\n    expiresIn\n  };\n});\n\n// src/client/request-client/models/client-config.ts\nimport { z as z5 } from \"zod\";\nvar schemaClientConfig2 = z5.object({\n  cache: schemaCacheClient,\n  password: string,\n  username: string\n});\n\n// src/client/request-client/models/session.ts\nimport { z as z6 } from \"zod\";\nvar schemaSession = z6.object({\n  appId: string,\n  authVersion: string,\n  fid: string,\n  sdkVersion: string\n});\nvar schemaSessionResponse = z6.object({\n  authToken: schemaAccessToken\n});\n\n// src/client/request-client/models/login.ts\nimport { z as z7 } from \"zod\";\nvar schemaLoginResponse = z7.object({\n  golfer_user: z7.object({\n    golfer_user_token: string\n  })\n});\n\n// src/client/request-client/index.ts\nvar FIREBASE_SESSION_URL = new URL(\n  \"https://firebaseinstallations.googleapis.com/v1/projects/ghin-mobile-app/installations\"\n);\nvar GOOGLE_API_KEY = \"AIzaSyBxgTOAWxiud0HuaE5tN-5NTlzFnrtyz-I\";\nvar DEFAULT_USER_AGENT = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36\";\nvar CLIENT_SOURCE = \"GHINcom\";\nvar SESSION_DEFAULTS = {\n  appId: \"1:884417644529:web:47fb315bc6c70242f72650\",\n  authVersion: \"FIS_v2\",\n  fid: \"fg6JfS0U01YmrelthLX9Iz\",\n  sdkVersion: \"w:0.5.7\"\n};\nvar FETCH_HEADER_DEFAULTS = {\n  \"Content-Type\": \"application/json\",\n  \"User-Agent\": DEFAULT_USER_AGENT\n};\nvar apiPathnames = {\n  course_countries: \"/get_countries_and_states.json\",\n  course_details: \"/crsCourseMethods.asmx/GetCourseDetails.json\",\n  course_handicaps: \"/playing_handicaps.json\",\n  course_search: \"/crsCourseMethods.asmx/SearchCourses.json\",\n  golfer: \"/search_golfer.json\",\n  golfers_search: \"/golfers.json\",\n  login: \"/golfer_login.json\",\n  scores: \"/scores.json\"\n};\nvar toFullApiUrl = (baseUrl, pathname) => new URL(`${baseUrl.pathname}${apiPathnames[pathname]}`, baseUrl);\nvar makeAuthHeaders = (accessToken) => ({\n  Authorization: `Bearer ${accessToken}`\n});\nvar RequestClient = class {\n  accessToken;\n  apiVersion = \"v1\";\n  config;\n  baseUrl = new URL(`https://api2.ghin.com/api/${this.apiVersion}`);\n  lock;\n  sessionToken;\n  constructor(config) {\n    const results = schemaClientConfig2.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid RequestClientConfig: ${results.error.message}`);\n    }\n    this.lock = new Mutex();\n    this.config = schemaClientConfig2.parse(results.data);\n  }\n  async _fetch({\n    options,\n    schema,\n    url\n  }) {\n    try {\n      const response = await fetch(url.toString(), options);\n      if (!response.ok || response.status >= 400) {\n        let body;\n        try {\n          body = await response.json();\n        } catch {\n          body = await response.text();\n        }\n        if (response.status === 401 || response.status === 403) {\n          return err2(\n            new AuthenticationError(\n              `Authentication failed: ${response.status} ${response.statusText}`,\n              response.status,\n              new Error(JSON.stringify(body))\n            )\n          );\n        }\n        if (response.status === 429) {\n          const retryAfter = response.headers.get(\"Retry-After\");\n          const retryAfterSeconds = retryAfter ? Number.parseInt(retryAfter, 10) : void 0;\n          return err2(\n            new RateLimitError(\n              `Rate limit exceeded: ${response.status} ${response.statusText}`,\n              retryAfterSeconds,\n              new Error(JSON.stringify(body))\n            )\n          );\n        }\n        if (response.status >= 500) {\n          return err2(\n            new NetworkError(\n              `Server error: ${response.status} ${response.statusText}`,\n              response.status,\n              new Error(JSON.stringify(body))\n            )\n          );\n        }\n        return err2(\n          new NetworkError(\n            `Request failed: ${response.status} ${response.statusText}`,\n            response.status,\n            new Error(JSON.stringify(body))\n          )\n        );\n      }\n      const raw = await response.json();\n      const parsed = schema.safeParse(raw);\n      if (!parsed.success) {\n        return err2(\n          new ValidationError(\n            `Response validation failed: ${JSON.stringify(parsed.error)}`,\n            void 0,\n            new Error(`URL: ${url.toString()}`)\n          )\n        );\n      }\n      return ok2(parsed.data);\n    } catch (error) {\n      if (error instanceof Error) {\n        return err2(new NetworkError(`Network request failed: ${error.message}`, void 0, error));\n      }\n      return err2(new NetworkError(`Unknown network error: ${String(error)}`));\n    }\n  }\n  async refreshSessionToken() {\n    const url = new URL(FIREBASE_SESSION_URL);\n    const body = JSON.stringify(SESSION_DEFAULTS);\n    const result = await this._fetch({\n      options: {\n        body,\n        headers: {\n          ...FETCH_HEADER_DEFAULTS,\n          \"x-goog-api-key\": GOOGLE_API_KEY\n        },\n        method: \"POST\"\n      },\n      schema: schemaSessionResponse,\n      url\n    });\n    return result.map((response) => response.authToken);\n  }\n  isAccessTokenValid(accessToken) {\n    if (!accessToken) {\n      return false;\n    }\n    try {\n      const decoded = jwtDecode(accessToken);\n      const expirationDate = new Date(decoded.exp * 1e3);\n      return expirationDate > /* @__PURE__ */ new Date();\n    } catch {\n      return false;\n    }\n  }\n  async getAccessToken() {\n    const isAccessTokenValid = this.isAccessTokenValid(this.accessToken);\n    if (isAccessTokenValid) {\n      return ok2(this.accessToken);\n    }\n    try {\n      const cachedAccessToken = await this.config.cache.read();\n      const isCachedTokenValid = this.isAccessTokenValid(cachedAccessToken);\n      if (isCachedTokenValid) {\n        this.accessToken = cachedAccessToken;\n        return ok2(cachedAccessToken);\n      }\n    } catch (error) {\n      return err2(\n        new CacheError(\n          `Failed to read from cache: ${error instanceof Error ? error.message : String(error)}`,\n          error instanceof Error ? error : void 0\n        )\n      );\n    }\n    const refreshResult = await this.refreshAccessToken();\n    if (refreshResult.isErr()) {\n      return refreshResult;\n    }\n    const accessToken = refreshResult.value;\n    this.accessToken = accessToken;\n    try {\n      await this.config.cache.write(accessToken);\n    } catch (error) {\n      return err2(\n        new CacheError(\n          `Failed to write to cache: ${error instanceof Error ? error.message : String(error)}`,\n          error instanceof Error ? error : void 0\n        )\n      );\n    }\n    return ok2(accessToken);\n  }\n  async refreshAccessToken() {\n    const sessionResult = await this.refreshSessionToken();\n    if (sessionResult.isErr()) {\n      return err2(sessionResult.error);\n    }\n    this.sessionToken = sessionResult.value;\n    const url = toFullApiUrl(this.baseUrl, \"login\");\n    const body = JSON.stringify({\n      token: this.sessionToken.token,\n      user: {\n        email_or_ghin: this.config.username,\n        password: this.config.password\n      }\n    });\n    const response = await this._fetch({\n      options: {\n        body,\n        headers: FETCH_HEADER_DEFAULTS,\n        method: \"POST\"\n      },\n      schema: schemaLoginResponse,\n      url\n    });\n    return response.map((resp) => resp?.golfer_user?.golfer_user_token);\n  }\n  async fetch({\n    entity,\n    schema,\n    options = {}\n  }) {\n    const accessTokenResult = await this.lock.runExclusive(async () => this.getAccessToken());\n    if (accessTokenResult.isErr()) {\n      return err2(accessTokenResult.error);\n    }\n    const accessToken = accessTokenResult.value;\n    const url = toFullApiUrl(this.baseUrl, entity);\n    const { headers, searchParams, ...requestInitOptions } = options;\n    const actualOptions = {\n      ...requestInitOptions,\n      headers: { ...FETCH_HEADER_DEFAULTS, source: CLIENT_SOURCE, ...makeAuthHeaders(accessToken), ...headers }\n    };\n    if (searchParams) {\n      url.search = searchParams.toString();\n    }\n    return withRetry(() => this._fetch({ options: actualOptions, schema, url }));\n  }\n};\n\n// src/client/ghin/models/course/country.ts\nimport { z as z8 } from \"zod\";\nvar FOREIGN_COUNTRY_CODE = \"Fo\";\nvar schemaCourseCountryCode = string.refine((value) => {\n  if (value === FOREIGN_COUNTRY_CODE) {\n    return true;\n  }\n  return /^[A-Z]{3}$/.test(value);\n}, 'Invalid country code. Expected format: ISO 3166-1 alpha-3 code or \"Fo\" for foreign countries');\nvar schemaCourseCountryState = z8.object({\n  code: string,\n  //schemaCourseCountryCode,\n  course_code: string,\n  //schemaCourseCountryCode.nullable(),\n  name: string\n});\nvar schemaCourseCountry = z8.object({\n  code: string,\n  crs_code: z8.string().trim().transform((value) => value || null).nullable(),\n  name: string,\n  states: z8.array(schemaCourseCountryState)\n});\n\n// src/client/ghin/models/course/request.ts\nimport { z as z9 } from \"zod\";\n\n// src/client/ghin/models/course/state.ts\nvar FOREIGN_STATE_CODE = \"*F\";\nvar courseStateCodeRegex = /^[A-Z]{1,2}-[A-Z*0-9]{1,4}$/;\nvar schemaCourseSearchState = string.refine(\n  (value) => {\n    if (value === FOREIGN_STATE_CODE) {\n      return true;\n    }\n    return courseStateCodeRegex.test(value);\n  },\n  {\n    message: \"Invalid state code format. Expected format: US-OH, LC-01, MX-*A, or *F\"\n  }\n);\n\n// src/client/ghin/models/course/request.ts\nvar schemaCourseSearchRequest = z9.object({\n  country: schemaCourseCountryCode.optional(),\n  facility_id: number.optional(),\n  name: string.optional(),\n  state: schemaCourseSearchState.optional(),\n  updated_at: date.optional()\n}).refine(\n  ({ country, state, facility_id, updated_at }) => {\n    switch (true) {\n      case Boolean(country && state):\n        return true;\n      case Boolean(facility_id):\n        return true;\n      case Boolean(updated_at):\n        return true;\n      default:\n        return false;\n    }\n  },\n  {\n    message: \"At least one of the following are required: country + state, facility_id, or updated_at must be provided\"\n  }\n);\nvar schemaCourseDetailsRequest = z9.object({\n  course_id: number,\n  include_altered_tees: boolean.optional()\n}).transform((data) => ({\n  ...data,\n  include_altered_tees: data.include_altered_tees ?? false\n}));\n\n// src/client/ghin/models/course/response.ts\nimport { z as z11 } from \"zod\";\n\n// src/client/ghin/models/course/course.ts\nimport { z as z10 } from \"zod\";\n\n// src/client/ghin/models/course/geolocation.ts\nvar schemaGeoCoordinate = float.transform((value) => value ? value : null).nullable();\n\n// src/client/ghin/models/course/course.ts\nvar schemaStatus = string.transform((value) => value.toUpperCase()).pipe(z10.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourse = z10.object({\n  Address1: string.nullable(),\n  Address2: string.nullable(),\n  City: string.nullable(),\n  Country: string.nullable(),\n  CourseID: number,\n  CourseName: string,\n  CourseStatus: schemaStatus,\n  Email: string.email().nullable(),\n  EntCountryCode: number.nullable(),\n  EntStateCode: number.nullable(),\n  FacilityID: number,\n  FacilityName: string,\n  FacilityStatus: schemaStatus,\n  FullName: string,\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  LegacyCRPCourseId: number.nullable(),\n  Ratings: z10.array(z10.unknown()),\n  State: string.nullable(),\n  Telephone: string.nullable(),\n  UpdatedOn: shortDate.nullable(),\n  Zip: z10.string().trim().transform((zip) => zip?.trim() || null).nullable().or(z10.array(z10.unknown()))\n});\n\n// src/client/ghin/models/course/response.ts\nvar schemaStatus2 = string.transform((value) => value.toUpperCase()).pipe(z11.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourseCountriesResponse = z11.object({\n  countries: z11.array(schemaCourseCountry.passthrough())\n});\nvar schemaCourseSearchResponse = z11.object({\n  courses: z11.array(schemaCourse.passthrough())\n});\nvar schemaCourseDetailsFacility = z11.object({\n  FacilityId: number,\n  FacilityName: string,\n  FacilityNumber: number.nullable(),\n  FacilityStatus: string,\n  GeoLocationFormattedAddress: string.nullable(),\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  GolfAssociationId: number.nullable()\n});\nvar schemaCourseDetailsSeason = z11.object({\n  IsAllYear: boolean,\n  SeasonEndDate: monthDay.nullable(),\n  SeasonName: string,\n  SeasonStartDate: monthDay.nullable()\n});\nvar schemaCourseDetailsTeeSetRatings = z11.object({\n  BogeyRating: float,\n  CourseRating: float,\n  RatingType: z11.enum([\"Front\", \"Back\", \"Total\"]),\n  SlopeRating: float\n});\nvar schemaCourseDetailsTeeSetHole = z11.object({\n  Allocation: number,\n  HoleId: number,\n  Length: number,\n  Number: number,\n  Par: number\n});\nvar schemaCourseDetailsTeeSet = z11.object({\n  EligibleSides: z11.unknown(),\n  Gender: z11.enum([\"Male\", \"Female\", \"Mixed\"]).nullable(),\n  Holes: z11.array(schemaCourseDetailsTeeSetHole),\n  HolesNumber: number,\n  IsShorter: boolean.nullable(),\n  LegacyCRPTeeId: number,\n  Ratings: z11.array(schemaCourseDetailsTeeSetRatings),\n  StrokeAllocation: boolean,\n  TeeSetRatingId: number,\n  TeeSetRatingName: string,\n  TotalMeters: number,\n  TotalPar: number,\n  TotalYardage: number\n});\nvar schemaCourseDetailsResponse = z11.object({\n  CourseCity: string,\n  CourseId: number,\n  CourseName: string,\n  CourseNumber: number.nullable(),\n  CourseState: schemaCourseSearchState,\n  CourseStatus: schemaStatus2,\n  Facility: schemaCourseDetailsFacility,\n  Season: schemaCourseDetailsSeason,\n  TeeSets: z11.array(schemaCourseDetailsTeeSet)\n});\n\n// src/client/ghin/models/golfers/search.ts\nimport { z as z12 } from \"zod\";\nvar schemaGolferStatus = z12.enum([\"Active\", \"Inactive\"]).transform((value) => value.toUpperCase());\nvar schemaGolferSearchRequest = z12.object({\n  country: string.transform((value) => value?.toUpperCase()),\n  first_name: string,\n  from_ghin: boolean,\n  ghin: number,\n  last_name: string.optional(),\n  order: z12.enum([\"asc\", \"desc\"]),\n  page: number,\n  per_page: number.max(100),\n  sorting_criteria: z12.enum([\"country\", \"full_name\", \"handicap_index\", \"state\", \"status\"]),\n  state: string.transform((value) => value?.toUpperCase()),\n  status: schemaGolferStatus\n}).partial();\nvar schemaGolfer = z12.object({\n  ghin: number,\n  first_name: string,\n  last_name: string,\n  association_id: number,\n  association_name: string,\n  handicap_index: handicap,\n  club_affiliation_id: number,\n  club_id: number,\n  club_name: emptyStringToNull,\n  country: emptyStringToNull,\n  entitlement: boolean,\n  gender,\n  hard_cap: boolean,\n  has_digital_profile: boolean,\n  hi_display: string,\n  hi_value: handicap,\n  is_home_club: boolean,\n  low_hi_date: date.nullable(),\n  low_hi_display: string,\n  low_hi_value: handicap,\n  low_hi: handicap,\n  message_club_authorized: string.nullable(),\n  middle_name: emptyStringToNull.nullable().optional(),\n  phone_number: emptyStringToNull.nullable().optional(),\n  prefix: emptyStringToNull.optional(),\n  rev_date: date.nullable(),\n  soft_cap: boolean,\n  state: emptyStringToNull,\n  status: z12.enum([\"Active\", \"Inactive\"]),\n  suffix: emptyStringToNull.optional()\n});\nvar schemaGolferSearchResponse = z12.object({\n  golfers: z12.array(schemaGolfer)\n});\n\n// src/client/ghin/models/handicaps/course-player-handicap.ts\nimport { z as z13 } from \"zod\";\nvar schemaPlayerCourseHandicap = z13.object({\n  playing_handicap: number,\n  playing_handicap_display: string,\n  shots_off: number\n});\nvar schemaCoursePercentPlayerHandicap = z13.record(string, schemaPlayerCourseHandicap);\n\n// src/client/ghin/models/handicaps/request.ts\nimport { z as z14 } from \"zod\";\nvar schemaTeeSetSide = z14.enum([\"All 18\", \"F9\", \"B9\"]);\nvar schemaGolferCourseHandicapBaseRequest = z14.object({\n  ghin: number.optional(),\n  handicap_index: number.optional(),\n  tee_set_id: number,\n  tee_set_side: schemaTeeSetSide\n});\nvar schemaGolferCourseHandicapRequest = schemaGolferCourseHandicapBaseRequest.refine(({ ghin, handicap_index }) => {\n  if (ghin && handicap_index) {\n    throw new Error(\"Cannot provide both ghin and handicap_index\");\n  }\n  if (!Number.isSafeInteger(ghin) && !Number.isSafeInteger(handicap_index)) {\n    throw new Error(\"Must provide either ghin or handicap_index\");\n  }\n  return true;\n});\nvar schemaCourseHandicapsRequest = z14.object({\n  golfers: z14.array(\n    schemaGolferCourseHandicapBaseRequest.omit({\n      ghin: true\n    }).extend({\n      golfer_id: number.optional()\n    })\n  ),\n  source: z14.literal(CLIENT_SOURCE).default(CLIENT_SOURCE).optional()\n});\n\n// src/client/ghin/models/handicaps/response.ts\nimport { z as z15 } from \"zod\";\nvar schemaGolferHandicapClub = z15.object({\n  active: boolean,\n  association_id: number,\n  club_name: string,\n  id: number\n});\nvar schemaGolferHandicapResponse = z15.object({\n  golfer: z15.object({\n    clubs: z15.array(schemaGolferHandicapClub),\n    handicap_index: handicap\n  })\n}).passthrough();\nvar schemaCoursePlayerHandicapsResponse = z15.object({\n  100: schemaCoursePercentPlayerHandicap,\n  95: schemaCoursePercentPlayerHandicap,\n  90: schemaCoursePercentPlayerHandicap,\n  85: schemaCoursePercentPlayerHandicap,\n  80: schemaCoursePercentPlayerHandicap,\n  75: schemaCoursePercentPlayerHandicap,\n  70: schemaCoursePercentPlayerHandicap,\n  65: schemaCoursePercentPlayerHandicap,\n  60: schemaCoursePercentPlayerHandicap,\n  55: schemaCoursePercentPlayerHandicap,\n  50: schemaCoursePercentPlayerHandicap,\n  45: schemaCoursePercentPlayerHandicap,\n  40: schemaCoursePercentPlayerHandicap,\n  35: schemaCoursePercentPlayerHandicap,\n  30: schemaCoursePercentPlayerHandicap,\n  25: schemaCoursePercentPlayerHandicap,\n  20: schemaCoursePercentPlayerHandicap,\n  15: schemaCoursePercentPlayerHandicap,\n  10: schemaCoursePercentPlayerHandicap,\n  5: schemaCoursePercentPlayerHandicap\n});\n\n// src/client/ghin/models/scores/adjustment.ts\nimport { z as z16 } from \"zod\";\nvar schemaScoringAdjustment = z16.object({\n  display: string,\n  type: string,\n  value: float\n});\n\n// src/client/ghin/models/scores/hole-detail.ts\nimport { z as z17 } from \"zod\";\nvar schemaHoleDetail = z17.object({\n  adjusted_gross_score: number,\n  approach_shot_accuracy: float.nullable().default(0),\n  drive_accuracy: float.nullable(),\n  fairway_hit: boolean.nullable(),\n  gir_flag: z17.any(),\n  hole_number: number,\n  id: number,\n  most_likely_score: number.nullable(),\n  par: number,\n  putts: number.nullable(),\n  raw_score: number,\n  stroke_allocation: number,\n  x_hole: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nimport { z as z20 } from \"zod\";\n\n// src/client/ghin/models/scores/score.ts\nimport { z as z19 } from \"zod\";\n\n// src/client/ghin/models/scores/statistics.ts\nimport { z as z18 } from \"zod\";\nvar schemaStatistics = z18.object({\n  birdies_or_better_percent: float,\n  bogeys_percent: float,\n  double_bogeys_percent: float,\n  fairway_hits_percent: float,\n  gir_percent: float,\n  last_stats_update_date: date,\n  last_stats_update_type: emptyStringToNull,\n  missed_general_approach_shot_accuracy_percent: float,\n  missed_left_approach_shot_accuracy_percent: float,\n  missed_left_percent: float,\n  missed_long_approach_shot_accuracy_percent: float,\n  missed_long_percent: float,\n  missed_right_approach_shot_accuracy_percent: float,\n  missed_right_percent: float,\n  missed_short_approach_shot_accuracy_percent: float,\n  missed_short_percent: float,\n  one_putt_or_better_percent: float,\n  par3s_average: float,\n  par4s_average: float,\n  par5s_average: float,\n  pars_percent: float,\n  putts_total: number,\n  three_putt_or_worse_percent: float,\n  triple_bogeys_or_worse_percent: float,\n  two_putt_or_better_percent: float,\n  two_putt_percent: float,\n  up_and_downs_total: number\n});\n\n// src/client/ghin/models/scores/score.ts\nvar rawScoreTypes = [\"A\", \"C\", \"E\", \"H\", \"N\", \"P\", \"T\"];\nvar schemaRawScoreTypes = z19.enum(rawScoreTypes);\nvar scoreTypes = [\"AWAY\", \"COMPETITION\", \"EXCEPTIONAL\", \"HOME\", \"9_HOLE_ROUNDS\", \"PENALTY\", \"TOURNAMENT\"];\nvar schemaScoreType = z19.enum(scoreTypes);\nvar scoreTypesMap = {\n  A: \"AWAY\",\n  C: \"COMPETITION\",\n  E: \"EXCEPTIONAL\",\n  H: \"HOME\",\n  N: \"9_HOLE_ROUNDS\",\n  P: \"PENALTY\",\n  T: \"TOURNAMENT\"\n};\nvar schemaScoreTypeWithTransform = schemaRawScoreTypes.transform(\n  (value) => scoreTypesMap[value]\n);\nvar scoreStatuses = [\"VALIDATED\", \"UNDER_REVIEW\"];\nvar schemaScoreStatus = z19.enum(scoreStatuses);\nvar rawScoreStatuses = [\"Validated\", \"UnderReview\"];\nvar schemaRawScoreStatus = z19.enum(rawScoreStatuses);\nvar scoreStatusesMap = {\n  Validated: \"VALIDATED\",\n  UnderReview: \"UNDER_REVIEW\"\n};\nvar schemaScoreStatusWithTransform = schemaRawScoreStatus.transform(\n  (value) => scoreStatusesMap[value]\n);\nvar schemaScore = z19.object({\n  adjusted_gross_score: number,\n  adjustments: z19.array(schemaScoringAdjustment),\n  back9_adjusted: number.nullable(),\n  back9_course_rating: float.nullable(),\n  back9_slope_rating: float.nullable(),\n  course_rating: float,\n  differential: float,\n  edited: boolean,\n  exceptional: boolean,\n  front9_adjusted: number.nullable(),\n  front9_course_rating: float.nullable(),\n  front9_slope_rating: float.nullable(),\n  gender,\n  golfer_id: number,\n  hole_details: z19.array(schemaHoleDetail),\n  id: number,\n  is_manual: boolean,\n  is_recent: boolean,\n  message_club_authorized: string.nullable(),\n  net_score_differential: float.nullable(),\n  number_of_holes: number,\n  number_of_played_holes: number,\n  order_number: number,\n  parent_id: number.nullable(),\n  pcc: float,\n  penalty_method: string.nullable(),\n  penalty_type: string.nullable(),\n  penalty: boolean.optional(),\n  played_at: date,\n  posted_at: date,\n  revision: boolean,\n  score_day_order: number,\n  score_type_display_full: string,\n  score_type_display_short: string,\n  score_type: schemaScoreTypeWithTransform,\n  season_end_date_at: monthDay,\n  season_start_date_at: monthDay,\n  slope_rating: float,\n  statistics: schemaStatistics.nullable().optional(),\n  status: schemaScoreStatusWithTransform,\n  unadjusted_differential: float,\n  used: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nvar schemaScoresRequest = z20.object({\n  course_id: number,\n  from_date_played: date,\n  limit: number.default(100),\n  offset: number.default(0),\n  score_types: z20.array(z20.enum(rawScoreTypes)),\n  statuses: z20.array(string),\n  tee_set_id: number,\n  to_date_played: date\n}).partial().default({}).optional();\n\n// src/client/ghin/models/scores/response.ts\nimport { z as z21 } from \"zod\";\nvar schemaNumberOrDash = z21.union([number, z21.literal(\"-\")]).transform((value) => value === \"-\" ? null : Number(value));\nvar schemaFloatOrDash = z21.union([float, z21.literal(\"-\")]).transform((value) => value === \"-\" ? null : Number.parseFloat(value.toString()));\nvar schemaScoresResponse = z21.object({\n  average: schemaFloatOrDash.default(0),\n  highest_score: schemaNumberOrDash,\n  lowest_score: schemaNumberOrDash,\n  scores: z21.array(schemaScore),\n  total_count: schemaNumberOrDash.default(0)\n});\n\n// src/client/ghin/index.ts\nvar searchParameters = {\n  GOLFER_ID: \"golfer_id\",\n  SOURCE: \"source\"\n};\nvar GhinClient = class {\n  httpClient;\n  courses;\n  golfers;\n  handicaps;\n  constructor(config) {\n    const results = schemaClientConfig.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid GhinClientConfig: ${results.error.message}`);\n    }\n    this.httpClient = new RequestClient({\n      ...results.data,\n      cache: results.data.cache ?? new InMemoryCacheClient()\n    });\n    this.courses = {\n      getCountries: this.coursesGetCountries.bind(this),\n      getDetails: this.courseGetDetails.bind(this),\n      search: this.courseSearch.bind(this)\n    };\n    this.handicaps = {\n      getOne: this.handicapsGetOne.bind(this),\n      getCoursePlayerHandicaps: this.handicapsGetCoursePlayerHandicaps.bind(this)\n    };\n    this.golfers = {\n      getOne: this.golfersGetOne.bind(this),\n      getScores: this.golfersGetScores.bind(this),\n      search: this.golfersSearch.bind(this)\n    };\n  }\n  async coursesGetCountries() {\n    try {\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const options = { searchParams };\n      const result = await this.httpClient.fetch({\n        entity: \"course_countries\",\n        options,\n        schema: schemaCourseCountriesResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.countries;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseGetDetails(request) {\n    try {\n      const validRequest = schemaCourseDetailsRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = { searchParams };\n      const result = await this.httpClient.fetch({\n        entity: \"course_details\",\n        options,\n        schema: schemaCourseDetailsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course details request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseSearch(request) {\n    try {\n      const validRequest = schemaCourseSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = { searchParams };\n      const result = await this.httpClient.fetch({\n        entity: \"course_search\",\n        options,\n        schema: schemaCourseSearchResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.courses;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetOne(ghin) {\n    try {\n      const ghinNumber = number.parse(ghin);\n      const searchParams = new URLSearchParams([\n        [\"source\", CLIENT_SOURCE],\n        [\"ghin\", ghinNumber.toString()]\n      ]);\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfer\",\n        options,\n        schema: schemaGolferHandicapResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfer;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetCoursePlayerHandicaps(request) {\n    try {\n      const golfers = z22.array(schemaGolferCourseHandicapRequest).parse(request).map(({ ghin, ...golfer }) => ({\n        ...golfer,\n        [searchParameters.GOLFER_ID]: ghin\n      }));\n      const searchParams = new URLSearchParams();\n      const courseHandicapRequest = {\n        golfers,\n        source: CLIENT_SOURCE\n      };\n      const options = {\n        body: JSON.stringify(courseHandicapRequest),\n        method: \"POST\",\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_handicaps\",\n        options,\n        schema: schemaCoursePlayerHandicapsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course handicap request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersSearch(request) {\n    try {\n      const { ghin, ...params } = schemaGolferSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const searchDefaults = {\n        from_ghin: true,\n        per_page: 25,\n        sorting_criteria: \"full_name\",\n        order: \"asc\",\n        page: 1\n      };\n      for (const [key, value] of Object.entries(searchDefaults)) {\n        searchParams.set(key, value.toString());\n      }\n      if (ghin) {\n        searchParams.set(searchParameters.GOLFER_ID, ghin.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfers_search\",\n        schema: schemaGolferSearchResponse,\n        options\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfers;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid golfer search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetOne(ghinNumber) {\n    try {\n      const ghin = number.parse(ghinNumber);\n      const results = await this.golfersSearch({ ghin, status: \"Active\" });\n      return results.find((golfer) => golfer.status === \"Active\");\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetScores(ghinNumber, request) {\n    try {\n      const validRequest = schemaScoresRequest.parse(request) ?? {};\n      const ghin = number.parse(ghinNumber);\n      const searchParams = new URLSearchParams([\n        [searchParameters.GOLFER_ID, ghin.toString()],\n        [\"source\", CLIENT_SOURCE]\n      ]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        if (value === null) {\n          continue;\n        }\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            searchParams.append(key, v.toString());\n          }\n          continue;\n        }\n        if (typeof value === \"object\" && value instanceof Date) {\n          searchParams.set(key, value.toISOString().split(\"T\")[0]);\n          continue;\n        }\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"scores\",\n        options,\n        schema: schemaScoresResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid scores request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n};\nexport {\n  GhinClient\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./.code/agents/1/exec-call_FBIwoFXQ52mBUHnfzcN9IQzW.txt:7568:frontend/node_modules/.cache/babel-loader/c94fb4e30421399b08397851d996084ad731b8cb61a5f9e68df1f16395257a7c.json:1:{"ast":null,"code":"// @ts-nocheck\nimport React,{useState,useEffect}from'react';import{useTheme}from'../../theme/Provider';import{Button,Card,Input,Select}from'../ui';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||\"\";const GameSetup=_ref=>{let{humanPlayer,setHumanPlayer,computerPlayers,setComputerPlayers,selectedCourse,setSelectedCourse,courses,setCourses,personalities=[],setPersonalities,suggestedOpponents=[],setSuggestedOpponents,onStartGame}=_ref;const theme=useTheme();// GHIN lookup modal state\nconst[ghinLookupSlot,setGhinLookupSlot]=useState(null);const[ghinLookupFirstName,setGhinLookupFirstName]=useState(\"\");const[ghinLookupLastName,setGhinLookupLastName]=useState(\"\");const[ghinLookupResults,setGhinLookupResults]=useState([]);const[ghinLookupLoading,setGhinLookupLoading]=useState(false);const[ghinLookupError,setGhinLookupError]=useState(\"\");useEffect(()=>{// Fetch courses with error handling\nfetch(`${API_URL}/courses`).then(res=>{if(!res.ok){throw new Error(`HTTP ${res.status}: ${res.statusText}`);}return res.json();}).then(data=>{if(!data||typeof data!=='object'){throw new Error('Invalid courses data format');}setCourses(data);// Auto-select first course if none selected\nif(!selectedCourse&&Object.keys(data).length>0){setSelectedCourse(Object.keys(data));}}).catch(error=>{console.error('Failed to load courses:',error);// Provide fallback courses so game can still start\nconst fallbackCourses={\"Default Course\":{name:\"Default Course\",holes:Array.from({length:18},(_,i)=>({hole_number:i+1,par:4,yards:400,stroke_index:i+1,description:`Hole ${i+1}`})),total_par:72,total_yards:7200,hole_count:18}};setCourses(fallbackCourses);setSelectedCourse(\"Default Course\");// Show user-friendly error message but don't block the game\nalert('Unable to load courses from server. Using default course to continue the game.');});// Fetch personalities with error handling\nfetch(`${API_URL}/personalities`).then(res=>{if(!res.ok){throw new Error(`HTTP ${res.status}: ${res.statusText}`);}return res.json();}).then(data=>{if(Array.isArray(data)){setPersonalities(data);}else{throw new Error('Invalid personalities data format');}}).catch(error=>{console.error('Failed to load personalities:',error);// Provide fallback personalities\nconst fallbackPersonalities=[{id:'aggressive',name:'Aggressive'},{id:'conservative',name:'Conservative'},{id:'balanced',name:'Balanced'}];setPersonalities(fallbackPersonalities);});// Fetch suggested opponents with error handling\nfetch(`${API_URL}/suggested_opponents`).then(res=>{if(!res.ok){throw new Error(`HTTP ${res.status}: ${res.statusText}`);}return res.json();}).then(data=>{if(Array.isArray(data)){setSuggestedOpponents(data);}else{throw new Error('Invalid suggested opponents data format');}}).catch(error=>{console.error('Failed to load suggested opponents:',error);// Provide fallback suggested opponents\nconst fallbackOpponents=[{name:'Bob',handicap:'12',personality:'aggressive'},{name:'Alice',handicap:'8',personality:'conservative'},{name:'Charlie',handicap:'16',personality:'balanced'}];setSuggestedOpponents(fallbackOpponents);});},[setCourses,setPersonalities,setSuggestedOpponents,selectedCourse,setSelectedCourse]);// Initialize computer players if empty\nuseEffect(()=>{if(computerPlayers.length===0){setComputerPlayers([{id:\"comp1\",name:\"\",handicap:\"\",personality:\"\",is_human:false},{id:\"comp2\",name:\"\",handicap:\"\",personality:\"\",is_human:false},{id:\"comp3\",name:\"\",handicap:\"\",personality:\"\",is_human:false}]);}},[computerPlayers,setComputerPlayers]);const openGhinLookup=slot=>{setGhinLookupSlot(slot);setGhinLookupFirstName(\"\");setGhinLookupLastName(\"\");setGhinLookupResults([]);setGhinLookupLoading(false);setGhinLookupError(\"\");};const closeGhinLookup=()=>{setGhinLookupSlot(null);};const doGhinLookup=async()=>{if(!ghinLookupLastName.trim()){setGhinLookupError(\"Last name required\");return;}setGhinLookupLoading(true);setGhinLookupError(\"\");setGhinLookupResults([]);try{const params=new URLSearchParams({last_name:ghinLookupLastName,first_name:ghinLookupFirstName});const res=await fetch(`${API_URL}/ghin/lookup?${params.toString()}`);if(!res.ok)throw new Error(\"Lookup failed\");const data=await res.json();setGhinLookupResults(data);if(data.length===0)setGhinLookupError(\"No golfers found\");}catch(err){setGhinLookupError(\"Lookup failed\");}finally{setGhinLookupLoading(false);}};const selectGhinGolfer=golfer=>{if(ghinLookupSlot===\"human\"){setHumanPlayer(h=>({...h,name:golfer.name,handicap:golfer.handicap||\"\",is_human:true}));}else{setComputerPlayers(players=>players.map((p,i)=>{const slotId=`comp${i+1}`;return slotId===ghinLookupSlot?{...p,name:golfer.name,handicap:golfer.handicap||\"\",is_human:false}:p;}));}closeGhinLookup();};const loadSuggestedOpponent=(opponentData,index)=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,...opponentData,id:p.id}:p));};const validateAndStartGame=()=>{if(!humanPlayer.name.trim()){alert(\"Please enter your name\");return;}const invalidComputers=computerPlayers.filter(p=>!p.name.trim()||!p.handicap);if(invalidComputers.length>0){alert(\"Please fill in all computer player details\");return;}if(!selectedCourse){alert(\"Please select a course\");return;}onStartGame();};return/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:800,margin:\"0 auto\",padding:20},children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:theme.colors.primary,marginBottom:theme.spacing},children:\"\\uD83C\\uDFAE Wolf Goat Pig Simulation Mode\"}),/*#__PURE__*/_jsx(\"p\",{style:{marginBottom:20},children:\"Practice Wolf Goat Pig against computer opponents! This mode helps you learn the betting strategies and get comfortable with the game mechanics. After each hole, you'll receive educational feedback about your decisions.\"}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Details\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"1fr 1fr\",gap:16},children:[/*#__PURE__*/_jsx(Input,{label:\"Your Name:\",value:humanPlayer.name,onChange:e=>setHumanPlayer({...humanPlayer,name:e.target.value})}),/*#__PURE__*/_jsx(Input,{label:\"Your Handicap:\",type:\"number\",value:humanPlayer.handicap,onChange:e=>setHumanPlayer({...humanPlayer,handicap:e.target.value})})]}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",size:\"small\",onClick:()=>openGhinLookup(\"human\"),style:{marginTop:theme.spacing},children:\"Lookup GHIN Handicap\"}),ghinLookupSlot===\"human\"&&/*#__PURE__*/_jsxs(Card,{variant:\"info\",style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"GHIN Handicap Lookup\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"First Name (optional)\",value:ghinLookupFirstName,onChange:e=>setGhinLookupFirstName(e.target.value)}),/*#__PURE__*/_jsx(Input,{placeholder:\"Last Name (required)\",value:ghinLookupLastName,onChange:e=>setGhinLookupLastName(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:theme.spacing,marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:doGhinLookup,disabled:ghinLookupLoading,children:\"Search\"}),/*#__PURE__*/_jsx(Button,{variant:\"error\",size:\"small\",onClick:closeGhinLookup,children:\"Cancel\"})]}),ghinLookupLoading&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.textSecondary,marginTop:8},children:\"Searching...\"}),ghinLookupError&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.error,marginTop:8},children:ghinLookupError}),ghinLookupResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Results:\"}),ghinLookupResults.map((g,idx)=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:8,border:`1px solid ${theme.colors.border}`,borderRadius:6,marginBottom:4,cursor:\"pointer\",background:theme.colors.paper},onClick:()=>selectGhinGolfer(g),children:[/*#__PURE__*/_jsx(\"strong\",{children:g.name}),\" (H: \",g.handicap,\")\",g.club&&/*#__PURE__*/_jsxs(\"span\",{style:{color:theme.colors.textSecondary},children:[\"@ \",g.club]})]},idx))]})]})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Computer Opponents\"}),computerPlayers.map((player,index)=>/*#__PURE__*/_jsxs(Card,{variant:\"default\",style:{marginBottom:16},children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Computer Player \",index+1]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"1fr 1fr\",gap:16},children:[/*#__PURE__*/_jsx(Input,{label:\"Name:\",value:player.name,onChange:e=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,name:e.target.value}:p));}}),/*#__PURE__*/_jsx(Input,{label:\"Handicap:\",type:\"number\",value:player.handicap,onChange:e=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,handicap:e.target.value}:p));}})]}),/*#__PURE__*/_jsx(Select,{label:\"Personality:\",value:player.personality,onChange:e=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,personality:e.target.value}:p));},options:personalities.map(p=>({value:p.id,label:p.name})),placeholder:\"Select personality...\"}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",size:\"small\",onClick:()=>openGhinLookup(`comp${index+1}`),style:{marginTop:theme.spacing},children:\"Lookup GHIN Handicap\"}),ghinLookupSlot===`comp${index+1}`&&/*#__PURE__*/_jsxs(Card,{variant:\"info\",style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"GHIN Handicap Lookup\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"First Name (optional)\",value:ghinLookupFirstName,onChange:e=>setGhinLookupFirstName(e.target.value)}),/*#__PURE__*/_jsx(Input,{placeholder:\"Last Name (required)\",value:ghinLookupLastName,onChange:e=>setGhinLookupLastName(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:theme.spacing,marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:doGhinLookup,disabled:ghinLookupLoading,children:\"Search\"}),/*#__PURE__*/_jsx(Button,{variant:\"error\",size:\"small\",onClick:closeGhinLookup,children:\"Cancel\"})]}),ghinLookupLoading&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.textSecondary,marginTop:8},children:\"Searching...\"}),ghinLookupError&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.error,marginTop:8},children:ghinLookupError}),ghinLookupResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Results:\"}),ghinLookupResults.map((g,idx)=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:8,border:`1px solid ${theme.colors.border}`,borderRadius:6,marginBottom:4,cursor:\"pointer\",background:theme.colors.paper},onClick:()=>selectGhinGolfer(g),children:[/*#__PURE__*/_jsx(\"strong\",{children:g.name}),\" (H: \",g.handicap,\")\",g.club&&/*#__PURE__*/_jsxs(\"span\",{style:{color:theme.colors.textSecondary},children:[\"@ \",g.club]})]},idx))]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:14,color:theme.colors.textSecondary},children:\"Quick select:\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:theme.spacing,marginTop:theme.spacing,flexWrap:'wrap'},children:suggestedOpponents.map((opponent,oppIdx)=>/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"small\",onClick:()=>loadSuggestedOpponent(opponent,index),children:opponent.name},oppIdx))})]})]},index))]}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Select,{label:\"Select Course:\",value:selectedCourse||'',onChange:e=>setSelectedCourse(e.target.value),options:Object.keys(courses).map(courseId=>{var _courses$courseId;return{value:courseId,label:((_courses$courseId=courses[courseId])===null||_courses$courseId===void 0?void 0:_courses$courseId.name)||courseId};}),placeholder:\"Choose a course...\"})}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginTop:theme.spacing},children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"large\",onClick:validateAndStartGame,children:\"\\uD83D\\uDE80 Start Simulation\"})})]})});};export default GameSetup;","map":{"version":3,"names":["React","useState","useEffect","useTheme","Button","Card","Input","Select","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_API_URL","GameSetup","_ref","humanPlayer","setHumanPlayer","computerPlayers","setComputerPlayers","selectedCourse","setSelectedCourse","courses","setCourses","personalities","setPersonalities","suggestedOpponents","setSuggestedOpponents","onStartGame","theme","ghinLookupSlot","setGhinLookupSlot","ghinLookupFirstName","setGhinLookupFirstName","ghinLookupLastName","setGhinLookupLastName","ghinLookupResults","setGhinLookupResults","ghinLookupLoading","setGhinLookupLoading","ghinLookupError","setGhinLookupError","fetch","then","res","ok","Error","status","statusText","json","data","Object","keys","length","catch","error","console","fallbackCourses","name","holes","Array","from","_","i","hole_number","par","yards","stroke_index","description","total_par","total_yards","hole_count","alert","isArray","fallbackPersonalities","id","fallbackOpponents","handicap","personality","is_human","openGhinLookup","slot","closeGhinLookup","doGhinLookup","trim","params","URLSearchParams","last_name","first_name","toString","err","selectGhinGolfer","golfer","h","players","map","p","slotId","loadSuggestedOpponent","opponentData","index","validateAndStartGame","invalidComputers","filter","style","maxWidth","margin","padding","children","color","colors","primary","marginBottom","spacing","display","gridTemplateColumns","gap","label","value","onChange","e","target","type","variant","size","onClick","marginTop","placeholder","disabled","textSecondary","g","idx","border","borderRadius","cursor","background","paper","club","player","options","fontSize","flexWrap","opponent","oppIdx","courseId","_courses$courseId","textAlign"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/simulation/GameSetup.tsx"],"sourcesContent":["// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { useTheme } from '../../theme/Provider';\nimport { Button, Card, Input, Select } from '../ui';\n\nconst API_URL = process.env.REACT_APP_API_URL || \"\";\n\ninterface Player {\n  id?: string;\n  name: string;\n  handicap: string;\n  personality?: string;\n  is_human: boolean;\n}\n\ninterface Course {\n  name: string;\n  holes: Array<{\n    hole_number: number;\n    par: number;\n    yards: number;\n    stroke_index: number;\n    description: string;\n  }>;\n  total_par: number;\n  total_yards: number;\n  hole_count: number;\n}\n\ninterface Personality {\n  id: string;\n  name: string;\n}\n\ninterface SuggestedOpponent {\n  name: string;\n  handicap: string;\n  personality: string;\n}\n\ninterface GhinGolfer {\n  name: string;\n  handicap: string;\n  club?: string;\n}\n\ninterface GameSetupProps {\n  humanPlayer: Player;\n  setHumanPlayer: React.Dispatch<React.SetStateAction<Player>>;\n  computerPlayers: Player[];\n  setComputerPlayers: React.Dispatch<React.SetStateAction<Player[]>>;\n  selectedCourse: string | null;\n  setSelectedCourse: React.Dispatch<React.SetStateAction<string | null>>;\n  courses: { [key: string]: Course };\n  setCourses: React.Dispatch<React.SetStateAction<{ [key: string]: Course }>>;\n  personalities?: Personality[];\n  setPersonalities: React.Dispatch<React.SetStateAction<Personality[]>>;\n  suggestedOpponents?: SuggestedOpponent[];\n  setSuggestedOpponents: React.Dispatch<React.SetStateAction<SuggestedOpponent[]>>;\n  onStartGame: () => void;\n}\n\nconst GameSetup: React.FC<GameSetupProps> = ({\n  humanPlayer,\n  setHumanPlayer,\n  computerPlayers,\n  setComputerPlayers,\n  selectedCourse,\n  setSelectedCourse,\n  courses,\n  setCourses,\n  personalities = [],\n  setPersonalities,\n  suggestedOpponents = [],\n  setSuggestedOpponents,\n  onStartGame\n}) => {\n  const theme = useTheme();\n  \n  // GHIN lookup modal state\n  const [ghinLookupSlot, setGhinLookupSlot] = useState<string | null>(null);\n  const [ghinLookupFirstName, setGhinLookupFirstName] = useState(\"\");\n  const [ghinLookupLastName, setGhinLookupLastName] = useState(\"\");\n  const [ghinLookupResults, setGhinLookupResults] = useState<GhinGolfer[]>([]);\n  const [ghinLookupLoading, setGhinLookupLoading] = useState(false);\n  const [ghinLookupError, setGhinLookupError] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch courses with error handling\n    fetch(`${API_URL}/courses`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((data: { [key: string]: Course }) => {\n        if (!data || typeof data !== 'object') {\n          throw new Error('Invalid courses data format');\n        }\n        setCourses(data);\n        \n        // Auto-select first course if none selected\n        if (!selectedCourse && Object.keys(data).length > 0) {\n          setSelectedCourse(Object.keys(data));\n        }\n      })\n      .catch(error => {\n        console.error('Failed to load courses:', error);\n        \n        // Provide fallback courses so game can still start\n        const fallbackCourses: { [key: string]: Course } = {\n          \"Default Course\": {\n            name: \"Default Course\",\n            holes: Array.from({length: 18}, (_, i) => ({\n              hole_number: i + 1,\n              par: 4,\n              yards: 400,\n              stroke_index: i + 1,\n              description: `Hole ${i + 1}`\n            })),\n            total_par: 72,\n            total_yards: 7200,\n            hole_count: 18\n          }\n        };\n        \n        setCourses(fallbackCourses);\n        setSelectedCourse(\"Default Course\");\n        \n        // Show user-friendly error message but don't block the game\n        alert('Unable to load courses from server. Using default course to continue the game.');\n      });\n    \n    // Fetch personalities with error handling\n    fetch(`${API_URL}/personalities`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((data: Personality[]) => {\n        if (Array.isArray(data)) {\n          setPersonalities(data);\n        } else {\n          throw new Error('Invalid personalities data format');\n        }\n      })\n      .catch(error => {\n        console.error('Failed to load personalities:', error);\n        // Provide fallback personalities\n        const fallbackPersonalities: Personality[] = [\n          { id: 'aggressive', name: 'Aggressive' },\n          { id: 'conservative', name: 'Conservative' },\n          { id: 'balanced', name: 'Balanced' }\n        ];\n        setPersonalities(fallbackPersonalities);\n      });\n    \n    // Fetch suggested opponents with error handling\n    fetch(`${API_URL}/suggested_opponents`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((data: SuggestedOpponent[]) => {\n        if (Array.isArray(data)) {\n          setSuggestedOpponents(data);\n        } else {\n          throw new Error('Invalid suggested opponents data format');\n        }\n      })\n      .catch(error => {\n        console.error('Failed to load suggested opponents:', error);\n        // Provide fallback suggested opponents\n        const fallbackOpponents: SuggestedOpponent[] = [\n          { name: 'Bob', handicap: '12', personality: 'aggressive' },\n          { name: 'Alice', handicap: '8', personality: 'conservative' },\n          { name: 'Charlie', handicap: '16', personality: 'balanced' }\n        ];\n        setSuggestedOpponents(fallbackOpponents);\n      });\n  }, [setCourses, setPersonalities, setSuggestedOpponents, selectedCourse, setSelectedCourse]);\n\n  // Initialize computer players if empty\n  useEffect(() => {\n    if (computerPlayers.length === 0) {\n      setComputerPlayers([\n        { id: \"comp1\", name: \"\", handicap: \"\", personality: \"\", is_human: false },\n        { id: \"comp2\", name: \"\", handicap: \"\", personality: \"\", is_human: false },\n        { id: \"comp3\", name: \"\", handicap: \"\", personality: \"\", is_human: false }\n      ]);\n    }\n  }, [computerPlayers, setComputerPlayers]);\n\n  const openGhinLookup = (slot: string) => {\n    setGhinLookupSlot(slot);\n    setGhinLookupFirstName(\"\");\n    setGhinLookupLastName(\"\");\n    setGhinLookupResults([]);\n    setGhinLookupLoading(false);\n    setGhinLookupError(\"\");\n  };\n\n  const closeGhinLookup = () => {\n    setGhinLookupSlot(null);\n  };\n\n  const doGhinLookup = async () => {\n    if (!ghinLookupLastName.trim()) {\n      setGhinLookupError(\"Last name required\");\n      return;\n    }\n    setGhinLookupLoading(true);\n    setGhinLookupError(\"\");\n    setGhinLookupResults([]);\n    try {\n      const params = new URLSearchParams({ \n        last_name: ghinLookupLastName, \n        first_name: ghinLookupFirstName \n      });\n      const res = await fetch(`${API_URL}/ghin/lookup?${params.toString()}`);\n      if (!res.ok) throw new Error(\"Lookup failed\");\n      const data: GhinGolfer[] = await res.json();\n      setGhinLookupResults(data);\n      if (data.length === 0) setGhinLookupError(\"No golfers found\");\n    } catch (err: any) {\n      setGhinLookupError(\"Lookup failed\");\n    } finally {\n      setGhinLookupLoading(false);\n    }\n  };\n\n  const selectGhinGolfer = (golfer: GhinGolfer) => {\n    if (ghinLookupSlot === \"human\") {\n      setHumanPlayer(h => ({ ...h, name: golfer.name, handicap: golfer.handicap || \"\", is_human: true }));\n    } else {\n      setComputerPlayers(players => players.map((p, i) => {\n        const slotId = `comp${i+1}`;\n        return slotId === ghinLookupSlot ? { ...p, name: golfer.name, handicap: golfer.handicap || \"\", is_human: false } : p;\n      }));\n    }\n    closeGhinLookup();\n  };\n\n  const loadSuggestedOpponent = (opponentData: SuggestedOpponent, index: number) => {\n    setComputerPlayers(players => players.map((p, i) => \n      i === index ? { ...p, ...opponentData, id: p.id } : p\n    ));\n  };\n\n  const validateAndStartGame = () => {\n    if (!humanPlayer.name.trim()) {\n      alert(\"Please enter your name\");\n      return;\n    }\n    \n    const invalidComputers = computerPlayers.filter(p => !p.name.trim() || !p.handicap);\n    if (invalidComputers.length > 0) {\n      alert(\"Please fill in all computer player details\");\n      return;\n    }\n    \n    if (!selectedCourse) {\n      alert(\"Please select a course\");\n      return;\n    }\n    \n    onStartGame();\n  };\n\n  return (\n    <div style={{ maxWidth: 800, margin: \"0 auto\", padding: 20 }}>\n      <Card>\n        <h2 style={{ color: theme.colors.primary, marginBottom: theme.spacing }}>\n          🎮 Wolf Goat Pig Simulation Mode\n        </h2>\n        <p style={{ marginBottom: 20 }}>\n          Practice Wolf Goat Pig against computer opponents! This mode helps you learn the betting strategies\n          and get comfortable with the game mechanics. After each hole, you'll receive educational feedback\n          about your decisions.\n        </p>\n        \n        {/* Human Player Setup */}\n        <Card>\n          <h3>Your Details</h3>\n          <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 16 }}>\n            <Input\n              label=\"Your Name:\"\n              value={humanPlayer.name}\n              onChange={(e) => setHumanPlayer({...humanPlayer, name: e.target.value})}\n            />\n            <Input\n              label=\"Your Handicap:\"\n              type=\"number\"\n              value={humanPlayer.handicap}\n              onChange={(e) => setHumanPlayer({...humanPlayer, handicap: e.target.value})}\n            />\n          </div>\n          \n          <Button \n            variant=\"secondary\"\n            size=\"small\"\n            onClick={() => openGhinLookup(\"human\")}\n            style={{ marginTop: theme.spacing }}\n          >\n            Lookup GHIN Handicap\n          </Button>\n          \n          {ghinLookupSlot === \"human\" && (\n            <Card variant=\"info\" style={{ marginTop: theme.spacing }}>\n              <h4>GHIN Handicap Lookup</h4>\n              <Input\n                placeholder=\"First Name (optional)\"\n                value={ghinLookupFirstName}\n                onChange={e => setGhinLookupFirstName(e.target.value)}\n              />\n              <Input\n                placeholder=\"Last Name (required)\"\n                value={ghinLookupLastName}\n                onChange={e => setGhinLookupLastName(e.target.value)}\n              />\n              <div style={{ display: 'flex', gap: theme.spacing, marginTop: theme.spacing }}>\n                <Button \n                  size=\"small\"\n                  onClick={doGhinLookup} \n                  disabled={ghinLookupLoading}\n                >\n                  Search\n                </Button>\n                <Button \n                  variant=\"error\"\n                  size=\"small\"\n                  onClick={closeGhinLookup}\n                >\n                  Cancel\n                </Button>\n              </div>\n              \n              {ghinLookupLoading && <div style={{ color: theme.colors.textSecondary, marginTop: 8 }}>Searching...</div>}\n              {ghinLookupError && <div style={{ color: theme.colors.error, marginTop: 8 }}>{ghinLookupError}</div>}\n              \n              {ghinLookupResults.length > 0 && (\n                <div style={{ marginTop: theme.spacing }}>\n                  <h5>Results:</h5>\n                  {ghinLookupResults.map((g, idx) => (\n                    <div \n                      key={idx} \n                      style={{ \n                        padding: 8, \n                        border: `1px solid ${theme.colors.border}`, \n                        borderRadius: 6, \n                        marginBottom: 4, \n                        cursor: \"pointer\", \n                        background: theme.colors.paper \n                      }} \n                      onClick={() => selectGhinGolfer(g)}\n                    >\n                      <strong>{g.name}</strong> (H: {g.handicap}) \n                      {g.club && <span style={{ color: theme.colors.textSecondary }}>@ {g.club}</span>}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </Card>\n          )}\n        </Card>\n\n        {/* Computer Players Setup */}\n        <Card>\n          <h3>Computer Opponents</h3>\n          {computerPlayers.map((player, index) => (\n            <Card key={index} variant=\"default\" style={{ marginBottom: 16 }}>\n              <h4>Computer Player {index + 1}</h4>\n              <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 16 }}>\n                <Input\n                  label=\"Name:\"\n                  value={player.name}\n                  onChange={(e) => {\n                    setComputerPlayers(players => players.map((p, i) => \n                      i === index ? { ...p, name: e.target.value } : p\n                    ));\n                  }}\n                />\n                <Input\n                  label=\"Handicap:\"\n                  type=\"number\"\n                  value={player.handicap}\n                  onChange={(e) => {\n                    setComputerPlayers(players => players.map((p, i) => \n                      i === index ? { ...p, handicap: e.target.value } : p\n                    ));\n                  }}\n                />\n              </div>\n              \n              <Select\n                label=\"Personality:\"\n                value={player.personality}\n                onChange={(e) => {\n                  setComputerPlayers(players => players.map((p, i) => \n                    i === index ? { ...p, personality: e.target.value } : p\n                  ));\n                }}\n                options={personalities.map(p => ({ value: p.id, label: p.name }))}\n                placeholder=\"Select personality...\"\n              />\n              \n              <Button \n                variant=\"secondary\"\n                size=\"small\"\n                onClick={() => openGhinLookup(`comp${index+1}`)}\n                style={{ marginTop: theme.spacing }}\n              >\n                Lookup GHIN Handicap\n              </Button>\n              \n              {ghinLookupSlot === `comp${index+1}` && (\n                <Card variant=\"info\" style={{ marginTop: theme.spacing }}>\n                  <h4>GHIN Handicap Lookup</h4>\n                  <Input\n                    placeholder=\"First Name (optional)\"\n                    value={ghinLookupFirstName}\n                    onChange={e => setGhinLookupFirstName(e.target.value)}\n                  />\n                  <Input\n                    placeholder=\"Last Name (required)\"\n                    value={ghinLookupLastName}\n                    onChange={e => setGhinLookupLastName(e.target.value)}\n                  />\n                  <div style={{ display: 'flex', gap: theme.spacing, marginTop: theme.spacing }}>\n                    <Button \n                      size=\"small\"\n                      onClick={doGhinLookup} \n                      disabled={ghinLookupLoading}\n                    >\n                      Search\n                    </Button>\n                    <Button \n                      variant=\"error\"\n                      size=\"small\"\n                      onClick={closeGhinLookup}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                  \n                  {ghinLookupLoading && <div style={{ color: theme.colors.textSecondary, marginTop: 8 }}>Searching...</div>}\n                  {ghinLookupError && <div style={{ color: theme.colors.error, marginTop: 8 }}>{ghinLookupError}</div>}\n                  \n                  {ghinLookupResults.length > 0 && (\n                    <div style={{ marginTop: theme.spacing }}>\n                      <h5>Results:</h5>\n                      {ghinLookupResults.map((g, idx) => (\n                        <div \n                          key={idx} \n                          style={{ \n                            padding: 8, \n                            border: `1px solid ${theme.colors.border}`, \n                            borderRadius: 6, \n                            marginBottom: 4, \n                            cursor: \"pointer\", \n                            background: theme.colors.paper \n                          }} \n                          onClick={() => selectGhinGolfer(g)}\n                        >\n                          <strong>{g.name}</strong> (H: {g.handicap}) \n                          {g.club && <span style={{ color: theme.colors.textSecondary }}>@ {g.club}</span>}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </Card>\n              )}\n              \n              <div style={{ marginTop: theme.spacing }}>\n                <span style={{ fontSize: 14, color: theme.colors.textSecondary }}>Quick select:</span>\n                <div style={{ display: 'flex', gap: theme.spacing, marginTop: theme.spacing, flexWrap: 'wrap' }}>\n                  {suggestedOpponents.map((opponent, oppIdx) => (\n                    <Button\n                      key={oppIdx}\n                      variant=\"ghost\"\n                      size=\"small\"\n                      onClick={() => loadSuggestedOpponent(opponent, index)}\n                    >\n                      {opponent.name}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            </Card>\n          ))}\n        </Card>\n\n        {/* Course Selection */}\n        <Card>\n          <Select\n            label=\"Select Course:\"\n            value={selectedCourse || ''}\n            onChange={(e) => setSelectedCourse(e.target.value)}\n            options={Object.keys(courses).map(courseId => ({ \n              value: courseId, \n              label: courses[courseId]?.name || courseId \n            }))}\n            placeholder=\"Choose a course...\"\n          />\n        </Card>\n\n        {/* Start Game Button */}\n        <div style={{ textAlign: 'center', marginTop: theme.spacing }}>\n          <Button\n            variant=\"primary\"\n            size=\"large\"\n            onClick={validateAndStartGame}\n          >\n            🚀 Start Simulation\n          </Button>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default GameSetup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./.code/agents/1/exec-call_FBIwoFXQ52mBUHnfzcN9IQzW.txt:7571:frontend/node_modules/.cache/babel-loader/509bcee8005537cb1312fbb75bb40d9470a8f53b5f9ab58fc6fa6edb04bed0fa.json:1:{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import{useGame}from\"../../context\";import{simulationConfig}from\"../../config/environment\";import{getSimulationMock}from\"./__fixtures__\";import{GameSetup,GamePlay,EnhancedSimulationLayout}from\"./\";import TurnBasedInterface from\"./TurnBasedInterface\";// import { Timeline, PokerBettingPanel } from \"./\"; // Removed - not currently used\n// import TVPokerLayout from \"../game/TVPokerLayout\"; // Removed - not currently used\nimport{jsx as _jsx}from\"react/jsx-runtime\";const{apiUrl:SIMULATION_API_URL,useMocks:USE_SIMULATION_MOCKS,mockPreset:SIMULATION_MOCK_PRESET}=simulationConfig;// Helper function to safely serialize error details\nconst formatErrorDetail=detail=>{if(typeof detail==='object'&&detail!==null){return JSON.stringify(detail);}return detail;};function SimulationMode(){var _gameState$hole_state;// const theme = useTheme(); // Unused for now\nconst{gameState,setGameState,isGameActive,startGame,endGame,loading,setLoading,feedback,addFeedback,clearFeedback,shotState,setShotState,interactionNeeded,setInteractionNeeded,pendingDecision,setPendingDecision,shotProbabilities,setShotProbabilities,hasNextShot,setHasNextShot}=useGame();// Timeline and Poker state\nconst[timelineEvents,setTimelineEvents]=useState([]);const[pokerState,setPokerState]=useState({});const[bettingOptions,setBettingOptions]=useState([]);const[timelineLoading,setTimelineLoading]=useState(false);const[mockStep,setMockStep]=useState(0);// Turn-based mode state\nconst useTurnBasedMode=true;const[turnBasedState,setTurnBasedState]=useState(null);// Setup state\nconst[humanPlayer,setHumanPlayer]=useState({id:\"human\",name:\"\",handicap:18,strength:\"Average\",is_human:true});const[computerPlayers,setComputerPlayers]=useState([]);const[suggestedOpponents,setSuggestedOpponents]=useState([]);const[personalities,setPersonalities]=useState([]);const[selectedCourse,setSelectedCourse]=useState(\"\");const[courses,setCourses]=useState({});// Hole decisions - setHoleDecisions used for resetting state between simulations\nconst[,setHoleDecisions]=useState({action:null,requested_partner:null,offer_double:false,accept_double:false});// Note: interactionNeeded and setInteractionNeeded come from useGame() context above\n// const [pendingDecision, setPendingDecision] = useState({}); // Also from context\n// New state for shot-by-shot simulation\n// Note: All simulation state (shotProbabilities, shotState, hasNextShot, etc.) comes from useGame() context above\n// GHIN lookup functionality removed - was not being used in current UI\n// GHIN lookup functions removed - functionality not currently exposed in UI\nconst isMockSessionEnabled=USE_SIMULATION_MOCKS;const resolveMockPreset=useCallback(()=>getSimulationMock(SIMULATION_MOCK_PRESET),[]);const pushMockTimelineEvent=partialEvent=>{setTimelineEvents(previous=>[{id:partialEvent.id||`mock-event-${Date.now()}`,timestamp:partialEvent.timestamp||new Date().toISOString(),...partialEvent},...previous]);};const hydrateMockSetup=useCallback(()=>{if(!isMockSessionEnabled){return;}const preset=resolveMockPreset();if(!preset){return;}const{setup,gameState:presetGameState}=preset;if(setup){setPersonalities(setup.personalities||[]);setSuggestedOpponents(setup.opponents||[]);setCourses(setup.courses||{});if(Array.isArray(setup.opponents)&&setup.opponents.length>0){setComputerPlayers(setup.opponents.slice(0,3).map((opponent,index)=>({id:opponent.id||`mock-opponent-${index+1}`,name:opponent.name,handicap:opponent.handicap,personality:opponent.personality,is_human:false})));}}if(presetGameState!==null&&presetGameState!==void 0&&presetGameState.players){const humanPlayerFromPreset=presetGameState.players.find(player=>(player===null||player===void 0?void 0:player.is_human)||(player===null||player===void 0?void 0:player.id)===\"human\");if(humanPlayerFromPreset){setHumanPlayer(prev=>({...prev,...humanPlayerFromPreset}));}}},[isMockSessionEnabled,resolveMockPreset,setPersonalities,setSuggestedOpponents,setCourses,setComputerPlayers,setHumanPlayer]);const runMockSimulation=()=>{const preset=resolveMockPreset();if(!preset){return;}setGameState(preset.gameState);startGame(preset.gameState);setShotState(preset.shotState||null);setShotProbabilities(preset.shotProbabilities||null);setHasNextShot(preset.hasNextShot!==undefined?Boolean(preset.hasNextShot):true);setInteractionNeeded(preset.interactionNeeded||null);clearFeedback();(preset.feedback||[]).forEach(entry=>addFeedback(entry));setTimelineEvents(preset.timelineEvents||[]);setPokerState(preset.pokerState||{});setBettingOptions(preset.bettingOptions||[]);setMockStep(0);};const handleMockDecision=decision=>{if(!isMockSessionEnabled){return;}if(decision.offer_double!==undefined){handleBettingAction(decision.offer_double?'offer_double':'decline_double',{label:decision.offer_double?'Offer Double':'Decline Double'});setInteractionNeeded(null);setPendingDecision({});return;}if(decision.accept_double!==undefined){handleBettingAction(decision.accept_double?'accept_double':'decline_double',{label:decision.accept_double?'Accept Double':'Decline Double'});setInteractionNeeded(null);setPendingDecision({});return;}if(decision.accept_partnership!==undefined){const accepted=Boolean(decision.accept_partnership);pushMockTimelineEvent({type:accepted?'partnership':'solo',description:accepted?'Mock: Partnership accepted. Robots brace for teamwork.':'Mock: Partnership declined. Captain must go solo.'});addFeedback(accepted?'✅ Mock confirmation: partnership locked in.':'⚠️ Mock decline: prepare for solo play.');if(!accepted){handleBettingAction('offer_double',{label:'Forced Solo Double'});}setInteractionNeeded(null);setPendingDecision({});return;}if(decision.action==='request_partner'){var _gameState$players,_gameState$players$fi;const partnerId=decision.requested_partner;const partnerName=(gameState===null||gameState===void 0?void 0:(_gameState$players=gameState.players)===null||_gameState$players===void 0?void 0:(_gameState$players$fi=_gameState$players.find(player=>player.id===partnerId))===null||_gameState$players$fi===void 0?void 0:_gameState$players$fi.name)||partnerId||'selected partner';pushMockTimelineEvent({type:'partnership',description:`Mock: You selected ${partnerName} as your partner.`});addFeedback(`🤝 Mock partner secured: ${partnerName}`);const pressurePreset=getSimulationMock('pressureDouble');setInteractionNeeded(pressurePreset.interactionNeeded||null);setShotState(pressurePreset.shotState||shotState);setShotProbabilities(pressurePreset.shotProbabilities||shotProbabilities);setBettingOptions(pressurePreset.bettingOptions||bettingOptions);setPokerState(previous=>({...previous,...pressurePreset.pokerState}));setMockStep(previous=>previous+1);setPendingDecision({});return;}if(decision.action==='go_solo'){pushMockTimelineEvent({type:'solo',description:'Mock: Captain elects to go solo and press the wager.'});addFeedback('🚀 Mock solo play engaged. The wager has been doubled.');handleBettingAction('offer_double',{label:'Mock Solo Double'});setInteractionNeeded(null);setPendingDecision({});return;}if(decision.action==='keep_watching'){pushMockTimelineEvent({type:'captain',description:'Mock: Captain keeps observing robot tee shots.'});addFeedback('👀 Mock mode: continuing to observe tee shots.');setInteractionNeeded(null);setPendingDecision({});return;}pushMockTimelineEvent({type:'info',description:`Mock decision recorded: ${JSON.stringify(decision)}`});addFeedback('ℹ️ Mock decision logged. No backend action triggered.');setInteractionNeeded(null);setPendingDecision({});};const fetchInitialData=useCallback(async()=>{if(isMockSessionEnabled){return;}try{const[personalitiesRes,opponentsRes,coursesRes]=await Promise.all([fetch(`${SIMULATION_API_URL}/simulation/available-personalities`),fetch(`${SIMULATION_API_URL}/simulation/suggested-opponents`),fetch(`${SIMULATION_API_URL}/courses`)]);const personalitiesData=await personalitiesRes.json();const opponentsData=await opponentsRes.json();const coursesData=await coursesRes.json();setPersonalities(personalitiesData.personalities||[]);setSuggestedOpponents(opponentsData.opponents||[]);setCourses(coursesData||{});if(opponentsData.opponents&&opponentsData.opponents.length>=3){setComputerPlayers([{id:\"comp1\",...opponentsData.opponents[0],is_human:false},{id:\"comp2\",...opponentsData.opponents[1],is_human:false},{id:\"comp3\",...opponentsData.opponents[2],is_human:false}]);}}catch(error){console.error(\"Error fetching initial data:\",error);}},[isMockSessionEnabled,setComputerPlayers,setCourses,setPersonalities,setSuggestedOpponents]);const fetchTurnBasedState=useCallback(async()=>{if(isMockSessionEnabled){return;}try{const response=await fetch(`${SIMULATION_API_URL}/simulation/turn-based-state`);const data=await response.json();if(data.success){setTurnBasedState(data.turn_based_state);}}catch(error){console.error('Error fetching turn-based state:',error);}},[isMockSessionEnabled,setTurnBasedState]);useEffect(()=>{if(isMockSessionEnabled){hydrateMockSetup();return;}fetchInitialData();},[fetchInitialData,hydrateMockSetup,isMockSessionEnabled]);// Fetch turn-based state when game is active\nuseEffect(()=>{if(isGameActive&&useTurnBasedMode&&!isMockSessionEnabled){fetchTurnBasedState();const interval=setInterval(fetchTurnBasedState,2000);return()=>clearInterval(interval);}return undefined;},[fetchTurnBasedState,isGameActive,isMockSessionEnabled,useTurnBasedMode]);const startSimulation=async()=>{if(!isMockSessionEnabled&&!humanPlayer.name.trim()){alert(\"Please enter your name\");return;}setLoading(true);try{// Reset all local state for new simulation\nsetGameState(null);endGame();// Use endGame directly instead of setIsGameActive\nclearFeedback();setShotProbabilities(null);setShotState(null);setHasNextShot(true);setInteractionNeeded(null);setPendingDecision({});setHoleDecisions({action:null,requested_partner:null,offer_double:false,accept_double:false});// GHIN lookup state reset removed - functionality not currently used\nsetMockStep(0);if(isMockSessionEnabled){runMockSimulation();setLoading(false);return;}const response=await fetch(`${SIMULATION_API_URL}/simulation/setup`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({human_player:humanPlayer,computer_players:computerPlayers,course_name:selectedCourse||null})});const data=await response.json();if(data.status===\"ok\"){// First set the game state\nsetGameState(data.game_state);// Then start the game with the new state\nstartGame(data.game_state);// Set initial feedback\nclearFeedback();if(data.feedback&&Array.isArray(data.feedback)){data.feedback.forEach(msg=>addFeedback(msg));}else{addFeedback(data.message||\"Simulation started!\");}// Set next shot availability from the response\nif(data.next_shot_available!==undefined){setHasNextShot(data.next_shot_available);}else{setHasNextShot(true);// Default to true after setup\n}// Don't immediately play next shot - let the user initiate\n// This prevents race conditions and gives user control\n}else{alert(\"Error starting simulation: \"+(formatErrorDetail(data.detail)||\"Unknown error\"));}}catch(error){console.error(\"Error starting simulation:\",error);alert(\"Error starting simulation\");}finally{if(!isMockSessionEnabled){setLoading(false);}}};// Fetch timeline events from backend\nconst fetchTimelineEvents=async()=>{if(!isGameActive||isMockSessionEnabled)return;try{setTimelineLoading(true);const response=await fetch(`${SIMULATION_API_URL}/simulation/timeline`);if(response.ok){const data=await response.json();setTimelineEvents(data.events||[]);}}catch(error){console.error(\"Error fetching timeline:\",error);}finally{setTimelineLoading(false);}};// Fetch poker-style betting state\nconst fetchPokerState=async()=>{if(!isGameActive||isMockSessionEnabled)return;try{const response=await fetch(`${SIMULATION_API_URL}/simulation/poker-state`);if(response.ok){const data=await response.json();setPokerState({pot_size:data.pot_size,base_bet:data.base_bet,current_bet:data.current_bet,betting_phase:data.betting_phase,doubled:data.doubled,players_in:data.players_in,wagering_closed:data.wagering_closed});setBettingOptions(data.betting_options||[]);}}catch(error){console.error(\"Error fetching poker state:\",error);}};// Handle poker-style betting actions\nconst handleBettingAction=async(action,option)=>{if(isMockSessionEnabled){var _ref,_gameState$betting$cu,_gameState$betting;const label=(option===null||option===void 0?void 0:option.label)||action;const currentWager=(_ref=(_gameState$betting$cu=gameState===null||gameState===void 0?void 0:(_gameState$betting=gameState.betting)===null||_gameState$betting===void 0?void 0:_gameState$betting.current_wager)!==null&&_gameState$betting$cu!==void 0?_gameState$betting$cu:gameState===null||gameState===void 0?void 0:gameState.base_wager)!==null&&_ref!==void 0?_ref:1;const updatedWager=action==='offer_double'?currentWager*2:currentWager;setGameState(previous=>{if(!previous){return previous;}return{...previous,betting:{...(previous.betting||{}),current_wager:updatedWager}};});setPokerState(previous=>{var _previous$current_wag,_previous$current_wag2;return{...previous,current_wager:action==='offer_double'?((_previous$current_wag=previous===null||previous===void 0?void 0:previous.current_wager)!==null&&_previous$current_wag!==void 0?_previous$current_wag:currentWager)*2:(_previous$current_wag2=previous===null||previous===void 0?void 0:previous.current_wager)!==null&&_previous$current_wag2!==void 0?_previous$current_wag2:updatedWager,pending_actions:[],last_mock_action:action};});pushMockTimelineEvent({type:action!==null&&action!==void 0&&action.includes('double')?'double':'bet',description:`Mock: ${label}`});addFeedback(`🃏 Mock betting action captured: ${label}`);return;}try{setLoading(true);const decision={decision_type:action,player_id:'human',amount:option.amount||0,...option};const response=await fetch(`${SIMULATION_API_URL}/simulation/betting-decision`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(decision)});if(response.ok){const result=await response.json();if(result.success){// Update game state if provided\nif(result.game_state){setGameState(result.game_state);}// Refresh timeline and poker state\nawait Promise.all([fetchTimelineEvents(),fetchPokerState()]);}}}catch(error){console.error(\"Error handling betting action:\",error);}finally{setLoading(false);}};// Auto-refresh timeline and poker state when game is active\nuseEffect(()=>{if(isGameActive&&!isMockSessionEnabled){// Initial fetch\nfetchTimelineEvents();fetchPokerState();// Set up polling for real-time updates\nconst interval=setInterval(()=>{fetchTimelineEvents();fetchPokerState();},3000);// Update every 3 seconds\nreturn()=>clearInterval(interval);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[isGameActive,gameState===null||gameState===void 0?void 0:gameState.current_hole,gameState===null||gameState===void 0?void 0:(_gameState$hole_state=gameState.hole_state)===null||_gameState$hole_state===void 0?void 0:_gameState$hole_state.current_shot_number]);// fetchTimelineEvents and fetchPokerState are stable\n// Removed unused testNewEndpoints function\n// Add the missing makeDecision function and improve interactive flow\nconst makeDecision=async decision=>{if(isMockSessionEnabled){handleMockDecision(decision);return;}setLoading(true);try{// Determine which endpoint to use based on decision type\nlet endpoint='/simulation/play-hole';let payload={...decision};// Handle different decision types\nif(decision.action==='request_partner'||decision.action==='go_solo'||decision.action==='keep_watching'){// Captain decisions during tee shots\nendpoint='/simulation/play-hole';payload={action:decision.action,requested_partner:decision.requested_partner||decision.partner_id};}else if(decision.accept_partnership!==undefined){// Partnership response\nendpoint='/simulation/play-hole';payload={accept_partnership:decision.accept_partnership};}else if(decision.offer_double!==undefined){// Doubling decisions\nendpoint='/simulation/betting-decision';payload={action:decision.offer_double?'offer_double':'decline_double'};}else if(decision.accept_double!==undefined){// Double response\nendpoint='/simulation/betting-decision';payload={action:decision.accept_double?'accept_double':'decline_double'};}const response=await fetch(`${SIMULATION_API_URL}${endpoint}`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});if(!response.ok){const errorText=await response.text();throw new Error(`Backend error: ${response.status} - ${errorText}`);}const data=await response.json();if(data.status===\"ok\"){var _data$decision_result;// Update game state\nsetGameState(data.game_state);// Add feedback messages\nif(data.feedback&&Array.isArray(data.feedback)){data.feedback.forEach(msg=>addFeedback(msg));}else if((_data$decision_result=data.decision_result)!==null&&_data$decision_result!==void 0&&_data$decision_result.message){addFeedback(`💰 ${data.decision_result.message}`);}// Handle interaction needed\nif(data.interaction_needed){setInteractionNeeded(data.interaction_needed);}else{setInteractionNeeded(null);setPendingDecision({});}// Update shot state if available\nif(data.next_shot_available!==undefined){setHasNextShot(data.next_shot_available);}const baseProbabilities=data.probabilities&&typeof data.probabilities===\"object\"&&!Array.isArray(data.probabilities)?data.probabilities:null;const bettingAnalysis=data.betting_probabilities&&typeof data.betting_probabilities===\"object\"?data.betting_probabilities:null;if(baseProbabilities||bettingAnalysis){const combinedProbabilities={...(baseProbabilities||{}),...(bettingAnalysis?{betting_analysis:bettingAnalysis}:{})};setShotProbabilities(combinedProbabilities);}// Auto-continue if no interaction needed and shots available\nif(!data.interaction_needed&&data.next_shot_available){// Small delay to let user see the feedback\nsetTimeout(()=>{if(!loading&&!interactionNeeded){playNextShot();}},1500);}}else{throw new Error(data.message||'Unknown error occurred');}}catch(error){console.error(\"Error making decision:\",error);// Provide user-friendly error messages\nlet errorMessage=\"Error making decision: \";if(error.message.includes(\"Backend error: 500\")){errorMessage+=\"Server error - please try again\";}else if(error.message.includes(\"Backend error: 400\")){errorMessage+=\"Invalid decision - please check your choice\";}else if(error.message.includes(\"fetch\")){errorMessage+=\"Network error - check your connection\";}else{errorMessage+=error.message;}// Add error to feedback instead of alert\naddFeedback(`❌ ${errorMessage}`);// Clear interaction needed to prevent stuck state\nsetInteractionNeeded(null);}finally{setLoading(false);}};const playNextShot=async()=>{if(loading||interactionNeeded){if(process.env.NODE_ENV!=='production'){console.debug(\"Cannot play shot:\",{loading,interactionNeeded});}return;}if(isMockSessionEnabled){var _nextPreset$shotState;const presetName=mockStep%2===0?'pressureDouble':SIMULATION_MOCK_PRESET;const nextPreset=getSimulationMock(presetName);pushMockTimelineEvent({type:'shot',description:((_nextPreset$shotState=nextPreset.shotState)===null||_nextPreset$shotState===void 0?void 0:_nextPreset$shotState.recommended_shot)||`Mock shot progression ${mockStep+1}.`});addFeedback(`🎯 Mock shot advanced (step ${mockStep+1}).`);setGameState(previous=>{var _previous$hole_state;if(!previous){return nextPreset.gameState||previous;}const nextHoleState={...(previous.hole_state||{}),...(nextPreset.gameState&&nextPreset.gameState.hole_state||{}),current_shot_number:(((_previous$hole_state=previous.hole_state)===null||_previous$hole_state===void 0?void 0:_previous$hole_state.current_shot_number)||0)+1};return{...previous,...(nextPreset.gameState||{}),hole_state:nextHoleState};});setShotState(nextPreset.shotState||null);setShotProbabilities(nextPreset.shotProbabilities||null);setInteractionNeeded(nextPreset.interactionNeeded||null);setBettingOptions(nextPreset.bettingOptions||bettingOptions);setPokerState(previous=>({...previous,...nextPreset.pokerState}));setHasNextShot(nextPreset.hasNextShot!==undefined?Boolean(nextPreset.hasNextShot):false);setMockStep(previous=>previous+1);return;}setLoading(true);try{const response=await fetch(`${SIMULATION_API_URL}/simulation/play-next-shot`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(pendingDecision)});if(!response.ok){const errorText=await response.text();throw new Error(`Backend error: ${response.status} - ${errorText}`);}const data=await response.json();if(data.status===\"ok\"){setGameState(data.game_state);// Add feedback from the shot simulation\nif(data.feedback&&data.feedback.length>0){data.feedback.forEach(msg=>addFeedback(msg));}// Handle shot result\nif(data.shot_result){addFeedback(`🎯 Shot Result: ${JSON.stringify(data.shot_result)}`);}// Handle interaction needed\nif(data.interaction_needed){setInteractionNeeded(data.interaction_needed);setPendingDecision({});}else{setInteractionNeeded(null);setPendingDecision({});}// Update next shot availability\nsetHasNextShot(data.next_shot_available);// Refresh timeline and poker state after shot\nawait Promise.all([fetchTimelineEvents(),fetchPokerState()]);}else{throw new Error(data.message||'Unknown error occurred');}}catch(error){console.error(\"Error playing next shot:\",error);let errorMessage=\"Error playing shot: \";if(error.message.includes(\"Backend error: 500\")){errorMessage+=\"Server error - please try again\";}else if(error.message.includes(\"fetch\")){errorMessage+=\"Network error - check your connection\";}else{errorMessage+=error.message;}addFeedback(`❌ ${errorMessage}`);}finally{setLoading(false);}};const resetSimulation=()=>{setGameState(null);endGame();// Use endGame directly instead of setIsGameActive\nclearFeedback();setHoleDecisions({action:null,requested_partner:null,offer_double:false,accept_double:false});setMockStep(0);};if(!isGameActive){return/*#__PURE__*/_jsx(GameSetup,{humanPlayer:humanPlayer,setHumanPlayer:setHumanPlayer,computerPlayers:computerPlayers,setComputerPlayers:setComputerPlayers,selectedCourse:selectedCourse,setSelectedCourse:setSelectedCourse,courses:courses,setCourses:setCourses,personalities:personalities,setPersonalities:setPersonalities,suggestedOpponents:suggestedOpponents,setSuggestedOpponents:setSuggestedOpponents,onStartGame:startSimulation});}// Choose interface based on mode preference\nif(useTurnBasedMode&&turnBasedState){return/*#__PURE__*/_jsx(TurnBasedInterface,{gameState:{...gameState,...(turnBasedState.turn_based_state||turnBasedState),interactionNeeded,hasNextShot,feedback},onMakeDecision:makeDecision,interactionNeeded:interactionNeeded,feedback:feedback,shotState:shotState,onNextShot:playNextShot,hasNextShot:hasNextShot});}// Use Enhanced Simulation Layout with Timeline and Poker Betting\nconst useEnhancedLayout=true;// TODO: Make this a user preference\nif(useEnhancedLayout){return/*#__PURE__*/_jsx(EnhancedSimulationLayout,{gameState:gameState,shotState:shotState,probabilities:shotProbabilities,onDecision:makeDecision,onPlayNextShot:playNextShot,timelineEvents:timelineEvents,timelineLoading:timelineLoading,pokerState:pokerState,bettingOptions:bettingOptions,onBettingAction:handleBettingAction,currentPlayer:\"human\",interactionNeeded:interactionNeeded,hasNextShot:hasNextShot,feedback:feedback});}return/*#__PURE__*/_jsx(GamePlay,{gameState:gameState,onEndSimulation:resetSimulation,interactionNeeded:interactionNeeded,onMakeDecision:makeDecision,feedback:feedback,shotState:shotState,shotProbabilities:shotProbabilities,onNextShot:playNextShot,hasNextShot:hasNextShot});}export default SimulationMode;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useGame","simulationConfig","getSimulationMock","GameSetup","GamePlay","EnhancedSimulationLayout","TurnBasedInterface","jsx","_jsx","apiUrl","SIMULATION_API_URL","useMocks","USE_SIMULATION_MOCKS","mockPreset","SIMULATION_MOCK_PRESET","formatErrorDetail","detail","JSON","stringify","SimulationMode","_gameState$hole_state","gameState","setGameState","isGameActive","startGame","endGame","loading","setLoading","feedback","addFeedback","clearFeedback","shotState","setShotState","interactionNeeded","setInteractionNeeded","pendingDecision","setPendingDecision","shotProbabilities","setShotProbabilities","hasNextShot","setHasNextShot","timelineEvents","setTimelineEvents","pokerState","setPokerState","bettingOptions","setBettingOptions","timelineLoading","setTimelineLoading","mockStep","setMockStep","useTurnBasedMode","turnBasedState","setTurnBasedState","humanPlayer","setHumanPlayer","id","name","handicap","strength","is_human","computerPlayers","setComputerPlayers","suggestedOpponents","setSuggestedOpponents","personalities","setPersonalities","selectedCourse","setSelectedCourse","courses","setCourses","setHoleDecisions","action","requested_partner","offer_double","accept_double","isMockSessionEnabled","resolveMockPreset","pushMockTimelineEvent","partialEvent","previous","Date","now","timestamp","toISOString","hydrateMockSetup","preset","setup","presetGameState","opponents","Array","isArray","length","slice","map","opponent","index","personality","players","humanPlayerFromPreset","find","player","prev","runMockSimulation","undefined","Boolean","forEach","entry","handleMockDecision","decision","handleBettingAction","label","accept_partnership","accepted","type","description","_gameState$players","_gameState$players$fi","partnerId","partnerName","pressurePreset","fetchInitialData","personalitiesRes","opponentsRes","coursesRes","Promise","all","fetch","personalitiesData","json","opponentsData","coursesData","error","console","fetchTurnBasedState","response","data","success","turn_based_state","interval","setInterval","clearInterval","startSimulation","trim","alert","method","headers","body","human_player","computer_players","course_name","status","game_state","msg","message","next_shot_available","fetchTimelineEvents","ok","events","fetchPokerState","pot_size","base_bet","current_bet","betting_phase","doubled","players_in","wagering_closed","betting_options","option","_ref","_gameState$betting$cu","_gameState$betting","currentWager","betting","current_wager","base_wager","updatedWager","_previous$current_wag","_previous$current_wag2","pending_actions","last_mock_action","includes","decision_type","player_id","amount","result","current_hole","hole_state","current_shot_number","makeDecision","endpoint","payload","partner_id","errorText","text","Error","_data$decision_result","decision_result","interaction_needed","baseProbabilities","probabilities","bettingAnalysis","betting_probabilities","combinedProbabilities","betting_analysis","setTimeout","playNextShot","errorMessage","process","env","NODE_ENV","debug","_nextPreset$shotState","presetName","nextPreset","recommended_shot","_previous$hole_state","nextHoleState","shot_result","resetSimulation","onStartGame","onMakeDecision","onNextShot","useEnhancedLayout","onDecision","onPlayNextShot","onBettingAction","currentPlayer","onEndSimulation"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/simulation/SimulationMode.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useGame } from \"../../context\";\nimport { simulationConfig } from \"../../config/environment\";\nimport { getSimulationMock } from \"./__fixtures__\";\nimport { GameSetup, GamePlay, EnhancedSimulationLayout } from \"./\";\nimport TurnBasedInterface from \"./TurnBasedInterface\";\n// import { Timeline, PokerBettingPanel } from \"./\"; // Removed - not currently used\n// import TVPokerLayout from \"../game/TVPokerLayout\"; // Removed - not currently used\n\nconst {\n  apiUrl: SIMULATION_API_URL,\n  useMocks: USE_SIMULATION_MOCKS,\n  mockPreset: SIMULATION_MOCK_PRESET,\n} = simulationConfig;\n\n// Helper function to safely serialize error details\nconst formatErrorDetail = (detail) => {\n  if (typeof detail === 'object' && detail !== null) {\n    return JSON.stringify(detail);\n  }\n  return detail;\n};\n\nfunction SimulationMode() {\n  // const theme = useTheme(); // Unused for now\n  const { \n    gameState, \n    setGameState, \n    isGameActive, \n    startGame, \n    endGame,\n    loading, \n    setLoading,\n    feedback,\n    addFeedback,\n    clearFeedback,\n    shotState,\n    setShotState,\n    interactionNeeded,\n    setInteractionNeeded,\n    pendingDecision,\n    setPendingDecision,\n    shotProbabilities,\n    setShotProbabilities,\n    hasNextShot,\n    setHasNextShot,\n  } = useGame();\n\n  // Timeline and Poker state\n  const [timelineEvents, setTimelineEvents] = useState([]);\n  const [pokerState, setPokerState] = useState({});\n  const [bettingOptions, setBettingOptions] = useState([]);\n  const [timelineLoading, setTimelineLoading] = useState(false);\n  const [mockStep, setMockStep] = useState(0);\n  \n  // Turn-based mode state\n  const useTurnBasedMode = true;\n  const [turnBasedState, setTurnBasedState] = useState(null);\n\n  // Setup state\n  const [humanPlayer, setHumanPlayer] = useState({\n    id: \"human\",\n    name: \"\",\n    handicap: 18,\n    strength: \"Average\",\n    is_human: true\n  });\n  const [computerPlayers, setComputerPlayers] = useState([]);\n  const [suggestedOpponents, setSuggestedOpponents] = useState([]);\n  const [personalities, setPersonalities] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\n  const [courses, setCourses] = useState({});\n  \n  // Hole decisions - setHoleDecisions used for resetting state between simulations\n  const [, setHoleDecisions] = useState({\n    action: null,\n    requested_partner: null,\n    offer_double: false,\n    accept_double: false\n  });\n  \n  // Note: interactionNeeded and setInteractionNeeded come from useGame() context above\n  // const [pendingDecision, setPendingDecision] = useState({}); // Also from context\n\n  // New state for shot-by-shot simulation\n  // Note: All simulation state (shotProbabilities, shotState, hasNextShot, etc.) comes from useGame() context above\n\n  // GHIN lookup functionality removed - was not being used in current UI\n\n  // GHIN lookup functions removed - functionality not currently exposed in UI\n\n  const isMockSessionEnabled = USE_SIMULATION_MOCKS;\n\n  const resolveMockPreset = useCallback(\n    () => getSimulationMock(SIMULATION_MOCK_PRESET),\n    []\n  );\n\n  const pushMockTimelineEvent = (partialEvent) => {\n    setTimelineEvents((previous) => [\n      {\n        id: partialEvent.id || `mock-event-${Date.now()}`,\n        timestamp: partialEvent.timestamp || new Date().toISOString(),\n        ...partialEvent,\n      },\n      ...previous,\n    ]);\n  };\n\n  const hydrateMockSetup = useCallback(() => {\n    if (!isMockSessionEnabled) {\n      return;\n    }\n\n    const preset = resolveMockPreset();\n    if (!preset) {\n      return;\n    }\n\n    const { setup, gameState: presetGameState } = preset;\n\n    if (setup) {\n      setPersonalities(setup.personalities || []);\n      setSuggestedOpponents(setup.opponents || []);\n      setCourses(setup.courses || {});\n\n      if (Array.isArray(setup.opponents) && setup.opponents.length > 0) {\n        setComputerPlayers(\n          setup.opponents.slice(0, 3).map((opponent, index) => ({\n            id: opponent.id || `mock-opponent-${index + 1}`,\n            name: opponent.name,\n            handicap: opponent.handicap,\n            personality: opponent.personality,\n            is_human: false,\n          }))\n        );\n      }\n    }\n\n    if (presetGameState?.players) {\n      const humanPlayerFromPreset = presetGameState.players.find(\n        (player) => player?.is_human || player?.id === \"human\"\n      );\n\n      if (humanPlayerFromPreset) {\n        setHumanPlayer((prev) => ({\n          ...prev,\n          ...humanPlayerFromPreset,\n        }));\n      }\n    }\n  }, [isMockSessionEnabled, resolveMockPreset, setPersonalities, setSuggestedOpponents, setCourses, setComputerPlayers, setHumanPlayer]);\n\n  const runMockSimulation = () => {\n    const preset = resolveMockPreset();\n    if (!preset) {\n      return;\n    }\n\n    setGameState(preset.gameState);\n    startGame(preset.gameState);\n    setShotState(preset.shotState || null);\n    setShotProbabilities(preset.shotProbabilities || null);\n    setHasNextShot(\n      preset.hasNextShot !== undefined ? Boolean(preset.hasNextShot) : true\n    );\n    setInteractionNeeded(preset.interactionNeeded || null);\n\n    clearFeedback();\n    (preset.feedback || []).forEach((entry) => addFeedback(entry));\n\n    setTimelineEvents(preset.timelineEvents || []);\n    setPokerState(preset.pokerState || {});\n    setBettingOptions(preset.bettingOptions || []);\n    setMockStep(0);\n  };\n\n  const handleMockDecision = (decision) => {\n    if (!isMockSessionEnabled) {\n      return;\n    }\n\n    if (decision.offer_double !== undefined) {\n      handleBettingAction(\n        decision.offer_double ? 'offer_double' : 'decline_double',\n        {\n          label: decision.offer_double ? 'Offer Double' : 'Decline Double',\n        }\n      );\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.accept_double !== undefined) {\n      handleBettingAction(\n        decision.accept_double ? 'accept_double' : 'decline_double',\n        {\n          label: decision.accept_double ? 'Accept Double' : 'Decline Double',\n        }\n      );\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.accept_partnership !== undefined) {\n      const accepted = Boolean(decision.accept_partnership);\n      pushMockTimelineEvent({\n        type: accepted ? 'partnership' : 'solo',\n        description: accepted\n          ? 'Mock: Partnership accepted. Robots brace for teamwork.'\n          : 'Mock: Partnership declined. Captain must go solo.',\n      });\n      addFeedback(\n        accepted\n          ? '✅ Mock confirmation: partnership locked in.'\n          : '⚠️ Mock decline: prepare for solo play.'\n      );\n\n      if (!accepted) {\n        handleBettingAction('offer_double', { label: 'Forced Solo Double' });\n      }\n\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.action === 'request_partner') {\n      const partnerId = decision.requested_partner;\n      const partnerName =\n        gameState?.players?.find((player) => player.id === partnerId)?.name || partnerId || 'selected partner';\n\n      pushMockTimelineEvent({\n        type: 'partnership',\n        description: `Mock: You selected ${partnerName} as your partner.`,\n      });\n\n      addFeedback(`🤝 Mock partner secured: ${partnerName}`);\n\n      const pressurePreset = getSimulationMock('pressureDouble');\n      setInteractionNeeded(pressurePreset.interactionNeeded || null);\n      setShotState(pressurePreset.shotState || shotState);\n      setShotProbabilities(pressurePreset.shotProbabilities || shotProbabilities);\n      setBettingOptions(pressurePreset.bettingOptions || bettingOptions);\n      setPokerState((previous) => ({\n        ...previous,\n        ...pressurePreset.pokerState,\n      }));\n      setMockStep((previous) => previous + 1);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.action === 'go_solo') {\n      pushMockTimelineEvent({\n        type: 'solo',\n        description: 'Mock: Captain elects to go solo and press the wager.',\n      });\n      addFeedback('🚀 Mock solo play engaged. The wager has been doubled.');\n      handleBettingAction('offer_double', { label: 'Mock Solo Double' });\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.action === 'keep_watching') {\n      pushMockTimelineEvent({\n        type: 'captain',\n        description: 'Mock: Captain keeps observing robot tee shots.',\n      });\n      addFeedback('👀 Mock mode: continuing to observe tee shots.');\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    pushMockTimelineEvent({\n      type: 'info',\n      description: `Mock decision recorded: ${JSON.stringify(decision)}`,\n    });\n    addFeedback('ℹ️ Mock decision logged. No backend action triggered.');\n    setInteractionNeeded(null);\n    setPendingDecision({});\n  };\n\n  const fetchInitialData = useCallback(async () => {\n    if (isMockSessionEnabled) {\n      return;\n    }\n\n    try {\n      const [personalitiesRes, opponentsRes, coursesRes] = await Promise.all([\n        fetch(`${SIMULATION_API_URL}/simulation/available-personalities`),\n        fetch(`${SIMULATION_API_URL}/simulation/suggested-opponents`),\n        fetch(`${SIMULATION_API_URL}/courses`)\n      ]);\n\n      const personalitiesData = await personalitiesRes.json();\n      const opponentsData = await opponentsRes.json();\n      const coursesData = await coursesRes.json();\n\n      setPersonalities(personalitiesData.personalities || []);\n      setSuggestedOpponents(opponentsData.opponents || []);\n      setCourses(coursesData || {});\n\n      if (opponentsData.opponents && opponentsData.opponents.length >= 3) {\n        setComputerPlayers([\n          { id: \"comp1\", ...opponentsData.opponents[0], is_human: false },\n          { id: \"comp2\", ...opponentsData.opponents[1], is_human: false },\n          { id: \"comp3\", ...opponentsData.opponents[2], is_human: false }\n        ]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching initial data:\", error);\n    }\n  }, [isMockSessionEnabled, setComputerPlayers, setCourses, setPersonalities, setSuggestedOpponents]);\n\n  const fetchTurnBasedState = useCallback(async () => {\n    if (isMockSessionEnabled) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/turn-based-state`);\n      const data = await response.json();\n\n      if (data.success) {\n        setTurnBasedState(data.turn_based_state);\n      }\n    } catch (error) {\n      console.error('Error fetching turn-based state:', error);\n    }\n  }, [isMockSessionEnabled, setTurnBasedState]);\n\n  useEffect(() => {\n    if (isMockSessionEnabled) {\n      hydrateMockSetup();\n      return;\n    }\n\n    fetchInitialData();\n  }, [fetchInitialData, hydrateMockSetup, isMockSessionEnabled]);\n  \n  // Fetch turn-based state when game is active\n  useEffect(() => {\n    if (isGameActive && useTurnBasedMode && !isMockSessionEnabled) {\n      fetchTurnBasedState();\n      const interval = setInterval(fetchTurnBasedState, 2000);\n      return () => clearInterval(interval);\n    }\n    return undefined;\n  }, [fetchTurnBasedState, isGameActive, isMockSessionEnabled, useTurnBasedMode]);\n  const startSimulation = async () => {\n    if (!isMockSessionEnabled && !humanPlayer.name.trim()) {\n      alert(\"Please enter your name\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Reset all local state for new simulation\n      setGameState(null);\n      endGame();  // Use endGame directly instead of setIsGameActive\n      clearFeedback();\n      setShotProbabilities(null);\n      setShotState(null);\n      setHasNextShot(true);\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      setHoleDecisions({\n        action: null,\n        requested_partner: null,\n        offer_double: false,\n        accept_double: false\n      });\n      // GHIN lookup state reset removed - functionality not currently used\n\n      setMockStep(0);\n\n      if (isMockSessionEnabled) {\n        runMockSimulation();\n        setLoading(false);\n        return;\n      }\n\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/setup`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          human_player: humanPlayer,\n          computer_players: computerPlayers,\n          course_name: selectedCourse || null\n        })\n      });\n      \n      const data = await response.json();\n      if (data.status === \"ok\") {\n        // First set the game state\n        setGameState(data.game_state);\n        \n        // Then start the game with the new state\n        startGame(data.game_state);\n        \n        // Set initial feedback\n        clearFeedback();\n        if (data.feedback && Array.isArray(data.feedback)) {\n          data.feedback.forEach((msg) => addFeedback(msg));\n        } else {\n          addFeedback(data.message || \"Simulation started!\");\n        }\n        \n        // Set next shot availability from the response\n        if (data.next_shot_available !== undefined) {\n          setHasNextShot(data.next_shot_available);\n        } else {\n          setHasNextShot(true);  // Default to true after setup\n        }\n        \n        // Don't immediately play next shot - let the user initiate\n        // This prevents race conditions and gives user control\n      } else {\n        alert(\"Error starting simulation: \" + (formatErrorDetail(data.detail) || \"Unknown error\"));\n      }\n    } catch (error) {\n      console.error(\"Error starting simulation:\", error);\n      alert(\"Error starting simulation\");\n    } finally {\n      if (!isMockSessionEnabled) {\n        setLoading(false);\n      }\n    }\n  };\n\n  // Fetch timeline events from backend\n  const fetchTimelineEvents = async () => {\n    if (!isGameActive || isMockSessionEnabled) return;\n    \n    try {\n      setTimelineLoading(true);\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/timeline`);\n      if (response.ok) {\n        const data = await response.json();\n        setTimelineEvents(data.events || []);\n      }\n    } catch (error) {\n      console.error(\"Error fetching timeline:\", error);\n    } finally {\n      setTimelineLoading(false);\n    }\n  };\n\n  // Fetch poker-style betting state\n  const fetchPokerState = async () => {\n    if (!isGameActive || isMockSessionEnabled) return;\n    \n    try {\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/poker-state`);\n      if (response.ok) {\n        const data = await response.json();\n        setPokerState({\n          pot_size: data.pot_size,\n          base_bet: data.base_bet, \n          current_bet: data.current_bet,\n          betting_phase: data.betting_phase,\n          doubled: data.doubled,\n          players_in: data.players_in,\n          wagering_closed: data.wagering_closed\n        });\n        setBettingOptions(data.betting_options || []);\n      }\n    } catch (error) {\n      console.error(\"Error fetching poker state:\", error);\n    }\n  };\n\n  // Handle poker-style betting actions\n  const handleBettingAction = async (action, option) => {\n    if (isMockSessionEnabled) {\n      const label = option?.label || action;\n      const currentWager = gameState?.betting?.current_wager ?? gameState?.base_wager ?? 1;\n      const updatedWager = action === 'offer_double' ? currentWager * 2 : currentWager;\n\n      setGameState((previous) => {\n        if (!previous) {\n          return previous;\n        }\n\n        return {\n          ...previous,\n          betting: {\n            ...(previous.betting || {}),\n            current_wager: updatedWager,\n          },\n        };\n      });\n\n      setPokerState((previous) => ({\n        ...previous,\n        current_wager:\n          action === 'offer_double'\n            ? (previous?.current_wager ?? currentWager) * 2\n            : previous?.current_wager ?? updatedWager,\n        pending_actions: [],\n        last_mock_action: action,\n      }));\n\n      pushMockTimelineEvent({\n        type: action?.includes('double') ? 'double' : 'bet',\n        description: `Mock: ${label}`,\n      });\n\n      addFeedback(`🃏 Mock betting action captured: ${label}`);\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const decision = {\n        decision_type: action,\n        player_id: 'human',\n        amount: option.amount || 0,\n        ...option\n      };\n\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/betting-decision`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(decision)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success) {\n          // Update game state if provided\n          if (result.game_state) {\n            setGameState(result.game_state);\n          }\n\n          // Refresh timeline and poker state\n          await Promise.all([fetchTimelineEvents(), fetchPokerState()]);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error handling betting action:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Auto-refresh timeline and poker state when game is active\n  useEffect(() => {\n    if (isGameActive && !isMockSessionEnabled) {\n      // Initial fetch\n      fetchTimelineEvents();\n      fetchPokerState();\n\n      // Set up polling for real-time updates\n      const interval = setInterval(() => {\n        fetchTimelineEvents();\n        fetchPokerState();\n      }, 3000); // Update every 3 seconds\n\n      return () => clearInterval(interval);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isGameActive, gameState?.current_hole, gameState?.hole_state?.current_shot_number]); // fetchTimelineEvents and fetchPokerState are stable\n  \n  // Removed unused testNewEndpoints function\n\n  // Add the missing makeDecision function and improve interactive flow\n  const makeDecision = async (decision) => {\n    if (isMockSessionEnabled) {\n      handleMockDecision(decision);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Determine which endpoint to use based on decision type\n      let endpoint = '/simulation/play-hole';\n      let payload = { ...decision };\n      \n      // Handle different decision types\n      if (decision.action === 'request_partner' || decision.action === 'go_solo' || decision.action === 'keep_watching') {\n        // Captain decisions during tee shots\n        endpoint = '/simulation/play-hole';\n        payload = {\n          action: decision.action,\n          requested_partner: decision.requested_partner || decision.partner_id\n        };\n      } else if (decision.accept_partnership !== undefined) {\n        // Partnership response\n        endpoint = '/simulation/play-hole';\n        payload = {\n          accept_partnership: decision.accept_partnership\n        };\n      } else if (decision.offer_double !== undefined) {\n        // Doubling decisions\n        endpoint = '/simulation/betting-decision';\n        payload = {\n          action: decision.offer_double ? 'offer_double' : 'decline_double'\n        };\n      } else if (decision.accept_double !== undefined) {\n        // Double response\n        endpoint = '/simulation/betting-decision';\n        payload = {\n          action: decision.accept_double ? 'accept_double' : 'decline_double'\n        };\n      }\n\n      const response = await fetch(`${SIMULATION_API_URL}${endpoint}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Backend error: ${response.status} - ${errorText}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.status === \"ok\") {\n        // Update game state\n        setGameState(data.game_state);\n        \n        // Add feedback messages\n        if (data.feedback && Array.isArray(data.feedback)) {\n          data.feedback.forEach(msg => addFeedback(msg));\n        } else if (data.decision_result?.message) {\n          addFeedback(`💰 ${data.decision_result.message}`);\n        }\n        \n        // Handle interaction needed\n        if (data.interaction_needed) {\n          setInteractionNeeded(data.interaction_needed);\n        } else {\n          setInteractionNeeded(null);\n          setPendingDecision({});\n        }\n        \n        // Update shot state if available\n        if (data.next_shot_available !== undefined) {\n          setHasNextShot(data.next_shot_available);\n        }\n        \n        const baseProbabilities =\n          data.probabilities && typeof data.probabilities === \"object\" && !Array.isArray(data.probabilities)\n            ? data.probabilities\n            : null;\n\n        const bettingAnalysis =\n          data.betting_probabilities && typeof data.betting_probabilities === \"object\"\n            ? data.betting_probabilities\n            : null;\n\n        if (baseProbabilities || bettingAnalysis) {\n          const combinedProbabilities = {\n            ...(baseProbabilities || {}),\n            ...(bettingAnalysis ? { betting_analysis: bettingAnalysis } : {}),\n          };\n\n          setShotProbabilities(combinedProbabilities);\n        }\n        \n        // Auto-continue if no interaction needed and shots available\n        if (!data.interaction_needed && data.next_shot_available) {\n          // Small delay to let user see the feedback\n          setTimeout(() => {\n            if (!loading && !interactionNeeded) {\n              playNextShot();\n            }\n          }, 1500);\n        }\n        \n      } else {\n        throw new Error(data.message || 'Unknown error occurred');\n      }\n      \n    } catch (error) {\n      console.error(\"Error making decision:\", error);\n      \n      // Provide user-friendly error messages\n      let errorMessage = \"Error making decision: \";\n      if (error.message.includes(\"Backend error: 500\")) {\n        errorMessage += \"Server error - please try again\";\n      } else if (error.message.includes(\"Backend error: 400\")) {\n        errorMessage += \"Invalid decision - please check your choice\";\n      } else if (error.message.includes(\"fetch\")) {\n        errorMessage += \"Network error - check your connection\";\n      } else {\n        errorMessage += error.message;\n      }\n      \n      // Add error to feedback instead of alert\n      addFeedback(`❌ ${errorMessage}`);\n      \n      // Clear interaction needed to prevent stuck state\n      setInteractionNeeded(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const playNextShot = async () => {\n    if (loading || interactionNeeded) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.debug(\"Cannot play shot:\", { loading, interactionNeeded });\n      }\n      return;\n    }\n\n    if (isMockSessionEnabled) {\n      const presetName = mockStep % 2 === 0 ? 'pressureDouble' : SIMULATION_MOCK_PRESET;\n      const nextPreset = getSimulationMock(presetName);\n\n      pushMockTimelineEvent({\n        type: 'shot',\n        description:\n          nextPreset.shotState?.recommended_shot ||\n          `Mock shot progression ${mockStep + 1}.`,\n      });\n\n      addFeedback(`🎯 Mock shot advanced (step ${mockStep + 1}).`);\n\n      setGameState((previous) => {\n        if (!previous) {\n          return nextPreset.gameState || previous;\n        }\n\n        const nextHoleState = {\n          ...(previous.hole_state || {}),\n          ...((nextPreset.gameState && nextPreset.gameState.hole_state) || {}),\n          current_shot_number:\n            (previous.hole_state?.current_shot_number || 0) + 1,\n        };\n\n        return {\n          ...previous,\n          ...(nextPreset.gameState || {}),\n          hole_state: nextHoleState,\n        };\n      });\n\n      setShotState(nextPreset.shotState || null);\n      setShotProbabilities(nextPreset.shotProbabilities || null);\n      setInteractionNeeded(nextPreset.interactionNeeded || null);\n      setBettingOptions(nextPreset.bettingOptions || bettingOptions);\n      setPokerState((previous) => ({\n        ...previous,\n        ...nextPreset.pokerState,\n      }));\n      setHasNextShot(\n        nextPreset.hasNextShot !== undefined\n          ? Boolean(nextPreset.hasNextShot)\n          : false\n      );\n      setMockStep((previous) => previous + 1);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/play-next-shot`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(pendingDecision)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Backend error: ${response.status} - ${errorText}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.status === \"ok\") {\n        setGameState(data.game_state);\n        \n        // Add feedback from the shot simulation\n        if (data.feedback && data.feedback.length > 0) {\n          data.feedback.forEach(msg => addFeedback(msg));\n        }\n        \n        // Handle shot result\n        if (data.shot_result) {\n          addFeedback(`🎯 Shot Result: ${JSON.stringify(data.shot_result)}`);\n        }\n        \n        // Handle interaction needed\n        if (data.interaction_needed) {\n          setInteractionNeeded(data.interaction_needed);\n          setPendingDecision({});\n        } else {\n          setInteractionNeeded(null);\n          setPendingDecision({});\n        }\n        \n        // Update next shot availability\n        setHasNextShot(data.next_shot_available);\n        \n        // Refresh timeline and poker state after shot\n        await Promise.all([fetchTimelineEvents(), fetchPokerState()]);\n        \n      } else {\n        throw new Error(data.message || 'Unknown error occurred');\n      }\n      \n    } catch (error) {\n      console.error(\"Error playing next shot:\", error);\n      \n      let errorMessage = \"Error playing shot: \";\n      if (error.message.includes(\"Backend error: 500\")) {\n        errorMessage += \"Server error - please try again\";\n      } else if (error.message.includes(\"fetch\")) {\n        errorMessage += \"Network error - check your connection\";\n      } else {\n        errorMessage += error.message;\n      }\n      \n      addFeedback(`❌ ${errorMessage}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const resetSimulation = () => {\n    setGameState(null);\n    endGame();  // Use endGame directly instead of setIsGameActive\n    clearFeedback();\n    setHoleDecisions({\n      action: null,\n      requested_partner: null,\n      offer_double: false,\n      accept_double: false\n    });\n    setMockStep(0);\n  };\n  \n  if (!isGameActive) {\n    return (\n      <GameSetup\n        humanPlayer={humanPlayer}\n        setHumanPlayer={setHumanPlayer}\n        computerPlayers={computerPlayers}\n        setComputerPlayers={setComputerPlayers}\n        selectedCourse={selectedCourse}\n        setSelectedCourse={setSelectedCourse}\n        courses={courses}\n        setCourses={setCourses}\n        personalities={personalities}\n        setPersonalities={setPersonalities}\n        suggestedOpponents={suggestedOpponents}\n        setSuggestedOpponents={setSuggestedOpponents}\n        onStartGame={startSimulation}\n      />\n    );\n  }\n\n  // Choose interface based on mode preference\n  if (useTurnBasedMode && turnBasedState) {\n    return (\n      <TurnBasedInterface\n        gameState={{\n          ...gameState,\n          ...(turnBasedState.turn_based_state || turnBasedState),\n          interactionNeeded,\n          hasNextShot,\n          feedback\n        }}\n        onMakeDecision={makeDecision}\n        interactionNeeded={interactionNeeded}\n        feedback={feedback}\n        shotState={shotState}\n        onNextShot={playNextShot}\n        hasNextShot={hasNextShot}\n      />\n    );\n  }\n  \n  // Use Enhanced Simulation Layout with Timeline and Poker Betting\n  const useEnhancedLayout = true; // TODO: Make this a user preference\n\n  if (useEnhancedLayout) {\n    return (\n      <EnhancedSimulationLayout\n        gameState={gameState}\n        shotState={shotState}\n        probabilities={shotProbabilities}\n        onDecision={makeDecision}\n        onPlayNextShot={playNextShot}\n        timelineEvents={timelineEvents}\n        timelineLoading={timelineLoading}\n        pokerState={pokerState}\n        bettingOptions={bettingOptions}\n        onBettingAction={handleBettingAction}\n        currentPlayer=\"human\"\n        interactionNeeded={interactionNeeded}\n        hasNextShot={hasNextShot}\n        feedback={feedback}\n      />\n    );\n  }\n\n  return (\n    <GamePlay\n      gameState={gameState}\n      onEndSimulation={resetSimulation}\n      interactionNeeded={interactionNeeded}\n      onMakeDecision={makeDecision}\n      feedback={feedback}\n      shotState={shotState}\n      shotProbabilities={shotProbabilities}\n      onNextShot={playNextShot}\n      hasNextShot={hasNextShot}\n    />\n  );\n}\n\nexport default SimulationMode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:133:./.code/agents/8686/exec-call_XoxG4oyhZyliLxun4Q9epDVL.txt:17:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:134:./.code/agents/8686/exec-call_XoxG4oyhZyliLxun4Q9epDVL.txt:37:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:138:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:156:./.code/agents/8686/exec-call_XoxG4oyhZyliLxun4Q9epDVL.txt:17:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:139:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:157:./.code/agents/8686/exec-call_XoxG4oyhZyliLxun4Q9epDVL.txt:37:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:140:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:158:./.code/agents/1/exec-call_FBIwoFXQ52mBUHnfzcN9IQzW.txt:7557:frontend/node_modules/.cache/tsconfig.tsbuildinfo:1:{"program":{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.sharedmemory.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../react-router/dist/development/routeModules-rOzWJJ9x.d.ts","../react-router/dist/development/index-react-server-client-BKpa2trA.d.ts","../react-router/node_modules/cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/shared.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-localstorage.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-memory.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/key-manifest.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-manager.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/index.d.ts","../@auth0/auth0-spa-js/dist/typings/global.d.ts","../@auth0/auth0-spa-js/dist/typings/TokenExchange.d.ts","../@auth0/auth0-spa-js/dist/typings/Auth0Client.d.ts","../@auth0/auth0-spa-js/dist/typings/errors.d.ts","../@auth0/auth0-spa-js/dist/typings/index.d.ts","../@auth0/auth0-react/dist/auth-state.d.ts","../@auth0/auth0-react/dist/auth0-context.d.ts","../@auth0/auth0-react/dist/auth0-provider.d.ts","../@auth0/auth0-react/dist/use-auth0.d.ts","../@auth0/auth0-react/dist/with-auth0.d.ts","../@auth0/auth0-react/dist/with-authentication-required.d.ts","../@auth0/auth0-react/dist/errors.d.ts","../@auth0/auth0-react/dist/index.d.ts","../../src/theme/theme.js","../../src/theme/Provider.js","../../src/context/GameProvider.js","../../src/context/AuthContext.js","../../src/context/SheetSyncContext.js","../../src/context/index.js","../../src/components/ui/Button.js","../../src/components/ui/Card.js","../../src/components/ui/Input.js","../../src/components/ui/Select.js","../../src/components/ui/index.js","../../src/hooks/useOddsCalculation.js","../../src/components/ShotResultWidget.js","../../src/components/BettingOpportunityWidget.js","../../src/components/ProbabilityVisualization.js","../../src/components/EducationalTooltip.js","../../src/components/BettingOddsPanel.js","../../src/components/GameStateWidget.js","../../src/components/StrategicAnalysisWidget.js","../../src/components/AnalyticsDashboard.js","../../src/components/HoleStrategyDisplay.js","../../src/components/EnhancedBettingWidget.js","../../src/components/EnhancedScoringWidget.js","../../src/components/InteractivePlayerCard.js","../../src/utils/api.js","../../src/components/ShotAnalysisWidget.js","../../src/components/ShotVisualizationOverlay.js","../../src/components/GameHistory.js","../../src/components/simulation/SimulationDecisionPanel.tsx","../../src/components/simulation/GamePlay.js","../../src/config/environment.js","../../src/components/simulation/__fixtures__/simulationMockData.js","../../src/components/simulation/__fixtures__/index.js","../../src/components/simulation/TurnBasedInterface.js","../../src/components/simulation/SimulationMode.js","../../src/components/simulation/MonteCarloSimulation.js","../../src/components/simulation/Timeline.js","../../src/components/simulation/PokerBettingPanel.js","../../src/components/simulation/styles/enhancedSimulationLayout.js","../../src/components/simulation/EnhancedSimulationLayout.js","../../src/components/simulation/HoleVisualization.tsx","../../src/components/simulation/index.js","../../src/components/game/CourseImport.js","../../src/components/game/CourseManager.js","../../src/components/PlayerProfileManager.js","../../src/components/game/GameSetupForm.js","../../src/components/game/UnifiedGameInterface.js","../../src/components/GameDashboard.js","../../src/components/WolfGoatPigDashboard.js","../../src/components/HoleVisualization.js","../../src/components/EnhancedWGPInterface.js","../../src/components/ShotRangeAnalyzer.js","../../src/components/ColdStartHandler.js","../../src/components/auth/LoginButton.js","../../src/components/auth/LogoutButton.js","../../src/components/auth/Profile.js","../../src/components/auth/ProtectedRoute.js","../../src/components/auth/AuthHealthCheck.js","../../src/components/auth/index.js","../../src/components/index.js","../../src/components/game/WolfGoatPigGame.js","../../src/components/game/index.js","../../src/components/simulation/FeedAnalyzer.js","../../src/context/TutorialContext.js","../../src/hooks/useTutorialProgress.js","../../src/components/tutorial/ProgressTracker.js","../../src/components/tutorial/TutorialOverlay.js","../../src/components/tutorial/TutorialModule.js","../../src/components/tutorial/InteractiveElement.js","../../src/components/tutorial/modules/GolfBasicsModule.js","../../src/components/tutorial/modules/GameOverviewModule.js","../../src/components/tutorial/modules/TeamFormationModule.js","../../src/components/tutorial/modules/BettingSystemModule.js","../../src/components/tutorial/modules/AdvancedRulesModule.js","../../src/components/tutorial/modules/AnalysisToolsModule.js","../../src/components/tutorial/modules/PracticeGameModule.js","../../src/components/tutorial/TutorialSystem.js","../zod/v3/helpers/typeAliases.d.cts","../zod/v3/helpers/util.d.cts","../zod/v3/index.d.cts","../zod/v3/ZodError.d.cts","../zod/v3/locales/en.d.cts","../zod/v3/errors.d.cts","../zod/v3/helpers/parseUtil.d.cts","../zod/v3/helpers/enumUtil.d.cts","../zod/v3/helpers/errorUtil.d.cts","../zod/v3/helpers/partialUtil.d.cts","../zod/v3/standard-schema.d.cts","../zod/v3/types.d.cts","../zod/v3/external.d.cts","../zod/index.d.cts","../ghin/dist/index.d.ts","../../src/services/ghinService.js","../../src/components/WGPAnalyticsDashboard.js","../../src/components/SheetIntegrationDashboard.js","../../src/components/GoogleSheetsLiveSync.js","../../src/components/Leaderboard.js","../../src/context/MockAuthContext.js","../../src/pages/HomePage.js","../../src/pages/SetupPage.js","../../src/pages/GamePage.js","../../src/pages/index.js","../../src/components/signup/SignupCalendar.js","../../src/components/signup/DailySignupView.js","../../src/components/signup/PlayerAvailability.js","../../src/components/signup/AllPlayersAvailability.js","../../src/components/signup/MatchmakingSuggestions.js","../../src/components/signup/EmailPreferences.js","../../src/pages/SignupPage.js","../../src/pages/AboutPage.js","../../src/pages/RulesPage.js","../../src/pages/AdminPage.js","../../src/components/Navigation.js","../../src/App.js","../../src/index.js","../@types/node/ts5.1/compatibility/disposable.d.ts","../@types/node/ts5.6/compatibility/float16array.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/ts5.6/globals.typedarray.d.ts","../@types/node/ts5.6/buffer.buffer.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/globals.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/dom-events.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/ts5.1/index.d.ts","../collect-v8-coverage/index.d.ts","../@types/istanbul-lib-coverage/index.d.ts","../@jest/console/build/types.d.ts","../@jest/console/build/BufferedConsole.d.ts","../@jest/console/build/CustomConsole.d.ts","../@jest/console/build/NullConsole.d.ts","../@jest/types/build/Global.d.ts","../@jest/types/build/Circus.d.ts","../chalk/index.d.ts","../@types/istanbul-lib-report/index.d.ts","../@types/istanbul-reports/index.d.ts","../@types/yargs-parser/index.d.ts","../@types/yargs/index.d.ts","../@jest/types/build/Config.d.ts","../@jest/types/build/TestResult.d.ts","../@jest/types/build/Transform.d.ts","../@jest/types/build/index.d.ts","../@types/stack-utils/index.d.ts","../jest-message-util/build/types.d.ts","../jest-message-util/build/index.d.ts","../@jest/console/build/getConsoleOutput.d.ts","../@jest/console/build/index.d.ts","../@types/graceful-fs/index.d.ts","../jest-haste-map/build/HasteFS.d.ts","../jest-haste-map/build/types.d.ts","../jest-haste-map/build/ModuleMap.d.ts","../jest-haste-map/build/index.d.ts","../jest-resolve/build/ModuleNotFoundError.d.ts","../jest-resolve/build/shouldLoadAsEsm.d.ts","../jest-resolve/build/types.d.ts","../jest-resolve/build/resolver.d.ts","../jest-resolve/build/utils.d.ts","../jest-resolve/build/index.d.ts","../@jest/test-result/build/types.d.ts","../@jest/test-result/build/formatTestResults.d.ts","../@jest/test-result/build/helpers.d.ts","../@jest/test-result/build/index.d.ts","../jest-changed-files/build/types.d.ts","../jest-changed-files/build/index.d.ts","../jest-mock/build/index.d.ts","../@jest/fake-timers/build/legacyFakeTimers.d.ts","../@jest/fake-timers/build/modernFakeTimers.d.ts","../@jest/fake-timers/build/index.d.ts","../@jest/environment/build/index.d.ts","../jest-diff/build/cleanupSemantic.d.ts","../pretty-format/build/types.d.ts","../pretty-format/build/index.d.ts","../jest-diff/build/types.d.ts","../jest-diff/build/diffLines.d.ts","../jest-diff/build/printDiffs.d.ts","../jest-diff/build/index.d.ts","../jest-matcher-utils/build/index.d.ts","../expect/build/jestMatchersObject.d.ts","../expect/build/types.d.ts","../expect/build/index.d.ts","../@jest/globals/build/index.d.ts","../callsites/index.d.ts","../@jest/source-map/build/types.d.ts","../@jest/source-map/build/getCallsite.d.ts","../@jest/source-map/build/index.d.ts","../@jest/transform/node_modules/source-map/source-map.d.ts","../@jest/transform/build/types.d.ts","../@jest/transform/build/ScriptTransformer.d.ts","../@jest/transform/build/shouldInstrument.d.ts","../@jest/transform/build/enhanceUnexpectedTokenMessage.d.ts","../@jest/transform/build/index.d.ts","../jest-runtime/build/types.d.ts","../jest-runtime/build/index.d.ts","../@jest/core/build/types.d.ts","../@jest/core/build/SearchSource.d.ts","../@jest/reporters/build/getResultHeader.d.ts","../@jest/reporters/build/generateEmptyCoverage.d.ts","../@jest/reporters/build/CoverageWorker.d.ts","../@jest/reporters/build/types.d.ts","../@jest/reporters/build/BaseReporter.d.ts","../@jest/reporters/build/CoverageReporter.d.ts","../@jest/reporters/build/DefaultReporter.d.ts","../@jest/reporters/build/NotifyReporter.d.ts","../@jest/reporters/build/SummaryReporter.d.ts","../@jest/reporters/build/VerboseReporter.d.ts","../@jest/reporters/build/index.d.ts","../emittery/index.d.ts","../@jest/core/build/TestWatcher.d.ts","../@jest/core/build/TestScheduler.d.ts","../@jest/core/build/cli/index.d.ts","../@jest/core/build/version.d.ts","../@jest/core/build/jest.d.ts","../jest-cli/build/cli/index.d.ts","../jest-cli/build/index.d.ts","../jest/build/jest.d.ts","../@types/aria-query/index.d.ts","../@testing-library/jest-dom/types/matchers.d.ts","../@testing-library/jest-dom/types/jest.d.ts","../@testing-library/jest-dom/types/index.d.ts","../../src/setupTests.js","../../src/__mocks__/react-router-dom.js","../../src/__tests__/fixtures/gameFixtures.js","../@testing-library/dom/types/matches.d.ts","../@testing-library/dom/types/wait-for.d.ts","../@testing-library/dom/types/query-helpers.d.ts","../@testing-library/dom/types/queries.d.ts","../@testing-library/dom/types/get-queries-for-element.d.ts","../@testing-library/dom/types/screen.d.ts","../@testing-library/dom/types/wait-for-element-to-be-removed.d.ts","../@testing-library/dom/types/get-node-text.d.ts","../@testing-library/dom/types/events.d.ts","../@testing-library/dom/types/pretty-dom.d.ts","../@testing-library/dom/types/role-helpers.d.ts","../@testing-library/dom/types/config.d.ts","../@testing-library/dom/types/suggestions.d.ts","../@testing-library/dom/types/index.d.ts","../@testing-library/react/types/index.d.ts","../../src/__tests__/utils/testHelpers.js","../../src/components/EmailSettings.js","../../src/components/GHINIntegration.js","../../src/hooks/usePlayerProfile.js","../../src/components/GameStatsTracker.js","../../src/components/PerformanceAnalytics.js","../../src/components/PlayerStatistics.js","../@testing-library/user-event/dist/types/event/eventMap.d.ts","../@testing-library/user-event/dist/types/event/types.d.ts","../@testing-library/user-event/dist/types/event/dispatchEvent.d.ts","../@testing-library/user-event/dist/types/event/focus.d.ts","../@testing-library/user-event/dist/types/event/input.d.ts","../@testing-library/user-event/dist/types/utils/click/isClickableInput.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Blob.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/DataTransfer.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/FileList.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Clipboard.d.ts","../@testing-library/user-event/dist/types/utils/edit/timeValue.d.ts","../@testing-library/user-event/dist/types/utils/edit/isContentEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/isEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/maxLength.d.ts","../@testing-library/user-event/dist/types/utils/edit/setFiles.d.ts","../@testing-library/user-event/dist/types/utils/focus/cursor.d.ts","../@testing-library/user-event/dist/types/utils/focus/getActiveElement.d.ts","../@testing-library/user-event/dist/types/utils/focus/getTabDestination.d.ts","../@testing-library/user-event/dist/types/utils/focus/isFocusable.d.ts","../@testing-library/user-event/dist/types/utils/focus/selection.d.ts","../@testing-library/user-event/dist/types/utils/focus/selector.d.ts","../@testing-library/user-event/dist/types/utils/keyDef/readNextDescriptor.d.ts","../@testing-library/user-event/dist/types/utils/misc/cloneEvent.d.ts","../@testing-library/user-event/dist/types/utils/misc/findClosest.d.ts","../@testing-library/user-event/dist/types/utils/misc/getDocumentFromNode.d.ts","../@testing-library/user-event/dist/types/utils/misc/getTreeDiff.d.ts","../@testing-library/user-event/dist/types/utils/misc/getWindow.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDescendantOrSelf.d.ts","../@testing-library/user-event/dist/types/utils/misc/isElementType.d.ts","../@testing-library/user-event/dist/types/utils/misc/isVisible.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDisabled.d.ts","../@testing-library/user-event/dist/types/utils/misc/level.d.ts","../@testing-library/user-event/dist/types/utils/misc/wait.d.ts","../@testing-library/user-event/dist/types/utils/pointer/cssPointerEvents.d.ts","../@testing-library/user-event/dist/types/utils/index.d.ts","../@testing-library/user-event/dist/types/document/UI.d.ts","../@testing-library/user-event/dist/types/document/getValueOrTextContent.d.ts","../@testing-library/user-event/dist/types/document/copySelection.d.ts","../@testing-library/user-event/dist/types/document/trackValue.d.ts","../@testing-library/user-event/dist/types/document/index.d.ts","../@testing-library/user-event/dist/types/event/selection/getInputRange.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelection.d.ts","../@testing-library/user-event/dist/types/event/selection/moveSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/selectAll.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionRange.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/updateSelectionOnFocus.d.ts","../@testing-library/user-event/dist/types/event/selection/index.d.ts","../@testing-library/user-event/dist/types/event/index.d.ts","../@testing-library/user-event/dist/types/system/pointer/buttons.d.ts","../@testing-library/user-event/dist/types/system/pointer/shared.d.ts","../@testing-library/user-event/dist/types/system/pointer/index.d.ts","../@testing-library/user-event/dist/types/system/index.d.ts","../@testing-library/user-event/dist/types/system/keyboard.d.ts","../@testing-library/user-event/dist/types/options.d.ts","../@testing-library/user-event/dist/types/convenience/click.d.ts","../@testing-library/user-event/dist/types/convenience/hover.d.ts","../@testing-library/user-event/dist/types/convenience/tab.d.ts","../@testing-library/user-event/dist/types/convenience/index.d.ts","../@testing-library/user-event/dist/types/keyboard/index.d.ts","../@testing-library/user-event/dist/types/clipboard/copy.d.ts","../@testing-library/user-event/dist/types/clipboard/cut.d.ts","../@testing-library/user-event/dist/types/clipboard/paste.d.ts","../@testing-library/user-event/dist/types/clipboard/index.d.ts","../@testing-library/user-event/dist/types/pointer/index.d.ts","../@testing-library/user-event/dist/types/utility/clear.d.ts","../@testing-library/user-event/dist/types/utility/selectOptions.d.ts","../@testing-library/user-event/dist/types/utility/type.d.ts","../@testing-library/user-event/dist/types/utility/upload.d.ts","../@testing-library/user-event/dist/types/utility/index.d.ts","../@testing-library/user-event/dist/types/setup/api.d.ts","../@testing-library/user-event/dist/types/setup/directApi.d.ts","../@testing-library/user-event/dist/types/setup/setup.d.ts","../@testing-library/user-event/dist/types/setup/index.d.ts","../@testing-library/user-event/dist/types/index.d.ts","../../src/components/__tests__/BettingOddsPanel.test.js","../../src/components/__tests__/GameDashboard.test.js","../../src/components/__tests__/Navigation.test.js","../../src/components/__tests__/NewComponents.test.js","../../src/components/__tests__/PerformanceAnalytics.test.js","../../src/components/__tests__/PlayerProfileManager.test.js","../../src/components/__tests__/ShotAnalysisWidget.test.js","../../src/components/__tests__/ShotVisualizationOverlay.test.js","../../src/components/__tests__/UnifiedGameInterface.integration.test.js","../../src/components/__tests__/WGPAnalyticsDashboard.test.js","../../src/components/analytics/PostHoleAnalytics.js","../../src/components/email/EmailSettings.js","../../src/components/game/TVPokerLayout.js","../../src/components/game/__tests__/UnifiedGameInterface.test.js","../../src/components/practice/EnhancedPracticeMode.js","../../src/components/signup/__tests__/AllPlayersAvailability.test.js","../../src/components/signup/__tests__/MatchmakingSuggestions.test.js","../../src/components/signup/__tests__/PlayerAvailability.test.js","../../src/components/simulation/GameSetup.tsx","../../src/components/simulation/__tests__/GamePlay.test.js","../../src/components/simulation/__tests__/GameSetup.test.js","../../src/components/simulation/__tests__/SimulationMode.probabilities.test.js","../../src/components/simulation/__tests__/SimulationMode.test.js","../../src/components/tutorial/index.js","../../src/components/tutorial/__tests__/InteractiveElement.test.js","../../src/components/tutorial/__tests__/ProgressTracker.test.js","../../src/components/tutorial/__tests__/TutorialSystem.test.js","../../src/components/tutorial/__tests__/hooks.test.js","../../src/components/ui/__tests__/Button.test.js","../../src/components/ui/__tests__/UIComponents.test.js","../../src/context/__tests__/GameProvider.shotProbabilities.test.js","../../src/context/__tests__/GameProvider.test.js","../../src/hooks/useAuth.js","../../src/hooks/useGameApi.js","../../src/hooks/usePostHoleAnalytics.js","../../src/hooks/useSimulationApi.js","../../src/hooks/__tests__/usePlayerProfile.test.js","../../src/pages/__tests__/AboutPage.test.js","../../src/pages/__tests__/AdminPage.test.js","../../src/pages/__tests__/GamePage.test.js","../../src/pages/__tests__/HomePage.test.js","../../src/pages/__tests__/RulesPage.test.js","../../src/pages/__tests__/SetupPage.test.js","../../src/pages/__tests__/SignupPage.test.js","../../src/utils/__tests__/api.test.js","../@babel/types/lib/index.d.ts","../@types/babel__generator/index.d.ts","../@babel/parser/typings/babel-parser.d.ts","../@types/babel__template/index.d.ts","../@types/babel__traverse/index.d.ts","../@types/babel__core/index.d.ts","../@types/connect/index.d.ts","../@types/body-parser/index.d.ts","../@types/bonjour/index.d.ts","../@types/mime/index.d.ts","../@types/send/index.d.ts","../@types/qs/index.d.ts","../@types/range-parser/index.d.ts","../@types/express-serve-static-core/index.d.ts","../@types/connect-history-api-fallback/index.d.ts","../@types/eslint/helpers.d.ts","../@types/estree/index.d.ts","../@types/json-schema/index.d.ts","../@types/eslint/index.d.ts","../@types/eslint-scope/index.d.ts","../@types/http-errors/index.d.ts","../@types/serve-static/index.d.ts","../@types/express/node_modules/@types/express-serve-static-core/index.d.ts","../@types/express/index.d.ts","../@types/html-minifier-terser/index.d.ts","../@types/http-proxy/index.d.ts","../@types/json5/index.d.ts","../@types/node-forge/index.d.ts","../@types/parse-json/index.d.ts","../@types/prettier/index.d.ts","../@types/q/index.d.ts","../@types/resolve/index.d.ts","../@types/retry/index.d.ts","../@types/semver/classes/semver.d.ts","../@types/semver/functions/parse.d.ts","../@types/semver/functions/valid.d.ts","../@types/semver/functions/clean.d.ts","../@types/semver/functions/inc.d.ts","../@types/semver/functions/diff.d.ts","../@types/semver/functions/major.d.ts","../@types/semver/functions/minor.d.ts","../@types/semver/functions/patch.d.ts","../@types/semver/functions/prerelease.d.ts","../@types/semver/functions/compare.d.ts","../@types/semver/functions/rcompare.d.ts","../@types/semver/functions/compare-loose.d.ts","../@types/semver/functions/compare-build.d.ts","../@types/semver/functions/sort.d.ts","../@types/semver/functions/rsort.d.ts","../@types/semver/functions/gt.d.ts","../@types/semver/functions/lt.d.ts","../@types/semver/functions/eq.d.ts","../@types/semver/functions/neq.d.ts","../@types/semver/functions/gte.d.ts","../@types/semver/functions/lte.d.ts","../@types/semver/functions/cmp.d.ts","../@types/semver/functions/coerce.d.ts","../@types/semver/classes/comparator.d.ts","../@types/semver/classes/range.d.ts","../@types/semver/functions/satisfies.d.ts","../@types/semver/ranges/max-satisfying.d.ts","../@types/semver/ranges/min-satisfying.d.ts","../@types/semver/ranges/to-comparators.d.ts","../@types/semver/ranges/min-version.d.ts","../@types/semver/ranges/valid.d.ts","../@types/semver/ranges/outside.d.ts","../@types/semver/ranges/gtr.d.ts","../@types/semver/ranges/ltr.d.ts","../@types/semver/ranges/intersects.d.ts","../@types/semver/ranges/simplify.d.ts","../@types/semver/ranges/subset.d.ts","../@types/semver/internals/identifiers.d.ts","../@types/semver/index.d.ts","../@types/serve-index/index.d.ts","../@types/sockjs/index.d.ts","../@types/trusted-types/lib/index.d.ts","../@types/trusted-types/index.d.ts","../@types/ws/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9","746d62152361558ea6d6115cf0da4dd10ede041d14882ede3568bce5dc4b4f1f","d11a03592451da2d1065e09e61f4e2a9bf68f780f4f6623c18b57816a9679d17","aea179452def8a6152f98f63b191b84e7cbd69b0e248c91e61fb2e52328abe8c",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"f3d4da15233e593eacb3965cde7960f3fddf5878528d882bcedd5cbaba0193c7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"6c55633c733c8378db65ac3da7a767c3cf2cf3057f0565a9124a16a3a2019e87","affectsGlobalScope":true},{"version":"fb4416144c1bf0323ccbc9afb0ab289c07312214e8820ad17d709498c865a3fe","affectsGlobalScope":true},{"version":"5b0ca94ec819d68d33da516306c15297acec88efeb0ae9e2b39f71dbd9685ef7","affectsGlobalScope":true},{"version":"34c839eaaa6d78c8674ae2c37af2236dee6831b13db7b4ef4df3ec889a04d4f2","affectsGlobalScope":true},{"version":"34478567f8a80171f88f2f30808beb7da15eac0538ae91282dd33dce928d98ed","affectsGlobalScope":true},{"version":"ab7d58e6161a550ff92e5aff755dc37fe896245348332cd5f1e1203479fe0ed1","affectsGlobalScope":true},{"version":"6bda95ea27a59a276e46043b7065b55bd4b316c25e70e29b572958fa77565d43","affectsGlobalScope":true},{"version":"aedb8de1abb2ff1095c153854a6df7deae4a5709c37297f9d6e9948b6806fa66","affectsGlobalScope":true},{"version":"a4da0551fd39b90ca7ce5f68fb55d4dc0c1396d589b612e1902f68ee090aaada","affectsGlobalScope":true},{"version":"11ffe3c281f375fff9ffdde8bbec7669b4dd671905509079f866f2354a788064","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"bf237922b06c558ee82c997549c28541d2e4c60a7c449c635cd7116663bff11b","ec646851bb3302d774d4fbec3555fdf0cea4dc30a7f2c663d66387653abecdd6","5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd",{"version":"7f9844af49faece125da77aa099fd5c1da64270e31b414edef84f159a15f61b7","affectsGlobalScope":true},"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","fcc9e6f2da1759e4abe577f938f7d6eec119963abae917c290913a537cf8cd89","67b56598de49ea49e177ed09417ec97c642775a4fe73259df996923517eb652d","98d8c2cce0da7f218eda38d46b3d715adfb4c99c59ad67dbe0fd105113292f9f","d562cf993f138dc03c5b1aed57d7d80e96555ce41365e0e79db9b93a0b49a6b2","4e7fded78c59e63cc94cd8c0c920b287b885ae0512c412e0f7a890b0d700bc3d","7fc1326aae51ca02c357b8391270858387cce4afa9928d6580a42119dfcca9eb","a95d033d647339e3932fd15c01ae763c0e6fba915418c01b2fb1b1d4063a6d7f","9ec473f428d74650f0ce05b81e6a27fc84906a36838fd11875fcae5193f3cbbb","acdd8a10fac8748502509cb57bdd53a7c5b85fa4a2ee3a560c00a40404ff65cb","59bd81abd493fa554955bf7dd7006273192ea8d553d3e4a819e866a14725cdfe","a29acac88d5df222deeb58568f2e56b42075d9b043b4f158b7a55a8eed18985f","56d09baa6411529b9edfed10d627aa294412c3aa33d26e1254b8f1422ecfbfd9","31feea0066a629bfcacfc80bd5ec1551d26cf7a8dad949dc24cde82307748a45","b23ee85f4ae6affbd6d92df4a305756b2d7a7d687108bac625b83d662aabe063","c541b4b619ff47a8f1d2e242f69cab2f1490797934a31b9d15fe1b9d59183626","10f0161e27ec211a27512406022e5381ee1eff148c356579a07392c1cab67205","50d0abf4fb3d7fa0d929459ec9560f6761eb9e80bc568e6367868f6402fae0b5","4be1e84f8a23aa1c9b37669820a5dc6c0d664131c2549b54b40ec225abcff77c","2d6acf4fe93fb92f0259c6bbed436112c7daf0ad9e1318f2f0bd2613083261f0","58024638b80b48562cce5f0e5f65ce5924a2309224400787a4e40dea0ce3c7f4","ed7ed4acdc5b5e7f531cb8a2b62cadc0a8a88d054637965ba585a370f3538dbc","59453dd1a944cc11ef41fc0e21d4afaa4906eb4015fc605b423776ab26be5c35","12bb43d7c61d1b5e4340ed3599bbdcdd8d781994f08a94f010c88d4d26f285bb","f40d60f92714d69e75d0f03e3b51acbe2ff52064dd0e4774fa818ff72f043ea4","797cfbacb483d815b7819b3cf867533af99a630f2beea11cc26592b0c2d42cb1","4b26040bc29ea84ee18561c65d6994a07cfb168240c5bda0eb04bfb48190b219","06709b34a5d72762ab905843ac3443277ab884dc32fce8b3b0d51bcdb5064b74","cbb6fbcffa54cb81308247f17b64f1cb22ca015fba420fdb7c2c61c3a2adfcda","d37a6f1e29ec3244911f7d28cf815251ef113387c8618426acdab8d153940bbc","0e0af8c8426a911142d13768859c1b49e120f60bb153ce6dd197e30f9b8b6820","87e68d28db4ab68bfa35d6d1b57ea233d90e1c678f3da187f796075ff3a8e85d","afdf59e4068da139bff61ba0887ae9c76f46373f95932efd54ee7910b6502a1a","b07d57ba8d3e203d16450dd2426270030368821d3d418b291a05801a362d4d99","ecd8abab263e35cda153af96d4f29c711ff477a4c2bd81698cdfc727836547e3","e9a208aad09ea42f46bdd52d309774b73e7a02762281c51377973025a9cb7250","d264ffe701d5be437313c4f6f7d8f27ce029fc5cc3c51e42e9b60bed6d943e34","d2dcfbb9046a3f918ba22ebc91310f31606cebca173944df0544dc14ed26939a","2bef42b3474c69a11119442d099d6ee4952a9e1ee2674a76df68e67ee853c9f8","0880a3c557fb7ce460173df4c71dc39365359c053da107caad5fbe03a249c69e","f636742cc740b78907aa1010d1fc25cd7d2e5966a3aa149d74ce9370627ff852","b8ef751a4bad89dfe59fa19218e89bdb5c74e6cba080bdbee9921e1c9bf4a615","930d085f4aaabd1cc8d0f4f4837d13e04e948e77c8cf97a2e64c997088fbffcf","df1fd1099460e2d762f69fccb745265e72c14b8048f3e7de60767bbf714f6ad0","dba7c59c1095d9d149ec234ad3846af7fcb0bf6c11822f76d78c19fd0e086473","de378d46014d3f7e673fecf74f8d02bc27a30ffd85ca378927fba171f83f2f66","ec8924ce154b4a9dc676762fd43a7f785fc2cb6a21a0250b34216c8ed757f0bd","6da8dd746a2c6c74c7a874d809f62f908439319fed0505b579774066ce551bcb","a0cbce32b63aa070e5f4aa15e918886492e71c9753426d573e8a9deac1dd8abe","2431e657962c860594400df7d3c49f3c6eefb7e193f158bd9e7f0f965256a33c","30e5961d52cdabbbdaa5169c3c71a77a5aa0f8ac70ebb1f250f6fdaa2007ed3d","37e82fceaba98ef3038072809e67d0b8ed4b37c3a4aa82ed7dbf48676bf2750e","3fa0235c0ee6318d87108b06d6f922f525dcf039a32231d1667b96e202a8b009","5b7c7e06d9f383a1ee8d3b700c4d1419331f4166aa340c7788a35bec98331f34","2df3bf27c69b2c5d47b17649447817b802ad9166d31bfb7c33806195c03a8d83","ee235306953241273af6e40d709d4097476ecb599229473fb55b461288ed1993","2bef48831eaf4bf89166732f51f741488205c30f5184adc03a34a63a6c9a70bd","5fb0a11bc0cb66afc528b180067199bc542c46f6fd95649c3137f3a94bf8412b","6b6814ee731c1e6ee609b98086b273d1aa13333182edd24be8be569c7b7d07df","18cce8e15d2846c71faa2543b08b70b1c04bac9a26427eb98a4e0bad24976a90","ab3a5590e693ad5fb0a1a19c17e2b01258c88fe4617a4cae9d4058cc18946d08","8b4025f2c3f2aed06120f2d20f55d5bc10a06c7a40e058eafe13af9240f85c7c","698972a628b6dbbc1d4d917d422b56e429501ec8758270e527c70401227d094a","212e0c8f420a4c1866546cb7d50ba94537c25aaa715e84685d8995798125b9b9","39b74fe9bd08e3154f281117a5fe5bfa6b1afdfe8556eda1fc82428828329fd4","8b80893422089fff8f07496f4f66f1207847f6a9645c88d75c2877fabd453f11","cf41eb0cb37e385c1d777bdfefc05f0617857fd72d3a455d6d4f81e5e31a397f","583b9e0633074c66e97445426ac0b07bdb388f87e92449baae08cd5ab9cbf846","07646330c0cf3e5429bf2fce8647b0369a9cef8dc9b7a327e2ff47c4d1b916e3","eb277e8bb50c4fbc16ac5e8238b88880626f3ad672d7af92f2d29eaa522a9399","bfdff632c328e37b1946e1b6d7120933c145fac5a6eed6c8adaba5f5e56e64e3","b04f1498e13102326e1968fac4c2d37ca0c2b7abd76812892d9496151083aa91","c413aa82126a73c6280ce1177d151c01640790b5913e6ac80b62b0cce0ebaed3","93436c1aebb65cf409cf9879764d584439bbccc2f87e05763c30b70ead288013","2bbe03e00b2dd6db70bee6237f166c7fbc2b6e301918b3e9a6b62cf0df6eb370","522b79a823b5d466fbfe86cd25473045a8ad45f2a9b9df00e19fe5f3d00ab635","db17b27cc4514d286387592824d7bd39dea6737b799787d72acaa6556d40092e","0d6d484d91ba60f459fc8fcb35d08f6791711f05c8156bb6fc17b0a6fca81541","7bfc9cdd904b12b8f14d2160a092c90afd13cedffe96b8b50a71806431a01873","4981a6995ea12a015408f795188b03a7476c5148b051ea55126a82b62e06708f","843b27075f3ed5a868bad8c9f29b9d275f8a61b3e3c4e760ff6d64e1bf9a6f9c","3c54e9f8641d69914fbda6cac089757a412fb904f0a075dbc65bce568f4a90b7","472d9a32c8571cbfbddbe80686e464464ab008caa48c65677b0d35a0e506d06c","9daca9b36125be1487105a71756caff00669c1871a01209f63b3f9285c5503ec","9567454f4649cdcd899ec3328e8ddf843e0cfd59b832b3e23879d56ca4fadb35","2687e7d974ad531a64538810770312b81193fb7f143cd09fa89e05aad414cb55","c00565777871b6d76d065c51af1d2fbc414f8804498f8692861f0ef3759d8812","12a3233962e3103fd3e4f4de0c26e0f17cd7c3d37b0aaa0743b8dcc7038d0e33","4da29c03d43f81993290813ab4d7b3d29812ce0cc1ccfce9784d076f726fe753","fb58a4485f54c463027b36c4843098de5fdb536594f49ed81f783252561f77f6","6c09333a0c899f83c1444a379ebdcebeea8fd6b25fc6bec2e0e1e5724bcdecc5","ec85cf13bd5d52a3b29672c8d5509e0d6478721d814d933578fc769e82ac7f2d","939c575afa1e1720c9cafcf09d5ad218f7ffcc36743b7cf33581dff722fde7fc","315000295ec26a0a60741a2021d3b84b8f2cc2b8f636de5851436f7464f7ab98","b7956653d6f5d55877326e67cedd538243d9953819e019242502c432381fcee5","d655eefdb3a03cdab08a7d48ff49f42feef1974b3702a1b3010888d51e2428f5","8bd215328a9fd468ffa6f0c1bec8727e9081eadcc4659f3ea56b2e54412a4cc9","d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","833e92c058d033cde3f29a6c7603f517001d1ddd8020bc94d2067a3bc69b2a8e","08b2fae7b0f553ad9f79faec864b179fc58bc172e295a70943e8585dd85f600c","f12edf1672a94c578eca32216839604f1e1c16b40a1896198deabf99c882b340","e3498cf5e428e6c6b9e97bd88736f26d6cf147dedbfa5a8ad3ed8e05e059af8a","dba3f34531fd9b1b6e072928b6f885aa4d28dd6789cbd0e93563d43f4b62da53","f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","2329d90062487e1eaca87b5e06abcbbeeecf80a82f65f949fd332cfcf824b87b","25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","4fdb529707247a1a917a4626bfb6a293d52cd8ee57ccf03830ec91d39d606d6d","a9ebb67d6bbead6044b43714b50dcb77b8f7541ffe803046fdec1714c1eba206","5780b706cece027f0d4444fbb4e1af62dc51e19da7c3d3719f67b22b033859b9","7253b2045ea6b599d85ef9dd7ce2bf5439a1a98a27f078ba2115bedf61d738c7","ca58ededf2c0cd0563e8d83fef922817ff2a1ed9bd750242b17146354c1c5243","9d34b57d308ce327e484887106e68e2a82beaf263fea298e4ada5b3925ccbb8d","fe1f945db9c3cb35788d028ce9338b06256cd6041f2597668b9359f2b4fd4197","641fe481fff812b6a151b7fe0996468ced591244c6682b6ba2610b0bf016a9c6","63e5f3ffc50b8c29acf5396c0468a290c927cb7a5208ffb74add35670867e476","06c3f71832c76a82329b45610793b56d0b78fb02603d90f8a7629f49cb0dec1f","ca586208341738cb5e6d144536d83f91d96856c5828307088d242d52e4d439d4","fde0e854df7095db9f8b5cbe3804845a437750ff3c9edcaf2572e66885b230a3","6a63ec446b7fda7a8f1307c1a4659d6b8d1c617400b46d6b49f3d97ddfa93905","c461e128927c8492fff179d344735023ae189c4b626af91adb7b63c6c4b7248f","6b2706a5cee62ef25fdb7a9a268f558a15de9df894984ed13a07c8318576ef51","353fe785452a3c2d6ff2a41fb0684bd2878e78f3728fc5dae98634ccfaa9beae","521bbccf0edf1f69c488c6828716bdfb04acb69ea3ee5e3b7140bfa22ed6c342","dfdb07c32025c9aac5707797e48c46c8fc1416c3c3a5cab9677a75ab78a787ae","e1e115f590a02130c539f61c20460291711dccbdaa3fe4bbad43ab770dd4306e","e4fe42173b249ff533174cfbde4510ce5345da50c2f717b3ca27eda49929dad1","0dbd184576784dbc0b0caa1f022bbb1024a4f27b77e9bf5738c73841c218f4ab","17023bb4eba80df5152e45fa10ec0fa4105fa1c59cb30a51d5724c77cf041151","05b84716272aee3042dbeb319aa5b1ff5b8e77b62ae24be00b88cf8e04cab4a2","86d850e3572c2ed8f56d73a1ce7c5c4f3ea5a62170b82db65f3055f73614099d","4ab4cb977736067eda6f2ff73e521424a818319a1a70616ad2db2ba0b9dd5322","fa790e874499cb17016556f3168948f8d751dcb35a0862a9b9c55bb2ec353d48","795692a29dca5a39f904825a4abc78f9acc3a54ecc6858d8a268c52679f21751",{"version":"6876211ece0832abdfe13c43c65a555549bb4ca8c6bb4078d68cf923aeb6009e","affectsGlobalScope":true},{"version":"394fda71d5d6bd00a372437dff510feab37b92f345861e592f956d6995e9c1ce","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},{"version":"c564fc7c6f57b43ebe0b69bc6719d38ff753f6afe55dadf2dba36fb3558f39b6","affectsGlobalScope":true},{"version":"109b9c280e8848c08bf4a78fff1fed0750a6ca1735671b5cf08b71bae5448c03","affectsGlobalScope":true},"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","e525f9e67f5ddba7b5548430211cae2479070b70ef1fd93550c96c10529457bd","ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","17fe9131bec653b07b0a1a8b99a830216e3e43fe0ea2605be318dc31777c8bbf","3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","2c9875466123715464539bfd69bcaccb8ff6f3e217809428e0d7bd6323416d01","ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","2472ef4c28971272a897fdb85d4155df022e1f5d9a474a526b8fc2ef598af94e","6c8e442ba33b07892169a14f7757321e49ab0f1032d676d321a1fdab8a67d40c","b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","19851a6596401ca52d42117108d35e87230fc21593df5c4d3da7108526b6111c","3825bf209f1662dfd039010a27747b73d0ef379f79970b1d05601ec8e8a4249f","0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","40bfc70953be2617dc71979c14e9e99c5e65c940a4f1c9759ddb90b0f8ff6b1a","da52342062e70c77213e45107921100ba9f9b3a30dd019444cf349e5fb3470c4","e9ace91946385d29192766bf783b8460c7dbcbfc63284aa3c9cae6de5155c8bc","40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","561c60d8bfe0fec2c08827d09ff039eca0c1f9b50ef231025e5a549655ed0298","1e30c045732e7db8f7a82cf90b516ebe693d2f499ce2250a977ec0d12e44a529","84b736594d8760f43400202859cda55607663090a43445a078963031d47e25e7","499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","e38d4fdf79e1eadd92ed7844c331dbaa40f29f21541cfee4e1acff4db09cda33","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","7c10a32ae6f3962672e6869ee2c794e8055d8225ef35c91c0228e354b4e5d2d3","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e",{"version":"f4b4faedc57701ae727d78ba4a83e466a6e3bdcbe40efbf913b17e860642897c","affectsGlobalScope":true},"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7",{"version":"003ec918ec442c3a4db2c36dc0c9c766977ea1c8bcc1ca7c2085868727c3d3f6","affectsGlobalScope":true},"938f94db8400d0b479626b9006245a833d50ce8337f391085fad4af540279567","c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c",{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true},"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a",{"version":"12fb9c13f24845000d7bd9660d11587e27ef967cbd64bd9df19ae3e6aa9b52d4","affectsGlobalScope":true},"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","5078cd62dbdf91ae8b1dc90b1384dec71a9c0932d62bdafb1a811d2a8e26bef2","a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c",{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true},"2f32444438ecb1fa4519f6ec3977d69ce0e3acfa18b803e5cd725c204501f350","0ab3c844f1eb5a1d94c90edc346a25eb9d3943af7a7812f061bf2d627d8afac0","b0a84d9348601dbc217017c0721d6064c3b1af9b392663348ba146fdae0c7afd","161f09445a8b4ba07f62ae54b27054e4234e7957062e34c6362300726dabd315","77fced47f495f4ff29bb49c52c605c5e73cd9b47d50080133783032769a9d8a6","e6057f9e7b0c64d4527afeeada89f313f96a53291705f069a9193c18880578cb",{"version":"34ecb9596317c44dab586118fb62c1565d3dad98d201cd77f3e6b0dde453339c","affectsGlobalScope":true},"0f5cda0282e1d18198e2887387eb2f026372ebc4e11c4e4516fef8a19ee4d514","e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86",{"version":"237581f5ec4620a17e791d3bb79bad3af01e27a274dbee875ac9b0721a4fe97d","affectsGlobalScope":true},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true},"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","e6d81b1f7ab11dc1b1ad7ad29fcfad6904419b36baf55ed5e80df48d56ac3aff","1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","b6b8e3736383a1d27e2592c484a940eeb37ec4808ba9e74dd57679b2453b5865","d6f36b683c59ac0d68a1d5ee906e578e2f5e9a285bca80ff95ce61cdc9ddcdeb","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093",{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true},"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","b338a6e6c1d456e65a6ea78da283e3077fe8edf7202ae10490abbba5b952b05e",{"version":"2918b7c516051c30186a1055ebcdb3580522be7190f8a2fff4100ea714c7c366","affectsGlobalScope":true},"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","982efeb2573605d4e6d5df4dc7e40846bda8b9e678e058fc99522ab6165c479e","e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055",{"version":"d67fc92a91171632fc74f413ce42ff1aa7fbcc5a85b127101f7ec446d2039a1f","affectsGlobalScope":true},{"version":"d40e4631100dbc067268bce96b07d7aff7f28a541b1bfb7ef791c64a696b3d33","affectsGlobalScope":true},"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","42180b657831d1b8fead051698618b31da623fb71ff37f002cb9d932cfa775f1","4f98d6fb4fe7cbeaa04635c6eaa119d966285d4d39f0eb55b2654187b0b27446",{"version":"e4c653466d0497d87fa9ffd00e59a95f33bc1c1722c3f5c84dab2e950c18da70","affectsGlobalScope":true},"e6dcc3b933e864e91d4bea94274ad69854d5d2a1311a4b0e20408a57af19e95d","2119ab23f794e7b563cc1a005b964e2f59b8ebcb3dfe2ce61d0c782bfd5e02a2","0fd641a3b3e3ec89058051a284135a3f30b94a325fb809c4e4159ec5495b5cdc","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","e66eb237e7629bdc09f5f99fd69b73a0511fafb799783496a37432dde5ce0bf0","fdec06934bf00cb7c1187b7f2f1ac6bf2f327ab5af71a543c48d919baa194f1a","9c8f99dfcd80875222e3a4923525595503174088a6eedce78ae3ea81fd650323","652c8e676e1b94c7829671c0eb237528f76a0ba67ac846c065bceb4088ebddd7","caac4c00061a947d2b1010bb6464f06197f2671bdf948fa1aa40bf1e244ee2a0","95b6c669e7ed7c5358c03f8aa24986640f6125ee81bb99e70e9155974f7fd253","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","c3e5b75e1af87b8e67e12e21332e708f7eccee6aac6261cfe98ca36652cdcb53","f7dd7280ee4f0420865e6423fe199aeac63d1d66203a8b631077cdc15501ef1f","ef62b4aa372f77458d84c26614b44129f929e263c81b5cd1034f5828a5530412","8610558ae88a43ad794c4ab1da4f0e8e174e0357c88f6cbb21f523e67414e9a9","0b0feb9837c561c0a67b61024328045bb16bac6e4b10f7b0b217d3b8b43b0b12","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","d1c6c35d174dbe63a76ed8ac6621cca8dbe8794961a2121feb5f0239747d1b7e","051c1bc0efd3690031a97ac49133c9486c22bd07852e75a11ed4b40ceb722569","a22270cba4f004f64a61cec3e39574416e3ca72e848f53a36ba3add746243217","447b9b631351b40faa0e961e6cbb5e269bc1fa61f7a615b8077b31a94aaefae3","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","e641fd321ca5fe17b532bd3b5a6e85a8741bbde7a9d7110d8ed272605c1c4a25","9d63720cd09e8b0ae76e0ade1993b7ec600e6729e453f459d4039d6914914c1a","8b324c8813c2bee210a7a79eede7abc4b5c60132fd497e140ce312a856af22a4","ff2d2f19561cd3a594d7cfeeb29797e62c8d9ef62df65916e6be9bdcfbaf8f7d","d59191f0bb663800c0856116d69ae11125eeae891d0a46c0be52f3c78ed4890e","d8360fe15a60f549584a9ff7d0e6129ed77abdbcf062b4da1a10a78175d34f71","a57b37eae916e680e5e15b36d17b22bb05834115041fe940f11d9e714501ff84","e53086c8f861bee1717e3e001498d2a493f786c6fcbb0027fc4352f00fcaa3cd","446242adee16900500f9d9dba2678258641f7e8f692f43c18dde8872167107bb","6ef7ba3b3d2514336c59d1af84e2d7550a886a5be193d9cb980cc6d16698236f","185e38aa301aaaaf3870183acd48f9b4da7baa5282cb9ed102a10004b0751cc2","1f0c7b51e98442f125414c1d43c6a04abc8ee800066834d742eb99b0e542d327","131c58b9b527fa99139dabaaf585ed52e9f5c450c1347c87bcb9af9b884e63ea","2642f053f18152ed5ba6403217f932e4fa0be0077f38734b168ab92da948b3c4","5718fb71731197c4e623120e93c5ece9061f569aa4dc28ffcbb8b4fb5ffe2ba6","9bc5d8cd23570760dc417cb10b01079bdb919b4dfeaab9c4341cf11d37d7a29e","0671e90198a35ffd8e5dd35c5ce0fd4839305f6fe9878ca9851a25c097a7874a","a3d9df9d57f7e47f70e013a46cf1c38177579dbb2c5b567bde24c7a67ed1303d","b4ac0ae1e7ed09d2ab8496d65c04643742a1811c6c5f34d9f9504a3868bc02e8","b63b8dfe391e40354edfb991062b8e8e28ef36a28644a7904f6a38f51a8a2386","375ecb9cebdd43c6fd230cfc02c6640344aadf920319b73a3c8514f45f23167c","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73","67c51fa68aadbb50e4ffc650b704620e0393bddb3d3eac3a6195bf1956562fe4","8187d9966b8fa5a2d0e53c71903adb5aa71ebc2a23410ab2d37eb764db800829","d851073758ff1ce39bb428d8a3b3385ca26da1745ca742789e876d67dc0aae43","0cee5b30f4300e628927dde7e7ae7b5bc32250a685242474d069b9346da8a2b1","6fdc7cbbbc0601f9bb153c30c0e8063321cd1c9211ad512b9fde1d1f785b35dd","6ae7157666262b5c0402463531996601150583cb1f4f9421f184a0eec9049f10","fbd0ac5a6097c20307587444815092eb1825d831991363423ef0ce70ef053e82","ec0b2f8ed3cc053fdb004ab4979c32625179a746717504e08fc30cef9ec9d7a3","2887592574fcdfd087647c539dcb0fbe5af2521270dad4a37f9d17c16190d579","ed434fd49cf57789f99d3d2f4fb4d5f4930825280ceaae21200d840609345161","3ea3b60de13285b50d9752812d3a6d2cae078d89031713613f58cd2f5565589a","4b0465994a4b18dd63a9af850c74024e6184deac2477ab87135f7d1b11a07178","3031ed6baeacbaf771576f64094d8a977e5be37b04d4dbb335fff9cc1d95a147","5f02cf0f7cc845c12b09607f97e57f942c313ebee6c33a3efbc346f19b499c7f","8e1eb67ef6924cd14793af526f9a4e3195b5734920a75ec29900731b1997f2ce","07fa4bb359f3cacde0e0b6d75cd9a53b88168088be58e01b385cd12e12a6d5d4","52d5d4a344ea0781bf00874c4829e3cfb0c12e1fa28c17740e773bc247fa663c","89ebb5291da50663149fc01245eeca4f8bf1a2bd8a3fe84ea62d926d53a6460f","792128daaa6209b5d52148b1952b56aad02fcf72435283a2d5ac1fb22113cd91","c474689555d4e49d5210e6c6d95f939e31f49158af350cbc403e4fdda5d32386","d4c5aebfd4d5468e03fee82920222d861737cc6ec5c9829474a36e379753fc52","f8fd01e7967e335266c6113c5d9bf15113768c5747265420dae0fdf1868eb05c","7a89d77bf137521a06ff5b3ce7297c663f3c27912b09320fa520c1b2d6bab9e5","7647ed4e66d98048478e6245f50b794a916ffa456fb362672e52c01e1b09a644","9a22045cb43de6fab0b5e524e4cef807e5a2c6e0a49044de56b65448e1572a14","4441e06cf8e7ffff0519950e34df3608ca1016f09f83fdfb7f71ab7376ac5a47","45d0cb97f71ad1fd0688b8a95c2a2b3cce347cd458ec365af4079c0273b49dc6","6c86a8ced863164acfbe7753660a7ba4aa97cdaa1e3b8d193a18316f906d4bbf","2dd10019ccc6f059b703db2f58f6f385625d235869fe562978b5a913e5db4c69","e4c66039756093e60d857430f451ffff1ca3fa5a951367b67dcc8f29b47b2d72","48433ed0754c860ebfeeec213f9c5943cc6b8aa7b70ce1bd9c5c6a490ed91229","c2708a205c4afa73bfeebaf0e939390b3b3fe9cd1788b09389ee0d736cd75a72","8f6d44ee7619da14f50cf051a243c41793ff1dccda8d8a3bb2255989df114c30","2aca83fda179d79a68a259bc47999615976b935d2eeb391304db8a095af721e6","26b3b07bb0229b36ba87ec2b0ca1a42a927c2e8a8bd5ae9339d5a82d950eb3ce","8767c93beffebe9eda0c03e4893ab2fe9b62ff65bf767a003cbba50cfe810a28","d7f211b5ba9e9fc21ba0fbf12b3ceda8680f672da595068dbb4d2d1f9a0c83b1","e613a48817a40243523fa26bb5e3396e6d60c79a1c0c59274889560f34cfdde7","ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","80b232969d72e6f08081a4a0b558537db2671a1a60bb44559d5e3b5f1fc89cd6",{"version":"841784cfa9046a2b3e453d638ea5c3e53680eb8225a45db1c13813f6ea4095e5","affectsGlobalScope":true},"646ef1cff0ec3cf8e96adb1848357788f244b217345944c2be2942a62764b771","0ab7506c71d3467c8db4fdc2512e5960afcfeb0a4f51467d79c9b51af5ec9e63","d45bd3d7c328e85331b3deb75be0f5bef5746ff9efa27900c769ad0e3461acb4","0eb2ed1c1c8d87ba91ae080e95a5f4891e3bdd31626b894655985760a2e56afd","3cfb7c0c642b19fb75132154040bb7cd840f0002f9955b14154e69611b9b3f81","8387ec1601cf6b8948672537cf8d430431ba0d87b1f9537b4597c1ab8d3ade5b","d16f1c460b1ca9158e030fdf3641e1de11135e0c7169d3e8cf17cc4cc35d5e64","a934063af84f8117b8ce51851c1af2b76efe960aa4c7b48d0343a1b15c01aedf","e3c5ad476eb2fca8505aee5bdfdf9bf11760df5d0f9545db23f12a5c4d72a718","d0570ce419fb38287e7b39c910b468becb5b2278cf33b1000a3d3e82a46ecae2","3aca7f4260dad9dcc0a0333654cb3cde6664d34a553ec06c953bce11151764d7","a0a6f0095f25f08a7129bc4d7cb8438039ec422dc341218d274e1e5131115988","b58f396fe4cfe5a0e4d594996bc8c1bfe25496fbc66cf169d41ac3c139418c77","45785e608b3d380c79e21957a6d1467e1206ac0281644e43e8ed6498808ace72","bece27602416508ba946868ad34d09997911016dbd6893fb884633017f74e2c5","2a90177ebaef25de89351de964c2c601ab54d6e3a157cba60d9cd3eaf5a5ee1a","82200e963d3c767976a5a9f41ecf8c65eca14a6b33dcbe00214fcbe959698c46","b4966c503c08bbd9e834037a8ab60e5f53c5fd1092e8873c4a1c344806acdab2","480c20eddc2ee5f57954609b2f7a3368f6e0dda4037aa09ccf0d37e0b20d4e5c","40a9e5673448badb43d693daf20698c452782ae1682887b9d1ccbf207589781a","f2834e7008d641386a0d313ef33e974effb5815755254506341a0f3ba846a506","2e44250d356340733b1f210ad994bf11a0ae802186d5ad6b602661030f811db2","d01f869e0aa82d99b590ac59b6906d0f4ccae1d903d1dd1e622d944f4741b829","8d5a0a154fda1d5422fc0a0432821d5485ef88588ceb267651bf0ac786addcfa","b25d24260ac27016213b336707cb6bd279e12b946304118837ca0bd93831bb0b","81b8cf069b2fad8ff8112f832db6a32b7735b3291855ae71876e8dd07687a438","da0f84fcd93700b4a5fbf9c6f166a6cc19fc798231bff56dd1e3875bfc6966eb","634ff08e0143bec98401c737de7bfc6883bfec09200bd3806d2a4cfc79c62aaa","90a86863e3a57143c50fec5129d844ec12cef8fe44d120e56650ed51a6ce9867","472c0a98c5de98b8f5206132c941b052f5cc1ae78860cb8712ac4f1ebf4550ca","538c4903ef9f8df7d84c6cf2e065d589a2532d152fa44105c7093a606393b814","cfcb6acbb793a78b20899e6537c010bfbbf939c77471abcdc2a41faf9682ca1a","a7798e86de8e76844f774f8e0e338149893789cdc08970381f0ae78c86e8667f","eebc21bb922816f92302a1f9dcefc938e74d4af8c0a111b2a52519d7e25d4868","6b359d3c3138a9f4d3a9c9a8fda24be6fd15bd789e692252b53e68ce99db8edc","9488b648a6a4146b26c0fd4e85984f617056293092a89861f5259a69be16ca5c","e156513655462b5811a8f980e32ccd204c19042f8c9756430fe4e8d6f7c1326e","5679b694d138b8c4b3d56c9b1210f903c6b0ca2b5e7f1682a2dd41a6c955f094","ca8da035b76fb0136d2c1390dda650b7979202dbe0f5dc7eaefcde1c76dee4f4","4b1022a607444684abeee6537e4cace97263d1ef047c31b012c41fdc15838a79",{"version":"dd0271250f1e4314e52d7e0da9f3b25a708827f8a43ceff847a2a5e3fd3283e8","affectsGlobalScope":true},{"version":"47971d8a8639a2a2dd684091c6e7660ec5909fed540c4479ca24e22ac237194e","affectsGlobalScope":true},"e1075312b07671ef1cbf46409a0fa2eb2b90bb59c6215c94f0e530113013eeda","1bfd63c3f3749c5dc925bb0c05f229f9a376b8d3f8173d0e01901c08202caf6f","da850b4fdbabdd528f8b9c2784c5ba3b3bedc4e2e1e34dcd08b6407f9ec61a25","e61c918bb5f4a39b795a06e22bc4d44befcefd22f6a5c8a732c9ed0b565a6128","ee56351989b0e6f31fd35c9048e222146ced0aac68c64ce2e034f7c881327d6d","f58b2f1c8f4bcf519377d39f9555631b6507977ad2f4d8b73ac04622716dc925","4c805d3d1228c73877e7550afd8b881d89d9bc0c6b73c88940cffcdd2931b1f6","4aa74b4bc57c535815ae004550c59a953c8f8c3c61418ac47a7dcfefba76d1ba","78b17ceb133d95df989a1e073891259b54c968f71f416cd76185308af4f9a185","d76e5d04d111581b97e0aa35de3063022d20d572f22f388d3846a73f6ce0b788","0a53bb48eba6e9f5a56e3b85529fbbe786d96e84871579d10593d4f3ae0f9dba","d34fb8b0a66f0a406c7ce63a36f16dda7ff4500b11b0bd30a491aa0d59336d1f","282b31893b18a06114e5173f775dd085597ca220d183b8bd474d21846c048334","ed27d5ce258f069acf0036471d1fbb56b4cb3c16d7401b52a51297eca651db62","ec203a515afd88589bf1d384535024f5b90ebe6b5c416fb3dcca0abd428a8ba4","32a2a1374b57f0744d284ca93b477bd97825922513a24dfe262cbf3497377d96","a8b60d24dc1eb26c0e987f9461c893744339a7f48e4496f8077f258a644cffab",{"version":"3f9df27a77a23d69088e369b42af5f95bcb3e605e6b5c2395f0bfcd82045e051","affectsGlobalScope":true},"9fd080a9458c6d6f3eb6d4e2b12a3ec498d7d219863e9dca0646bdee9acce875",{"version":"e5d31928bee2ba0e72aeb858881891f8948326e4f91823028d0aea5c6f9e7564","affectsGlobalScope":true},"9a9ba9f6fd097bb2f57d68da8a39403bbe4dc818b8ccd155a780e4e23fa556f2","e50c4cd1f5cbce3e74c19a5bbf503c460e6ae86597e6d648a98c7f6c90b596dd",{"version":"fa140f881e20591ce163039a7968b54c5e51c11228708b4f9147473d06471cf5","affectsGlobalScope":true},"295eca0c47be1191690fd2fe588195fff9d4dc43852aceb8b4cab2aa634579f0","59ee7346e19b0050508a592702871dc943083c6dcb69a47d52e888115d840781","067712491fb2094c212c733dd8e2d56e74c309a9ce9dac9e919286b7245a1eb4","a5eae58ac55bd30c42359e4b01fb2be5eddac336869d3f04ffb4daa54b58f009","d12d691ef8933e8db39f2ca81d6973940ff5e37bb421752f5b6e7bc15dea3abf","4c5f8bd9b3a1aae4e4fddfee41667e495a045f73ed603993038fa6a8ba92fa14","dfb274ab0f319cf18ce7152067c25f984c7fd1924fc72b3f66734588444c934a","108c8c05cbc3fbbbd4ff4fc0779c9bef55655c28528eb0f77829795dc9f0b484","a7e5444d24cdec45f113f4fb8a687e1c83a5d30c55d2da19a04be71108ad77bd","41ec17e218b7358fcff25c719bc419fec8ec98f13e561b9a33b07392d4fec24c","23c204326746e981e02d7f0a15ab6f8015f9035998cb3766c9ddbf8ea247aea2","25f994b5d76ce6a3186a3319555bbba79706dac2174019915c39ac6080e98c7e","dfa4e2c6a612d43851ccbc499598cb006a3a78bc8c7f972c52078f862fa84e47","02c1705fa902f172be6e9020d74bcd92ce5db8d2ef3e1b03aabc2ac8eb46c3db","99d2d8a0c7bb3dd77459552269a7b5865fa912cedab69db686d40d2586b551f7","b47abe58626d76d258472b1d5f76752dd29efe681545f32698db84e7f83517df","3a99bbbbbf42e45c3d203e7c74f1319b79f9821c5e5f3cdd03249184d3e003ce","aaacc0e12ab4de27bdf131f666e315d8e60abec26c7f87501e0a7806fc824ae6","3b4195afd41a9215afc7be0820f8083f6bd2e85e5e0b45bb0061fb041944711e","108df8095f5e25d7189dd0d1433ac2df75ec40c779d8faf7d2670f1485beb643","ddd3c1d3c9ff67140191a3cf49b09875e20f28f2fc5535ae5ea16e14293a989b","7b496e53d5f7e1737adcb5610516476ee055bf547918797348f245c68e7418fe","577f44389d7faedd7fc9c0330caf73140e5d0d5f6c968210bff78be569f398a7","3046c57724587a59bceefadd30040d418e9df81b9f3cfd680618a3511302ed7a","15ccc911ed15397e838471bfe6d476c28deffe976c05cb057e6b1ea7491242c2","64b5a5ebdaead77a9a564aa938f4fb7a45e27cda7441d3bee8c9de8a4df5a04f","a48037f7af5f80df8973db5e562e17566407541de284b8dadf1879ea3aed8a2f","dab97d96ce986857150db03f0d435b44c060d126b4a387c7807f4e9f6c92e531","85f39366ea7bc5e34b596fc97de18a7e377856755e789d8e931054f2191d9b8b","daf3ea3d49f6e8a2fa70b7ca1f21bd97f1b65021b31fbfccb73dd55f86abb792","b15bd260805f9dd06cd4b2b741057209994823942c5696fd835e8a04fb4aab6b","6635a824edf99ed52dbd3502d5bce35990c3ed5e2ec5cef88229df8ac0c52b06","d6577effa37aae713c34363b7cc4c84851cbabe399882c60e2b70bcbb02bfa01","8eaf80ad438890fe5880c39a7bbf2c998ce7d29d4c14dd56d82db63bd871eefb","9b3e7f776f312c76ac67e1060e5398d7ac2c69d6a3a928a9daaae2eb05b15f56","202042eccb4789b7dee51ba9ecab0b854834ea5c1d6a3946504bfc733d4468c3","2b2ef76a9f36094b07ee6f76a5ac6903f2f65c0a20283201814a8d1e752cb592","8882e4e087d0bc8cc713cb3d8090c45d33e373e6f5c83e0f8d00fe6a950ef875","42979c197a22211d72c9cf1de8559f0a39de0b0687eea63c6407a69d9d73c13f","cc36098e27200f5daceffff4a4694148746aaa1b369536186fa1caa43d8b4bde","07133796953f82127aebef603392f1430690fe6cfd5d3d4c2bd3b277c6566d79","9079300efc80cdcb5a5cd153bdc354ac3439619e661e5f35413f81f94d4aa897","3655e77b67da6b52b34f7abd79890cdbc9ce2e2a3579fc2568f07d77d1d60ec9","95a1ff30ceba2b8c185a76002e2a4578cca9a593d8b642b7d5b13275ece952b9","2a43ea656e1e3ae2ec876766d9d4576a53b079a1cd352367db12fc721033c08b","e8835cfaf67d1730e430a800d447ea79d33c59fc990455965ca85dcc16c6ec64","98631e5438157a2bc50970527c20d9a0d02def63700cb8f21ee19520a982fbc0","93a5f2ecf21f69045a129ef7821396276c117b34eb39d0b5510ff90c34839f56","4d054866f6bed47338a905264c4cc16108dfb55353a97d67b5beb0393f78fbc4","cc611eddaabd228585429f406dc5b2ef53db92e954f3fab97f8cc67b84b0a67b","51d3abc39997f19e1e0e13fe545c786465259a3f6625b27828e47847a00acc27","982c00b942df3ad3aa49500b7f253bad1f2624d4c5e0e0eea1ee20529d90296f","a9f610a8bd1aa513ca9ee39a05566e7439b45ef24670858f4b0a3b1b33a17923","a7b268ed0284472916b39062cea1ec8ca946b048b7f8992b14221d4318cb7f5b","7748692e43d33e0f58fd69f9e84f568430d147be8a5fec55aea68c73f63908a1","cee3e7bec863f019aa744e00dd7a8470f2f6ff951c498c501ad6e296aca9f418","98e5bfadb80d850109194eb7cbdae761564cf0aa4cdd39e70eb73fe628af6bf8","5da731f0b18d358e4e0ca682928298de26c6eabee5990d03333e0e8aef335ea2","5ed1241d2008dfabf2145443b9fb285b7bdcd8211266187ed9dfb2ae5b80f869","f60e1afcef13dcd11edafbd3f7720a5a50c3d2d90b4cb27cea58adb16efd12ed","e6a1fc7243e8a4f92cbafa2bac261e3540968403f082df44ae521b8e2658efbd","b745f5b14ad0407d94b3b3e764ceb6e6c1c0873528461421046751f7a3c84b17","554028fd3b11a78660ed0cb98b5fd343bc9b8a9b8495114e6ae5d13aed49f242","e4125c670944f6369be310c830b37391a82b4f8f500399a17b041962e1fe1dd2","60cded932be8d4f5de5c3a7f56c5e01438ce8ec7f110d4c87fdf2bfdb910dbd0","06e0622d8d29254863de52ca0da62329d78c5e02086481fbcef6c9cd74796d84","ad5346fa860e1577699a7a1e6543f7e811dd209164ed4e226566595c50ad3dd4","749ad4dbb8d1d33ab4283f8ffa875669e067f917cf1d17162e149b571c689f9a","dc278a8129f50ef9555060cf12ba10a11c2a816bad01c2f1abd2f87f6ac3796c","ee94a249d6f6c94e2656e1abc6820a25a88ec1351c21929d1365d60a4381d797","bc5a1ad94db45ea72a8632a18d57efe131671c54c51347c8c9a266f5ca059d8f","1ecb3bf08e05193e81b052ca5180d2a2cfcf64602d57312dd7a5686755938b88","ee2a7977e7cc78906b894656baaf8d4080962056ee12b2024fa2f42bf8e447bf","88124457c6ce628eb357aefa18c0e23a58d92997bed3e28a5e53217a9d8ec590","bda82ce02ca6b44902394fd57e57b1b41e4de290727d92cef3cb537b21cbc5af","c288bf4485ccf06ac2da23408bbdd47c987b1ea7db59f7d3caf736d115323e42","c0007fbf0456531d2c2ac6243689559d4ea2b5a5bba9ddb28c006db5a15fe32d","c7d9afa4d252d9dee7c7c0c3752db5efcbaa39dda3df9a1e193aea3a0d056ac1","475709fda88e76c7b3bcf00a2ffa16eb2d91088caa6d9f4abdf9a6592664f676","ec1bc8ff1a835119253f23d674c3e13ba983744620a0655f73dc61f6aaeea004","4f9b48c8b5098f29ddf9041e81676fb06b078e1dfe76e1b160f93ca214d05ff3","94c5a9b9991dc4e164779653c1f2af90ad961fd23d9164c0b6e570be7456ce31","13ed3c245e4a6a8b90d3f0909198c01fd7cb48e41364c1ece3c11edecb9dc9c7","81212195a5a76330d166ecfd85eb7119e93d3b814177643fa8a10f4b40055fbf","b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","82e5a50e17833a10eb091923b7e429dc846d42f1c6161eb6beeb964288d98a15","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","f9e22729fa06ed20f8b1fe60670b7c74933fdfd44d869ddfb1919c15a5cf12fb","d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed",{"version":"a8932b7a5ef936687cc5b2492b525e2ad5e7ed321becfea4a17d5a6c80f49e92","affectsGlobalScope":true},"689be50b735f145624c6f391042155ae2ff6b90a93bac11ca5712bc866f6010c",{"version":"64d4b35c5456adf258d2cf56c341e203a073253f229ef3208fc0d5020253b241","affectsGlobalScope":true},"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","dd0c1b380ba3437adedef134b2e48869449b1db0b07b2a229069309ce7b9dd39","1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a",{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true},"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","ee65fe452abe1309389c5f50710f24114e08a302d40708101c4aa950a2a7d044","63786b6f821dee19eb898afb385bd58f1846e6cba593a35edcf9631ace09ba25","c5a14bdeb170e0e67fb4200c54e0e02fd0ec94aca894c212c9d43c2916891542","a39f2a304ccc39e70914e9db08f971d23b862b6f0e34753fad86b895fe566533","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","d88a5e779faf033be3d52142a04fbe1cb96009868e3bbdd296b2bc6c59e06c0e","8b677e0b88f3c4501c6f3ec44d3ccad1c2ba08efd8faf714b9b631b5dba1421b","8a19491eba2108d5c333c249699f40aff05ad312c04a17504573b27d91f0aede","199f9ead0daf25ae4c5632e3d1f42570af59685294a38123eef457407e13f365","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","ddef25f825320de051dcb0e62ffce621b41c67712b5b4105740c32fd83f4c449","1b3dffaa4ca8e38ac434856843505af767a614d187fb3a5ef4fcebb023c355aa","15fe687c59d62741b4494d5e623d497d55eb38966ecf5bea7f36e48fc3fbe15e",{"version":"2c3b8be03577c98530ef9cb1a76e2c812636a871f367e9edf4c5f3ce702b77f8","affectsGlobalScope":true},"1ba59c8bbeed2cb75b239bb12041582fa3e8ef32f8d0bd0ec802e38442d3f317"],"options":{"allowSyntheticDefaultImports":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":99,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":99,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"fileIdsList":[[73,201,245],[73,74,76,201,245],[73,75,201,245],[201,245],[73,75,76,77,78,79,80,201,245],[75,201,245],[69,70,201,245],[63,201,245],[63,66,201,245],[63,64,65,67,201,245],[69,201,245],[68,201,245],[68,69,71,72,201,245],[201,245,537],[201,245,248,289,295,298],[201,245,300],[201,245,298,312,315],[201,245,298,299,300,301,316],[201,245,312,332,334,363,364],[201,245,312,332,376,378],[201,245,377],[201,245,312,332],[201,245,365,378,379,380,381],[201,245,312,332,363],[201,245,291,295,312,335,338],[201,245,336,337],[201,245,315,335],[201,245,315],[201,245,312,339,350],[201,245,332,369],[201,245,312,332,369,370],[201,245,312,367,369],[201,245,295,312,332,369,370],[201,245,295,312,332,369,372],[201,245,296,297,312],[201,245,309,312,332,366,369,370,371,372,373,374,375],[201,245,312,322,328,332,368],[201,245,352,353],[201,245,353,354],[201,245,329],[201,245,312,329],[201,245,329,330,331],[201,245,296,297,312,317,322,328],[201,245,312,357],[201,245,357,358,359,360],[201,245,312,356],[201,245,295,302],[201,245,304,306,308],[201,245,297],[201,245,302,303,309,310,311],[201,245,396],[201,245,393,394,395,396,397,398,399,400,401,402,403,404,405],[201,245,386],[201,245,342],[201,245,393,394,395],[201,245,393,394],[201,245,342,396,397],[201,245,394],[201,245,388],[201,245,385,387],[201,245,406],[201,245,490],[201,245,477,478,479],[201,245,472,473,474],[201,245,450,451,452,453],[201,245,416,490],[201,245,416],[201,245,416,417,418,419,464],[201,245,454],[201,245,449,455,456,457,458,459,460,461,462,463],[201,245,464],[201,245,415],[201,245,468,470,471,489,490],[201,245,468,470],[201,245,465,468,490],[201,245,475,476,480,481,486],[201,245,469,471,481,489],[201,245,488,489],[201,245,465,469,471,487,488],[201,245,469,490],[201,245,467],[201,245,467,469,490],[201,245,465,466],[201,245,482,483,484,485],[201,245,471,490],[201,245,426],[201,245,420,427],[201,245,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],[201,245,446,490],[201,245,537,538,539,540,541],[201,245,537,539],[201,245,260,295,543],[201,245,251,295],[201,245,288,295,550],[201,245,260,295],[201,245,553,555],[201,245,552,553,554],[201,245,257,260,295,547,548,549],[201,245,544,548,550,558,559],[201,245,258,295],[201,245,257,260,262,265,277,288,295],[201,245,305],[201,245,295],[201,242,245],[201,244,245],[201,245,250,280],[201,245,246,251,257,258,265,277,288],[201,245,246,247,257,265],[201,245,248,289],[201,245,249,250,258,266],[201,245,250,277,285],[201,245,251,253,257,265],[201,244,245,252],[201,245,253,254],[201,245,255,257],[201,244,245,257],[201,245,257,258,259,277,288],[201,245,257,258,259,272,277,280],[201,240,245],[201,240,245,253,257,260,265,277,288],[201,245,257,258,260,261,265,277,285,288],[201,245,260,262,277,285,288],[201,245,257,263],[201,245,264,288],[201,245,253,257,265,277],[201,245,266],[201,245,267],[201,244,245,268],[201,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[201,245,270],[201,245,271],[201,245,257,272,273],[201,245,272,274,289,291],[201,245,257,277,278,280],[201,245,279,280],[201,245,277,278],[201,245,280],[201,245,281],[201,242,245,277,282],[201,245,257,283,284],[201,245,283,284],[201,245,250,265,277,285],[201,245,286],[197,198,199,200,201,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[245],[201,245,265,287],[201,245,260,271,288],[201,245,250,289],[201,245,277,290],[201,245,264,291],[201,245,292],[201,245,257,259,268,277,280,288,290,291,293],[201,245,277,294],[201,245,570,609],[201,245,570,594,609],[201,245,609],[201,245,570],[201,245,570,595,609],[201,245,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],[201,245,595,609],[201,245,258,277,295,546],[201,245,258,560],[201,245,260,295,547,557],[201,245,612],[201,245,257,260,262,265,277,285,288,294,295],[201,245,307],[201,245,263,295],[201,245,349],[201,245,312,347,348],[172,201,245],[201,245,312,333],[201,245,312],[201,245,383],[201,245,340,343],[201,245,340,343,344,345],[201,245,312,320],[201,245,257,295,312,319,320,321],[201,245,295,312,318,319,321],[201,245,304,346],[201,245,312,314],[201,245,313],[201,245,326,327],[201,245,312,322,323,324,325],[201,245,312,322,328,332,339,351,355,361,362],[201,245,312,322,328],[201,245,382,384],[201,245,341],[61,201,245],[57,201,245],[57,58,59,60,201,245],[201,210,214,245,288],[201,210,245,277,288],[201,245,277],[201,205,245],[201,207,210,245,288],[201,245,265,285],[201,205,245,295],[201,207,210,245,265,288],[201,202,203,204,206,209,245,257,277,288],[201,210,218,245],[201,203,208,245],[201,210,234,235,245],[201,203,206,210,245,280,288,295],[201,210,245],[201,202,245],[201,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,245],[201,210,227,230,245,253],[201,210,218,219,220,245],[201,208,210,219,221,245],[201,209,245],[201,203,205,210,245],[201,210,214,219,221,245],[201,214,245],[201,208,210,213,245,288],[201,203,207,210,218,245],[201,210,227,245],[201,205,210,234,245,280,293,295],[171,201,245],[159,160,161,201,245],[162,163,201,245],[159,160,162,164,165,170,201,245],[160,162,201,245],[170,201,245],[162,201,245],[159,160,162,165,166,167,168,169,201,245],[62,81,83,85,87,123,133,134,135,138,143,144,145,158,175,176,177,178,179,183,190,191,192,193,194,201,245],[83,84,145,201,245,407],[92,96,97,201,245],[83,201,245],[101,102,201,245],[83,92,201,245],[201,245,411],[87,92,201,245],[62,81,83,201,245],[92,201,245],[83,87,92,106,201,245],[174,201,245],[141,201,245],[83,84,98,201,245,407,491],[83,84,145,201,245,407,491],[194,201,245,407],[83,103,104,105,201,245,407],[201,245,407,413],[83,84,126,201,245,407,491],[83,87,106,107,201,245,407],[83,108,201,245,407],[83,87,128,201,245,407],[62,175,201,245,407],[89,201,245],[81,83,201,245],[81,201,245],[81,83,135,201,245],[135,136,137,138,139,201,245],[124,201,245],[125,126,201,245],[83,87,92,93,94,95,98,99,100,101,102,103,104,105,107,108,109,123,127,201,245],[83,87,141,201,245],[128,201,245,407,491],[124,125,127,128,142,201,245],[94,95,99,100,101,103,104,105,129,130,131,132,133,134,140,201,245],[187,201,245,407],[188,201,245,407],[81,186,201,245,407],[83,110,120,123,201,245],[83,92,110,201,245],[87,112,114,115,123,201,245],[113,201,245],[111,201,245,407],[201,245,407,510],[116,201,245,407],[84,116,201,245,407],[110,111,115,116,117,118,119,121,122,201,245],[83,145,201,245],[83,145,146,201,245],[83,145,146,147,148,151,152,153,154,155,156,157,201,245],[201,245,407,491],[83,145,146,201,245,407,491],[83,145,146,158,201,245,407,491],[93,146,201,245,407,411],[147,148,149,150,151,152,153,154,155,156,157,158,201,245],[83,145,149,150,201,245],[83,149,150,201,245],[88,201,245,407,491],[88,89,90,91,201,245],[84,201,245,407],[84,201,245,407,491],[84,85,86,201,245],[201,245,407,411],[145,201,245],[62,195,201,245],[62,201,245],[62,92,175,176,201,245],[62,83,201,245],[62,81,140,201,245],[62,143,201,245],[62,81,184,185,186,187,188,189,201,245],[62,83,191,201,245,407],[62,83,85,193,201,245,407],[62,83,84,85,182,201,245,407],[62,83,85,180,201,245,407],[62,83,192,201,245,407],[62,83,84,181,201,245,407],[62,190,201,245,407],[180,181,182,201,245],[173,201,245],[82,201,245]],"referencedMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"exportedModulesMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"semanticDiagnosticsPerFile":[74,75,76,80,81,77,78,79,71,70,64,67,65,68,66,63,72,69,73,539,537,299,300,301,316,317,298,365,379,378,380,382,364,381,339,338,336,337,351,370,371,368,372,373,374,375,367,366,376,369,354,355,353,330,331,332,329,358,360,361,359,357,356,303,309,302,310,311,312,404,401,400,397,406,393,402,396,395,403,398,405,399,394,389,388,387,407,477,478,480,479,472,473,475,474,450,452,451,454,453,417,415,418,465,419,455,464,456,459,457,460,462,458,461,463,416,491,476,471,481,487,488,490,489,469,470,466,468,467,482,486,483,484,485,420,421,424,422,423,426,427,428,429,425,430,431,432,433,434,435,449,436,437,438,439,440,441,442,445,443,444,446,447,448,386,542,538,540,541,544,545,551,543,556,552,555,553,550,560,559,318,561,557,562,297,305,306,554,563,546,564,242,243,244,245,246,247,199,248,249,250,251,252,253,254,256,255,257,258,259,241,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,278,280,281,282,283,284,285,286,197,295,201,198,200,287,288,289,290,291,292,293,294,565,566,567,548,549,568,569,594,595,570,573,592,593,583,582,580,575,588,586,590,574,587,591,576,577,589,571,578,579,581,585,596,584,572,609,608,603,605,604,597,598,600,602,606,607,599,601,547,610,558,611,313,613,612,614,307,308,352,304,296,377,350,348,349,173,334,333,383,384,340,344,346,345,343,319,321,322,320,347,315,314,335,323,328,326,324,325,327,363,362,385,342,341,62,58,61,60,57,59,11,12,14,13,2,15,16,17,18,19,20,21,22,3,4,26,23,24,25,27,28,29,5,30,31,32,33,6,37,34,35,36,38,7,39,44,45,40,41,42,43,8,49,46,47,48,50,9,51,52,53,54,55,1,10,56,218,229,216,230,239,208,207,238,233,237,210,226,209,236,205,206,211,212,217,215,203,240,231,221,220,222,224,219,223,234,213,214,225,204,228,227,232,202,235,172,162,164,171,166,167,165,168,159,160,161,163,169,170,195,391,392,408,101,98,95,134,97,409,103,104,132,410,129,109,99,412,177,102,131,105,178,194,413,126,414,96,176,107,133,94,108,100,175,130,492,493,494,495,496,497,498,499,500,501,502,139,135,136,137,138,140,503,124,125,127,504,128,142,505,143,141,506,187,185,189,188,186,184,507,508,509,121,144,111,510,122,117,119,110,116,118,115,114,113,511,512,513,514,123,120,150,147,149,148,158,516,517,518,519,515,155,156,154,152,151,157,153,88,89,90,91,520,521,92,112,85,84,179,86,145,522,523,87,528,524,525,93,411,526,527,146,196,191,193,182,180,192,181,190,529,530,531,532,533,534,535,183,174,390,83,82,536,106],"affectedFilesPendingEmit":[[74,1],[75,1],[76,1],[80,1],[81,1],[77,1],[78,1],[79,1],[71,1],[70,1],[64,1],[67,1],[65,1],[68,1],[66,1],[63,1],[72,1],[69,1],[73,1],[539,1],[537,1],[299,1],[300,1],[301,1],[316,1],[317,1],[298,1],[365,1],[379,1],[378,1],[380,1],[382,1],[364,1],[381,1],[339,1],[338,1],[336,1],[337,1],[351,1],[370,1],[371,1],[368,1],[372,1],[373,1],[374,1],[375,1],[367,1],[366,1],[376,1],[369,1],[354,1],[355,1],[353,1],[330,1],[331,1],[332,1],[329,1],[358,1],[360,1],[361,1],[359,1],[357,1],[356,1],[303,1],[309,1],[302,1],[310,1],[311,1],[312,1],[404,1],[401,1],[400,1],[397,1],[406,1],[393,1],[402,1],[396,1],[395,1],[403,1],[398,1],[405,1],[399,1],[394,1],[389,1],[388,1],[387,1],[407,1],[477,1],[478,1],[480,1],[479,1],[472,1],[473,1],[475,1],[474,1],[450,1],[452,1],[451,1],[454,1],[453,1],[417,1],[415,1],[418,1],[465,1],[419,1],[455,1],[464,1],[456,1],[459,1],[457,1],[460,1],[462,1],[458,1],[461,1],[463,1],[416,1],[491,1],[476,1],[471,1],[481,1],[487,1],[488,1],[490,1],[489,1],[469,1],[470,1],[466,1],[468,1],[467,1],[482,1],[486,1],[483,1],[484,1],[485,1],[420,1],[421,1],[424,1],[422,1],[423,1],[426,1],[427,1],[428,1],[429,1],[425,1],[430,1],[431,1],[432,1],[433,1],[434,1],[435,1],[449,1],[436,1],[437,1],[438,1],[439,1],[440,1],[441,1],[442,1],[445,1],[443,1],[444,1],[446,1],[447,1],[448,1],[386,1],[542,1],[538,1],[540,1],[541,1],[544,1],[545,1],[551,1],[543,1],[556,1],[552,1],[555,1],[553,1],[550,1],[560,1],[559,1],[318,1],[561,1],[557,1],[562,1],[297,1],[305,1],[306,1],[554,1],[563,1],[546,1],[564,1],[242,1],[243,1],[244,1],[245,1],[246,1],[247,1],[199,1],[248,1],[249,1],[250,1],[251,1],[252,1],[253,1],[254,1],[256,1],[255,1],[257,1],[258,1],[259,1],[241,1],[260,1],[261,1],[262,1],[263,1],[264,1],[265,1],[266,1],[267,1],[268,1],[269,1],[270,1],[271,1],[272,1],[273,1],[274,1],[275,1],[276,1],[277,1],[279,1],[278,1],[280,1],[281,1],[282,1],[283,1],[284,1],[285,1],[286,1],[197,1],[295,1],[201,1],[198,1],[200,1],[287,1],[288,1],[289,1],[290,1],[291,1],[292,1],[293,1],[294,1],[565,1],[566,1],[567,1],[548,1],[549,1],[568,1],[569,1],[594,1],[595,1],[570,1],[573,1],[592,1],[593,1],[583,1],[582,1],[580,1],[575,1],[588,1],[586,1],[590,1],[574,1],[587,1],[591,1],[576,1],[577,1],[589,1],[571,1],[578,1],[579,1],[581,1],[585,1],[596,1],[584,1],[572,1],[609,1],[608,1],[603,1],[605,1],[604,1],[597,1],[598,1],[600,1],[602,1],[606,1],[607,1],[599,1],[601,1],[547,1],[610,1],[558,1],[611,1],[313,1],[613,1],[612,1],[614,1],[307,1],[308,1],[352,1],[304,1],[296,1],[377,1],[350,1],[348,1],[349,1],[173,1],[334,1],[333,1],[383,1],[384,1],[340,1],[344,1],[346,1],[345,1],[343,1],[319,1],[321,1],[322,1],[320,1],[347,1],[315,1],[314,1],[335,1],[323,1],[328,1],[326,1],[324,1],[325,1],[327,1],[363,1],[362,1],[385,1],[342,1],[341,1],[62,1],[58,1],[61,1],[60,1],[57,1],[59,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[218,1],[229,1],[216,1],[230,1],[239,1],[208,1],[207,1],[238,1],[233,1],[237,1],[210,1],[226,1],[209,1],[236,1],[205,1],[206,1],[211,1],[212,1],[217,1],[215,1],[203,1],[240,1],[231,1],[221,1],[220,1],[222,1],[224,1],[219,1],[223,1],[234,1],[213,1],[214,1],[225,1],[204,1],[228,1],[227,1],[232,1],[202,1],[235,1],[172,1],[162,1],[164,1],[171,1],[166,1],[167,1],[165,1],[168,1],[159,1],[160,1],[161,1],[163,1],[169,1],[170,1],[195,1],[391,1],[392,1],[408,1],[101,1],[98,1],[95,1],[134,1],[97,1],[409,1],[103,1],[104,1],[132,1],[410,1],[129,1],[109,1],[99,1],[412,1],[177,1],[102,1],[131,1],[105,1],[178,1],[194,1],[413,1],[126,1],[414,1],[96,1],[176,1],[107,1],[133,1],[94,1],[108,1],[100,1],[175,1],[130,1],[492,1],[493,1],[494,1],[495,1],[496,1],[497,1],[498,1],[499,1],[500,1],[501,1],[502,1],[139,1],[135,1],[136,1],[137,1],[138,1],[140,1],[503,1],[124,1],[125,1],[127,1],[504,1],[128,1],[142,1],[505,1],[143,1],[141,1],[506,1],[187,1],[185,1],[189,1],[188,1],[186,1],[184,1],[507,1],[508,1],[509,1],[121,1],[144,1],[111,1],[510,1],[122,1],[117,1],[119,1],[110,1],[116,1],[118,1],[115,1],[114,1],[113,1],[511,1],[512,1],[513,1],[514,1],[123,1],[120,1],[150,1],[147,1],[149,1],[148,1],[158,1],[516,1],[517,1],[518,1],[519,1],[515,1],[155,1],[156,1],[154,1],[152,1],[151,1],[157,1],[153,1],[88,1],[89,1],[90,1],[91,1],[520,1],[521,1],[92,1],[112,1],[85,1],[84,1],[179,1],[86,1],[145,1],[522,1],[523,1],[87,1],[528,1],[524,1],[525,1],[93,1],[411,1],[526,1],[527,1],[146,1],[196,1],[191,1],[193,1],[182,1],[180,1],[192,1],[181,1],[190,1],[529,1],[530,1],[531,1],[532,1],[533,1],[534,1],[535,1],[183,1],[174,1],[390,1],[83,1],[82,1],[536,1],[106,1]]},"version":"4.9.5"}
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:141:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:159:./.code/agents/1/exec-call_lmaGajgVnK37auksouScRpzT.txt:7557:frontend/node_modules/.cache/tsconfig.tsbuildinfo:1:{"program":{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.sharedmemory.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../react-router/dist/development/routeModules-rOzWJJ9x.d.ts","../react-router/dist/development/index-react-server-client-BKpa2trA.d.ts","../react-router/node_modules/cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/shared.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-localstorage.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-memory.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/key-manifest.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-manager.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/index.d.ts","../@auth0/auth0-spa-js/dist/typings/global.d.ts","../@auth0/auth0-spa-js/dist/typings/TokenExchange.d.ts","../@auth0/auth0-spa-js/dist/typings/Auth0Client.d.ts","../@auth0/auth0-spa-js/dist/typings/errors.d.ts","../@auth0/auth0-spa-js/dist/typings/index.d.ts","../@auth0/auth0-react/dist/auth-state.d.ts","../@auth0/auth0-react/dist/auth0-context.d.ts","../@auth0/auth0-react/dist/auth0-provider.d.ts","../@auth0/auth0-react/dist/use-auth0.d.ts","../@auth0/auth0-react/dist/with-auth0.d.ts","../@auth0/auth0-react/dist/with-authentication-required.d.ts","../@auth0/auth0-react/dist/errors.d.ts","../@auth0/auth0-react/dist/index.d.ts","../../src/theme/theme.js","../../src/theme/Provider.js","../../src/context/GameProvider.js","../../src/context/AuthContext.js","../../src/context/SheetSyncContext.js","../../src/context/index.js","../../src/components/ui/Button.js","../../src/components/ui/Card.js","../../src/components/ui/Input.js","../../src/components/ui/Select.js","../../src/components/ui/index.js","../../src/hooks/useOddsCalculation.js","../../src/components/ShotResultWidget.js","../../src/components/BettingOpportunityWidget.js","../../src/components/ProbabilityVisualization.js","../../src/components/EducationalTooltip.js","../../src/components/BettingOddsPanel.js","../../src/components/GameStateWidget.js","../../src/components/StrategicAnalysisWidget.js","../../src/components/AnalyticsDashboard.js","../../src/components/HoleStrategyDisplay.js","../../src/components/EnhancedBettingWidget.js","../../src/components/EnhancedScoringWidget.js","../../src/components/InteractivePlayerCard.js","../../src/utils/api.js","../../src/components/ShotAnalysisWidget.js","../../src/components/ShotVisualizationOverlay.js","../../src/components/GameHistory.js","../../src/components/simulation/SimulationDecisionPanel.tsx","../../src/components/simulation/GamePlay.js","../../src/config/environment.js","../../src/components/simulation/__fixtures__/simulationMockData.js","../../src/components/simulation/__fixtures__/index.js","../../src/components/simulation/TurnBasedInterface.js","../../src/components/simulation/SimulationMode.js","../../src/components/simulation/MonteCarloSimulation.js","../../src/components/simulation/Timeline.js","../../src/components/simulation/PokerBettingPanel.js","../../src/components/simulation/styles/enhancedSimulationLayout.js","../../src/components/simulation/EnhancedSimulationLayout.js","../../src/components/simulation/HoleVisualization.tsx","../../src/components/simulation/index.js","../../src/components/game/CourseImport.js","../../src/components/game/CourseManager.js","../../src/components/PlayerProfileManager.js","../../src/components/game/GameSetupForm.js","../../src/components/game/UnifiedGameInterface.js","../../src/components/GameDashboard.js","../../src/components/WolfGoatPigDashboard.js","../../src/components/HoleVisualization.js","../../src/components/EnhancedWGPInterface.js","../../src/components/ShotRangeAnalyzer.js","../../src/components/ColdStartHandler.js","../../src/components/auth/LoginButton.js","../../src/components/auth/LogoutButton.js","../../src/components/auth/Profile.js","../../src/components/auth/ProtectedRoute.js","../../src/components/auth/AuthHealthCheck.js","../../src/components/auth/index.js","../../src/components/index.js","../../src/components/game/WolfGoatPigGame.js","../../src/components/game/index.js","../../src/components/simulation/FeedAnalyzer.js","../../src/context/TutorialContext.js","../../src/hooks/useTutorialProgress.js","../../src/components/tutorial/ProgressTracker.js","../../src/components/tutorial/TutorialOverlay.js","../../src/components/tutorial/TutorialModule.js","../../src/components/tutorial/InteractiveElement.js","../../src/components/tutorial/modules/GolfBasicsModule.js","../../src/components/tutorial/modules/GameOverviewModule.js","../../src/components/tutorial/modules/TeamFormationModule.js","../../src/components/tutorial/modules/BettingSystemModule.js","../../src/components/tutorial/modules/AdvancedRulesModule.js","../../src/components/tutorial/modules/AnalysisToolsModule.js","../../src/components/tutorial/modules/PracticeGameModule.js","../../src/components/tutorial/TutorialSystem.js","../zod/v3/helpers/typeAliases.d.cts","../zod/v3/helpers/util.d.cts","../zod/v3/index.d.cts","../zod/v3/ZodError.d.cts","../zod/v3/locales/en.d.cts","../zod/v3/errors.d.cts","../zod/v3/helpers/parseUtil.d.cts","../zod/v3/helpers/enumUtil.d.cts","../zod/v3/helpers/errorUtil.d.cts","../zod/v3/helpers/partialUtil.d.cts","../zod/v3/standard-schema.d.cts","../zod/v3/types.d.cts","../zod/v3/external.d.cts","../zod/index.d.cts","../ghin/dist/index.d.ts","../../src/services/ghinService.js","../../src/components/WGPAnalyticsDashboard.js","../../src/components/SheetIntegrationDashboard.js","../../src/components/GoogleSheetsLiveSync.js","../../src/components/Leaderboard.js","../../src/context/MockAuthContext.js","../../src/pages/HomePage.js","../../src/pages/SetupPage.js","../../src/pages/GamePage.js","../../src/pages/index.js","../../src/components/signup/SignupCalendar.js","../../src/components/signup/DailySignupView.js","../../src/components/signup/PlayerAvailability.js","../../src/components/signup/AllPlayersAvailability.js","../../src/components/signup/MatchmakingSuggestions.js","../../src/components/signup/EmailPreferences.js","../../src/pages/SignupPage.js","../../src/pages/AboutPage.js","../../src/pages/RulesPage.js","../../src/pages/AdminPage.js","../../src/components/Navigation.js","../../src/App.js","../../src/index.js","../@types/node/ts5.1/compatibility/disposable.d.ts","../@types/node/ts5.6/compatibility/float16array.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/ts5.6/globals.typedarray.d.ts","../@types/node/ts5.6/buffer.buffer.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/globals.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/dom-events.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/ts5.1/index.d.ts","../collect-v8-coverage/index.d.ts","../@types/istanbul-lib-coverage/index.d.ts","../@jest/console/build/types.d.ts","../@jest/console/build/BufferedConsole.d.ts","../@jest/console/build/CustomConsole.d.ts","../@jest/console/build/NullConsole.d.ts","../@jest/types/build/Global.d.ts","../@jest/types/build/Circus.d.ts","../chalk/index.d.ts","../@types/istanbul-lib-report/index.d.ts","../@types/istanbul-reports/index.d.ts","../@types/yargs-parser/index.d.ts","../@types/yargs/index.d.ts","../@jest/types/build/Config.d.ts","../@jest/types/build/TestResult.d.ts","../@jest/types/build/Transform.d.ts","../@jest/types/build/index.d.ts","../@types/stack-utils/index.d.ts","../jest-message-util/build/types.d.ts","../jest-message-util/build/index.d.ts","../@jest/console/build/getConsoleOutput.d.ts","../@jest/console/build/index.d.ts","../@types/graceful-fs/index.d.ts","../jest-haste-map/build/HasteFS.d.ts","../jest-haste-map/build/types.d.ts","../jest-haste-map/build/ModuleMap.d.ts","../jest-haste-map/build/index.d.ts","../jest-resolve/build/ModuleNotFoundError.d.ts","../jest-resolve/build/shouldLoadAsEsm.d.ts","../jest-resolve/build/types.d.ts","../jest-resolve/build/resolver.d.ts","../jest-resolve/build/utils.d.ts","../jest-resolve/build/index.d.ts","../@jest/test-result/build/types.d.ts","../@jest/test-result/build/formatTestResults.d.ts","../@jest/test-result/build/helpers.d.ts","../@jest/test-result/build/index.d.ts","../jest-changed-files/build/types.d.ts","../jest-changed-files/build/index.d.ts","../jest-mock/build/index.d.ts","../@jest/fake-timers/build/legacyFakeTimers.d.ts","../@jest/fake-timers/build/modernFakeTimers.d.ts","../@jest/fake-timers/build/index.d.ts","../@jest/environment/build/index.d.ts","../jest-diff/build/cleanupSemantic.d.ts","../pretty-format/build/types.d.ts","../pretty-format/build/index.d.ts","../jest-diff/build/types.d.ts","../jest-diff/build/diffLines.d.ts","../jest-diff/build/printDiffs.d.ts","../jest-diff/build/index.d.ts","../jest-matcher-utils/build/index.d.ts","../expect/build/jestMatchersObject.d.ts","../expect/build/types.d.ts","../expect/build/index.d.ts","../@jest/globals/build/index.d.ts","../callsites/index.d.ts","../@jest/source-map/build/types.d.ts","../@jest/source-map/build/getCallsite.d.ts","../@jest/source-map/build/index.d.ts","../@jest/transform/node_modules/source-map/source-map.d.ts","../@jest/transform/build/types.d.ts","../@jest/transform/build/ScriptTransformer.d.ts","../@jest/transform/build/shouldInstrument.d.ts","../@jest/transform/build/enhanceUnexpectedTokenMessage.d.ts","../@jest/transform/build/index.d.ts","../jest-runtime/build/types.d.ts","../jest-runtime/build/index.d.ts","../@jest/core/build/types.d.ts","../@jest/core/build/SearchSource.d.ts","../@jest/reporters/build/getResultHeader.d.ts","../@jest/reporters/build/generateEmptyCoverage.d.ts","../@jest/reporters/build/CoverageWorker.d.ts","../@jest/reporters/build/types.d.ts","../@jest/reporters/build/BaseReporter.d.ts","../@jest/reporters/build/CoverageReporter.d.ts","../@jest/reporters/build/DefaultReporter.d.ts","../@jest/reporters/build/NotifyReporter.d.ts","../@jest/reporters/build/SummaryReporter.d.ts","../@jest/reporters/build/VerboseReporter.d.ts","../@jest/reporters/build/index.d.ts","../emittery/index.d.ts","../@jest/core/build/TestWatcher.d.ts","../@jest/core/build/TestScheduler.d.ts","../@jest/core/build/cli/index.d.ts","../@jest/core/build/version.d.ts","../@jest/core/build/jest.d.ts","../jest-cli/build/cli/index.d.ts","../jest-cli/build/index.d.ts","../jest/build/jest.d.ts","../@types/aria-query/index.d.ts","../@testing-library/jest-dom/types/matchers.d.ts","../@testing-library/jest-dom/types/jest.d.ts","../@testing-library/jest-dom/types/index.d.ts","../../src/setupTests.js","../../src/__mocks__/react-router-dom.js","../../src/__tests__/fixtures/gameFixtures.js","../@testing-library/dom/types/matches.d.ts","../@testing-library/dom/types/wait-for.d.ts","../@testing-library/dom/types/query-helpers.d.ts","../@testing-library/dom/types/queries.d.ts","../@testing-library/dom/types/get-queries-for-element.d.ts","../@testing-library/dom/types/screen.d.ts","../@testing-library/dom/types/wait-for-element-to-be-removed.d.ts","../@testing-library/dom/types/get-node-text.d.ts","../@testing-library/dom/types/events.d.ts","../@testing-library/dom/types/pretty-dom.d.ts","../@testing-library/dom/types/role-helpers.d.ts","../@testing-library/dom/types/config.d.ts","../@testing-library/dom/types/suggestions.d.ts","../@testing-library/dom/types/index.d.ts","../@testing-library/react/types/index.d.ts","../../src/__tests__/utils/testHelpers.js","../../src/components/EmailSettings.js","../../src/components/GHINIntegration.js","../../src/hooks/usePlayerProfile.js","../../src/components/GameStatsTracker.js","../../src/components/PerformanceAnalytics.js","../../src/components/PlayerStatistics.js","../@testing-library/user-event/dist/types/event/eventMap.d.ts","../@testing-library/user-event/dist/types/event/types.d.ts","../@testing-library/user-event/dist/types/event/dispatchEvent.d.ts","../@testing-library/user-event/dist/types/event/focus.d.ts","../@testing-library/user-event/dist/types/event/input.d.ts","../@testing-library/user-event/dist/types/utils/click/isClickableInput.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Blob.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/DataTransfer.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/FileList.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Clipboard.d.ts","../@testing-library/user-event/dist/types/utils/edit/timeValue.d.ts","../@testing-library/user-event/dist/types/utils/edit/isContentEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/isEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/maxLength.d.ts","../@testing-library/user-event/dist/types/utils/edit/setFiles.d.ts","../@testing-library/user-event/dist/types/utils/focus/cursor.d.ts","../@testing-library/user-event/dist/types/utils/focus/getActiveElement.d.ts","../@testing-library/user-event/dist/types/utils/focus/getTabDestination.d.ts","../@testing-library/user-event/dist/types/utils/focus/isFocusable.d.ts","../@testing-library/user-event/dist/types/utils/focus/selection.d.ts","../@testing-library/user-event/dist/types/utils/focus/selector.d.ts","../@testing-library/user-event/dist/types/utils/keyDef/readNextDescriptor.d.ts","../@testing-library/user-event/dist/types/utils/misc/cloneEvent.d.ts","../@testing-library/user-event/dist/types/utils/misc/findClosest.d.ts","../@testing-library/user-event/dist/types/utils/misc/getDocumentFromNode.d.ts","../@testing-library/user-event/dist/types/utils/misc/getTreeDiff.d.ts","../@testing-library/user-event/dist/types/utils/misc/getWindow.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDescendantOrSelf.d.ts","../@testing-library/user-event/dist/types/utils/misc/isElementType.d.ts","../@testing-library/user-event/dist/types/utils/misc/isVisible.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDisabled.d.ts","../@testing-library/user-event/dist/types/utils/misc/level.d.ts","../@testing-library/user-event/dist/types/utils/misc/wait.d.ts","../@testing-library/user-event/dist/types/utils/pointer/cssPointerEvents.d.ts","../@testing-library/user-event/dist/types/utils/index.d.ts","../@testing-library/user-event/dist/types/document/UI.d.ts","../@testing-library/user-event/dist/types/document/getValueOrTextContent.d.ts","../@testing-library/user-event/dist/types/document/copySelection.d.ts","../@testing-library/user-event/dist/types/document/trackValue.d.ts","../@testing-library/user-event/dist/types/document/index.d.ts","../@testing-library/user-event/dist/types/event/selection/getInputRange.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelection.d.ts","../@testing-library/user-event/dist/types/event/selection/moveSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/selectAll.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionRange.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/updateSelectionOnFocus.d.ts","../@testing-library/user-event/dist/types/event/selection/index.d.ts","../@testing-library/user-event/dist/types/event/index.d.ts","../@testing-library/user-event/dist/types/system/pointer/buttons.d.ts","../@testing-library/user-event/dist/types/system/pointer/shared.d.ts","../@testing-library/user-event/dist/types/system/pointer/index.d.ts","../@testing-library/user-event/dist/types/system/index.d.ts","../@testing-library/user-event/dist/types/system/keyboard.d.ts","../@testing-library/user-event/dist/types/options.d.ts","../@testing-library/user-event/dist/types/convenience/click.d.ts","../@testing-library/user-event/dist/types/convenience/hover.d.ts","../@testing-library/user-event/dist/types/convenience/tab.d.ts","../@testing-library/user-event/dist/types/convenience/index.d.ts","../@testing-library/user-event/dist/types/keyboard/index.d.ts","../@testing-library/user-event/dist/types/clipboard/copy.d.ts","../@testing-library/user-event/dist/types/clipboard/cut.d.ts","../@testing-library/user-event/dist/types/clipboard/paste.d.ts","../@testing-library/user-event/dist/types/clipboard/index.d.ts","../@testing-library/user-event/dist/types/pointer/index.d.ts","../@testing-library/user-event/dist/types/utility/clear.d.ts","../@testing-library/user-event/dist/types/utility/selectOptions.d.ts","../@testing-library/user-event/dist/types/utility/type.d.ts","../@testing-library/user-event/dist/types/utility/upload.d.ts","../@testing-library/user-event/dist/types/utility/index.d.ts","../@testing-library/user-event/dist/types/setup/api.d.ts","../@testing-library/user-event/dist/types/setup/directApi.d.ts","../@testing-library/user-event/dist/types/setup/setup.d.ts","../@testing-library/user-event/dist/types/setup/index.d.ts","../@testing-library/user-event/dist/types/index.d.ts","../../src/components/__tests__/BettingOddsPanel.test.js","../../src/components/__tests__/GameDashboard.test.js","../../src/components/__tests__/Navigation.test.js","../../src/components/__tests__/NewComponents.test.js","../../src/components/__tests__/PerformanceAnalytics.test.js","../../src/components/__tests__/PlayerProfileManager.test.js","../../src/components/__tests__/ShotAnalysisWidget.test.js","../../src/components/__tests__/ShotVisualizationOverlay.test.js","../../src/components/__tests__/UnifiedGameInterface.integration.test.js","../../src/components/__tests__/WGPAnalyticsDashboard.test.js","../../src/components/analytics/PostHoleAnalytics.js","../../src/components/email/EmailSettings.js","../../src/components/game/TVPokerLayout.js","../../src/components/game/__tests__/UnifiedGameInterface.test.js","../../src/components/practice/EnhancedPracticeMode.js","../../src/components/signup/__tests__/AllPlayersAvailability.test.js","../../src/components/signup/__tests__/MatchmakingSuggestions.test.js","../../src/components/signup/__tests__/PlayerAvailability.test.js","../../src/components/simulation/GameSetup.tsx","../../src/components/simulation/__tests__/GamePlay.test.js","../../src/components/simulation/__tests__/GameSetup.test.js","../../src/components/simulation/__tests__/SimulationMode.probabilities.test.js","../../src/components/simulation/__tests__/SimulationMode.test.js","../../src/components/tutorial/index.js","../../src/components/tutorial/__tests__/InteractiveElement.test.js","../../src/components/tutorial/__tests__/ProgressTracker.test.js","../../src/components/tutorial/__tests__/TutorialSystem.test.js","../../src/components/tutorial/__tests__/hooks.test.js","../../src/components/ui/__tests__/Button.test.js","../../src/components/ui/__tests__/UIComponents.test.js","../../src/context/__tests__/GameProvider.shotProbabilities.test.js","../../src/context/__tests__/GameProvider.test.js","../../src/hooks/useAuth.js","../../src/hooks/useGameApi.js","../../src/hooks/usePostHoleAnalytics.js","../../src/hooks/useSimulationApi.js","../../src/hooks/__tests__/usePlayerProfile.test.js","../../src/pages/__tests__/AboutPage.test.js","../../src/pages/__tests__/AdminPage.test.js","../../src/pages/__tests__/GamePage.test.js","../../src/pages/__tests__/HomePage.test.js","../../src/pages/__tests__/RulesPage.test.js","../../src/pages/__tests__/SetupPage.test.js","../../src/pages/__tests__/SignupPage.test.js","../../src/utils/__tests__/api.test.js","../@babel/types/lib/index.d.ts","../@types/babel__generator/index.d.ts","../@babel/parser/typings/babel-parser.d.ts","../@types/babel__template/index.d.ts","../@types/babel__traverse/index.d.ts","../@types/babel__core/index.d.ts","../@types/connect/index.d.ts","../@types/body-parser/index.d.ts","../@types/bonjour/index.d.ts","../@types/mime/index.d.ts","../@types/send/index.d.ts","../@types/qs/index.d.ts","../@types/range-parser/index.d.ts","../@types/express-serve-static-core/index.d.ts","../@types/connect-history-api-fallback/index.d.ts","../@types/eslint/helpers.d.ts","../@types/estree/index.d.ts","../@types/json-schema/index.d.ts","../@types/eslint/index.d.ts","../@types/eslint-scope/index.d.ts","../@types/http-errors/index.d.ts","../@types/serve-static/index.d.ts","../@types/express/node_modules/@types/express-serve-static-core/index.d.ts","../@types/express/index.d.ts","../@types/html-minifier-terser/index.d.ts","../@types/http-proxy/index.d.ts","../@types/json5/index.d.ts","../@types/node-forge/index.d.ts","../@types/parse-json/index.d.ts","../@types/prettier/index.d.ts","../@types/q/index.d.ts","../@types/resolve/index.d.ts","../@types/retry/index.d.ts","../@types/semver/classes/semver.d.ts","../@types/semver/functions/parse.d.ts","../@types/semver/functions/valid.d.ts","../@types/semver/functions/clean.d.ts","../@types/semver/functions/inc.d.ts","../@types/semver/functions/diff.d.ts","../@types/semver/functions/major.d.ts","../@types/semver/functions/minor.d.ts","../@types/semver/functions/patch.d.ts","../@types/semver/functions/prerelease.d.ts","../@types/semver/functions/compare.d.ts","../@types/semver/functions/rcompare.d.ts","../@types/semver/functions/compare-loose.d.ts","../@types/semver/functions/compare-build.d.ts","../@types/semver/functions/sort.d.ts","../@types/semver/functions/rsort.d.ts","../@types/semver/functions/gt.d.ts","../@types/semver/functions/lt.d.ts","../@types/semver/functions/eq.d.ts","../@types/semver/functions/neq.d.ts","../@types/semver/functions/gte.d.ts","../@types/semver/functions/lte.d.ts","../@types/semver/functions/cmp.d.ts","../@types/semver/functions/coerce.d.ts","../@types/semver/classes/comparator.d.ts","../@types/semver/classes/range.d.ts","../@types/semver/functions/satisfies.d.ts","../@types/semver/ranges/max-satisfying.d.ts","../@types/semver/ranges/min-satisfying.d.ts","../@types/semver/ranges/to-comparators.d.ts","../@types/semver/ranges/min-version.d.ts","../@types/semver/ranges/valid.d.ts","../@types/semver/ranges/outside.d.ts","../@types/semver/ranges/gtr.d.ts","../@types/semver/ranges/ltr.d.ts","../@types/semver/ranges/intersects.d.ts","../@types/semver/ranges/simplify.d.ts","../@types/semver/ranges/subset.d.ts","../@types/semver/internals/identifiers.d.ts","../@types/semver/index.d.ts","../@types/serve-index/index.d.ts","../@types/sockjs/index.d.ts","../@types/trusted-types/lib/index.d.ts","../@types/trusted-types/index.d.ts","../@types/ws/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9","746d62152361558ea6d6115cf0da4dd10ede041d14882ede3568bce5dc4b4f1f","d11a03592451da2d1065e09e61f4e2a9bf68f780f4f6623c18b57816a9679d17","aea179452def8a6152f98f63b191b84e7cbd69b0e248c91e61fb2e52328abe8c",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"f3d4da15233e593eacb3965cde7960f3fddf5878528d882bcedd5cbaba0193c7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"6c55633c733c8378db65ac3da7a767c3cf2cf3057f0565a9124a16a3a2019e87","affectsGlobalScope":true},{"version":"fb4416144c1bf0323ccbc9afb0ab289c07312214e8820ad17d709498c865a3fe","affectsGlobalScope":true},{"version":"5b0ca94ec819d68d33da516306c15297acec88efeb0ae9e2b39f71dbd9685ef7","affectsGlobalScope":true},{"version":"34c839eaaa6d78c8674ae2c37af2236dee6831b13db7b4ef4df3ec889a04d4f2","affectsGlobalScope":true},{"version":"34478567f8a80171f88f2f30808beb7da15eac0538ae91282dd33dce928d98ed","affectsGlobalScope":true},{"version":"ab7d58e6161a550ff92e5aff755dc37fe896245348332cd5f1e1203479fe0ed1","affectsGlobalScope":true},{"version":"6bda95ea27a59a276e46043b7065b55bd4b316c25e70e29b572958fa77565d43","affectsGlobalScope":true},{"version":"aedb8de1abb2ff1095c153854a6df7deae4a5709c37297f9d6e9948b6806fa66","affectsGlobalScope":true},{"version":"a4da0551fd39b90ca7ce5f68fb55d4dc0c1396d589b612e1902f68ee090aaada","affectsGlobalScope":true},{"version":"11ffe3c281f375fff9ffdde8bbec7669b4dd671905509079f866f2354a788064","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"bf237922b06c558ee82c997549c28541d2e4c60a7c449c635cd7116663bff11b","ec646851bb3302d774d4fbec3555fdf0cea4dc30a7f2c663d66387653abecdd6","5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd",{"version":"7f9844af49faece125da77aa099fd5c1da64270e31b414edef84f159a15f61b7","affectsGlobalScope":true},"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","fcc9e6f2da1759e4abe577f938f7d6eec119963abae917c290913a537cf8cd89","67b56598de49ea49e177ed09417ec97c642775a4fe73259df996923517eb652d","98d8c2cce0da7f218eda38d46b3d715adfb4c99c59ad67dbe0fd105113292f9f","d562cf993f138dc03c5b1aed57d7d80e96555ce41365e0e79db9b93a0b49a6b2","4e7fded78c59e63cc94cd8c0c920b287b885ae0512c412e0f7a890b0d700bc3d","7fc1326aae51ca02c357b8391270858387cce4afa9928d6580a42119dfcca9eb","a95d033d647339e3932fd15c01ae763c0e6fba915418c01b2fb1b1d4063a6d7f","9ec473f428d74650f0ce05b81e6a27fc84906a36838fd11875fcae5193f3cbbb","acdd8a10fac8748502509cb57bdd53a7c5b85fa4a2ee3a560c00a40404ff65cb","59bd81abd493fa554955bf7dd7006273192ea8d553d3e4a819e866a14725cdfe","a29acac88d5df222deeb58568f2e56b42075d9b043b4f158b7a55a8eed18985f","56d09baa6411529b9edfed10d627aa294412c3aa33d26e1254b8f1422ecfbfd9","31feea0066a629bfcacfc80bd5ec1551d26cf7a8dad949dc24cde82307748a45","b23ee85f4ae6affbd6d92df4a305756b2d7a7d687108bac625b83d662aabe063","c541b4b619ff47a8f1d2e242f69cab2f1490797934a31b9d15fe1b9d59183626","10f0161e27ec211a27512406022e5381ee1eff148c356579a07392c1cab67205","50d0abf4fb3d7fa0d929459ec9560f6761eb9e80bc568e6367868f6402fae0b5","4be1e84f8a23aa1c9b37669820a5dc6c0d664131c2549b54b40ec225abcff77c","2d6acf4fe93fb92f0259c6bbed436112c7daf0ad9e1318f2f0bd2613083261f0","58024638b80b48562cce5f0e5f65ce5924a2309224400787a4e40dea0ce3c7f4","ed7ed4acdc5b5e7f531cb8a2b62cadc0a8a88d054637965ba585a370f3538dbc","59453dd1a944cc11ef41fc0e21d4afaa4906eb4015fc605b423776ab26be5c35","12bb43d7c61d1b5e4340ed3599bbdcdd8d781994f08a94f010c88d4d26f285bb","f40d60f92714d69e75d0f03e3b51acbe2ff52064dd0e4774fa818ff72f043ea4","797cfbacb483d815b7819b3cf867533af99a630f2beea11cc26592b0c2d42cb1","4b26040bc29ea84ee18561c65d6994a07cfb168240c5bda0eb04bfb48190b219","06709b34a5d72762ab905843ac3443277ab884dc32fce8b3b0d51bcdb5064b74","cbb6fbcffa54cb81308247f17b64f1cb22ca015fba420fdb7c2c61c3a2adfcda","d37a6f1e29ec3244911f7d28cf815251ef113387c8618426acdab8d153940bbc","0e0af8c8426a911142d13768859c1b49e120f60bb153ce6dd197e30f9b8b6820","87e68d28db4ab68bfa35d6d1b57ea233d90e1c678f3da187f796075ff3a8e85d","afdf59e4068da139bff61ba0887ae9c76f46373f95932efd54ee7910b6502a1a","b07d57ba8d3e203d16450dd2426270030368821d3d418b291a05801a362d4d99","ecd8abab263e35cda153af96d4f29c711ff477a4c2bd81698cdfc727836547e3","e9a208aad09ea42f46bdd52d309774b73e7a02762281c51377973025a9cb7250","d264ffe701d5be437313c4f6f7d8f27ce029fc5cc3c51e42e9b60bed6d943e34","d2dcfbb9046a3f918ba22ebc91310f31606cebca173944df0544dc14ed26939a","2bef42b3474c69a11119442d099d6ee4952a9e1ee2674a76df68e67ee853c9f8","0880a3c557fb7ce460173df4c71dc39365359c053da107caad5fbe03a249c69e","f636742cc740b78907aa1010d1fc25cd7d2e5966a3aa149d74ce9370627ff852","b8ef751a4bad89dfe59fa19218e89bdb5c74e6cba080bdbee9921e1c9bf4a615","930d085f4aaabd1cc8d0f4f4837d13e04e948e77c8cf97a2e64c997088fbffcf","df1fd1099460e2d762f69fccb745265e72c14b8048f3e7de60767bbf714f6ad0","dba7c59c1095d9d149ec234ad3846af7fcb0bf6c11822f76d78c19fd0e086473","de378d46014d3f7e673fecf74f8d02bc27a30ffd85ca378927fba171f83f2f66","ec8924ce154b4a9dc676762fd43a7f785fc2cb6a21a0250b34216c8ed757f0bd","6da8dd746a2c6c74c7a874d809f62f908439319fed0505b579774066ce551bcb","a0cbce32b63aa070e5f4aa15e918886492e71c9753426d573e8a9deac1dd8abe","2431e657962c860594400df7d3c49f3c6eefb7e193f158bd9e7f0f965256a33c","30e5961d52cdabbbdaa5169c3c71a77a5aa0f8ac70ebb1f250f6fdaa2007ed3d","37e82fceaba98ef3038072809e67d0b8ed4b37c3a4aa82ed7dbf48676bf2750e","3fa0235c0ee6318d87108b06d6f922f525dcf039a32231d1667b96e202a8b009","5b7c7e06d9f383a1ee8d3b700c4d1419331f4166aa340c7788a35bec98331f34","2df3bf27c69b2c5d47b17649447817b802ad9166d31bfb7c33806195c03a8d83","ee235306953241273af6e40d709d4097476ecb599229473fb55b461288ed1993","2bef48831eaf4bf89166732f51f741488205c30f5184adc03a34a63a6c9a70bd","5fb0a11bc0cb66afc528b180067199bc542c46f6fd95649c3137f3a94bf8412b","6b6814ee731c1e6ee609b98086b273d1aa13333182edd24be8be569c7b7d07df","18cce8e15d2846c71faa2543b08b70b1c04bac9a26427eb98a4e0bad24976a90","ab3a5590e693ad5fb0a1a19c17e2b01258c88fe4617a4cae9d4058cc18946d08","8b4025f2c3f2aed06120f2d20f55d5bc10a06c7a40e058eafe13af9240f85c7c","698972a628b6dbbc1d4d917d422b56e429501ec8758270e527c70401227d094a","212e0c8f420a4c1866546cb7d50ba94537c25aaa715e84685d8995798125b9b9","39b74fe9bd08e3154f281117a5fe5bfa6b1afdfe8556eda1fc82428828329fd4","8b80893422089fff8f07496f4f66f1207847f6a9645c88d75c2877fabd453f11","cf41eb0cb37e385c1d777bdfefc05f0617857fd72d3a455d6d4f81e5e31a397f","583b9e0633074c66e97445426ac0b07bdb388f87e92449baae08cd5ab9cbf846","07646330c0cf3e5429bf2fce8647b0369a9cef8dc9b7a327e2ff47c4d1b916e3","eb277e8bb50c4fbc16ac5e8238b88880626f3ad672d7af92f2d29eaa522a9399","bfdff632c328e37b1946e1b6d7120933c145fac5a6eed6c8adaba5f5e56e64e3","b04f1498e13102326e1968fac4c2d37ca0c2b7abd76812892d9496151083aa91","c413aa82126a73c6280ce1177d151c01640790b5913e6ac80b62b0cce0ebaed3","93436c1aebb65cf409cf9879764d584439bbccc2f87e05763c30b70ead288013","2bbe03e00b2dd6db70bee6237f166c7fbc2b6e301918b3e9a6b62cf0df6eb370","522b79a823b5d466fbfe86cd25473045a8ad45f2a9b9df00e19fe5f3d00ab635","db17b27cc4514d286387592824d7bd39dea6737b799787d72acaa6556d40092e","0d6d484d91ba60f459fc8fcb35d08f6791711f05c8156bb6fc17b0a6fca81541","7bfc9cdd904b12b8f14d2160a092c90afd13cedffe96b8b50a71806431a01873","4981a6995ea12a015408f795188b03a7476c5148b051ea55126a82b62e06708f","843b27075f3ed5a868bad8c9f29b9d275f8a61b3e3c4e760ff6d64e1bf9a6f9c","3c54e9f8641d69914fbda6cac089757a412fb904f0a075dbc65bce568f4a90b7","472d9a32c8571cbfbddbe80686e464464ab008caa48c65677b0d35a0e506d06c","9daca9b36125be1487105a71756caff00669c1871a01209f63b3f9285c5503ec","9567454f4649cdcd899ec3328e8ddf843e0cfd59b832b3e23879d56ca4fadb35","2687e7d974ad531a64538810770312b81193fb7f143cd09fa89e05aad414cb55","c00565777871b6d76d065c51af1d2fbc414f8804498f8692861f0ef3759d8812","12a3233962e3103fd3e4f4de0c26e0f17cd7c3d37b0aaa0743b8dcc7038d0e33","4da29c03d43f81993290813ab4d7b3d29812ce0cc1ccfce9784d076f726fe753","fb58a4485f54c463027b36c4843098de5fdb536594f49ed81f783252561f77f6","6c09333a0c899f83c1444a379ebdcebeea8fd6b25fc6bec2e0e1e5724bcdecc5","ec85cf13bd5d52a3b29672c8d5509e0d6478721d814d933578fc769e82ac7f2d","939c575afa1e1720c9cafcf09d5ad218f7ffcc36743b7cf33581dff722fde7fc","315000295ec26a0a60741a2021d3b84b8f2cc2b8f636de5851436f7464f7ab98","b7956653d6f5d55877326e67cedd538243d9953819e019242502c432381fcee5","d655eefdb3a03cdab08a7d48ff49f42feef1974b3702a1b3010888d51e2428f5","8bd215328a9fd468ffa6f0c1bec8727e9081eadcc4659f3ea56b2e54412a4cc9","d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","833e92c058d033cde3f29a6c7603f517001d1ddd8020bc94d2067a3bc69b2a8e","08b2fae7b0f553ad9f79faec864b179fc58bc172e295a70943e8585dd85f600c","f12edf1672a94c578eca32216839604f1e1c16b40a1896198deabf99c882b340","e3498cf5e428e6c6b9e97bd88736f26d6cf147dedbfa5a8ad3ed8e05e059af8a","dba3f34531fd9b1b6e072928b6f885aa4d28dd6789cbd0e93563d43f4b62da53","f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","2329d90062487e1eaca87b5e06abcbbeeecf80a82f65f949fd332cfcf824b87b","25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","4fdb529707247a1a917a4626bfb6a293d52cd8ee57ccf03830ec91d39d606d6d","a9ebb67d6bbead6044b43714b50dcb77b8f7541ffe803046fdec1714c1eba206","5780b706cece027f0d4444fbb4e1af62dc51e19da7c3d3719f67b22b033859b9","7253b2045ea6b599d85ef9dd7ce2bf5439a1a98a27f078ba2115bedf61d738c7","ca58ededf2c0cd0563e8d83fef922817ff2a1ed9bd750242b17146354c1c5243","9d34b57d308ce327e484887106e68e2a82beaf263fea298e4ada5b3925ccbb8d","fe1f945db9c3cb35788d028ce9338b06256cd6041f2597668b9359f2b4fd4197","641fe481fff812b6a151b7fe0996468ced591244c6682b6ba2610b0bf016a9c6","63e5f3ffc50b8c29acf5396c0468a290c927cb7a5208ffb74add35670867e476","06c3f71832c76a82329b45610793b56d0b78fb02603d90f8a7629f49cb0dec1f","ca586208341738cb5e6d144536d83f91d96856c5828307088d242d52e4d439d4","fde0e854df7095db9f8b5cbe3804845a437750ff3c9edcaf2572e66885b230a3","6a63ec446b7fda7a8f1307c1a4659d6b8d1c617400b46d6b49f3d97ddfa93905","c461e128927c8492fff179d344735023ae189c4b626af91adb7b63c6c4b7248f","6b2706a5cee62ef25fdb7a9a268f558a15de9df894984ed13a07c8318576ef51","353fe785452a3c2d6ff2a41fb0684bd2878e78f3728fc5dae98634ccfaa9beae","521bbccf0edf1f69c488c6828716bdfb04acb69ea3ee5e3b7140bfa22ed6c342","dfdb07c32025c9aac5707797e48c46c8fc1416c3c3a5cab9677a75ab78a787ae","e1e115f590a02130c539f61c20460291711dccbdaa3fe4bbad43ab770dd4306e","e4fe42173b249ff533174cfbde4510ce5345da50c2f717b3ca27eda49929dad1","0dbd184576784dbc0b0caa1f022bbb1024a4f27b77e9bf5738c73841c218f4ab","17023bb4eba80df5152e45fa10ec0fa4105fa1c59cb30a51d5724c77cf041151","05b84716272aee3042dbeb319aa5b1ff5b8e77b62ae24be00b88cf8e04cab4a2","86d850e3572c2ed8f56d73a1ce7c5c4f3ea5a62170b82db65f3055f73614099d","4ab4cb977736067eda6f2ff73e521424a818319a1a70616ad2db2ba0b9dd5322","fa790e874499cb17016556f3168948f8d751dcb35a0862a9b9c55bb2ec353d48","795692a29dca5a39f904825a4abc78f9acc3a54ecc6858d8a268c52679f21751",{"version":"6876211ece0832abdfe13c43c65a555549bb4ca8c6bb4078d68cf923aeb6009e","affectsGlobalScope":true},{"version":"394fda71d5d6bd00a372437dff510feab37b92f345861e592f956d6995e9c1ce","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},{"version":"c564fc7c6f57b43ebe0b69bc6719d38ff753f6afe55dadf2dba36fb3558f39b6","affectsGlobalScope":true},{"version":"109b9c280e8848c08bf4a78fff1fed0750a6ca1735671b5cf08b71bae5448c03","affectsGlobalScope":true},"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","e525f9e67f5ddba7b5548430211cae2479070b70ef1fd93550c96c10529457bd","ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","17fe9131bec653b07b0a1a8b99a830216e3e43fe0ea2605be318dc31777c8bbf","3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","2c9875466123715464539bfd69bcaccb8ff6f3e217809428e0d7bd6323416d01","ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","2472ef4c28971272a897fdb85d4155df022e1f5d9a474a526b8fc2ef598af94e","6c8e442ba33b07892169a14f7757321e49ab0f1032d676d321a1fdab8a67d40c","b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","19851a6596401ca52d42117108d35e87230fc21593df5c4d3da7108526b6111c","3825bf209f1662dfd039010a27747b73d0ef379f79970b1d05601ec8e8a4249f","0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","40bfc70953be2617dc71979c14e9e99c5e65c940a4f1c9759ddb90b0f8ff6b1a","da52342062e70c77213e45107921100ba9f9b3a30dd019444cf349e5fb3470c4","e9ace91946385d29192766bf783b8460c7dbcbfc63284aa3c9cae6de5155c8bc","40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","561c60d8bfe0fec2c08827d09ff039eca0c1f9b50ef231025e5a549655ed0298","1e30c045732e7db8f7a82cf90b516ebe693d2f499ce2250a977ec0d12e44a529","84b736594d8760f43400202859cda55607663090a43445a078963031d47e25e7","499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","e38d4fdf79e1eadd92ed7844c331dbaa40f29f21541cfee4e1acff4db09cda33","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","7c10a32ae6f3962672e6869ee2c794e8055d8225ef35c91c0228e354b4e5d2d3","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e",{"version":"f4b4faedc57701ae727d78ba4a83e466a6e3bdcbe40efbf913b17e860642897c","affectsGlobalScope":true},"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7",{"version":"003ec918ec442c3a4db2c36dc0c9c766977ea1c8bcc1ca7c2085868727c3d3f6","affectsGlobalScope":true},"938f94db8400d0b479626b9006245a833d50ce8337f391085fad4af540279567","c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c",{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true},"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a",{"version":"12fb9c13f24845000d7bd9660d11587e27ef967cbd64bd9df19ae3e6aa9b52d4","affectsGlobalScope":true},"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","5078cd62dbdf91ae8b1dc90b1384dec71a9c0932d62bdafb1a811d2a8e26bef2","a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c",{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true},"2f32444438ecb1fa4519f6ec3977d69ce0e3acfa18b803e5cd725c204501f350","0ab3c844f1eb5a1d94c90edc346a25eb9d3943af7a7812f061bf2d627d8afac0","b0a84d9348601dbc217017c0721d6064c3b1af9b392663348ba146fdae0c7afd","161f09445a8b4ba07f62ae54b27054e4234e7957062e34c6362300726dabd315","77fced47f495f4ff29bb49c52c605c5e73cd9b47d50080133783032769a9d8a6","e6057f9e7b0c64d4527afeeada89f313f96a53291705f069a9193c18880578cb",{"version":"34ecb9596317c44dab586118fb62c1565d3dad98d201cd77f3e6b0dde453339c","affectsGlobalScope":true},"0f5cda0282e1d18198e2887387eb2f026372ebc4e11c4e4516fef8a19ee4d514","e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86",{"version":"237581f5ec4620a17e791d3bb79bad3af01e27a274dbee875ac9b0721a4fe97d","affectsGlobalScope":true},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true},"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","e6d81b1f7ab11dc1b1ad7ad29fcfad6904419b36baf55ed5e80df48d56ac3aff","1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","b6b8e3736383a1d27e2592c484a940eeb37ec4808ba9e74dd57679b2453b5865","d6f36b683c59ac0d68a1d5ee906e578e2f5e9a285bca80ff95ce61cdc9ddcdeb","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093",{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true},"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","b338a6e6c1d456e65a6ea78da283e3077fe8edf7202ae10490abbba5b952b05e",{"version":"2918b7c516051c30186a1055ebcdb3580522be7190f8a2fff4100ea714c7c366","affectsGlobalScope":true},"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","982efeb2573605d4e6d5df4dc7e40846bda8b9e678e058fc99522ab6165c479e","e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055",{"version":"d67fc92a91171632fc74f413ce42ff1aa7fbcc5a85b127101f7ec446d2039a1f","affectsGlobalScope":true},{"version":"d40e4631100dbc067268bce96b07d7aff7f28a541b1bfb7ef791c64a696b3d33","affectsGlobalScope":true},"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","42180b657831d1b8fead051698618b31da623fb71ff37f002cb9d932cfa775f1","4f98d6fb4fe7cbeaa04635c6eaa119d966285d4d39f0eb55b2654187b0b27446",{"version":"e4c653466d0497d87fa9ffd00e59a95f33bc1c1722c3f5c84dab2e950c18da70","affectsGlobalScope":true},"e6dcc3b933e864e91d4bea94274ad69854d5d2a1311a4b0e20408a57af19e95d","2119ab23f794e7b563cc1a005b964e2f59b8ebcb3dfe2ce61d0c782bfd5e02a2","0fd641a3b3e3ec89058051a284135a3f30b94a325fb809c4e4159ec5495b5cdc","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","e66eb237e7629bdc09f5f99fd69b73a0511fafb799783496a37432dde5ce0bf0","fdec06934bf00cb7c1187b7f2f1ac6bf2f327ab5af71a543c48d919baa194f1a","9c8f99dfcd80875222e3a4923525595503174088a6eedce78ae3ea81fd650323","652c8e676e1b94c7829671c0eb237528f76a0ba67ac846c065bceb4088ebddd7","caac4c00061a947d2b1010bb6464f06197f2671bdf948fa1aa40bf1e244ee2a0","95b6c669e7ed7c5358c03f8aa24986640f6125ee81bb99e70e9155974f7fd253","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","c3e5b75e1af87b8e67e12e21332e708f7eccee6aac6261cfe98ca36652cdcb53","f7dd7280ee4f0420865e6423fe199aeac63d1d66203a8b631077cdc15501ef1f","ef62b4aa372f77458d84c26614b44129f929e263c81b5cd1034f5828a5530412","8610558ae88a43ad794c4ab1da4f0e8e174e0357c88f6cbb21f523e67414e9a9","0b0feb9837c561c0a67b61024328045bb16bac6e4b10f7b0b217d3b8b43b0b12","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","d1c6c35d174dbe63a76ed8ac6621cca8dbe8794961a2121feb5f0239747d1b7e","051c1bc0efd3690031a97ac49133c9486c22bd07852e75a11ed4b40ceb722569","a22270cba4f004f64a61cec3e39574416e3ca72e848f53a36ba3add746243217","447b9b631351b40faa0e961e6cbb5e269bc1fa61f7a615b8077b31a94aaefae3","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","e641fd321ca5fe17b532bd3b5a6e85a8741bbde7a9d7110d8ed272605c1c4a25","9d63720cd09e8b0ae76e0ade1993b7ec600e6729e453f459d4039d6914914c1a","8b324c8813c2bee210a7a79eede7abc4b5c60132fd497e140ce312a856af22a4","ff2d2f19561cd3a594d7cfeeb29797e62c8d9ef62df65916e6be9bdcfbaf8f7d","d59191f0bb663800c0856116d69ae11125eeae891d0a46c0be52f3c78ed4890e","d8360fe15a60f549584a9ff7d0e6129ed77abdbcf062b4da1a10a78175d34f71","a57b37eae916e680e5e15b36d17b22bb05834115041fe940f11d9e714501ff84","e53086c8f861bee1717e3e001498d2a493f786c6fcbb0027fc4352f00fcaa3cd","446242adee16900500f9d9dba2678258641f7e8f692f43c18dde8872167107bb","6ef7ba3b3d2514336c59d1af84e2d7550a886a5be193d9cb980cc6d16698236f","185e38aa301aaaaf3870183acd48f9b4da7baa5282cb9ed102a10004b0751cc2","1f0c7b51e98442f125414c1d43c6a04abc8ee800066834d742eb99b0e542d327","131c58b9b527fa99139dabaaf585ed52e9f5c450c1347c87bcb9af9b884e63ea","2642f053f18152ed5ba6403217f932e4fa0be0077f38734b168ab92da948b3c4","5718fb71731197c4e623120e93c5ece9061f569aa4dc28ffcbb8b4fb5ffe2ba6","9bc5d8cd23570760dc417cb10b01079bdb919b4dfeaab9c4341cf11d37d7a29e","0671e90198a35ffd8e5dd35c5ce0fd4839305f6fe9878ca9851a25c097a7874a","a3d9df9d57f7e47f70e013a46cf1c38177579dbb2c5b567bde24c7a67ed1303d","b4ac0ae1e7ed09d2ab8496d65c04643742a1811c6c5f34d9f9504a3868bc02e8","b63b8dfe391e40354edfb991062b8e8e28ef36a28644a7904f6a38f51a8a2386","375ecb9cebdd43c6fd230cfc02c6640344aadf920319b73a3c8514f45f23167c","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73","67c51fa68aadbb50e4ffc650b704620e0393bddb3d3eac3a6195bf1956562fe4","8187d9966b8fa5a2d0e53c71903adb5aa71ebc2a23410ab2d37eb764db800829","d851073758ff1ce39bb428d8a3b3385ca26da1745ca742789e876d67dc0aae43","0cee5b30f4300e628927dde7e7ae7b5bc32250a685242474d069b9346da8a2b1","6fdc7cbbbc0601f9bb153c30c0e8063321cd1c9211ad512b9fde1d1f785b35dd","6ae7157666262b5c0402463531996601150583cb1f4f9421f184a0eec9049f10","fbd0ac5a6097c20307587444815092eb1825d831991363423ef0ce70ef053e82","ec0b2f8ed3cc053fdb004ab4979c32625179a746717504e08fc30cef9ec9d7a3","2887592574fcdfd087647c539dcb0fbe5af2521270dad4a37f9d17c16190d579","ed434fd49cf57789f99d3d2f4fb4d5f4930825280ceaae21200d840609345161","3ea3b60de13285b50d9752812d3a6d2cae078d89031713613f58cd2f5565589a","4b0465994a4b18dd63a9af850c74024e6184deac2477ab87135f7d1b11a07178","3031ed6baeacbaf771576f64094d8a977e5be37b04d4dbb335fff9cc1d95a147","5f02cf0f7cc845c12b09607f97e57f942c313ebee6c33a3efbc346f19b499c7f","8e1eb67ef6924cd14793af526f9a4e3195b5734920a75ec29900731b1997f2ce","07fa4bb359f3cacde0e0b6d75cd9a53b88168088be58e01b385cd12e12a6d5d4","52d5d4a344ea0781bf00874c4829e3cfb0c12e1fa28c17740e773bc247fa663c","89ebb5291da50663149fc01245eeca4f8bf1a2bd8a3fe84ea62d926d53a6460f","792128daaa6209b5d52148b1952b56aad02fcf72435283a2d5ac1fb22113cd91","c474689555d4e49d5210e6c6d95f939e31f49158af350cbc403e4fdda5d32386","d4c5aebfd4d5468e03fee82920222d861737cc6ec5c9829474a36e379753fc52","f8fd01e7967e335266c6113c5d9bf15113768c5747265420dae0fdf1868eb05c","7a89d77bf137521a06ff5b3ce7297c663f3c27912b09320fa520c1b2d6bab9e5","7647ed4e66d98048478e6245f50b794a916ffa456fb362672e52c01e1b09a644","9a22045cb43de6fab0b5e524e4cef807e5a2c6e0a49044de56b65448e1572a14","4441e06cf8e7ffff0519950e34df3608ca1016f09f83fdfb7f71ab7376ac5a47","45d0cb97f71ad1fd0688b8a95c2a2b3cce347cd458ec365af4079c0273b49dc6","6c86a8ced863164acfbe7753660a7ba4aa97cdaa1e3b8d193a18316f906d4bbf","2dd10019ccc6f059b703db2f58f6f385625d235869fe562978b5a913e5db4c69","e4c66039756093e60d857430f451ffff1ca3fa5a951367b67dcc8f29b47b2d72","48433ed0754c860ebfeeec213f9c5943cc6b8aa7b70ce1bd9c5c6a490ed91229","c2708a205c4afa73bfeebaf0e939390b3b3fe9cd1788b09389ee0d736cd75a72","8f6d44ee7619da14f50cf051a243c41793ff1dccda8d8a3bb2255989df114c30","2aca83fda179d79a68a259bc47999615976b935d2eeb391304db8a095af721e6","26b3b07bb0229b36ba87ec2b0ca1a42a927c2e8a8bd5ae9339d5a82d950eb3ce","8767c93beffebe9eda0c03e4893ab2fe9b62ff65bf767a003cbba50cfe810a28","d7f211b5ba9e9fc21ba0fbf12b3ceda8680f672da595068dbb4d2d1f9a0c83b1","e613a48817a40243523fa26bb5e3396e6d60c79a1c0c59274889560f34cfdde7","ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","80b232969d72e6f08081a4a0b558537db2671a1a60bb44559d5e3b5f1fc89cd6",{"version":"841784cfa9046a2b3e453d638ea5c3e53680eb8225a45db1c13813f6ea4095e5","affectsGlobalScope":true},"646ef1cff0ec3cf8e96adb1848357788f244b217345944c2be2942a62764b771","0ab7506c71d3467c8db4fdc2512e5960afcfeb0a4f51467d79c9b51af5ec9e63","d45bd3d7c328e85331b3deb75be0f5bef5746ff9efa27900c769ad0e3461acb4","0eb2ed1c1c8d87ba91ae080e95a5f4891e3bdd31626b894655985760a2e56afd","3cfb7c0c642b19fb75132154040bb7cd840f0002f9955b14154e69611b9b3f81","8387ec1601cf6b8948672537cf8d430431ba0d87b1f9537b4597c1ab8d3ade5b","d16f1c460b1ca9158e030fdf3641e1de11135e0c7169d3e8cf17cc4cc35d5e64","a934063af84f8117b8ce51851c1af2b76efe960aa4c7b48d0343a1b15c01aedf","e3c5ad476eb2fca8505aee5bdfdf9bf11760df5d0f9545db23f12a5c4d72a718","d0570ce419fb38287e7b39c910b468becb5b2278cf33b1000a3d3e82a46ecae2","3aca7f4260dad9dcc0a0333654cb3cde6664d34a553ec06c953bce11151764d7","a0a6f0095f25f08a7129bc4d7cb8438039ec422dc341218d274e1e5131115988","b58f396fe4cfe5a0e4d594996bc8c1bfe25496fbc66cf169d41ac3c139418c77","45785e608b3d380c79e21957a6d1467e1206ac0281644e43e8ed6498808ace72","bece27602416508ba946868ad34d09997911016dbd6893fb884633017f74e2c5","2a90177ebaef25de89351de964c2c601ab54d6e3a157cba60d9cd3eaf5a5ee1a","82200e963d3c767976a5a9f41ecf8c65eca14a6b33dcbe00214fcbe959698c46","b4966c503c08bbd9e834037a8ab60e5f53c5fd1092e8873c4a1c344806acdab2","480c20eddc2ee5f57954609b2f7a3368f6e0dda4037aa09ccf0d37e0b20d4e5c","40a9e5673448badb43d693daf20698c452782ae1682887b9d1ccbf207589781a","f2834e7008d641386a0d313ef33e974effb5815755254506341a0f3ba846a506","2e44250d356340733b1f210ad994bf11a0ae802186d5ad6b602661030f811db2","d01f869e0aa82d99b590ac59b6906d0f4ccae1d903d1dd1e622d944f4741b829","8d5a0a154fda1d5422fc0a0432821d5485ef88588ceb267651bf0ac786addcfa","b25d24260ac27016213b336707cb6bd279e12b946304118837ca0bd93831bb0b","81b8cf069b2fad8ff8112f832db6a32b7735b3291855ae71876e8dd07687a438","da0f84fcd93700b4a5fbf9c6f166a6cc19fc798231bff56dd1e3875bfc6966eb","634ff08e0143bec98401c737de7bfc6883bfec09200bd3806d2a4cfc79c62aaa","90a86863e3a57143c50fec5129d844ec12cef8fe44d120e56650ed51a6ce9867","472c0a98c5de98b8f5206132c941b052f5cc1ae78860cb8712ac4f1ebf4550ca","538c4903ef9f8df7d84c6cf2e065d589a2532d152fa44105c7093a606393b814","cfcb6acbb793a78b20899e6537c010bfbbf939c77471abcdc2a41faf9682ca1a","a7798e86de8e76844f774f8e0e338149893789cdc08970381f0ae78c86e8667f","eebc21bb922816f92302a1f9dcefc938e74d4af8c0a111b2a52519d7e25d4868","6b359d3c3138a9f4d3a9c9a8fda24be6fd15bd789e692252b53e68ce99db8edc","9488b648a6a4146b26c0fd4e85984f617056293092a89861f5259a69be16ca5c","e156513655462b5811a8f980e32ccd204c19042f8c9756430fe4e8d6f7c1326e","5679b694d138b8c4b3d56c9b1210f903c6b0ca2b5e7f1682a2dd41a6c955f094","ca8da035b76fb0136d2c1390dda650b7979202dbe0f5dc7eaefcde1c76dee4f4","4b1022a607444684abeee6537e4cace97263d1ef047c31b012c41fdc15838a79",{"version":"dd0271250f1e4314e52d7e0da9f3b25a708827f8a43ceff847a2a5e3fd3283e8","affectsGlobalScope":true},{"version":"47971d8a8639a2a2dd684091c6e7660ec5909fed540c4479ca24e22ac237194e","affectsGlobalScope":true},"e1075312b07671ef1cbf46409a0fa2eb2b90bb59c6215c94f0e530113013eeda","1bfd63c3f3749c5dc925bb0c05f229f9a376b8d3f8173d0e01901c08202caf6f","da850b4fdbabdd528f8b9c2784c5ba3b3bedc4e2e1e34dcd08b6407f9ec61a25","e61c918bb5f4a39b795a06e22bc4d44befcefd22f6a5c8a732c9ed0b565a6128","ee56351989b0e6f31fd35c9048e222146ced0aac68c64ce2e034f7c881327d6d","f58b2f1c8f4bcf519377d39f9555631b6507977ad2f4d8b73ac04622716dc925","4c805d3d1228c73877e7550afd8b881d89d9bc0c6b73c88940cffcdd2931b1f6","4aa74b4bc57c535815ae004550c59a953c8f8c3c61418ac47a7dcfefba76d1ba","78b17ceb133d95df989a1e073891259b54c968f71f416cd76185308af4f9a185","d76e5d04d111581b97e0aa35de3063022d20d572f22f388d3846a73f6ce0b788","0a53bb48eba6e9f5a56e3b85529fbbe786d96e84871579d10593d4f3ae0f9dba","d34fb8b0a66f0a406c7ce63a36f16dda7ff4500b11b0bd30a491aa0d59336d1f","282b31893b18a06114e5173f775dd085597ca220d183b8bd474d21846c048334","ed27d5ce258f069acf0036471d1fbb56b4cb3c16d7401b52a51297eca651db62","ec203a515afd88589bf1d384535024f5b90ebe6b5c416fb3dcca0abd428a8ba4","32a2a1374b57f0744d284ca93b477bd97825922513a24dfe262cbf3497377d96","a8b60d24dc1eb26c0e987f9461c893744339a7f48e4496f8077f258a644cffab",{"version":"3f9df27a77a23d69088e369b42af5f95bcb3e605e6b5c2395f0bfcd82045e051","affectsGlobalScope":true},"9fd080a9458c6d6f3eb6d4e2b12a3ec498d7d219863e9dca0646bdee9acce875",{"version":"e5d31928bee2ba0e72aeb858881891f8948326e4f91823028d0aea5c6f9e7564","affectsGlobalScope":true},"9a9ba9f6fd097bb2f57d68da8a39403bbe4dc818b8ccd155a780e4e23fa556f2","e50c4cd1f5cbce3e74c19a5bbf503c460e6ae86597e6d648a98c7f6c90b596dd",{"version":"fa140f881e20591ce163039a7968b54c5e51c11228708b4f9147473d06471cf5","affectsGlobalScope":true},"295eca0c47be1191690fd2fe588195fff9d4dc43852aceb8b4cab2aa634579f0","59ee7346e19b0050508a592702871dc943083c6dcb69a47d52e888115d840781","067712491fb2094c212c733dd8e2d56e74c309a9ce9dac9e919286b7245a1eb4","a5eae58ac55bd30c42359e4b01fb2be5eddac336869d3f04ffb4daa54b58f009","d12d691ef8933e8db39f2ca81d6973940ff5e37bb421752f5b6e7bc15dea3abf","4c5f8bd9b3a1aae4e4fddfee41667e495a045f73ed603993038fa6a8ba92fa14","dfb274ab0f319cf18ce7152067c25f984c7fd1924fc72b3f66734588444c934a","108c8c05cbc3fbbbd4ff4fc0779c9bef55655c28528eb0f77829795dc9f0b484","a7e5444d24cdec45f113f4fb8a687e1c83a5d30c55d2da19a04be71108ad77bd","41ec17e218b7358fcff25c719bc419fec8ec98f13e561b9a33b07392d4fec24c","23c204326746e981e02d7f0a15ab6f8015f9035998cb3766c9ddbf8ea247aea2","25f994b5d76ce6a3186a3319555bbba79706dac2174019915c39ac6080e98c7e","dfa4e2c6a612d43851ccbc499598cb006a3a78bc8c7f972c52078f862fa84e47","02c1705fa902f172be6e9020d74bcd92ce5db8d2ef3e1b03aabc2ac8eb46c3db","99d2d8a0c7bb3dd77459552269a7b5865fa912cedab69db686d40d2586b551f7","b47abe58626d76d258472b1d5f76752dd29efe681545f32698db84e7f83517df","3a99bbbbbf42e45c3d203e7c74f1319b79f9821c5e5f3cdd03249184d3e003ce","aaacc0e12ab4de27bdf131f666e315d8e60abec26c7f87501e0a7806fc824ae6","3b4195afd41a9215afc7be0820f8083f6bd2e85e5e0b45bb0061fb041944711e","108df8095f5e25d7189dd0d1433ac2df75ec40c779d8faf7d2670f1485beb643","ddd3c1d3c9ff67140191a3cf49b09875e20f28f2fc5535ae5ea16e14293a989b","7b496e53d5f7e1737adcb5610516476ee055bf547918797348f245c68e7418fe","577f44389d7faedd7fc9c0330caf73140e5d0d5f6c968210bff78be569f398a7","3046c57724587a59bceefadd30040d418e9df81b9f3cfd680618a3511302ed7a","15ccc911ed15397e838471bfe6d476c28deffe976c05cb057e6b1ea7491242c2","64b5a5ebdaead77a9a564aa938f4fb7a45e27cda7441d3bee8c9de8a4df5a04f","a48037f7af5f80df8973db5e562e17566407541de284b8dadf1879ea3aed8a2f","dab97d96ce986857150db03f0d435b44c060d126b4a387c7807f4e9f6c92e531","85f39366ea7bc5e34b596fc97de18a7e377856755e789d8e931054f2191d9b8b","daf3ea3d49f6e8a2fa70b7ca1f21bd97f1b65021b31fbfccb73dd55f86abb792","b15bd260805f9dd06cd4b2b741057209994823942c5696fd835e8a04fb4aab6b","6635a824edf99ed52dbd3502d5bce35990c3ed5e2ec5cef88229df8ac0c52b06","d6577effa37aae713c34363b7cc4c84851cbabe399882c60e2b70bcbb02bfa01","8eaf80ad438890fe5880c39a7bbf2c998ce7d29d4c14dd56d82db63bd871eefb","9b3e7f776f312c76ac67e1060e5398d7ac2c69d6a3a928a9daaae2eb05b15f56","202042eccb4789b7dee51ba9ecab0b854834ea5c1d6a3946504bfc733d4468c3","2b2ef76a9f36094b07ee6f76a5ac6903f2f65c0a20283201814a8d1e752cb592","8882e4e087d0bc8cc713cb3d8090c45d33e373e6f5c83e0f8d00fe6a950ef875","42979c197a22211d72c9cf1de8559f0a39de0b0687eea63c6407a69d9d73c13f","cc36098e27200f5daceffff4a4694148746aaa1b369536186fa1caa43d8b4bde","07133796953f82127aebef603392f1430690fe6cfd5d3d4c2bd3b277c6566d79","9079300efc80cdcb5a5cd153bdc354ac3439619e661e5f35413f81f94d4aa897","3655e77b67da6b52b34f7abd79890cdbc9ce2e2a3579fc2568f07d77d1d60ec9","95a1ff30ceba2b8c185a76002e2a4578cca9a593d8b642b7d5b13275ece952b9","2a43ea656e1e3ae2ec876766d9d4576a53b079a1cd352367db12fc721033c08b","e8835cfaf67d1730e430a800d447ea79d33c59fc990455965ca85dcc16c6ec64","98631e5438157a2bc50970527c20d9a0d02def63700cb8f21ee19520a982fbc0","93a5f2ecf21f69045a129ef7821396276c117b34eb39d0b5510ff90c34839f56","4d054866f6bed47338a905264c4cc16108dfb55353a97d67b5beb0393f78fbc4","cc611eddaabd228585429f406dc5b2ef53db92e954f3fab97f8cc67b84b0a67b","51d3abc39997f19e1e0e13fe545c786465259a3f6625b27828e47847a00acc27","982c00b942df3ad3aa49500b7f253bad1f2624d4c5e0e0eea1ee20529d90296f","a9f610a8bd1aa513ca9ee39a05566e7439b45ef24670858f4b0a3b1b33a17923","a7b268ed0284472916b39062cea1ec8ca946b048b7f8992b14221d4318cb7f5b","7748692e43d33e0f58fd69f9e84f568430d147be8a5fec55aea68c73f63908a1","cee3e7bec863f019aa744e00dd7a8470f2f6ff951c498c501ad6e296aca9f418","98e5bfadb80d850109194eb7cbdae761564cf0aa4cdd39e70eb73fe628af6bf8","5da731f0b18d358e4e0ca682928298de26c6eabee5990d03333e0e8aef335ea2","5ed1241d2008dfabf2145443b9fb285b7bdcd8211266187ed9dfb2ae5b80f869","f60e1afcef13dcd11edafbd3f7720a5a50c3d2d90b4cb27cea58adb16efd12ed","e6a1fc7243e8a4f92cbafa2bac261e3540968403f082df44ae521b8e2658efbd","b745f5b14ad0407d94b3b3e764ceb6e6c1c0873528461421046751f7a3c84b17","554028fd3b11a78660ed0cb98b5fd343bc9b8a9b8495114e6ae5d13aed49f242","e4125c670944f6369be310c830b37391a82b4f8f500399a17b041962e1fe1dd2","60cded932be8d4f5de5c3a7f56c5e01438ce8ec7f110d4c87fdf2bfdb910dbd0","06e0622d8d29254863de52ca0da62329d78c5e02086481fbcef6c9cd74796d84","ad5346fa860e1577699a7a1e6543f7e811dd209164ed4e226566595c50ad3dd4","749ad4dbb8d1d33ab4283f8ffa875669e067f917cf1d17162e149b571c689f9a","dc278a8129f50ef9555060cf12ba10a11c2a816bad01c2f1abd2f87f6ac3796c","ee94a249d6f6c94e2656e1abc6820a25a88ec1351c21929d1365d60a4381d797","bc5a1ad94db45ea72a8632a18d57efe131671c54c51347c8c9a266f5ca059d8f","1ecb3bf08e05193e81b052ca5180d2a2cfcf64602d57312dd7a5686755938b88","ee2a7977e7cc78906b894656baaf8d4080962056ee12b2024fa2f42bf8e447bf","88124457c6ce628eb357aefa18c0e23a58d92997bed3e28a5e53217a9d8ec590","bda82ce02ca6b44902394fd57e57b1b41e4de290727d92cef3cb537b21cbc5af","c288bf4485ccf06ac2da23408bbdd47c987b1ea7db59f7d3caf736d115323e42","c0007fbf0456531d2c2ac6243689559d4ea2b5a5bba9ddb28c006db5a15fe32d","c7d9afa4d252d9dee7c7c0c3752db5efcbaa39dda3df9a1e193aea3a0d056ac1","475709fda88e76c7b3bcf00a2ffa16eb2d91088caa6d9f4abdf9a6592664f676","ec1bc8ff1a835119253f23d674c3e13ba983744620a0655f73dc61f6aaeea004","4f9b48c8b5098f29ddf9041e81676fb06b078e1dfe76e1b160f93ca214d05ff3","94c5a9b9991dc4e164779653c1f2af90ad961fd23d9164c0b6e570be7456ce31","13ed3c245e4a6a8b90d3f0909198c01fd7cb48e41364c1ece3c11edecb9dc9c7","81212195a5a76330d166ecfd85eb7119e93d3b814177643fa8a10f4b40055fbf","b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","82e5a50e17833a10eb091923b7e429dc846d42f1c6161eb6beeb964288d98a15","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","f9e22729fa06ed20f8b1fe60670b7c74933fdfd44d869ddfb1919c15a5cf12fb","d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed",{"version":"a8932b7a5ef936687cc5b2492b525e2ad5e7ed321becfea4a17d5a6c80f49e92","affectsGlobalScope":true},"689be50b735f145624c6f391042155ae2ff6b90a93bac11ca5712bc866f6010c",{"version":"64d4b35c5456adf258d2cf56c341e203a073253f229ef3208fc0d5020253b241","affectsGlobalScope":true},"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","dd0c1b380ba3437adedef134b2e48869449b1db0b07b2a229069309ce7b9dd39","1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a",{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true},"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","ee65fe452abe1309389c5f50710f24114e08a302d40708101c4aa950a2a7d044","63786b6f821dee19eb898afb385bd58f1846e6cba593a35edcf9631ace09ba25","c5a14bdeb170e0e67fb4200c54e0e02fd0ec94aca894c212c9d43c2916891542","a39f2a304ccc39e70914e9db08f971d23b862b6f0e34753fad86b895fe566533","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","d88a5e779faf033be3d52142a04fbe1cb96009868e3bbdd296b2bc6c59e06c0e","8b677e0b88f3c4501c6f3ec44d3ccad1c2ba08efd8faf714b9b631b5dba1421b","8a19491eba2108d5c333c249699f40aff05ad312c04a17504573b27d91f0aede","199f9ead0daf25ae4c5632e3d1f42570af59685294a38123eef457407e13f365","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","ddef25f825320de051dcb0e62ffce621b41c67712b5b4105740c32fd83f4c449","1b3dffaa4ca8e38ac434856843505af767a614d187fb3a5ef4fcebb023c355aa","15fe687c59d62741b4494d5e623d497d55eb38966ecf5bea7f36e48fc3fbe15e",{"version":"2c3b8be03577c98530ef9cb1a76e2c812636a871f367e9edf4c5f3ce702b77f8","affectsGlobalScope":true},"1ba59c8bbeed2cb75b239bb12041582fa3e8ef32f8d0bd0ec802e38442d3f317"],"options":{"allowSyntheticDefaultImports":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":99,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":99,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"fileIdsList":[[73,201,245],[73,74,76,201,245],[73,75,201,245],[201,245],[73,75,76,77,78,79,80,201,245],[75,201,245],[69,70,201,245],[63,201,245],[63,66,201,245],[63,64,65,67,201,245],[69,201,245],[68,201,245],[68,69,71,72,201,245],[201,245,537],[201,245,248,289,295,298],[201,245,300],[201,245,298,312,315],[201,245,298,299,300,301,316],[201,245,312,332,334,363,364],[201,245,312,332,376,378],[201,245,377],[201,245,312,332],[201,245,365,378,379,380,381],[201,245,312,332,363],[201,245,291,295,312,335,338],[201,245,336,337],[201,245,315,335],[201,245,315],[201,245,312,339,350],[201,245,332,369],[201,245,312,332,369,370],[201,245,312,367,369],[201,245,295,312,332,369,370],[201,245,295,312,332,369,372],[201,245,296,297,312],[201,245,309,312,332,366,369,370,371,372,373,374,375],[201,245,312,322,328,332,368],[201,245,352,353],[201,245,353,354],[201,245,329],[201,245,312,329],[201,245,329,330,331],[201,245,296,297,312,317,322,328],[201,245,312,357],[201,245,357,358,359,360],[201,245,312,356],[201,245,295,302],[201,245,304,306,308],[201,245,297],[201,245,302,303,309,310,311],[201,245,396],[201,245,393,394,395,396,397,398,399,400,401,402,403,404,405],[201,245,386],[201,245,342],[201,245,393,394,395],[201,245,393,394],[201,245,342,396,397],[201,245,394],[201,245,388],[201,245,385,387],[201,245,406],[201,245,490],[201,245,477,478,479],[201,245,472,473,474],[201,245,450,451,452,453],[201,245,416,490],[201,245,416],[201,245,416,417,418,419,464],[201,245,454],[201,245,449,455,456,457,458,459,460,461,462,463],[201,245,464],[201,245,415],[201,245,468,470,471,489,490],[201,245,468,470],[201,245,465,468,490],[201,245,475,476,480,481,486],[201,245,469,471,481,489],[201,245,488,489],[201,245,465,469,471,487,488],[201,245,469,490],[201,245,467],[201,245,467,469,490],[201,245,465,466],[201,245,482,483,484,485],[201,245,471,490],[201,245,426],[201,245,420,427],[201,245,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],[201,245,446,490],[201,245,537,538,539,540,541],[201,245,537,539],[201,245,260,295,543],[201,245,251,295],[201,245,288,295,550],[201,245,260,295],[201,245,553,555],[201,245,552,553,554],[201,245,257,260,295,547,548,549],[201,245,544,548,550,558,559],[201,245,258,295],[201,245,257,260,262,265,277,288,295],[201,245,305],[201,245,295],[201,242,245],[201,244,245],[201,245,250,280],[201,245,246,251,257,258,265,277,288],[201,245,246,247,257,265],[201,245,248,289],[201,245,249,250,258,266],[201,245,250,277,285],[201,245,251,253,257,265],[201,244,245,252],[201,245,253,254],[201,245,255,257],[201,244,245,257],[201,245,257,258,259,277,288],[201,245,257,258,259,272,277,280],[201,240,245],[201,240,245,253,257,260,265,277,288],[201,245,257,258,260,261,265,277,285,288],[201,245,260,262,277,285,288],[201,245,257,263],[201,245,264,288],[201,245,253,257,265,277],[201,245,266],[201,245,267],[201,244,245,268],[201,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[201,245,270],[201,245,271],[201,245,257,272,273],[201,245,272,274,289,291],[201,245,257,277,278,280],[201,245,279,280],[201,245,277,278],[201,245,280],[201,245,281],[201,242,245,277,282],[201,245,257,283,284],[201,245,283,284],[201,245,250,265,277,285],[201,245,286],[197,198,199,200,201,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[245],[201,245,265,287],[201,245,260,271,288],[201,245,250,289],[201,245,277,290],[201,245,264,291],[201,245,292],[201,245,257,259,268,277,280,288,290,291,293],[201,245,277,294],[201,245,570,609],[201,245,570,594,609],[201,245,609],[201,245,570],[201,245,570,595,609],[201,245,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],[201,245,595,609],[201,245,258,277,295,546],[201,245,258,560],[201,245,260,295,547,557],[201,245,612],[201,245,257,260,262,265,277,285,288,294,295],[201,245,307],[201,245,263,295],[201,245,349],[201,245,312,347,348],[172,201,245],[201,245,312,333],[201,245,312],[201,245,383],[201,245,340,343],[201,245,340,343,344,345],[201,245,312,320],[201,245,257,295,312,319,320,321],[201,245,295,312,318,319,321],[201,245,304,346],[201,245,312,314],[201,245,313],[201,245,326,327],[201,245,312,322,323,324,325],[201,245,312,322,328,332,339,351,355,361,362],[201,245,312,322,328],[201,245,382,384],[201,245,341],[61,201,245],[57,201,245],[57,58,59,60,201,245],[201,210,214,245,288],[201,210,245,277,288],[201,245,277],[201,205,245],[201,207,210,245,288],[201,245,265,285],[201,205,245,295],[201,207,210,245,265,288],[201,202,203,204,206,209,245,257,277,288],[201,210,218,245],[201,203,208,245],[201,210,234,235,245],[201,203,206,210,245,280,288,295],[201,210,245],[201,202,245],[201,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,245],[201,210,227,230,245,253],[201,210,218,219,220,245],[201,208,210,219,221,245],[201,209,245],[201,203,205,210,245],[201,210,214,219,221,245],[201,214,245],[201,208,210,213,245,288],[201,203,207,210,218,245],[201,210,227,245],[201,205,210,234,245,280,293,295],[171,201,245],[159,160,161,201,245],[162,163,201,245],[159,160,162,164,165,170,201,245],[160,162,201,245],[170,201,245],[162,201,245],[159,160,162,165,166,167,168,169,201,245],[62,81,83,85,87,123,133,134,135,138,143,144,145,158,175,176,177,178,179,183,190,191,192,193,194,201,245],[83,84,145,201,245,407],[92,96,97,201,245],[83,201,245],[101,102,201,245],[83,92,201,245],[201,245,411],[87,92,201,245],[62,81,83,201,245],[92,201,245],[83,87,92,106,201,245],[174,201,245],[141,201,245],[83,84,98,201,245,407,491],[83,84,145,201,245,407,491],[194,201,245,407],[83,103,104,105,201,245,407],[201,245,407,413],[83,84,126,201,245,407,491],[83,87,106,107,201,245,407],[83,108,201,245,407],[83,87,128,201,245,407],[62,175,201,245,407],[89,201,245],[81,83,201,245],[81,201,245],[81,83,135,201,245],[135,136,137,138,139,201,245],[124,201,245],[125,126,201,245],[83,87,92,93,94,95,98,99,100,101,102,103,104,105,107,108,109,123,127,201,245],[83,87,141,201,245],[128,201,245,407,491],[124,125,127,128,142,201,245],[94,95,99,100,101,103,104,105,129,130,131,132,133,134,140,201,245],[187,201,245,407],[188,201,245,407],[81,186,201,245,407],[83,110,120,123,201,245],[83,92,110,201,245],[87,112,114,115,123,201,245],[113,201,245],[111,201,245,407],[201,245,407,510],[116,201,245,407],[84,116,201,245,407],[110,111,115,116,117,118,119,121,122,201,245],[83,145,201,245],[83,145,146,201,245],[83,145,146,147,148,151,152,153,154,155,156,157,201,245],[201,245,407,491],[83,145,146,201,245,407,491],[83,145,146,158,201,245,407,491],[93,146,201,245,407,411],[147,148,149,150,151,152,153,154,155,156,157,158,201,245],[83,145,149,150,201,245],[83,149,150,201,245],[88,201,245,407,491],[88,89,90,91,201,245],[84,201,245,407],[84,201,245,407,491],[84,85,86,201,245],[201,245,407,411],[145,201,245],[62,195,201,245],[62,201,245],[62,92,175,176,201,245],[62,83,201,245],[62,81,140,201,245],[62,143,201,245],[62,81,184,185,186,187,188,189,201,245],[62,83,191,201,245,407],[62,83,85,193,201,245,407],[62,83,84,85,182,201,245,407],[62,83,85,180,201,245,407],[62,83,192,201,245,407],[62,83,84,181,201,245,407],[62,190,201,245,407],[180,181,182,201,245],[173,201,245],[82,201,245]],"referencedMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"exportedModulesMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"semanticDiagnosticsPerFile":[74,75,76,80,81,77,78,79,71,70,64,67,65,68,66,63,72,69,73,539,537,299,300,301,316,317,298,365,379,378,380,382,364,381,339,338,336,337,351,370,371,368,372,373,374,375,367,366,376,369,354,355,353,330,331,332,329,358,360,361,359,357,356,303,309,302,310,311,312,404,401,400,397,406,393,402,396,395,403,398,405,399,394,389,388,387,407,477,478,480,479,472,473,475,474,450,452,451,454,453,417,415,418,465,419,455,464,456,459,457,460,462,458,461,463,416,491,476,471,481,487,488,490,489,469,470,466,468,467,482,486,483,484,485,420,421,424,422,423,426,427,428,429,425,430,431,432,433,434,435,449,436,437,438,439,440,441,442,445,443,444,446,447,448,386,542,538,540,541,544,545,551,543,556,552,555,553,550,560,559,318,561,557,562,297,305,306,554,563,546,564,242,243,244,245,246,247,199,248,249,250,251,252,253,254,256,255,257,258,259,241,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,278,280,281,282,283,284,285,286,197,295,201,198,200,287,288,289,290,291,292,293,294,565,566,567,548,549,568,569,594,595,570,573,592,593,583,582,580,575,588,586,590,574,587,591,576,577,589,571,578,579,581,585,596,584,572,609,608,603,605,604,597,598,600,602,606,607,599,601,547,610,558,611,313,613,612,614,307,308,352,304,296,377,350,348,349,173,334,333,383,384,340,344,346,345,343,319,321,322,320,347,315,314,335,323,328,326,324,325,327,363,362,385,342,341,62,58,61,60,57,59,11,12,14,13,2,15,16,17,18,19,20,21,22,3,4,26,23,24,25,27,28,29,5,30,31,32,33,6,37,34,35,36,38,7,39,44,45,40,41,42,43,8,49,46,47,48,50,9,51,52,53,54,55,1,10,56,218,229,216,230,239,208,207,238,233,237,210,226,209,236,205,206,211,212,217,215,203,240,231,221,220,222,224,219,223,234,213,214,225,204,228,227,232,202,235,172,162,164,171,166,167,165,168,159,160,161,163,169,170,195,391,392,408,101,98,95,134,97,409,103,104,132,410,129,109,99,412,177,102,131,105,178,194,413,126,414,96,176,107,133,94,108,100,175,130,492,493,494,495,496,497,498,499,500,501,502,139,135,136,137,138,140,503,124,125,127,504,128,142,505,143,141,506,187,185,189,188,186,184,507,508,509,121,144,111,510,122,117,119,110,116,118,115,114,113,511,512,513,514,123,120,150,147,149,148,158,516,517,518,519,515,155,156,154,152,151,157,153,88,89,90,91,520,521,92,112,85,84,179,86,145,522,523,87,528,524,525,93,411,526,527,146,196,191,193,182,180,192,181,190,529,530,531,532,533,534,535,183,174,390,83,82,536,106],"affectedFilesPendingEmit":[[74,1],[75,1],[76,1],[80,1],[81,1],[77,1],[78,1],[79,1],[71,1],[70,1],[64,1],[67,1],[65,1],[68,1],[66,1],[63,1],[72,1],[69,1],[73,1],[539,1],[537,1],[299,1],[300,1],[301,1],[316,1],[317,1],[298,1],[365,1],[379,1],[378,1],[380,1],[382,1],[364,1],[381,1],[339,1],[338,1],[336,1],[337,1],[351,1],[370,1],[371,1],[368,1],[372,1],[373,1],[374,1],[375,1],[367,1],[366,1],[376,1],[369,1],[354,1],[355,1],[353,1],[330,1],[331,1],[332,1],[329,1],[358,1],[360,1],[361,1],[359,1],[357,1],[356,1],[303,1],[309,1],[302,1],[310,1],[311,1],[312,1],[404,1],[401,1],[400,1],[397,1],[406,1],[393,1],[402,1],[396,1],[395,1],[403,1],[398,1],[405,1],[399,1],[394,1],[389,1],[388,1],[387,1],[407,1],[477,1],[478,1],[480,1],[479,1],[472,1],[473,1],[475,1],[474,1],[450,1],[452,1],[451,1],[454,1],[453,1],[417,1],[415,1],[418,1],[465,1],[419,1],[455,1],[464,1],[456,1],[459,1],[457,1],[460,1],[462,1],[458,1],[461,1],[463,1],[416,1],[491,1],[476,1],[471,1],[481,1],[487,1],[488,1],[490,1],[489,1],[469,1],[470,1],[466,1],[468,1],[467,1],[482,1],[486,1],[483,1],[484,1],[485,1],[420,1],[421,1],[424,1],[422,1],[423,1],[426,1],[427,1],[428,1],[429,1],[425,1],[430,1],[431,1],[432,1],[433,1],[434,1],[435,1],[449,1],[436,1],[437,1],[438,1],[439,1],[440,1],[441,1],[442,1],[445,1],[443,1],[444,1],[446,1],[447,1],[448,1],[386,1],[542,1],[538,1],[540,1],[541,1],[544,1],[545,1],[551,1],[543,1],[556,1],[552,1],[555,1],[553,1],[550,1],[560,1],[559,1],[318,1],[561,1],[557,1],[562,1],[297,1],[305,1],[306,1],[554,1],[563,1],[546,1],[564,1],[242,1],[243,1],[244,1],[245,1],[246,1],[247,1],[199,1],[248,1],[249,1],[250,1],[251,1],[252,1],[253,1],[254,1],[256,1],[255,1],[257,1],[258,1],[259,1],[241,1],[260,1],[261,1],[262,1],[263,1],[264,1],[265,1],[266,1],[267,1],[268,1],[269,1],[270,1],[271,1],[272,1],[273,1],[274,1],[275,1],[276,1],[277,1],[279,1],[278,1],[280,1],[281,1],[282,1],[283,1],[284,1],[285,1],[286,1],[197,1],[295,1],[201,1],[198,1],[200,1],[287,1],[288,1],[289,1],[290,1],[291,1],[292,1],[293,1],[294,1],[565,1],[566,1],[567,1],[548,1],[549,1],[568,1],[569,1],[594,1],[595,1],[570,1],[573,1],[592,1],[593,1],[583,1],[582,1],[580,1],[575,1],[588,1],[586,1],[590,1],[574,1],[587,1],[591,1],[576,1],[577,1],[589,1],[571,1],[578,1],[579,1],[581,1],[585,1],[596,1],[584,1],[572,1],[609,1],[608,1],[603,1],[605,1],[604,1],[597,1],[598,1],[600,1],[602,1],[606,1],[607,1],[599,1],[601,1],[547,1],[610,1],[558,1],[611,1],[313,1],[613,1],[612,1],[614,1],[307,1],[308,1],[352,1],[304,1],[296,1],[377,1],[350,1],[348,1],[349,1],[173,1],[334,1],[333,1],[383,1],[384,1],[340,1],[344,1],[346,1],[345,1],[343,1],[319,1],[321,1],[322,1],[320,1],[347,1],[315,1],[314,1],[335,1],[323,1],[328,1],[326,1],[324,1],[325,1],[327,1],[363,1],[362,1],[385,1],[342,1],[341,1],[62,1],[58,1],[61,1],[60,1],[57,1],[59,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[218,1],[229,1],[216,1],[230,1],[239,1],[208,1],[207,1],[238,1],[233,1],[237,1],[210,1],[226,1],[209,1],[236,1],[205,1],[206,1],[211,1],[212,1],[217,1],[215,1],[203,1],[240,1],[231,1],[221,1],[220,1],[222,1],[224,1],[219,1],[223,1],[234,1],[213,1],[214,1],[225,1],[204,1],[228,1],[227,1],[232,1],[202,1],[235,1],[172,1],[162,1],[164,1],[171,1],[166,1],[167,1],[165,1],[168,1],[159,1],[160,1],[161,1],[163,1],[169,1],[170,1],[195,1],[391,1],[392,1],[408,1],[101,1],[98,1],[95,1],[134,1],[97,1],[409,1],[103,1],[104,1],[132,1],[410,1],[129,1],[109,1],[99,1],[412,1],[177,1],[102,1],[131,1],[105,1],[178,1],[194,1],[413,1],[126,1],[414,1],[96,1],[176,1],[107,1],[133,1],[94,1],[108,1],[100,1],[175,1],[130,1],[492,1],[493,1],[494,1],[495,1],[496,1],[497,1],[498,1],[499,1],[500,1],[501,1],[502,1],[139,1],[135,1],[136,1],[137,1],[138,1],[140,1],[503,1],[124,1],[125,1],[127,1],[504,1],[128,1],[142,1],[505,1],[143,1],[141,1],[506,1],[187,1],[185,1],[189,1],[188,1],[186,1],[184,1],[507,1],[508,1],[509,1],[121,1],[144,1],[111,1],[510,1],[122,1],[117,1],[119,1],[110,1],[116,1],[118,1],[115,1],[114,1],[113,1],[511,1],[512,1],[513,1],[514,1],[123,1],[120,1],[150,1],[147,1],[149,1],[148,1],[158,1],[516,1],[517,1],[518,1],[519,1],[515,1],[155,1],[156,1],[154,1],[152,1],[151,1],[157,1],[153,1],[88,1],[89,1],[90,1],[91,1],[520,1],[521,1],[92,1],[112,1],[85,1],[84,1],[179,1],[86,1],[145,1],[522,1],[523,1],[87,1],[528,1],[524,1],[525,1],[93,1],[411,1],[526,1],[527,1],[146,1],[196,1],[191,1],[193,1],[182,1],[180,1],[192,1],[181,1],[190,1],[529,1],[530,1],[531,1],[532,1],[533,1],[534,1],[535,1],[183,1],[174,1],[390,1],[83,1],[82,1],[536,1],[106,1]]},"version":"4.9.5"}
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:142:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:160:./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:14:Agent: Inventory backend product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup): list main code entry points (modules/routes/services), highlight key tests per mode, summarize current state & risks.
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:143:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:161:./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:32:Agent: Inventory backend product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup): list main code entry points (modules/routes/services), highlight key tests per mode, summarize current state & risks.
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:144:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:175:./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:1515:I'll compile a concise but thorough overview of major backend modes, listing entry points with line references, core modules, tests, and current state or risks for each area—including Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets Sync, Analytics, and Legacy Signup. I’ll highlight risks like missing dependency injection, placeholder analytics values, unhandled service return values, and lack of input validation, wrapping up with a next step suggestion focused on adding integration tests and improving GHIN/Sheet client stubs.
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:146:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:274:./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:14:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:147:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:275:./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:34:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:156:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:408:./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:14:Agent: Summarize backend code/routes/tests and current risks for all product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets, Analytics, Legacy Signup) using repo context.
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:157:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:409:./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:32:Agent: Summarize backend code/routes/tests and current risks for all product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets, Analytics, Legacy Signup) using repo context.
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:159:./.code/agents/1/exec-call_4RVJwhQNhzGXDjD9uJcWOYTY.txt:449:./frontend/node_modules/.cache/tsconfig.tsbuildinfo:1:{"program":{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.sharedmemory.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../react-router/dist/development/routeModules-rOzWJJ9x.d.ts","../react-router/dist/development/index-react-server-client-BKpa2trA.d.ts","../react-router/node_modules/cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/shared.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-localstorage.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-memory.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/key-manifest.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-manager.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/index.d.ts","../@auth0/auth0-spa-js/dist/typings/global.d.ts","../@auth0/auth0-spa-js/dist/typings/TokenExchange.d.ts","../@auth0/auth0-spa-js/dist/typings/Auth0Client.d.ts","../@auth0/auth0-spa-js/dist/typings/errors.d.ts","../@auth0/auth0-spa-js/dist/typings/index.d.ts","../@auth0/auth0-react/dist/auth-state.d.ts","../@auth0/auth0-react/dist/auth0-context.d.ts","../@auth0/auth0-react/dist/auth0-provider.d.ts","../@auth0/auth0-react/dist/use-auth0.d.ts","../@auth0/auth0-react/dist/with-auth0.d.ts","../@auth0/auth0-react/dist/with-authentication-required.d.ts","../@auth0/auth0-react/dist/errors.d.ts","../@auth0/auth0-react/dist/index.d.ts","../../src/theme/theme.js","../../src/theme/Provider.js","../../src/context/GameProvider.js","../../src/context/AuthContext.js","../../src/context/SheetSyncContext.js","../../src/context/index.js","../../src/components/ui/Button.js","../../src/components/ui/Card.js","../../src/components/ui/Input.js","../../src/components/ui/Select.js","../../src/components/ui/index.js","../../src/hooks/useOddsCalculation.js","../../src/components/ShotResultWidget.js","../../src/components/BettingOpportunityWidget.js","../../src/components/ProbabilityVisualization.js","../../src/components/EducationalTooltip.js","../../src/components/BettingOddsPanel.js","../../src/components/GameStateWidget.js","../../src/components/StrategicAnalysisWidget.js","../../src/components/AnalyticsDashboard.js","../../src/components/HoleStrategyDisplay.js","../../src/components/EnhancedBettingWidget.js","../../src/components/EnhancedScoringWidget.js","../../src/components/InteractivePlayerCard.js","../../src/utils/api.js","../../src/components/ShotAnalysisWidget.js","../../src/components/ShotVisualizationOverlay.js","../../src/components/GameHistory.js","../../src/components/simulation/SimulationDecisionPanel.tsx","../../src/components/simulation/GamePlay.js","../../src/config/environment.js","../../src/components/simulation/__fixtures__/simulationMockData.js","../../src/components/simulation/__fixtures__/index.js","../../src/components/simulation/TurnBasedInterface.js","../../src/components/simulation/SimulationMode.js","../../src/components/simulation/MonteCarloSimulation.js","../../src/components/simulation/Timeline.js","../../src/components/simulation/PokerBettingPanel.js","../../src/components/simulation/styles/enhancedSimulationLayout.js","../../src/components/simulation/EnhancedSimulationLayout.js","../../src/components/simulation/HoleVisualization.tsx","../../src/components/simulation/index.js","../../src/components/game/CourseImport.js","../../src/components/game/CourseManager.js","../../src/components/PlayerProfileManager.js","../../src/components/game/GameSetupForm.js","../../src/components/game/UnifiedGameInterface.js","../../src/components/GameDashboard.js","../../src/components/WolfGoatPigDashboard.js","../../src/components/HoleVisualization.js","../../src/components/EnhancedWGPInterface.js","../../src/components/ShotRangeAnalyzer.js","../../src/components/ColdStartHandler.js","../../src/components/auth/LoginButton.js","../../src/components/auth/LogoutButton.js","../../src/components/auth/Profile.js","../../src/components/auth/ProtectedRoute.js","../../src/components/auth/AuthHealthCheck.js","../../src/components/auth/index.js","../../src/components/index.js","../../src/components/game/WolfGoatPigGame.js","../../src/components/game/index.js","../../src/components/simulation/FeedAnalyzer.js","../../src/context/TutorialContext.js","../../src/hooks/useTutorialProgress.js","../../src/components/tutorial/ProgressTracker.js","../../src/components/tutorial/TutorialOverlay.js","../../src/components/tutorial/TutorialModule.js","../../src/components/tutorial/InteractiveElement.js","../../src/components/tutorial/modules/GolfBasicsModule.js","../../src/components/tutorial/modules/GameOverviewModule.js","../../src/components/tutorial/modules/TeamFormationModule.js","../../src/components/tutorial/modules/BettingSystemModule.js","../../src/components/tutorial/modules/AdvancedRulesModule.js","../../src/components/tutorial/modules/AnalysisToolsModule.js","../../src/components/tutorial/modules/PracticeGameModule.js","../../src/components/tutorial/TutorialSystem.js","../zod/v3/helpers/typeAliases.d.cts","../zod/v3/helpers/util.d.cts","../zod/v3/index.d.cts","../zod/v3/ZodError.d.cts","../zod/v3/locales/en.d.cts","../zod/v3/errors.d.cts","../zod/v3/helpers/parseUtil.d.cts","../zod/v3/helpers/enumUtil.d.cts","../zod/v3/helpers/errorUtil.d.cts","../zod/v3/helpers/partialUtil.d.cts","../zod/v3/standard-schema.d.cts","../zod/v3/types.d.cts","../zod/v3/external.d.cts","../zod/index.d.cts","../ghin/dist/index.d.ts","../../src/services/ghinService.js","../../src/components/WGPAnalyticsDashboard.js","../../src/components/SheetIntegrationDashboard.js","../../src/components/GoogleSheetsLiveSync.js","../../src/components/Leaderboard.js","../../src/context/MockAuthContext.js","../../src/pages/HomePage.js","../../src/pages/SetupPage.js","../../src/pages/GamePage.js","../../src/pages/index.js","../../src/components/signup/SignupCalendar.js","../../src/components/signup/DailySignupView.js","../../src/components/signup/PlayerAvailability.js","../../src/components/signup/AllPlayersAvailability.js","../../src/components/signup/MatchmakingSuggestions.js","../../src/components/signup/EmailPreferences.js","../../src/pages/SignupPage.js","../../src/pages/AboutPage.js","../../src/pages/RulesPage.js","../../src/pages/AdminPage.js","../../src/components/Navigation.js","../../src/App.js","../../src/index.js","../@types/node/ts5.1/compatibility/disposable.d.ts","../@types/node/ts5.6/compatibility/float16array.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/ts5.6/globals.typedarray.d.ts","../@types/node/ts5.6/buffer.buffer.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/globals.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/dom-events.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/ts5.1/index.d.ts","../collect-v8-coverage/index.d.ts","../@types/istanbul-lib-coverage/index.d.ts","../@jest/console/build/types.d.ts","../@jest/console/build/BufferedConsole.d.ts","../@jest/console/build/CustomConsole.d.ts","../@jest/console/build/NullConsole.d.ts","../@jest/types/build/Global.d.ts","../@jest/types/build/Circus.d.ts","../chalk/index.d.ts","../@types/istanbul-lib-report/index.d.ts","../@types/istanbul-reports/index.d.ts","../@types/yargs-parser/index.d.ts","../@types/yargs/index.d.ts","../@jest/types/build/Config.d.ts","../@jest/types/build/TestResult.d.ts","../@jest/types/build/Transform.d.ts","../@jest/types/build/index.d.ts","../@types/stack-utils/index.d.ts","../jest-message-util/build/types.d.ts","../jest-message-util/build/index.d.ts","../@jest/console/build/getConsoleOutput.d.ts","../@jest/console/build/index.d.ts","../@types/graceful-fs/index.d.ts","../jest-haste-map/build/HasteFS.d.ts","../jest-haste-map/build/types.d.ts","../jest-haste-map/build/ModuleMap.d.ts","../jest-haste-map/build/index.d.ts","../jest-resolve/build/ModuleNotFoundError.d.ts","../jest-resolve/build/shouldLoadAsEsm.d.ts","../jest-resolve/build/types.d.ts","../jest-resolve/build/resolver.d.ts","../jest-resolve/build/utils.d.ts","../jest-resolve/build/index.d.ts","../@jest/test-result/build/types.d.ts","../@jest/test-result/build/formatTestResults.d.ts","../@jest/test-result/build/helpers.d.ts","../@jest/test-result/build/index.d.ts","../jest-changed-files/build/types.d.ts","../jest-changed-files/build/index.d.ts","../jest-mock/build/index.d.ts","../@jest/fake-timers/build/legacyFakeTimers.d.ts","../@jest/fake-timers/build/modernFakeTimers.d.ts","../@jest/fake-timers/build/index.d.ts","../@jest/environment/build/index.d.ts","../jest-diff/build/cleanupSemantic.d.ts","../pretty-format/build/types.d.ts","../pretty-format/build/index.d.ts","../jest-diff/build/types.d.ts","../jest-diff/build/diffLines.d.ts","../jest-diff/build/printDiffs.d.ts","../jest-diff/build/index.d.ts","../jest-matcher-utils/build/index.d.ts","../expect/build/jestMatchersObject.d.ts","../expect/build/types.d.ts","../expect/build/index.d.ts","../@jest/globals/build/index.d.ts","../callsites/index.d.ts","../@jest/source-map/build/types.d.ts","../@jest/source-map/build/getCallsite.d.ts","../@jest/source-map/build/index.d.ts","../@jest/transform/node_modules/source-map/source-map.d.ts","../@jest/transform/build/types.d.ts","../@jest/transform/build/ScriptTransformer.d.ts","../@jest/transform/build/shouldInstrument.d.ts","../@jest/transform/build/enhanceUnexpectedTokenMessage.d.ts","../@jest/transform/build/index.d.ts","../jest-runtime/build/types.d.ts","../jest-runtime/build/index.d.ts","../@jest/core/build/types.d.ts","../@jest/core/build/SearchSource.d.ts","../@jest/reporters/build/getResultHeader.d.ts","../@jest/reporters/build/generateEmptyCoverage.d.ts","../@jest/reporters/build/CoverageWorker.d.ts","../@jest/reporters/build/types.d.ts","../@jest/reporters/build/BaseReporter.d.ts","../@jest/reporters/build/CoverageReporter.d.ts","../@jest/reporters/build/DefaultReporter.d.ts","../@jest/reporters/build/NotifyReporter.d.ts","../@jest/reporters/build/SummaryReporter.d.ts","../@jest/reporters/build/VerboseReporter.d.ts","../@jest/reporters/build/index.d.ts","../emittery/index.d.ts","../@jest/core/build/TestWatcher.d.ts","../@jest/core/build/TestScheduler.d.ts","../@jest/core/build/cli/index.d.ts","../@jest/core/build/version.d.ts","../@jest/core/build/jest.d.ts","../jest-cli/build/cli/index.d.ts","../jest-cli/build/index.d.ts","../jest/build/jest.d.ts","../@types/aria-query/index.d.ts","../@testing-library/jest-dom/types/matchers.d.ts","../@testing-library/jest-dom/types/jest.d.ts","../@testing-library/jest-dom/types/index.d.ts","../../src/setupTests.js","../../src/__mocks__/react-router-dom.js","../../src/__tests__/fixtures/gameFixtures.js","../@testing-library/dom/types/matches.d.ts","../@testing-library/dom/types/wait-for.d.ts","../@testing-library/dom/types/query-helpers.d.ts","../@testing-library/dom/types/queries.d.ts","../@testing-library/dom/types/get-queries-for-element.d.ts","../@testing-library/dom/types/screen.d.ts","../@testing-library/dom/types/wait-for-element-to-be-removed.d.ts","../@testing-library/dom/types/get-node-text.d.ts","../@testing-library/dom/types/events.d.ts","../@testing-library/dom/types/pretty-dom.d.ts","../@testing-library/dom/types/role-helpers.d.ts","../@testing-library/dom/types/config.d.ts","../@testing-library/dom/types/suggestions.d.ts","../@testing-library/dom/types/index.d.ts","../@testing-library/react/types/index.d.ts","../../src/__tests__/utils/testHelpers.js","../../src/components/EmailSettings.js","../../src/components/GHINIntegration.js","../../src/hooks/usePlayerProfile.js","../../src/components/GameStatsTracker.js","../../src/components/PerformanceAnalytics.js","../../src/components/PlayerStatistics.js","../@testing-library/user-event/dist/types/event/eventMap.d.ts","../@testing-library/user-event/dist/types/event/types.d.ts","../@testing-library/user-event/dist/types/event/dispatchEvent.d.ts","../@testing-library/user-event/dist/types/event/focus.d.ts","../@testing-library/user-event/dist/types/event/input.d.ts","../@testing-library/user-event/dist/types/utils/click/isClickableInput.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Blob.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/DataTransfer.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/FileList.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Clipboard.d.ts","../@testing-library/user-event/dist/types/utils/edit/timeValue.d.ts","../@testing-library/user-event/dist/types/utils/edit/isContentEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/isEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/maxLength.d.ts","../@testing-library/user-event/dist/types/utils/edit/setFiles.d.ts","../@testing-library/user-event/dist/types/utils/focus/cursor.d.ts","../@testing-library/user-event/dist/types/utils/focus/getActiveElement.d.ts","../@testing-library/user-event/dist/types/utils/focus/getTabDestination.d.ts","../@testing-library/user-event/dist/types/utils/focus/isFocusable.d.ts","../@testing-library/user-event/dist/types/utils/focus/selection.d.ts","../@testing-library/user-event/dist/types/utils/focus/selector.d.ts","../@testing-library/user-event/dist/types/utils/keyDef/readNextDescriptor.d.ts","../@testing-library/user-event/dist/types/utils/misc/cloneEvent.d.ts","../@testing-library/user-event/dist/types/utils/misc/findClosest.d.ts","../@testing-library/user-event/dist/types/utils/misc/getDocumentFromNode.d.ts","../@testing-library/user-event/dist/types/utils/misc/getTreeDiff.d.ts","../@testing-library/user-event/dist/types/utils/misc/getWindow.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDescendantOrSelf.d.ts","../@testing-library/user-event/dist/types/utils/misc/isElementType.d.ts","../@testing-library/user-event/dist/types/utils/misc/isVisible.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDisabled.d.ts","../@testing-library/user-event/dist/types/utils/misc/level.d.ts","../@testing-library/user-event/dist/types/utils/misc/wait.d.ts","../@testing-library/user-event/dist/types/utils/pointer/cssPointerEvents.d.ts","../@testing-library/user-event/dist/types/utils/index.d.ts","../@testing-library/user-event/dist/types/document/UI.d.ts","../@testing-library/user-event/dist/types/document/getValueOrTextContent.d.ts","../@testing-library/user-event/dist/types/document/copySelection.d.ts","../@testing-library/user-event/dist/types/document/trackValue.d.ts","../@testing-library/user-event/dist/types/document/index.d.ts","../@testing-library/user-event/dist/types/event/selection/getInputRange.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelection.d.ts","../@testing-library/user-event/dist/types/event/selection/moveSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/selectAll.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionRange.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/updateSelectionOnFocus.d.ts","../@testing-library/user-event/dist/types/event/selection/index.d.ts","../@testing-library/user-event/dist/types/event/index.d.ts","../@testing-library/user-event/dist/types/system/pointer/buttons.d.ts","../@testing-library/user-event/dist/types/system/pointer/shared.d.ts","../@testing-library/user-event/dist/types/system/pointer/index.d.ts","../@testing-library/user-event/dist/types/system/index.d.ts","../@testing-library/user-event/dist/types/system/keyboard.d.ts","../@testing-library/user-event/dist/types/options.d.ts","../@testing-library/user-event/dist/types/convenience/click.d.ts","../@testing-library/user-event/dist/types/convenience/hover.d.ts","../@testing-library/user-event/dist/types/convenience/tab.d.ts","../@testing-library/user-event/dist/types/convenience/index.d.ts","../@testing-library/user-event/dist/types/keyboard/index.d.ts","../@testing-library/user-event/dist/types/clipboard/copy.d.ts","../@testing-library/user-event/dist/types/clipboard/cut.d.ts","../@testing-library/user-event/dist/types/clipboard/paste.d.ts","../@testing-library/user-event/dist/types/clipboard/index.d.ts","../@testing-library/user-event/dist/types/pointer/index.d.ts","../@testing-library/user-event/dist/types/utility/clear.d.ts","../@testing-library/user-event/dist/types/utility/selectOptions.d.ts","../@testing-library/user-event/dist/types/utility/type.d.ts","../@testing-library/user-event/dist/types/utility/upload.d.ts","../@testing-library/user-event/dist/types/utility/index.d.ts","../@testing-library/user-event/dist/types/setup/api.d.ts","../@testing-library/user-event/dist/types/setup/directApi.d.ts","../@testing-library/user-event/dist/types/setup/setup.d.ts","../@testing-library/user-event/dist/types/setup/index.d.ts","../@testing-library/user-event/dist/types/index.d.ts","../../src/components/__tests__/BettingOddsPanel.test.js","../../src/components/__tests__/GameDashboard.test.js","../../src/components/__tests__/Navigation.test.js","../../src/components/__tests__/NewComponents.test.js","../../src/components/__tests__/PerformanceAnalytics.test.js","../../src/components/__tests__/PlayerProfileManager.test.js","../../src/components/__tests__/ShotAnalysisWidget.test.js","../../src/components/__tests__/ShotVisualizationOverlay.test.js","../../src/components/__tests__/UnifiedGameInterface.integration.test.js","../../src/components/__tests__/WGPAnalyticsDashboard.test.js","../../src/components/analytics/PostHoleAnalytics.js","../../src/components/email/EmailSettings.js","../../src/components/game/TVPokerLayout.js","../../src/components/game/__tests__/UnifiedGameInterface.test.js","../../src/components/practice/EnhancedPracticeMode.js","../../src/components/signup/__tests__/AllPlayersAvailability.test.js","../../src/components/signup/__tests__/MatchmakingSuggestions.test.js","../../src/components/signup/__tests__/PlayerAvailability.test.js","../../src/components/simulation/GameSetup.tsx","../../src/components/simulation/__tests__/GamePlay.test.js","../../src/components/simulation/__tests__/GameSetup.test.js","../../src/components/simulation/__tests__/SimulationMode.probabilities.test.js","../../src/components/simulation/__tests__/SimulationMode.test.js","../../src/components/tutorial/index.js","../../src/components/tutorial/__tests__/InteractiveElement.test.js","../../src/components/tutorial/__tests__/ProgressTracker.test.js","../../src/components/tutorial/__tests__/TutorialSystem.test.js","../../src/components/tutorial/__tests__/hooks.test.js","../../src/components/ui/__tests__/Button.test.js","../../src/components/ui/__tests__/UIComponents.test.js","../../src/context/__tests__/GameProvider.shotProbabilities.test.js","../../src/context/__tests__/GameProvider.test.js","../../src/hooks/useAuth.js","../../src/hooks/useGameApi.js","../../src/hooks/usePostHoleAnalytics.js","../../src/hooks/useSimulationApi.js","../../src/hooks/__tests__/usePlayerProfile.test.js","../../src/pages/__tests__/AboutPage.test.js","../../src/pages/__tests__/AdminPage.test.js","../../src/pages/__tests__/GamePage.test.js","../../src/pages/__tests__/HomePage.test.js","../../src/pages/__tests__/RulesPage.test.js","../../src/pages/__tests__/SetupPage.test.js","../../src/pages/__tests__/SignupPage.test.js","../../src/utils/__tests__/api.test.js","../@babel/types/lib/index.d.ts","../@types/babel__generator/index.d.ts","../@babel/parser/typings/babel-parser.d.ts","../@types/babel__template/index.d.ts","../@types/babel__traverse/index.d.ts","../@types/babel__core/index.d.ts","../@types/connect/index.d.ts","../@types/body-parser/index.d.ts","../@types/bonjour/index.d.ts","../@types/mime/index.d.ts","../@types/send/index.d.ts","../@types/qs/index.d.ts","../@types/range-parser/index.d.ts","../@types/express-serve-static-core/index.d.ts","../@types/connect-history-api-fallback/index.d.ts","../@types/eslint/helpers.d.ts","../@types/estree/index.d.ts","../@types/json-schema/index.d.ts","../@types/eslint/index.d.ts","../@types/eslint-scope/index.d.ts","../@types/http-errors/index.d.ts","../@types/serve-static/index.d.ts","../@types/express/node_modules/@types/express-serve-static-core/index.d.ts","../@types/express/index.d.ts","../@types/html-minifier-terser/index.d.ts","../@types/http-proxy/index.d.ts","../@types/json5/index.d.ts","../@types/node-forge/index.d.ts","../@types/parse-json/index.d.ts","../@types/prettier/index.d.ts","../@types/q/index.d.ts","../@types/resolve/index.d.ts","../@types/retry/index.d.ts","../@types/semver/classes/semver.d.ts","../@types/semver/functions/parse.d.ts","../@types/semver/functions/valid.d.ts","../@types/semver/functions/clean.d.ts","../@types/semver/functions/inc.d.ts","../@types/semver/functions/diff.d.ts","../@types/semver/functions/major.d.ts","../@types/semver/functions/minor.d.ts","../@types/semver/functions/patch.d.ts","../@types/semver/functions/prerelease.d.ts","../@types/semver/functions/compare.d.ts","../@types/semver/functions/rcompare.d.ts","../@types/semver/functions/compare-loose.d.ts","../@types/semver/functions/compare-build.d.ts","../@types/semver/functions/sort.d.ts","../@types/semver/functions/rsort.d.ts","../@types/semver/functions/gt.d.ts","../@types/semver/functions/lt.d.ts","../@types/semver/functions/eq.d.ts","../@types/semver/functions/neq.d.ts","../@types/semver/functions/gte.d.ts","../@types/semver/functions/lte.d.ts","../@types/semver/functions/cmp.d.ts","../@types/semver/functions/coerce.d.ts","../@types/semver/classes/comparator.d.ts","../@types/semver/classes/range.d.ts","../@types/semver/functions/satisfies.d.ts","../@types/semver/ranges/max-satisfying.d.ts","../@types/semver/ranges/min-satisfying.d.ts","../@types/semver/ranges/to-comparators.d.ts","../@types/semver/ranges/min-version.d.ts","../@types/semver/ranges/valid.d.ts","../@types/semver/ranges/outside.d.ts","../@types/semver/ranges/gtr.d.ts","../@types/semver/ranges/ltr.d.ts","../@types/semver/ranges/intersects.d.ts","../@types/semver/ranges/simplify.d.ts","../@types/semver/ranges/subset.d.ts","../@types/semver/internals/identifiers.d.ts","../@types/semver/index.d.ts","../@types/serve-index/index.d.ts","../@types/sockjs/index.d.ts","../@types/trusted-types/lib/index.d.ts","../@types/trusted-types/index.d.ts","../@types/ws/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9","746d62152361558ea6d6115cf0da4dd10ede041d14882ede3568bce5dc4b4f1f","d11a03592451da2d1065e09e61f4e2a9bf68f780f4f6623c18b57816a9679d17","aea179452def8a6152f98f63b191b84e7cbd69b0e248c91e61fb2e52328abe8c",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"f3d4da15233e593eacb3965cde7960f3fddf5878528d882bcedd5cbaba0193c7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"6c55633c733c8378db65ac3da7a767c3cf2cf3057f0565a9124a16a3a2019e87","affectsGlobalScope":true},{"version":"fb4416144c1bf0323ccbc9afb0ab289c07312214e8820ad17d709498c865a3fe","affectsGlobalScope":true},{"version":"5b0ca94ec819d68d33da516306c15297acec88efeb0ae9e2b39f71dbd9685ef7","affectsGlobalScope":true},{"version":"34c839eaaa6d78c8674ae2c37af2236dee6831b13db7b4ef4df3ec889a04d4f2","affectsGlobalScope":true},{"version":"34478567f8a80171f88f2f30808beb7da15eac0538ae91282dd33dce928d98ed","affectsGlobalScope":true},{"version":"ab7d58e6161a550ff92e5aff755dc37fe896245348332cd5f1e1203479fe0ed1","affectsGlobalScope":true},{"version":"6bda95ea27a59a276e46043b7065b55bd4b316c25e70e29b572958fa77565d43","affectsGlobalScope":true},{"version":"aedb8de1abb2ff1095c153854a6df7deae4a5709c37297f9d6e9948b6806fa66","affectsGlobalScope":true},{"version":"a4da0551fd39b90ca7ce5f68fb55d4dc0c1396d589b612e1902f68ee090aaada","affectsGlobalScope":true},{"version":"11ffe3c281f375fff9ffdde8bbec7669b4dd671905509079f866f2354a788064","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"bf237922b06c558ee82c997549c28541d2e4c60a7c449c635cd7116663bff11b","ec646851bb3302d774d4fbec3555fdf0cea4dc30a7f2c663d66387653abecdd6","5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd",{"version":"7f9844af49faece125da77aa099fd5c1da64270e31b414edef84f159a15f61b7","affectsGlobalScope":true},"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","fcc9e6f2da1759e4abe577f938f7d6eec119963abae917c290913a537cf8cd89","67b56598de49ea49e177ed09417ec97c642775a4fe73259df996923517eb652d","98d8c2cce0da7f218eda38d46b3d715adfb4c99c59ad67dbe0fd105113292f9f","d562cf993f138dc03c5b1aed57d7d80e96555ce41365e0e79db9b93a0b49a6b2","4e7fded78c59e63cc94cd8c0c920b287b885ae0512c412e0f7a890b0d700bc3d","7fc1326aae51ca02c357b8391270858387cce4afa9928d6580a42119dfcca9eb","a95d033d647339e3932fd15c01ae763c0e6fba915418c01b2fb1b1d4063a6d7f","9ec473f428d74650f0ce05b81e6a27fc84906a36838fd11875fcae5193f3cbbb","acdd8a10fac8748502509cb57bdd53a7c5b85fa4a2ee3a560c00a40404ff65cb","59bd81abd493fa554955bf7dd7006273192ea8d553d3e4a819e866a14725cdfe","a29acac88d5df222deeb58568f2e56b42075d9b043b4f158b7a55a8eed18985f","56d09baa6411529b9edfed10d627aa294412c3aa33d26e1254b8f1422ecfbfd9","31feea0066a629bfcacfc80bd5ec1551d26cf7a8dad949dc24cde82307748a45","b23ee85f4ae6affbd6d92df4a305756b2d7a7d687108bac625b83d662aabe063","c541b4b619ff47a8f1d2e242f69cab2f1490797934a31b9d15fe1b9d59183626","10f0161e27ec211a27512406022e5381ee1eff148c356579a07392c1cab67205","50d0abf4fb3d7fa0d929459ec9560f6761eb9e80bc568e6367868f6402fae0b5","4be1e84f8a23aa1c9b37669820a5dc6c0d664131c2549b54b40ec225abcff77c","2d6acf4fe93fb92f0259c6bbed436112c7daf0ad9e1318f2f0bd2613083261f0","58024638b80b48562cce5f0e5f65ce5924a2309224400787a4e40dea0ce3c7f4","ed7ed4acdc5b5e7f531cb8a2b62cadc0a8a88d054637965ba585a370f3538dbc","59453dd1a944cc11ef41fc0e21d4afaa4906eb4015fc605b423776ab26be5c35","12bb43d7c61d1b5e4340ed3599bbdcdd8d781994f08a94f010c88d4d26f285bb","f40d60f92714d69e75d0f03e3b51acbe2ff52064dd0e4774fa818ff72f043ea4","797cfbacb483d815b7819b3cf867533af99a630f2beea11cc26592b0c2d42cb1","4b26040bc29ea84ee18561c65d6994a07cfb168240c5bda0eb04bfb48190b219","06709b34a5d72762ab905843ac3443277ab884dc32fce8b3b0d51bcdb5064b74","cbb6fbcffa54cb81308247f17b64f1cb22ca015fba420fdb7c2c61c3a2adfcda","d37a6f1e29ec3244911f7d28cf815251ef113387c8618426acdab8d153940bbc","0e0af8c8426a911142d13768859c1b49e120f60bb153ce6dd197e30f9b8b6820","87e68d28db4ab68bfa35d6d1b57ea233d90e1c678f3da187f796075ff3a8e85d","afdf59e4068da139bff61ba0887ae9c76f46373f95932efd54ee7910b6502a1a","b07d57ba8d3e203d16450dd2426270030368821d3d418b291a05801a362d4d99","ecd8abab263e35cda153af96d4f29c711ff477a4c2bd81698cdfc727836547e3","e9a208aad09ea42f46bdd52d309774b73e7a02762281c51377973025a9cb7250","d264ffe701d5be437313c4f6f7d8f27ce029fc5cc3c51e42e9b60bed6d943e34","d2dcfbb9046a3f918ba22ebc91310f31606cebca173944df0544dc14ed26939a","2bef42b3474c69a11119442d099d6ee4952a9e1ee2674a76df68e67ee853c9f8","0880a3c557fb7ce460173df4c71dc39365359c053da107caad5fbe03a249c69e","f636742cc740b78907aa1010d1fc25cd7d2e5966a3aa149d74ce9370627ff852","b8ef751a4bad89dfe59fa19218e89bdb5c74e6cba080bdbee9921e1c9bf4a615","930d085f4aaabd1cc8d0f4f4837d13e04e948e77c8cf97a2e64c997088fbffcf","df1fd1099460e2d762f69fccb745265e72c14b8048f3e7de60767bbf714f6ad0","dba7c59c1095d9d149ec234ad3846af7fcb0bf6c11822f76d78c19fd0e086473","de378d46014d3f7e673fecf74f8d02bc27a30ffd85ca378927fba171f83f2f66","ec8924ce154b4a9dc676762fd43a7f785fc2cb6a21a0250b34216c8ed757f0bd","6da8dd746a2c6c74c7a874d809f62f908439319fed0505b579774066ce551bcb","a0cbce32b63aa070e5f4aa15e918886492e71c9753426d573e8a9deac1dd8abe","2431e657962c860594400df7d3c49f3c6eefb7e193f158bd9e7f0f965256a33c","30e5961d52cdabbbdaa5169c3c71a77a5aa0f8ac70ebb1f250f6fdaa2007ed3d","37e82fceaba98ef3038072809e67d0b8ed4b37c3a4aa82ed7dbf48676bf2750e","3fa0235c0ee6318d87108b06d6f922f525dcf039a32231d1667b96e202a8b009","5b7c7e06d9f383a1ee8d3b700c4d1419331f4166aa340c7788a35bec98331f34","2df3bf27c69b2c5d47b17649447817b802ad9166d31bfb7c33806195c03a8d83","ee235306953241273af6e40d709d4097476ecb599229473fb55b461288ed1993","2bef48831eaf4bf89166732f51f741488205c30f5184adc03a34a63a6c9a70bd","5fb0a11bc0cb66afc528b180067199bc542c46f6fd95649c3137f3a94bf8412b","6b6814ee731c1e6ee609b98086b273d1aa13333182edd24be8be569c7b7d07df","18cce8e15d2846c71faa2543b08b70b1c04bac9a26427eb98a4e0bad24976a90","ab3a5590e693ad5fb0a1a19c17e2b01258c88fe4617a4cae9d4058cc18946d08","8b4025f2c3f2aed06120f2d20f55d5bc10a06c7a40e058eafe13af9240f85c7c","698972a628b6dbbc1d4d917d422b56e429501ec8758270e527c70401227d094a","212e0c8f420a4c1866546cb7d50ba94537c25aaa715e84685d8995798125b9b9","39b74fe9bd08e3154f281117a5fe5bfa6b1afdfe8556eda1fc82428828329fd4","8b80893422089fff8f07496f4f66f1207847f6a9645c88d75c2877fabd453f11","cf41eb0cb37e385c1d777bdfefc05f0617857fd72d3a455d6d4f81e5e31a397f","583b9e0633074c66e97445426ac0b07bdb388f87e92449baae08cd5ab9cbf846","07646330c0cf3e5429bf2fce8647b0369a9cef8dc9b7a327e2ff47c4d1b916e3","eb277e8bb50c4fbc16ac5e8238b88880626f3ad672d7af92f2d29eaa522a9399","bfdff632c328e37b1946e1b6d7120933c145fac5a6eed6c8adaba5f5e56e64e3","b04f1498e13102326e1968fac4c2d37ca0c2b7abd76812892d9496151083aa91","c413aa82126a73c6280ce1177d151c01640790b5913e6ac80b62b0cce0ebaed3","93436c1aebb65cf409cf9879764d584439bbccc2f87e05763c30b70ead288013","2bbe03e00b2dd6db70bee6237f166c7fbc2b6e301918b3e9a6b62cf0df6eb370","522b79a823b5d466fbfe86cd25473045a8ad45f2a9b9df00e19fe5f3d00ab635","db17b27cc4514d286387592824d7bd39dea6737b799787d72acaa6556d40092e","0d6d484d91ba60f459fc8fcb35d08f6791711f05c8156bb6fc17b0a6fca81541","7bfc9cdd904b12b8f14d2160a092c90afd13cedffe96b8b50a71806431a01873","4981a6995ea12a015408f795188b03a7476c5148b051ea55126a82b62e06708f","843b27075f3ed5a868bad8c9f29b9d275f8a61b3e3c4e760ff6d64e1bf9a6f9c","3c54e9f8641d69914fbda6cac089757a412fb904f0a075dbc65bce568f4a90b7","472d9a32c8571cbfbddbe80686e464464ab008caa48c65677b0d35a0e506d06c","9daca9b36125be1487105a71756caff00669c1871a01209f63b3f9285c5503ec","9567454f4649cdcd899ec3328e8ddf843e0cfd59b832b3e23879d56ca4fadb35","2687e7d974ad531a64538810770312b81193fb7f143cd09fa89e05aad414cb55","c00565777871b6d76d065c51af1d2fbc414f8804498f8692861f0ef3759d8812","12a3233962e3103fd3e4f4de0c26e0f17cd7c3d37b0aaa0743b8dcc7038d0e33","4da29c03d43f81993290813ab4d7b3d29812ce0cc1ccfce9784d076f726fe753","fb58a4485f54c463027b36c4843098de5fdb536594f49ed81f783252561f77f6","6c09333a0c899f83c1444a379ebdcebeea8fd6b25fc6bec2e0e1e5724bcdecc5","ec85cf13bd5d52a3b29672c8d5509e0d6478721d814d933578fc769e82ac7f2d","939c575afa1e1720c9cafcf09d5ad218f7ffcc36743b7cf33581dff722fde7fc","315000295ec26a0a60741a2021d3b84b8f2cc2b8f636de5851436f7464f7ab98","b7956653d6f5d55877326e67cedd538243d9953819e019242502c432381fcee5","d655eefdb3a03cdab08a7d48ff49f42feef1974b3702a1b3010888d51e2428f5","8bd215328a9fd468ffa6f0c1bec8727e9081eadcc4659f3ea56b2e54412a4cc9","d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","833e92c058d033cde3f29a6c7603f517001d1ddd8020bc94d2067a3bc69b2a8e","08b2fae7b0f553ad9f79faec864b179fc58bc172e295a70943e8585dd85f600c","f12edf1672a94c578eca32216839604f1e1c16b40a1896198deabf99c882b340","e3498cf5e428e6c6b9e97bd88736f26d6cf147dedbfa5a8ad3ed8e05e059af8a","dba3f34531fd9b1b6e072928b6f885aa4d28dd6789cbd0e93563d43f4b62da53","f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","2329d90062487e1eaca87b5e06abcbbeeecf80a82f65f949fd332cfcf824b87b","25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","4fdb529707247a1a917a4626bfb6a293d52cd8ee57ccf03830ec91d39d606d6d","a9ebb67d6bbead6044b43714b50dcb77b8f7541ffe803046fdec1714c1eba206","5780b706cece027f0d4444fbb4e1af62dc51e19da7c3d3719f67b22b033859b9","7253b2045ea6b599d85ef9dd7ce2bf5439a1a98a27f078ba2115bedf61d738c7","ca58ededf2c0cd0563e8d83fef922817ff2a1ed9bd750242b17146354c1c5243","9d34b57d308ce327e484887106e68e2a82beaf263fea298e4ada5b3925ccbb8d","fe1f945db9c3cb35788d028ce9338b06256cd6041f2597668b9359f2b4fd4197","641fe481fff812b6a151b7fe0996468ced591244c6682b6ba2610b0bf016a9c6","63e5f3ffc50b8c29acf5396c0468a290c927cb7a5208ffb74add35670867e476","06c3f71832c76a82329b45610793b56d0b78fb02603d90f8a7629f49cb0dec1f","ca586208341738cb5e6d144536d83f91d96856c5828307088d242d52e4d439d4","fde0e854df7095db9f8b5cbe3804845a437750ff3c9edcaf2572e66885b230a3","6a63ec446b7fda7a8f1307c1a4659d6b8d1c617400b46d6b49f3d97ddfa93905","c461e128927c8492fff179d344735023ae189c4b626af91adb7b63c6c4b7248f","6b2706a5cee62ef25fdb7a9a268f558a15de9df894984ed13a07c8318576ef51","353fe785452a3c2d6ff2a41fb0684bd2878e78f3728fc5dae98634ccfaa9beae","521bbccf0edf1f69c488c6828716bdfb04acb69ea3ee5e3b7140bfa22ed6c342","dfdb07c32025c9aac5707797e48c46c8fc1416c3c3a5cab9677a75ab78a787ae","e1e115f590a02130c539f61c20460291711dccbdaa3fe4bbad43ab770dd4306e","e4fe42173b249ff533174cfbde4510ce5345da50c2f717b3ca27eda49929dad1","0dbd184576784dbc0b0caa1f022bbb1024a4f27b77e9bf5738c73841c218f4ab","17023bb4eba80df5152e45fa10ec0fa4105fa1c59cb30a51d5724c77cf041151","05b84716272aee3042dbeb319aa5b1ff5b8e77b62ae24be00b88cf8e04cab4a2","86d850e3572c2ed8f56d73a1ce7c5c4f3ea5a62170b82db65f3055f73614099d","4ab4cb977736067eda6f2ff73e521424a818319a1a70616ad2db2ba0b9dd5322","fa790e874499cb17016556f3168948f8d751dcb35a0862a9b9c55bb2ec353d48","795692a29dca5a39f904825a4abc78f9acc3a54ecc6858d8a268c52679f21751",{"version":"6876211ece0832abdfe13c43c65a555549bb4ca8c6bb4078d68cf923aeb6009e","affectsGlobalScope":true},{"version":"394fda71d5d6bd00a372437dff510feab37b92f345861e592f956d6995e9c1ce","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},{"version":"c564fc7c6f57b43ebe0b69bc6719d38ff753f6afe55dadf2dba36fb3558f39b6","affectsGlobalScope":true},{"version":"109b9c280e8848c08bf4a78fff1fed0750a6ca1735671b5cf08b71bae5448c03","affectsGlobalScope":true},"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","e525f9e67f5ddba7b5548430211cae2479070b70ef1fd93550c96c10529457bd","ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","17fe9131bec653b07b0a1a8b99a830216e3e43fe0ea2605be318dc31777c8bbf","3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","2c9875466123715464539bfd69bcaccb8ff6f3e217809428e0d7bd6323416d01","ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","2472ef4c28971272a897fdb85d4155df022e1f5d9a474a526b8fc2ef598af94e","6c8e442ba33b07892169a14f7757321e49ab0f1032d676d321a1fdab8a67d40c","b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","19851a6596401ca52d42117108d35e87230fc21593df5c4d3da7108526b6111c","3825bf209f1662dfd039010a27747b73d0ef379f79970b1d05601ec8e8a4249f","0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","40bfc70953be2617dc71979c14e9e99c5e65c940a4f1c9759ddb90b0f8ff6b1a","da52342062e70c77213e45107921100ba9f9b3a30dd019444cf349e5fb3470c4","e9ace91946385d29192766bf783b8460c7dbcbfc63284aa3c9cae6de5155c8bc","40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","561c60d8bfe0fec2c08827d09ff039eca0c1f9b50ef231025e5a549655ed0298","1e30c045732e7db8f7a82cf90b516ebe693d2f499ce2250a977ec0d12e44a529","84b736594d8760f43400202859cda55607663090a43445a078963031d47e25e7","499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","e38d4fdf79e1eadd92ed7844c331dbaa40f29f21541cfee4e1acff4db09cda33","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","7c10a32ae6f3962672e6869ee2c794e8055d8225ef35c91c0228e354b4e5d2d3","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e",{"version":"f4b4faedc57701ae727d78ba4a83e466a6e3bdcbe40efbf913b17e860642897c","affectsGlobalScope":true},"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7",{"version":"003ec918ec442c3a4db2c36dc0c9c766977ea1c8bcc1ca7c2085868727c3d3f6","affectsGlobalScope":true},"938f94db8400d0b479626b9006245a833d50ce8337f391085fad4af540279567","c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c",{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true},"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a",{"version":"12fb9c13f24845000d7bd9660d11587e27ef967cbd64bd9df19ae3e6aa9b52d4","affectsGlobalScope":true},"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","5078cd62dbdf91ae8b1dc90b1384dec71a9c0932d62bdafb1a811d2a8e26bef2","a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c",{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true},"2f32444438ecb1fa4519f6ec3977d69ce0e3acfa18b803e5cd725c204501f350","0ab3c844f1eb5a1d94c90edc346a25eb9d3943af7a7812f061bf2d627d8afac0","b0a84d9348601dbc217017c0721d6064c3b1af9b392663348ba146fdae0c7afd","161f09445a8b4ba07f62ae54b27054e4234e7957062e34c6362300726dabd315","77fced47f495f4ff29bb49c52c605c5e73cd9b47d50080133783032769a9d8a6","e6057f9e7b0c64d4527afeeada89f313f96a53291705f069a9193c18880578cb",{"version":"34ecb9596317c44dab586118fb62c1565d3dad98d201cd77f3e6b0dde453339c","affectsGlobalScope":true},"0f5cda0282e1d18198e2887387eb2f026372ebc4e11c4e4516fef8a19ee4d514","e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86",{"version":"237581f5ec4620a17e791d3bb79bad3af01e27a274dbee875ac9b0721a4fe97d","affectsGlobalScope":true},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true},"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","e6d81b1f7ab11dc1b1ad7ad29fcfad6904419b36baf55ed5e80df48d56ac3aff","1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","b6b8e3736383a1d27e2592c484a940eeb37ec4808ba9e74dd57679b2453b5865","d6f36b683c59ac0d68a1d5ee906e578e2f5e9a285bca80ff95ce61cdc9ddcdeb","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093",{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true},"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","b338a6e6c1d456e65a6ea78da283e3077fe8edf7202ae10490abbba5b952b05e",{"version":"2918b7c516051c30186a1055ebcdb3580522be7190f8a2fff4100ea714c7c366","affectsGlobalScope":true},"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","982efeb2573605d4e6d5df4dc7e40846bda8b9e678e058fc99522ab6165c479e","e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055",{"version":"d67fc92a91171632fc74f413ce42ff1aa7fbcc5a85b127101f7ec446d2039a1f","affectsGlobalScope":true},{"version":"d40e4631100dbc067268bce96b07d7aff7f28a541b1bfb7ef791c64a696b3d33","affectsGlobalScope":true},"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","42180b657831d1b8fead051698618b31da623fb71ff37f002cb9d932cfa775f1","4f98d6fb4fe7cbeaa04635c6eaa119d966285d4d39f0eb55b2654187b0b27446",{"version":"e4c653466d0497d87fa9ffd00e59a95f33bc1c1722c3f5c84dab2e950c18da70","affectsGlobalScope":true},"e6dcc3b933e864e91d4bea94274ad69854d5d2a1311a4b0e20408a57af19e95d","2119ab23f794e7b563cc1a005b964e2f59b8ebcb3dfe2ce61d0c782bfd5e02a2","0fd641a3b3e3ec89058051a284135a3f30b94a325fb809c4e4159ec5495b5cdc","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","e66eb237e7629bdc09f5f99fd69b73a0511fafb799783496a37432dde5ce0bf0","fdec06934bf00cb7c1187b7f2f1ac6bf2f327ab5af71a543c48d919baa194f1a","9c8f99dfcd80875222e3a4923525595503174088a6eedce78ae3ea81fd650323","652c8e676e1b94c7829671c0eb237528f76a0ba67ac846c065bceb4088ebddd7","caac4c00061a947d2b1010bb6464f06197f2671bdf948fa1aa40bf1e244ee2a0","95b6c669e7ed7c5358c03f8aa24986640f6125ee81bb99e70e9155974f7fd253","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","c3e5b75e1af87b8e67e12e21332e708f7eccee6aac6261cfe98ca36652cdcb53","f7dd7280ee4f0420865e6423fe199aeac63d1d66203a8b631077cdc15501ef1f","ef62b4aa372f77458d84c26614b44129f929e263c81b5cd1034f5828a5530412","8610558ae88a43ad794c4ab1da4f0e8e174e0357c88f6cbb21f523e67414e9a9","0b0feb9837c561c0a67b61024328045bb16bac6e4b10f7b0b217d3b8b43b0b12","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","d1c6c35d174dbe63a76ed8ac6621cca8dbe8794961a2121feb5f0239747d1b7e","051c1bc0efd3690031a97ac49133c9486c22bd07852e75a11ed4b40ceb722569","a22270cba4f004f64a61cec3e39574416e3ca72e848f53a36ba3add746243217","447b9b631351b40faa0e961e6cbb5e269bc1fa61f7a615b8077b31a94aaefae3","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","e641fd321ca5fe17b532bd3b5a6e85a8741bbde7a9d7110d8ed272605c1c4a25","9d63720cd09e8b0ae76e0ade1993b7ec600e6729e453f459d4039d6914914c1a","8b324c8813c2bee210a7a79eede7abc4b5c60132fd497e140ce312a856af22a4","ff2d2f19561cd3a594d7cfeeb29797e62c8d9ef62df65916e6be9bdcfbaf8f7d","d59191f0bb663800c0856116d69ae11125eeae891d0a46c0be52f3c78ed4890e","d8360fe15a60f549584a9ff7d0e6129ed77abdbcf062b4da1a10a78175d34f71","a57b37eae916e680e5e15b36d17b22bb05834115041fe940f11d9e714501ff84","e53086c8f861bee1717e3e001498d2a493f786c6fcbb0027fc4352f00fcaa3cd","446242adee16900500f9d9dba2678258641f7e8f692f43c18dde8872167107bb","6ef7ba3b3d2514336c59d1af84e2d7550a886a5be193d9cb980cc6d16698236f","185e38aa301aaaaf3870183acd48f9b4da7baa5282cb9ed102a10004b0751cc2","1f0c7b51e98442f125414c1d43c6a04abc8ee800066834d742eb99b0e542d327","131c58b9b527fa99139dabaaf585ed52e9f5c450c1347c87bcb9af9b884e63ea","2642f053f18152ed5ba6403217f932e4fa0be0077f38734b168ab92da948b3c4","5718fb71731197c4e623120e93c5ece9061f569aa4dc28ffcbb8b4fb5ffe2ba6","9bc5d8cd23570760dc417cb10b01079bdb919b4dfeaab9c4341cf11d37d7a29e","0671e90198a35ffd8e5dd35c5ce0fd4839305f6fe9878ca9851a25c097a7874a","a3d9df9d57f7e47f70e013a46cf1c38177579dbb2c5b567bde24c7a67ed1303d","b4ac0ae1e7ed09d2ab8496d65c04643742a1811c6c5f34d9f9504a3868bc02e8","b63b8dfe391e40354edfb991062b8e8e28ef36a28644a7904f6a38f51a8a2386","375ecb9cebdd43c6fd230cfc02c6640344aadf920319b73a3c8514f45f23167c","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73","67c51fa68aadbb50e4ffc650b704620e0393bddb3d3eac3a6195bf1956562fe4","8187d9966b8fa5a2d0e53c71903adb5aa71ebc2a23410ab2d37eb764db800829","d851073758ff1ce39bb428d8a3b3385ca26da1745ca742789e876d67dc0aae43","0cee5b30f4300e628927dde7e7ae7b5bc32250a685242474d069b9346da8a2b1","6fdc7cbbbc0601f9bb153c30c0e8063321cd1c9211ad512b9fde1d1f785b35dd","6ae7157666262b5c0402463531996601150583cb1f4f9421f184a0eec9049f10","fbd0ac5a6097c20307587444815092eb1825d831991363423ef0ce70ef053e82","ec0b2f8ed3cc053fdb004ab4979c32625179a746717504e08fc30cef9ec9d7a3","2887592574fcdfd087647c539dcb0fbe5af2521270dad4a37f9d17c16190d579","ed434fd49cf57789f99d3d2f4fb4d5f4930825280ceaae21200d840609345161","3ea3b60de13285b50d9752812d3a6d2cae078d89031713613f58cd2f5565589a","4b0465994a4b18dd63a9af850c74024e6184deac2477ab87135f7d1b11a07178","3031ed6baeacbaf771576f64094d8a977e5be37b04d4dbb335fff9cc1d95a147","5f02cf0f7cc845c12b09607f97e57f942c313ebee6c33a3efbc346f19b499c7f","8e1eb67ef6924cd14793af526f9a4e3195b5734920a75ec29900731b1997f2ce","07fa4bb359f3cacde0e0b6d75cd9a53b88168088be58e01b385cd12e12a6d5d4","52d5d4a344ea0781bf00874c4829e3cfb0c12e1fa28c17740e773bc247fa663c","89ebb5291da50663149fc01245eeca4f8bf1a2bd8a3fe84ea62d926d53a6460f","792128daaa6209b5d52148b1952b56aad02fcf72435283a2d5ac1fb22113cd91","c474689555d4e49d5210e6c6d95f939e31f49158af350cbc403e4fdda5d32386","d4c5aebfd4d5468e03fee82920222d861737cc6ec5c9829474a36e379753fc52","f8fd01e7967e335266c6113c5d9bf15113768c5747265420dae0fdf1868eb05c","7a89d77bf137521a06ff5b3ce7297c663f3c27912b09320fa520c1b2d6bab9e5","7647ed4e66d98048478e6245f50b794a916ffa456fb362672e52c01e1b09a644","9a22045cb43de6fab0b5e524e4cef807e5a2c6e0a49044de56b65448e1572a14","4441e06cf8e7ffff0519950e34df3608ca1016f09f83fdfb7f71ab7376ac5a47","45d0cb97f71ad1fd0688b8a95c2a2b3cce347cd458ec365af4079c0273b49dc6","6c86a8ced863164acfbe7753660a7ba4aa97cdaa1e3b8d193a18316f906d4bbf","2dd10019ccc6f059b703db2f58f6f385625d235869fe562978b5a913e5db4c69","e4c66039756093e60d857430f451ffff1ca3fa5a951367b67dcc8f29b47b2d72","48433ed0754c860ebfeeec213f9c5943cc6b8aa7b70ce1bd9c5c6a490ed91229","c2708a205c4afa73bfeebaf0e939390b3b3fe9cd1788b09389ee0d736cd75a72","8f6d44ee7619da14f50cf051a243c41793ff1dccda8d8a3bb2255989df114c30","2aca83fda179d79a68a259bc47999615976b935d2eeb391304db8a095af721e6","26b3b07bb0229b36ba87ec2b0ca1a42a927c2e8a8bd5ae9339d5a82d950eb3ce","8767c93beffebe9eda0c03e4893ab2fe9b62ff65bf767a003cbba50cfe810a28","d7f211b5ba9e9fc21ba0fbf12b3ceda8680f672da595068dbb4d2d1f9a0c83b1","e613a48817a40243523fa26bb5e3396e6d60c79a1c0c59274889560f34cfdde7","ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","80b232969d72e6f08081a4a0b558537db2671a1a60bb44559d5e3b5f1fc89cd6",{"version":"841784cfa9046a2b3e453d638ea5c3e53680eb8225a45db1c13813f6ea4095e5","affectsGlobalScope":true},"646ef1cff0ec3cf8e96adb1848357788f244b217345944c2be2942a62764b771","0ab7506c71d3467c8db4fdc2512e5960afcfeb0a4f51467d79c9b51af5ec9e63","d45bd3d7c328e85331b3deb75be0f5bef5746ff9efa27900c769ad0e3461acb4","0eb2ed1c1c8d87ba91ae080e95a5f4891e3bdd31626b894655985760a2e56afd","3cfb7c0c642b19fb75132154040bb7cd840f0002f9955b14154e69611b9b3f81","8387ec1601cf6b8948672537cf8d430431ba0d87b1f9537b4597c1ab8d3ade5b","d16f1c460b1ca9158e030fdf3641e1de11135e0c7169d3e8cf17cc4cc35d5e64","a934063af84f8117b8ce51851c1af2b76efe960aa4c7b48d0343a1b15c01aedf","e3c5ad476eb2fca8505aee5bdfdf9bf11760df5d0f9545db23f12a5c4d72a718","d0570ce419fb38287e7b39c910b468becb5b2278cf33b1000a3d3e82a46ecae2","3aca7f4260dad9dcc0a0333654cb3cde6664d34a553ec06c953bce11151764d7","a0a6f0095f25f08a7129bc4d7cb8438039ec422dc341218d274e1e5131115988","b58f396fe4cfe5a0e4d594996bc8c1bfe25496fbc66cf169d41ac3c139418c77","45785e608b3d380c79e21957a6d1467e1206ac0281644e43e8ed6498808ace72","bece27602416508ba946868ad34d09997911016dbd6893fb884633017f74e2c5","2a90177ebaef25de89351de964c2c601ab54d6e3a157cba60d9cd3eaf5a5ee1a","82200e963d3c767976a5a9f41ecf8c65eca14a6b33dcbe00214fcbe959698c46","b4966c503c08bbd9e834037a8ab60e5f53c5fd1092e8873c4a1c344806acdab2","480c20eddc2ee5f57954609b2f7a3368f6e0dda4037aa09ccf0d37e0b20d4e5c","40a9e5673448badb43d693daf20698c452782ae1682887b9d1ccbf207589781a","f2834e7008d641386a0d313ef33e974effb5815755254506341a0f3ba846a506","2e44250d356340733b1f210ad994bf11a0ae802186d5ad6b602661030f811db2","d01f869e0aa82d99b590ac59b6906d0f4ccae1d903d1dd1e622d944f4741b829","8d5a0a154fda1d5422fc0a0432821d5485ef88588ceb267651bf0ac786addcfa","b25d24260ac27016213b336707cb6bd279e12b946304118837ca0bd93831bb0b","81b8cf069b2fad8ff8112f832db6a32b7735b3291855ae71876e8dd07687a438","da0f84fcd93700b4a5fbf9c6f166a6cc19fc798231bff56dd1e3875bfc6966eb","634ff08e0143bec98401c737de7bfc6883bfec09200bd3806d2a4cfc79c62aaa","90a86863e3a57143c50fec5129d844ec12cef8fe44d120e56650ed51a6ce9867","472c0a98c5de98b8f5206132c941b052f5cc1ae78860cb8712ac4f1ebf4550ca","538c4903ef9f8df7d84c6cf2e065d589a2532d152fa44105c7093a606393b814","cfcb6acbb793a78b20899e6537c010bfbbf939c77471abcdc2a41faf9682ca1a","a7798e86de8e76844f774f8e0e338149893789cdc08970381f0ae78c86e8667f","eebc21bb922816f92302a1f9dcefc938e74d4af8c0a111b2a52519d7e25d4868","6b359d3c3138a9f4d3a9c9a8fda24be6fd15bd789e692252b53e68ce99db8edc","9488b648a6a4146b26c0fd4e85984f617056293092a89861f5259a69be16ca5c","e156513655462b5811a8f980e32ccd204c19042f8c9756430fe4e8d6f7c1326e","5679b694d138b8c4b3d56c9b1210f903c6b0ca2b5e7f1682a2dd41a6c955f094","ca8da035b76fb0136d2c1390dda650b7979202dbe0f5dc7eaefcde1c76dee4f4","4b1022a607444684abeee6537e4cace97263d1ef047c31b012c41fdc15838a79",{"version":"dd0271250f1e4314e52d7e0da9f3b25a708827f8a43ceff847a2a5e3fd3283e8","affectsGlobalScope":true},{"version":"47971d8a8639a2a2dd684091c6e7660ec5909fed540c4479ca24e22ac237194e","affectsGlobalScope":true},"e1075312b07671ef1cbf46409a0fa2eb2b90bb59c6215c94f0e530113013eeda","1bfd63c3f3749c5dc925bb0c05f229f9a376b8d3f8173d0e01901c08202caf6f","da850b4fdbabdd528f8b9c2784c5ba3b3bedc4e2e1e34dcd08b6407f9ec61a25","e61c918bb5f4a39b795a06e22bc4d44befcefd22f6a5c8a732c9ed0b565a6128","ee56351989b0e6f31fd35c9048e222146ced0aac68c64ce2e034f7c881327d6d","f58b2f1c8f4bcf519377d39f9555631b6507977ad2f4d8b73ac04622716dc925","4c805d3d1228c73877e7550afd8b881d89d9bc0c6b73c88940cffcdd2931b1f6","4aa74b4bc57c535815ae004550c59a953c8f8c3c61418ac47a7dcfefba76d1ba","78b17ceb133d95df989a1e073891259b54c968f71f416cd76185308af4f9a185","d76e5d04d111581b97e0aa35de3063022d20d572f22f388d3846a73f6ce0b788","0a53bb48eba6e9f5a56e3b85529fbbe786d96e84871579d10593d4f3ae0f9dba","d34fb8b0a66f0a406c7ce63a36f16dda7ff4500b11b0bd30a491aa0d59336d1f","282b31893b18a06114e5173f775dd085597ca220d183b8bd474d21846c048334","ed27d5ce258f069acf0036471d1fbb56b4cb3c16d7401b52a51297eca651db62","ec203a515afd88589bf1d384535024f5b90ebe6b5c416fb3dcca0abd428a8ba4","32a2a1374b57f0744d284ca93b477bd97825922513a24dfe262cbf3497377d96","a8b60d24dc1eb26c0e987f9461c893744339a7f48e4496f8077f258a644cffab",{"version":"3f9df27a77a23d69088e369b42af5f95bcb3e605e6b5c2395f0bfcd82045e051","affectsGlobalScope":true},"9fd080a9458c6d6f3eb6d4e2b12a3ec498d7d219863e9dca0646bdee9acce875",{"version":"e5d31928bee2ba0e72aeb858881891f8948326e4f91823028d0aea5c6f9e7564","affectsGlobalScope":true},"9a9ba9f6fd097bb2f57d68da8a39403bbe4dc818b8ccd155a780e4e23fa556f2","e50c4cd1f5cbce3e74c19a5bbf503c460e6ae86597e6d648a98c7f6c90b596dd",{"version":"fa140f881e20591ce163039a7968b54c5e51c11228708b4f9147473d06471cf5","affectsGlobalScope":true},"295eca0c47be1191690fd2fe588195fff9d4dc43852aceb8b4cab2aa634579f0","59ee7346e19b0050508a592702871dc943083c6dcb69a47d52e888115d840781","067712491fb2094c212c733dd8e2d56e74c309a9ce9dac9e919286b7245a1eb4","a5eae58ac55bd30c42359e4b01fb2be5eddac336869d3f04ffb4daa54b58f009","d12d691ef8933e8db39f2ca81d6973940ff5e37bb421752f5b6e7bc15dea3abf","4c5f8bd9b3a1aae4e4fddfee41667e495a045f73ed603993038fa6a8ba92fa14","dfb274ab0f319cf18ce7152067c25f984c7fd1924fc72b3f66734588444c934a","108c8c05cbc3fbbbd4ff4fc0779c9bef55655c28528eb0f77829795dc9f0b484","a7e5444d24cdec45f113f4fb8a687e1c83a5d30c55d2da19a04be71108ad77bd","41ec17e218b7358fcff25c719bc419fec8ec98f13e561b9a33b07392d4fec24c","23c204326746e981e02d7f0a15ab6f8015f9035998cb3766c9ddbf8ea247aea2","25f994b5d76ce6a3186a3319555bbba79706dac2174019915c39ac6080e98c7e","dfa4e2c6a612d43851ccbc499598cb006a3a78bc8c7f972c52078f862fa84e47","02c1705fa902f172be6e9020d74bcd92ce5db8d2ef3e1b03aabc2ac8eb46c3db","99d2d8a0c7bb3dd77459552269a7b5865fa912cedab69db686d40d2586b551f7","b47abe58626d76d258472b1d5f76752dd29efe681545f32698db84e7f83517df","3a99bbbbbf42e45c3d203e7c74f1319b79f9821c5e5f3cdd03249184d3e003ce","aaacc0e12ab4de27bdf131f666e315d8e60abec26c7f87501e0a7806fc824ae6","3b4195afd41a9215afc7be0820f8083f6bd2e85e5e0b45bb0061fb041944711e","108df8095f5e25d7189dd0d1433ac2df75ec40c779d8faf7d2670f1485beb643","ddd3c1d3c9ff67140191a3cf49b09875e20f28f2fc5535ae5ea16e14293a989b","7b496e53d5f7e1737adcb5610516476ee055bf547918797348f245c68e7418fe","577f44389d7faedd7fc9c0330caf73140e5d0d5f6c968210bff78be569f398a7","3046c57724587a59bceefadd30040d418e9df81b9f3cfd680618a3511302ed7a","15ccc911ed15397e838471bfe6d476c28deffe976c05cb057e6b1ea7491242c2","64b5a5ebdaead77a9a564aa938f4fb7a45e27cda7441d3bee8c9de8a4df5a04f","a48037f7af5f80df8973db5e562e17566407541de284b8dadf1879ea3aed8a2f","dab97d96ce986857150db03f0d435b44c060d126b4a387c7807f4e9f6c92e531","85f39366ea7bc5e34b596fc97de18a7e377856755e789d8e931054f2191d9b8b","daf3ea3d49f6e8a2fa70b7ca1f21bd97f1b65021b31fbfccb73dd55f86abb792","b15bd260805f9dd06cd4b2b741057209994823942c5696fd835e8a04fb4aab6b","6635a824edf99ed52dbd3502d5bce35990c3ed5e2ec5cef88229df8ac0c52b06","d6577effa37aae713c34363b7cc4c84851cbabe399882c60e2b70bcbb02bfa01","8eaf80ad438890fe5880c39a7bbf2c998ce7d29d4c14dd56d82db63bd871eefb","9b3e7f776f312c76ac67e1060e5398d7ac2c69d6a3a928a9daaae2eb05b15f56","202042eccb4789b7dee51ba9ecab0b854834ea5c1d6a3946504bfc733d4468c3","2b2ef76a9f36094b07ee6f76a5ac6903f2f65c0a20283201814a8d1e752cb592","8882e4e087d0bc8cc713cb3d8090c45d33e373e6f5c83e0f8d00fe6a950ef875","42979c197a22211d72c9cf1de8559f0a39de0b0687eea63c6407a69d9d73c13f","cc36098e27200f5daceffff4a4694148746aaa1b369536186fa1caa43d8b4bde","07133796953f82127aebef603392f1430690fe6cfd5d3d4c2bd3b277c6566d79","9079300efc80cdcb5a5cd153bdc354ac3439619e661e5f35413f81f94d4aa897","3655e77b67da6b52b34f7abd79890cdbc9ce2e2a3579fc2568f07d77d1d60ec9","95a1ff30ceba2b8c185a76002e2a4578cca9a593d8b642b7d5b13275ece952b9","2a43ea656e1e3ae2ec876766d9d4576a53b079a1cd352367db12fc721033c08b","e8835cfaf67d1730e430a800d447ea79d33c59fc990455965ca85dcc16c6ec64","98631e5438157a2bc50970527c20d9a0d02def63700cb8f21ee19520a982fbc0","93a5f2ecf21f69045a129ef7821396276c117b34eb39d0b5510ff90c34839f56","4d054866f6bed47338a905264c4cc16108dfb55353a97d67b5beb0393f78fbc4","cc611eddaabd228585429f406dc5b2ef53db92e954f3fab97f8cc67b84b0a67b","51d3abc39997f19e1e0e13fe545c786465259a3f6625b27828e47847a00acc27","982c00b942df3ad3aa49500b7f253bad1f2624d4c5e0e0eea1ee20529d90296f","a9f610a8bd1aa513ca9ee39a05566e7439b45ef24670858f4b0a3b1b33a17923","a7b268ed0284472916b39062cea1ec8ca946b048b7f8992b14221d4318cb7f5b","7748692e43d33e0f58fd69f9e84f568430d147be8a5fec55aea68c73f63908a1","cee3e7bec863f019aa744e00dd7a8470f2f6ff951c498c501ad6e296aca9f418","98e5bfadb80d850109194eb7cbdae761564cf0aa4cdd39e70eb73fe628af6bf8","5da731f0b18d358e4e0ca682928298de26c6eabee5990d03333e0e8aef335ea2","5ed1241d2008dfabf2145443b9fb285b7bdcd8211266187ed9dfb2ae5b80f869","f60e1afcef13dcd11edafbd3f7720a5a50c3d2d90b4cb27cea58adb16efd12ed","e6a1fc7243e8a4f92cbafa2bac261e3540968403f082df44ae521b8e2658efbd","b745f5b14ad0407d94b3b3e764ceb6e6c1c0873528461421046751f7a3c84b17","554028fd3b11a78660ed0cb98b5fd343bc9b8a9b8495114e6ae5d13aed49f242","e4125c670944f6369be310c830b37391a82b4f8f500399a17b041962e1fe1dd2","60cded932be8d4f5de5c3a7f56c5e01438ce8ec7f110d4c87fdf2bfdb910dbd0","06e0622d8d29254863de52ca0da62329d78c5e02086481fbcef6c9cd74796d84","ad5346fa860e1577699a7a1e6543f7e811dd209164ed4e226566595c50ad3dd4","749ad4dbb8d1d33ab4283f8ffa875669e067f917cf1d17162e149b571c689f9a","dc278a8129f50ef9555060cf12ba10a11c2a816bad01c2f1abd2f87f6ac3796c","ee94a249d6f6c94e2656e1abc6820a25a88ec1351c21929d1365d60a4381d797","bc5a1ad94db45ea72a8632a18d57efe131671c54c51347c8c9a266f5ca059d8f","1ecb3bf08e05193e81b052ca5180d2a2cfcf64602d57312dd7a5686755938b88","ee2a7977e7cc78906b894656baaf8d4080962056ee12b2024fa2f42bf8e447bf","88124457c6ce628eb357aefa18c0e23a58d92997bed3e28a5e53217a9d8ec590","bda82ce02ca6b44902394fd57e57b1b41e4de290727d92cef3cb537b21cbc5af","c288bf4485ccf06ac2da23408bbdd47c987b1ea7db59f7d3caf736d115323e42","c0007fbf0456531d2c2ac6243689559d4ea2b5a5bba9ddb28c006db5a15fe32d","c7d9afa4d252d9dee7c7c0c3752db5efcbaa39dda3df9a1e193aea3a0d056ac1","475709fda88e76c7b3bcf00a2ffa16eb2d91088caa6d9f4abdf9a6592664f676","ec1bc8ff1a835119253f23d674c3e13ba983744620a0655f73dc61f6aaeea004","4f9b48c8b5098f29ddf9041e81676fb06b078e1dfe76e1b160f93ca214d05ff3","94c5a9b9991dc4e164779653c1f2af90ad961fd23d9164c0b6e570be7456ce31","13ed3c245e4a6a8b90d3f0909198c01fd7cb48e41364c1ece3c11edecb9dc9c7","81212195a5a76330d166ecfd85eb7119e93d3b814177643fa8a10f4b40055fbf","b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","82e5a50e17833a10eb091923b7e429dc846d42f1c6161eb6beeb964288d98a15","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","f9e22729fa06ed20f8b1fe60670b7c74933fdfd44d869ddfb1919c15a5cf12fb","d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed",{"version":"a8932b7a5ef936687cc5b2492b525e2ad5e7ed321becfea4a17d5a6c80f49e92","affectsGlobalScope":true},"689be50b735f145624c6f391042155ae2ff6b90a93bac11ca5712bc866f6010c",{"version":"64d4b35c5456adf258d2cf56c341e203a073253f229ef3208fc0d5020253b241","affectsGlobalScope":true},"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","dd0c1b380ba3437adedef134b2e48869449b1db0b07b2a229069309ce7b9dd39","1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a",{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true},"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","ee65fe452abe1309389c5f50710f24114e08a302d40708101c4aa950a2a7d044","63786b6f821dee19eb898afb385bd58f1846e6cba593a35edcf9631ace09ba25","c5a14bdeb170e0e67fb4200c54e0e02fd0ec94aca894c212c9d43c2916891542","a39f2a304ccc39e70914e9db08f971d23b862b6f0e34753fad86b895fe566533","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","d88a5e779faf033be3d52142a04fbe1cb96009868e3bbdd296b2bc6c59e06c0e","8b677e0b88f3c4501c6f3ec44d3ccad1c2ba08efd8faf714b9b631b5dba1421b","8a19491eba2108d5c333c249699f40aff05ad312c04a17504573b27d91f0aede","199f9ead0daf25ae4c5632e3d1f42570af59685294a38123eef457407e13f365","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","ddef25f825320de051dcb0e62ffce621b41c67712b5b4105740c32fd83f4c449","1b3dffaa4ca8e38ac434856843505af767a614d187fb3a5ef4fcebb023c355aa","15fe687c59d62741b4494d5e623d497d55eb38966ecf5bea7f36e48fc3fbe15e",{"version":"2c3b8be03577c98530ef9cb1a76e2c812636a871f367e9edf4c5f3ce702b77f8","affectsGlobalScope":true},"1ba59c8bbeed2cb75b239bb12041582fa3e8ef32f8d0bd0ec802e38442d3f317"],"options":{"allowSyntheticDefaultImports":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":99,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":99,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"fileIdsList":[[73,201,245],[73,74,76,201,245],[73,75,201,245],[201,245],[73,75,76,77,78,79,80,201,245],[75,201,245],[69,70,201,245],[63,201,245],[63,66,201,245],[63,64,65,67,201,245],[69,201,245],[68,201,245],[68,69,71,72,201,245],[201,245,537],[201,245,248,289,295,298],[201,245,300],[201,245,298,312,315],[201,245,298,299,300,301,316],[201,245,312,332,334,363,364],[201,245,312,332,376,378],[201,245,377],[201,245,312,332],[201,245,365,378,379,380,381],[201,245,312,332,363],[201,245,291,295,312,335,338],[201,245,336,337],[201,245,315,335],[201,245,315],[201,245,312,339,350],[201,245,332,369],[201,245,312,332,369,370],[201,245,312,367,369],[201,245,295,312,332,369,370],[201,245,295,312,332,369,372],[201,245,296,297,312],[201,245,309,312,332,366,369,370,371,372,373,374,375],[201,245,312,322,328,332,368],[201,245,352,353],[201,245,353,354],[201,245,329],[201,245,312,329],[201,245,329,330,331],[201,245,296,297,312,317,322,328],[201,245,312,357],[201,245,357,358,359,360],[201,245,312,356],[201,245,295,302],[201,245,304,306,308],[201,245,297],[201,245,302,303,309,310,311],[201,245,396],[201,245,393,394,395,396,397,398,399,400,401,402,403,404,405],[201,245,386],[201,245,342],[201,245,393,394,395],[201,245,393,394],[201,245,342,396,397],[201,245,394],[201,245,388],[201,245,385,387],[201,245,406],[201,245,490],[201,245,477,478,479],[201,245,472,473,474],[201,245,450,451,452,453],[201,245,416,490],[201,245,416],[201,245,416,417,418,419,464],[201,245,454],[201,245,449,455,456,457,458,459,460,461,462,463],[201,245,464],[201,245,415],[201,245,468,470,471,489,490],[201,245,468,470],[201,245,465,468,490],[201,245,475,476,480,481,486],[201,245,469,471,481,489],[201,245,488,489],[201,245,465,469,471,487,488],[201,245,469,490],[201,245,467],[201,245,467,469,490],[201,245,465,466],[201,245,482,483,484,485],[201,245,471,490],[201,245,426],[201,245,420,427],[201,245,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],[201,245,446,490],[201,245,537,538,539,540,541],[201,245,537,539],[201,245,260,295,543],[201,245,251,295],[201,245,288,295,550],[201,245,260,295],[201,245,553,555],[201,245,552,553,554],[201,245,257,260,295,547,548,549],[201,245,544,548,550,558,559],[201,245,258,295],[201,245,257,260,262,265,277,288,295],[201,245,305],[201,245,295],[201,242,245],[201,244,245],[201,245,250,280],[201,245,246,251,257,258,265,277,288],[201,245,246,247,257,265],[201,245,248,289],[201,245,249,250,258,266],[201,245,250,277,285],[201,245,251,253,257,265],[201,244,245,252],[201,245,253,254],[201,245,255,257],[201,244,245,257],[201,245,257,258,259,277,288],[201,245,257,258,259,272,277,280],[201,240,245],[201,240,245,253,257,260,265,277,288],[201,245,257,258,260,261,265,277,285,288],[201,245,260,262,277,285,288],[201,245,257,263],[201,245,264,288],[201,245,253,257,265,277],[201,245,266],[201,245,267],[201,244,245,268],[201,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[201,245,270],[201,245,271],[201,245,257,272,273],[201,245,272,274,289,291],[201,245,257,277,278,280],[201,245,279,280],[201,245,277,278],[201,245,280],[201,245,281],[201,242,245,277,282],[201,245,257,283,284],[201,245,283,284],[201,245,250,265,277,285],[201,245,286],[197,198,199,200,201,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[245],[201,245,265,287],[201,245,260,271,288],[201,245,250,289],[201,245,277,290],[201,245,264,291],[201,245,292],[201,245,257,259,268,277,280,288,290,291,293],[201,245,277,294],[201,245,570,609],[201,245,570,594,609],[201,245,609],[201,245,570],[201,245,570,595,609],[201,245,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],[201,245,595,609],[201,245,258,277,295,546],[201,245,258,560],[201,245,260,295,547,557],[201,245,612],[201,245,257,260,262,265,277,285,288,294,295],[201,245,307],[201,245,263,295],[201,245,349],[201,245,312,347,348],[172,201,245],[201,245,312,333],[201,245,312],[201,245,383],[201,245,340,343],[201,245,340,343,344,345],[201,245,312,320],[201,245,257,295,312,319,320,321],[201,245,295,312,318,319,321],[201,245,304,346],[201,245,312,314],[201,245,313],[201,245,326,327],[201,245,312,322,323,324,325],[201,245,312,322,328,332,339,351,355,361,362],[201,245,312,322,328],[201,245,382,384],[201,245,341],[61,201,245],[57,201,245],[57,58,59,60,201,245],[201,210,214,245,288],[201,210,245,277,288],[201,245,277],[201,205,245],[201,207,210,245,288],[201,245,265,285],[201,205,245,295],[201,207,210,245,265,288],[201,202,203,204,206,209,245,257,277,288],[201,210,218,245],[201,203,208,245],[201,210,234,235,245],[201,203,206,210,245,280,288,295],[201,210,245],[201,202,245],[201,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,245],[201,210,227,230,245,253],[201,210,218,219,220,245],[201,208,210,219,221,245],[201,209,245],[201,203,205,210,245],[201,210,214,219,221,245],[201,214,245],[201,208,210,213,245,288],[201,203,207,210,218,245],[201,210,227,245],[201,205,210,234,245,280,293,295],[171,201,245],[159,160,161,201,245],[162,163,201,245],[159,160,162,164,165,170,201,245],[160,162,201,245],[170,201,245],[162,201,245],[159,160,162,165,166,167,168,169,201,245],[62,81,83,85,87,123,133,134,135,138,143,144,145,158,175,176,177,178,179,183,190,191,192,193,194,201,245],[83,84,145,201,245,407],[92,96,97,201,245],[83,201,245],[101,102,201,245],[83,92,201,245],[201,245,411],[87,92,201,245],[62,81,83,201,245],[92,201,245],[83,87,92,106,201,245],[174,201,245],[141,201,245],[83,84,98,201,245,407,491],[83,84,145,201,245,407,491],[194,201,245,407],[83,103,104,105,201,245,407],[201,245,407,413],[83,84,126,201,245,407,491],[83,87,106,107,201,245,407],[83,108,201,245,407],[83,87,128,201,245,407],[62,175,201,245,407],[89,201,245],[81,83,201,245],[81,201,245],[81,83,135,201,245],[135,136,137,138,139,201,245],[124,201,245],[125,126,201,245],[83,87,92,93,94,95,98,99,100,101,102,103,104,105,107,108,109,123,127,201,245],[83,87,141,201,245],[128,201,245,407,491],[124,125,127,128,142,201,245],[94,95,99,100,101,103,104,105,129,130,131,132,133,134,140,201,245],[187,201,245,407],[188,201,245,407],[81,186,201,245,407],[83,110,120,123,201,245],[83,92,110,201,245],[87,112,114,115,123,201,245],[113,201,245],[111,201,245,407],[201,245,407,510],[116,201,245,407],[84,116,201,245,407],[110,111,115,116,117,118,119,121,122,201,245],[83,145,201,245],[83,145,146,201,245],[83,145,146,147,148,151,152,153,154,155,156,157,201,245],[201,245,407,491],[83,145,146,201,245,407,491],[83,145,146,158,201,245,407,491],[93,146,201,245,407,411],[147,148,149,150,151,152,153,154,155,156,157,158,201,245],[83,145,149,150,201,245],[83,149,150,201,245],[88,201,245,407,491],[88,89,90,91,201,245],[84,201,245,407],[84,201,245,407,491],[84,85,86,201,245],[201,245,407,411],[145,201,245],[62,195,201,245],[62,201,245],[62,92,175,176,201,245],[62,83,201,245],[62,81,140,201,245],[62,143,201,245],[62,81,184,185,186,187,188,189,201,245],[62,83,191,201,245,407],[62,83,85,193,201,245,407],[62,83,84,85,182,201,245,407],[62,83,85,180,201,245,407],[62,83,192,201,245,407],[62,83,84,181,201,245,407],[62,190,201,245,407],[180,181,182,201,245],[173,201,245],[82,201,245]],"referencedMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"exportedModulesMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"semanticDiagnosticsPerFile":[74,75,76,80,81,77,78,79,71,70,64,67,65,68,66,63,72,69,73,539,537,299,300,301,316,317,298,365,379,378,380,382,364,381,339,338,336,337,351,370,371,368,372,373,374,375,367,366,376,369,354,355,353,330,331,332,329,358,360,361,359,357,356,303,309,302,310,311,312,404,401,400,397,406,393,402,396,395,403,398,405,399,394,389,388,387,407,477,478,480,479,472,473,475,474,450,452,451,454,453,417,415,418,465,419,455,464,456,459,457,460,462,458,461,463,416,491,476,471,481,487,488,490,489,469,470,466,468,467,482,486,483,484,485,420,421,424,422,423,426,427,428,429,425,430,431,432,433,434,435,449,436,437,438,439,440,441,442,445,443,444,446,447,448,386,542,538,540,541,544,545,551,543,556,552,555,553,550,560,559,318,561,557,562,297,305,306,554,563,546,564,242,243,244,245,246,247,199,248,249,250,251,252,253,254,256,255,257,258,259,241,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,278,280,281,282,283,284,285,286,197,295,201,198,200,287,288,289,290,291,292,293,294,565,566,567,548,549,568,569,594,595,570,573,592,593,583,582,580,575,588,586,590,574,587,591,576,577,589,571,578,579,581,585,596,584,572,609,608,603,605,604,597,598,600,602,606,607,599,601,547,610,558,611,313,613,612,614,307,308,352,304,296,377,350,348,349,173,334,333,383,384,340,344,346,345,343,319,321,322,320,347,315,314,335,323,328,326,324,325,327,363,362,385,342,341,62,58,61,60,57,59,11,12,14,13,2,15,16,17,18,19,20,21,22,3,4,26,23,24,25,27,28,29,5,30,31,32,33,6,37,34,35,36,38,7,39,44,45,40,41,42,43,8,49,46,47,48,50,9,51,52,53,54,55,1,10,56,218,229,216,230,239,208,207,238,233,237,210,226,209,236,205,206,211,212,217,215,203,240,231,221,220,222,224,219,223,234,213,214,225,204,228,227,232,202,235,172,162,164,171,166,167,165,168,159,160,161,163,169,170,195,391,392,408,101,98,95,134,97,409,103,104,132,410,129,109,99,412,177,102,131,105,178,194,413,126,414,96,176,107,133,94,108,100,175,130,492,493,494,495,496,497,498,499,500,501,502,139,135,136,137,138,140,503,124,125,127,504,128,142,505,143,141,506,187,185,189,188,186,184,507,508,509,121,144,111,510,122,117,119,110,116,118,115,114,113,511,512,513,514,123,120,150,147,149,148,158,516,517,518,519,515,155,156,154,152,151,157,153,88,89,90,91,520,521,92,112,85,84,179,86,145,522,523,87,528,524,525,93,411,526,527,146,196,191,193,182,180,192,181,190,529,530,531,532,533,534,535,183,174,390,83,82,536,106],"affectedFilesPendingEmit":[[74,1],[75,1],[76,1],[80,1],[81,1],[77,1],[78,1],[79,1],[71,1],[70,1],[64,1],[67,1],[65,1],[68,1],[66,1],[63,1],[72,1],[69,1],[73,1],[539,1],[537,1],[299,1],[300,1],[301,1],[316,1],[317,1],[298,1],[365,1],[379,1],[378,1],[380,1],[382,1],[364,1],[381,1],[339,1],[338,1],[336,1],[337,1],[351,1],[370,1],[371,1],[368,1],[372,1],[373,1],[374,1],[375,1],[367,1],[366,1],[376,1],[369,1],[354,1],[355,1],[353,1],[330,1],[331,1],[332,1],[329,1],[358,1],[360,1],[361,1],[359,1],[357,1],[356,1],[303,1],[309,1],[302,1],[310,1],[311,1],[312,1],[404,1],[401,1],[400,1],[397,1],[406,1],[393,1],[402,1],[396,1],[395,1],[403,1],[398,1],[405,1],[399,1],[394,1],[389,1],[388,1],[387,1],[407,1],[477,1],[478,1],[480,1],[479,1],[472,1],[473,1],[475,1],[474,1],[450,1],[452,1],[451,1],[454,1],[453,1],[417,1],[415,1],[418,1],[465,1],[419,1],[455,1],[464,1],[456,1],[459,1],[457,1],[460,1],[462,1],[458,1],[461,1],[463,1],[416,1],[491,1],[476,1],[471,1],[481,1],[487,1],[488,1],[490,1],[489,1],[469,1],[470,1],[466,1],[468,1],[467,1],[482,1],[486,1],[483,1],[484,1],[485,1],[420,1],[421,1],[424,1],[422,1],[423,1],[426,1],[427,1],[428,1],[429,1],[425,1],[430,1],[431,1],[432,1],[433,1],[434,1],[435,1],[449,1],[436,1],[437,1],[438,1],[439,1],[440,1],[441,1],[442,1],[445,1],[443,1],[444,1],[446,1],[447,1],[448,1],[386,1],[542,1],[538,1],[540,1],[541,1],[544,1],[545,1],[551,1],[543,1],[556,1],[552,1],[555,1],[553,1],[550,1],[560,1],[559,1],[318,1],[561,1],[557,1],[562,1],[297,1],[305,1],[306,1],[554,1],[563,1],[546,1],[564,1],[242,1],[243,1],[244,1],[245,1],[246,1],[247,1],[199,1],[248,1],[249,1],[250,1],[251,1],[252,1],[253,1],[254,1],[256,1],[255,1],[257,1],[258,1],[259,1],[241,1],[260,1],[261,1],[262,1],[263,1],[264,1],[265,1],[266,1],[267,1],[268,1],[269,1],[270,1],[271,1],[272,1],[273,1],[274,1],[275,1],[276,1],[277,1],[279,1],[278,1],[280,1],[281,1],[282,1],[283,1],[284,1],[285,1],[286,1],[197,1],[295,1],[201,1],[198,1],[200,1],[287,1],[288,1],[289,1],[290,1],[291,1],[292,1],[293,1],[294,1],[565,1],[566,1],[567,1],[548,1],[549,1],[568,1],[569,1],[594,1],[595,1],[570,1],[573,1],[592,1],[593,1],[583,1],[582,1],[580,1],[575,1],[588,1],[586,1],[590,1],[574,1],[587,1],[591,1],[576,1],[577,1],[589,1],[571,1],[578,1],[579,1],[581,1],[585,1],[596,1],[584,1],[572,1],[609,1],[608,1],[603,1],[605,1],[604,1],[597,1],[598,1],[600,1],[602,1],[606,1],[607,1],[599,1],[601,1],[547,1],[610,1],[558,1],[611,1],[313,1],[613,1],[612,1],[614,1],[307,1],[308,1],[352,1],[304,1],[296,1],[377,1],[350,1],[348,1],[349,1],[173,1],[334,1],[333,1],[383,1],[384,1],[340,1],[344,1],[346,1],[345,1],[343,1],[319,1],[321,1],[322,1],[320,1],[347,1],[315,1],[314,1],[335,1],[323,1],[328,1],[326,1],[324,1],[325,1],[327,1],[363,1],[362,1],[385,1],[342,1],[341,1],[62,1],[58,1],[61,1],[60,1],[57,1],[59,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[218,1],[229,1],[216,1],[230,1],[239,1],[208,1],[207,1],[238,1],[233,1],[237,1],[210,1],[226,1],[209,1],[236,1],[205,1],[206,1],[211,1],[212,1],[217,1],[215,1],[203,1],[240,1],[231,1],[221,1],[220,1],[222,1],[224,1],[219,1],[223,1],[234,1],[213,1],[214,1],[225,1],[204,1],[228,1],[227,1],[232,1],[202,1],[235,1],[172,1],[162,1],[164,1],[171,1],[166,1],[167,1],[165,1],[168,1],[159,1],[160,1],[161,1],[163,1],[169,1],[170,1],[195,1],[391,1],[392,1],[408,1],[101,1],[98,1],[95,1],[134,1],[97,1],[409,1],[103,1],[104,1],[132,1],[410,1],[129,1],[109,1],[99,1],[412,1],[177,1],[102,1],[131,1],[105,1],[178,1],[194,1],[413,1],[126,1],[414,1],[96,1],[176,1],[107,1],[133,1],[94,1],[108,1],[100,1],[175,1],[130,1],[492,1],[493,1],[494,1],[495,1],[496,1],[497,1],[498,1],[499,1],[500,1],[501,1],[502,1],[139,1],[135,1],[136,1],[137,1],[138,1],[140,1],[503,1],[124,1],[125,1],[127,1],[504,1],[128,1],[142,1],[505,1],[143,1],[141,1],[506,1],[187,1],[185,1],[189,1],[188,1],[186,1],[184,1],[507,1],[508,1],[509,1],[121,1],[144,1],[111,1],[510,1],[122,1],[117,1],[119,1],[110,1],[116,1],[118,1],[115,1],[114,1],[113,1],[511,1],[512,1],[513,1],[514,1],[123,1],[120,1],[150,1],[147,1],[149,1],[148,1],[158,1],[516,1],[517,1],[518,1],[519,1],[515,1],[155,1],[156,1],[154,1],[152,1],[151,1],[157,1],[153,1],[88,1],[89,1],[90,1],[91,1],[520,1],[521,1],[92,1],[112,1],[85,1],[84,1],[179,1],[86,1],[145,1],[522,1],[523,1],[87,1],[528,1],[524,1],[525,1],[93,1],[411,1],[526,1],[527,1],[146,1],[196,1],[191,1],[193,1],[182,1],[180,1],[192,1],[181,1],[190,1],[529,1],[530,1],[531,1],[532,1],[533,1],[534,1],[535,1],[183,1],[174,1],[390,1],[83,1],[82,1],[536,1],[106,1]]},"version":"4.9.5"}
./.code/agents/1/exec-call_bpTy3fI4j5ED1uUFF42eaMmR.txt:223:./.code/agents/1/exec-call_FBIwoFXQ52mBUHnfzcN9IQzW.txt:7557:frontend/node_modules/.cache/tsconfig.tsbuildinfo:1:{"program":{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.sharedmemory.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../react-router/dist/development/routeModules-rOzWJJ9x.d.ts","../react-router/dist/development/index-react-server-client-BKpa2trA.d.ts","../react-router/node_modules/cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/shared.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-localstorage.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-memory.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/key-manifest.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-manager.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/index.d.ts","../@auth0/auth0-spa-js/dist/typings/global.d.ts","../@auth0/auth0-spa-js/dist/typings/TokenExchange.d.ts","../@auth0/auth0-spa-js/dist/typings/Auth0Client.d.ts","../@auth0/auth0-spa-js/dist/typings/errors.d.ts","../@auth0/auth0-spa-js/dist/typings/index.d.ts","../@auth0/auth0-react/dist/auth-state.d.ts","../@auth0/auth0-react/dist/auth0-context.d.ts","../@auth0/auth0-react/dist/auth0-provider.d.ts","../@auth0/auth0-react/dist/use-auth0.d.ts","../@auth0/auth0-react/dist/with-auth0.d.ts","../@auth0/auth0-react/dist/with-authentication-required.d.ts","../@auth0/auth0-react/dist/errors.d.ts","../@auth0/auth0-react/dist/index.d.ts","../../src/theme/theme.js","../../src/theme/Provider.js","../../src/context/GameProvider.js","../../src/context/AuthContext.js","../../src/context/SheetSyncContext.js","../../src/context/index.js","../../src/components/ui/Button.js","../../src/components/ui/Card.js","../../src/components/ui/Input.js","../../src/components/ui/Select.js","../../src/components/ui/index.js","../../src/hooks/useOddsCalculation.js","../../src/components/ShotResultWidget.js","../../src/components/BettingOpportunityWidget.js","../../src/components/ProbabilityVisualization.js","../../src/components/EducationalTooltip.js","../../src/components/BettingOddsPanel.js","../../src/components/GameStateWidget.js","../../src/components/StrategicAnalysisWidget.js","../../src/components/AnalyticsDashboard.js","../../src/components/HoleStrategyDisplay.js","../../src/components/EnhancedBettingWidget.js","../../src/components/EnhancedScoringWidget.js","../../src/components/InteractivePlayerCard.js","../../src/utils/api.js","../../src/components/ShotAnalysisWidget.js","../../src/components/ShotVisualizationOverlay.js","../../src/components/GameHistory.js","../../src/components/simulation/SimulationDecisionPanel.tsx","../../src/components/simulation/GamePlay.js","../../src/config/environment.js","../../src/components/simulation/__fixtures__/simulationMockData.js","../../src/components/simulation/__fixtures__/index.js","../../src/components/simulation/TurnBasedInterface.js","../../src/components/simulation/SimulationMode.js","../../src/components/simulation/MonteCarloSimulation.js","../../src/components/simulation/Timeline.js","../../src/components/simulation/PokerBettingPanel.js","../../src/components/simulation/styles/enhancedSimulationLayout.js","../../src/components/simulation/EnhancedSimulationLayout.js","../../src/components/simulation/HoleVisualization.tsx","../../src/components/simulation/index.js","../../src/components/game/CourseImport.js","../../src/components/game/CourseManager.js","../../src/components/PlayerProfileManager.js","../../src/components/game/GameSetupForm.js","../../src/components/game/UnifiedGameInterface.js","../../src/components/GameDashboard.js","../../src/components/WolfGoatPigDashboard.js","../../src/components/HoleVisualization.js","../../src/components/EnhancedWGPInterface.js","../../src/components/ShotRangeAnalyzer.js","../../src/components/ColdStartHandler.js","../../src/components/auth/LoginButton.js","../../src/components/auth/LogoutButton.js","../../src/components/auth/Profile.js","../../src/components/auth/ProtectedRoute.js","../../src/components/auth/AuthHealthCheck.js","../../src/components/auth/index.js","../../src/components/index.js","../../src/components/game/WolfGoatPigGame.js","../../src/components/game/index.js","../../src/components/simulation/FeedAnalyzer.js","../../src/context/TutorialContext.js","../../src/hooks/useTutorialProgress.js","../../src/components/tutorial/ProgressTracker.js","../../src/components/tutorial/TutorialOverlay.js","../../src/components/tutorial/TutorialModule.js","../../src/components/tutorial/InteractiveElement.js","../../src/components/tutorial/modules/GolfBasicsModule.js","../../src/components/tutorial/modules/GameOverviewModule.js","../../src/components/tutorial/modules/TeamFormationModule.js","../../src/components/tutorial/modules/BettingSystemModule.js","../../src/components/tutorial/modules/AdvancedRulesModule.js","../../src/components/tutorial/modules/AnalysisToolsModule.js","../../src/components/tutorial/modules/PracticeGameModule.js","../../src/components/tutorial/TutorialSystem.js","../zod/v3/helpers/typeAliases.d.cts","../zod/v3/helpers/util.d.cts","../zod/v3/index.d.cts","../zod/v3/ZodError.d.cts","../zod/v3/locales/en.d.cts","../zod/v3/errors.d.cts","../zod/v3/helpers/parseUtil.d.cts","../zod/v3/helpers/enumUtil.d.cts","../zod/v3/helpers/errorUtil.d.cts","../zod/v3/helpers/partialUtil.d.cts","../zod/v3/standard-schema.d.cts","../zod/v3/types.d.cts","../zod/v3/external.d.cts","../zod/index.d.cts","../ghin/dist/index.d.ts","../../src/services/ghinService.js","../../src/components/WGPAnalyticsDashboard.js","../../src/components/SheetIntegrationDashboard.js","../../src/components/GoogleSheetsLiveSync.js","../../src/components/Leaderboard.js","../../src/context/MockAuthContext.js","../../src/pages/HomePage.js","../../src/pages/SetupPage.js","../../src/pages/GamePage.js","../../src/pages/index.js","../../src/components/signup/SignupCalendar.js","../../src/components/signup/DailySignupView.js","../../src/components/signup/PlayerAvailability.js","../../src/components/signup/AllPlayersAvailability.js","../../src/components/signup/MatchmakingSuggestions.js","../../src/components/signup/EmailPreferences.js","../../src/pages/SignupPage.js","../../src/pages/AboutPage.js","../../src/pages/RulesPage.js","../../src/pages/AdminPage.js","../../src/components/Navigation.js","../../src/App.js","../../src/index.js","../@types/node/ts5.1/compatibility/disposable.d.ts","../@types/node/ts5.6/compatibility/float16array.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/ts5.6/globals.typedarray.d.ts","../@types/node/ts5.6/buffer.buffer.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/globals.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/dom-events.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/ts5.1/index.d.ts","../collect-v8-coverage/index.d.ts","../@types/istanbul-lib-coverage/index.d.ts","../@jest/console/build/types.d.ts","../@jest/console/build/BufferedConsole.d.ts","../@jest/console/build/CustomConsole.d.ts","../@jest/console/build/NullConsole.d.ts","../@jest/types/build/Global.d.ts","../@jest/types/build/Circus.d.ts","../chalk/index.d.ts","../@types/istanbul-lib-report/index.d.ts","../@types/istanbul-reports/index.d.ts","../@types/yargs-parser/index.d.ts","../@types/yargs/index.d.ts","../@jest/types/build/Config.d.ts","../@jest/types/build/TestResult.d.ts","../@jest/types/build/Transform.d.ts","../@jest/types/build/index.d.ts","../@types/stack-utils/index.d.ts","../jest-message-util/build/types.d.ts","../jest-message-util/build/index.d.ts","../@jest/console/build/getConsoleOutput.d.ts","../@jest/console/build/index.d.ts","../@types/graceful-fs/index.d.ts","../jest-haste-map/build/HasteFS.d.ts","../jest-haste-map/build/types.d.ts","../jest-haste-map/build/ModuleMap.d.ts","../jest-haste-map/build/index.d.ts","../jest-resolve/build/ModuleNotFoundError.d.ts","../jest-resolve/build/shouldLoadAsEsm.d.ts","../jest-resolve/build/types.d.ts","../jest-resolve/build/resolver.d.ts","../jest-resolve/build/utils.d.ts","../jest-resolve/build/index.d.ts","../@jest/test-result/build/types.d.ts","../@jest/test-result/build/formatTestResults.d.ts","../@jest/test-result/build/helpers.d.ts","../@jest/test-result/build/index.d.ts","../jest-changed-files/build/types.d.ts","../jest-changed-files/build/index.d.ts","../jest-mock/build/index.d.ts","../@jest/fake-timers/build/legacyFakeTimers.d.ts","../@jest/fake-timers/build/modernFakeTimers.d.ts","../@jest/fake-timers/build/index.d.ts","../@jest/environment/build/index.d.ts","../jest-diff/build/cleanupSemantic.d.ts","../pretty-format/build/types.d.ts","../pretty-format/build/index.d.ts","../jest-diff/build/types.d.ts","../jest-diff/build/diffLines.d.ts","../jest-diff/build/printDiffs.d.ts","../jest-diff/build/index.d.ts","../jest-matcher-utils/build/index.d.ts","../expect/build/jestMatchersObject.d.ts","../expect/build/types.d.ts","../expect/build/index.d.ts","../@jest/globals/build/index.d.ts","../callsites/index.d.ts","../@jest/source-map/build/types.d.ts","../@jest/source-map/build/getCallsite.d.ts","../@jest/source-map/build/index.d.ts","../@jest/transform/node_modules/source-map/source-map.d.ts","../@jest/transform/build/types.d.ts","../@jest/transform/build/ScriptTransformer.d.ts","../@jest/transform/build/shouldInstrument.d.ts","../@jest/transform/build/enhanceUnexpectedTokenMessage.d.ts","../@jest/transform/build/index.d.ts","../jest-runtime/build/types.d.ts","../jest-runtime/build/index.d.ts","../@jest/core/build/types.d.ts","../@jest/core/build/SearchSource.d.ts","../@jest/reporters/build/getResultHeader.d.ts","../@jest/reporters/build/generateEmptyCoverage.d.ts","../@jest/reporters/build/CoverageWorker.d.ts","../@jest/reporters/build/types.d.ts","../@jest/reporters/build/BaseReporter.d.ts","../@jest/reporters/build/CoverageReporter.d.ts","../@jest/reporters/build/DefaultReporter.d.ts","../@jest/reporters/build/NotifyReporter.d.ts","../@jest/reporters/build/SummaryReporter.d.ts","../@jest/reporters/build/VerboseReporter.d.ts","../@jest/reporters/build/index.d.ts","../emittery/index.d.ts","../@jest/core/build/TestWatcher.d.ts","../@jest/core/build/TestScheduler.d.ts","../@jest/core/build/cli/index.d.ts","../@jest/core/build/version.d.ts","../@jest/core/build/jest.d.ts","../jest-cli/build/cli/index.d.ts","../jest-cli/build/index.d.ts","../jest/build/jest.d.ts","../@types/aria-query/index.d.ts","../@testing-library/jest-dom/types/matchers.d.ts","../@testing-library/jest-dom/types/jest.d.ts","../@testing-library/jest-dom/types/index.d.ts","../../src/setupTests.js","../../src/__mocks__/react-router-dom.js","../../src/__tests__/fixtures/gameFixtures.js","../@testing-library/dom/types/matches.d.ts","../@testing-library/dom/types/wait-for.d.ts","../@testing-library/dom/types/query-helpers.d.ts","../@testing-library/dom/types/queries.d.ts","../@testing-library/dom/types/get-queries-for-element.d.ts","../@testing-library/dom/types/screen.d.ts","../@testing-library/dom/types/wait-for-element-to-be-removed.d.ts","../@testing-library/dom/types/get-node-text.d.ts","../@testing-library/dom/types/events.d.ts","../@testing-library/dom/types/pretty-dom.d.ts","../@testing-library/dom/types/role-helpers.d.ts","../@testing-library/dom/types/config.d.ts","../@testing-library/dom/types/suggestions.d.ts","../@testing-library/dom/types/index.d.ts","../@testing-library/react/types/index.d.ts","../../src/__tests__/utils/testHelpers.js","../../src/components/EmailSettings.js","../../src/components/GHINIntegration.js","../../src/hooks/usePlayerProfile.js","../../src/components/GameStatsTracker.js","../../src/components/PerformanceAnalytics.js","../../src/components/PlayerStatistics.js","../@testing-library/user-event/dist/types/event/eventMap.d.ts","../@testing-library/user-event/dist/types/event/types.d.ts","../@testing-library/user-event/dist/types/event/dispatchEvent.d.ts","../@testing-library/user-event/dist/types/event/focus.d.ts","../@testing-library/user-event/dist/types/event/input.d.ts","../@testing-library/user-event/dist/types/utils/click/isClickableInput.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Blob.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/DataTransfer.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/FileList.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Clipboard.d.ts","../@testing-library/user-event/dist/types/utils/edit/timeValue.d.ts","../@testing-library/user-event/dist/types/utils/edit/isContentEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/isEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/maxLength.d.ts","../@testing-library/user-event/dist/types/utils/edit/setFiles.d.ts","../@testing-library/user-event/dist/types/utils/focus/cursor.d.ts","../@testing-library/user-event/dist/types/utils/focus/getActiveElement.d.ts","../@testing-library/user-event/dist/types/utils/focus/getTabDestination.d.ts","../@testing-library/user-event/dist/types/utils/focus/isFocusable.d.ts","../@testing-library/user-event/dist/types/utils/focus/selection.d.ts","../@testing-library/user-event/dist/types/utils/focus/selector.d.ts","../@testing-library/user-event/dist/types/utils/keyDef/readNextDescriptor.d.ts","../@testing-library/user-event/dist/types/utils/misc/cloneEvent.d.ts","../@testing-library/user-event/dist/types/utils/misc/findClosest.d.ts","../@testing-library/user-event/dist/types/utils/misc/getDocumentFromNode.d.ts","../@testing-library/user-event/dist/types/utils/misc/getTreeDiff.d.ts","../@testing-library/user-event/dist/types/utils/misc/getWindow.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDescendantOrSelf.d.ts","../@testing-library/user-event/dist/types/utils/misc/isElementType.d.ts","../@testing-library/user-event/dist/types/utils/misc/isVisible.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDisabled.d.ts","../@testing-library/user-event/dist/types/utils/misc/level.d.ts","../@testing-library/user-event/dist/types/utils/misc/wait.d.ts","../@testing-library/user-event/dist/types/utils/pointer/cssPointerEvents.d.ts","../@testing-library/user-event/dist/types/utils/index.d.ts","../@testing-library/user-event/dist/types/document/UI.d.ts","../@testing-library/user-event/dist/types/document/getValueOrTextContent.d.ts","../@testing-library/user-event/dist/types/document/copySelection.d.ts","../@testing-library/user-event/dist/types/document/trackValue.d.ts","../@testing-library/user-event/dist/types/document/index.d.ts","../@testing-library/user-event/dist/types/event/selection/getInputRange.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelection.d.ts","../@testing-library/user-event/dist/types/event/selection/moveSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/selectAll.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionRange.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/updateSelectionOnFocus.d.ts","../@testing-library/user-event/dist/types/event/selection/index.d.ts","../@testing-library/user-event/dist/types/event/index.d.ts","../@testing-library/user-event/dist/types/system/pointer/buttons.d.ts","../@testing-library/user-event/dist/types/system/pointer/shared.d.ts","../@testing-library/user-event/dist/types/system/pointer/index.d.ts","../@testing-library/user-event/dist/types/system/index.d.ts","../@testing-library/user-event/dist/types/system/keyboard.d.ts","../@testing-library/user-event/dist/types/options.d.ts","../@testing-library/user-event/dist/types/convenience/click.d.ts","../@testing-library/user-event/dist/types/convenience/hover.d.ts","../@testing-library/user-event/dist/types/convenience/tab.d.ts","../@testing-library/user-event/dist/types/convenience/index.d.ts","../@testing-library/user-event/dist/types/keyboard/index.d.ts","../@testing-library/user-event/dist/types/clipboard/copy.d.ts","../@testing-library/user-event/dist/types/clipboard/cut.d.ts","../@testing-library/user-event/dist/types/clipboard/paste.d.ts","../@testing-library/user-event/dist/types/clipboard/index.d.ts","../@testing-library/user-event/dist/types/pointer/index.d.ts","../@testing-library/user-event/dist/types/utility/clear.d.ts","../@testing-library/user-event/dist/types/utility/selectOptions.d.ts","../@testing-library/user-event/dist/types/utility/type.d.ts","../@testing-library/user-event/dist/types/utility/upload.d.ts","../@testing-library/user-event/dist/types/utility/index.d.ts","../@testing-library/user-event/dist/types/setup/api.d.ts","../@testing-library/user-event/dist/types/setup/directApi.d.ts","../@testing-library/user-event/dist/types/setup/setup.d.ts","../@testing-library/user-event/dist/types/setup/index.d.ts","../@testing-library/user-event/dist/types/index.d.ts","../../src/components/__tests__/BettingOddsPanel.test.js","../../src/components/__tests__/GameDashboard.test.js","../../src/components/__tests__/Navigation.test.js","../../src/components/__tests__/NewComponents.test.js","../../src/components/__tests__/PerformanceAnalytics.test.js","../../src/components/__tests__/PlayerProfileManager.test.js","../../src/components/__tests__/ShotAnalysisWidget.test.js","../../src/components/__tests__/ShotVisualizationOverlay.test.js","../../src/components/__tests__/UnifiedGameInterface.integration.test.js","../../src/components/__tests__/WGPAnalyticsDashboard.test.js","../../src/components/analytics/PostHoleAnalytics.js","../../src/components/email/EmailSettings.js","../../src/components/game/TVPokerLayout.js","../../src/components/game/__tests__/UnifiedGameInterface.test.js","../../src/components/practice/EnhancedPracticeMode.js","../../src/components/signup/__tests__/AllPlayersAvailability.test.js","../../src/components/signup/__tests__/MatchmakingSuggestions.test.js","../../src/components/signup/__tests__/PlayerAvailability.test.js","../../src/components/simulation/GameSetup.tsx","../../src/components/simulation/__tests__/GamePlay.test.js","../../src/components/simulation/__tests__/GameSetup.test.js","../../src/components/simulation/__tests__/SimulationMode.probabilities.test.js","../../src/components/simulation/__tests__/SimulationMode.test.js","../../src/components/tutorial/index.js","../../src/components/tutorial/__tests__/InteractiveElement.test.js","../../src/components/tutorial/__tests__/ProgressTracker.test.js","../../src/components/tutorial/__tests__/TutorialSystem.test.js","../../src/components/tutorial/__tests__/hooks.test.js","../../src/components/ui/__tests__/Button.test.js","../../src/components/ui/__tests__/UIComponents.test.js","../../src/context/__tests__/GameProvider.shotProbabilities.test.js","../../src/context/__tests__/GameProvider.test.js","../../src/hooks/useAuth.js","../../src/hooks/useGameApi.js","../../src/hooks/usePostHoleAnalytics.js","../../src/hooks/useSimulationApi.js","../../src/hooks/__tests__/usePlayerProfile.test.js","../../src/pages/__tests__/AboutPage.test.js","../../src/pages/__tests__/AdminPage.test.js","../../src/pages/__tests__/GamePage.test.js","../../src/pages/__tests__/HomePage.test.js","../../src/pages/__tests__/RulesPage.test.js","../../src/pages/__tests__/SetupPage.test.js","../../src/pages/__tests__/SignupPage.test.js","../../src/utils/__tests__/api.test.js","../@babel/types/lib/index.d.ts","../@types/babel__generator/index.d.ts","../@babel/parser/typings/babel-parser.d.ts","../@types/babel__template/index.d.ts","../@types/babel__traverse/index.d.ts","../@types/babel__core/index.d.ts","../@types/connect/index.d.ts","../@types/body-parser/index.d.ts","../@types/bonjour/index.d.ts","../@types/mime/index.d.ts","../@types/send/index.d.ts","../@types/qs/index.d.ts","../@types/range-parser/index.d.ts","../@types/express-serve-static-core/index.d.ts","../@types/connect-history-api-fallback/index.d.ts","../@types/eslint/helpers.d.ts","../@types/estree/index.d.ts","../@types/json-schema/index.d.ts","../@types/eslint/index.d.ts","../@types/eslint-scope/index.d.ts","../@types/http-errors/index.d.ts","../@types/serve-static/index.d.ts","../@types/express/node_modules/@types/express-serve-static-core/index.d.ts","../@types/express/index.d.ts","../@types/html-minifier-terser/index.d.ts","../@types/http-proxy/index.d.ts","../@types/json5/index.d.ts","../@types/node-forge/index.d.ts","../@types/parse-json/index.d.ts","../@types/prettier/index.d.ts","../@types/q/index.d.ts","../@types/resolve/index.d.ts","../@types/retry/index.d.ts","../@types/semver/classes/semver.d.ts","../@types/semver/functions/parse.d.ts","../@types/semver/functions/valid.d.ts","../@types/semver/functions/clean.d.ts","../@types/semver/functions/inc.d.ts","../@types/semver/functions/diff.d.ts","../@types/semver/functions/major.d.ts","../@types/semver/functions/minor.d.ts","../@types/semver/functions/patch.d.ts","../@types/semver/functions/prerelease.d.ts","../@types/semver/functions/compare.d.ts","../@types/semver/functions/rcompare.d.ts","../@types/semver/functions/compare-loose.d.ts","../@types/semver/functions/compare-build.d.ts","../@types/semver/functions/sort.d.ts","../@types/semver/functions/rsort.d.ts","../@types/semver/functions/gt.d.ts","../@types/semver/functions/lt.d.ts","../@types/semver/functions/eq.d.ts","../@types/semver/functions/neq.d.ts","../@types/semver/functions/gte.d.ts","../@types/semver/functions/lte.d.ts","../@types/semver/functions/cmp.d.ts","../@types/semver/functions/coerce.d.ts","../@types/semver/classes/comparator.d.ts","../@types/semver/classes/range.d.ts","../@types/semver/functions/satisfies.d.ts","../@types/semver/ranges/max-satisfying.d.ts","../@types/semver/ranges/min-satisfying.d.ts","../@types/semver/ranges/to-comparators.d.ts","../@types/semver/ranges/min-version.d.ts","../@types/semver/ranges/valid.d.ts","../@types/semver/ranges/outside.d.ts","../@types/semver/ranges/gtr.d.ts","../@types/semver/ranges/ltr.d.ts","../@types/semver/ranges/intersects.d.ts","../@types/semver/ranges/simplify.d.ts","../@types/semver/ranges/subset.d.ts","../@types/semver/internals/identifiers.d.ts","../@types/semver/index.d.ts","../@types/serve-index/index.d.ts","../@types/sockjs/index.d.ts","../@types/trusted-types/lib/index.d.ts","../@types/trusted-types/index.d.ts","../@types/ws/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9","746d62152361558ea6d6115cf0da4dd10ede041d14882ede3568bce5dc4b4f1f","d11a03592451da2d1065e09e61f4e2a9bf68f780f4f6623c18b57816a9679d17","aea179452def8a6152f98f63b191b84e7cbd69b0e248c91e61fb2e52328abe8c",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"f3d4da15233e593eacb3965cde7960f3fddf5878528d882bcedd5cbaba0193c7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"6c55633c733c8378db65ac3da7a767c3cf2cf3057f0565a9124a16a3a2019e87","affectsGlobalScope":true},{"version":"fb4416144c1bf0323ccbc9afb0ab289c07312214e8820ad17d709498c865a3fe","affectsGlobalScope":true},{"version":"5b0ca94ec819d68d33da516306c15297acec88efeb0ae9e2b39f71dbd9685ef7","affectsGlobalScope":true},{"version":"34c839eaaa6d78c8674ae2c37af2236dee6831b13db7b4ef4df3ec889a04d4f2","affectsGlobalScope":true},{"version":"34478567f8a80171f88f2f30808beb7da15eac0538ae91282dd33dce928d98ed","affectsGlobalScope":true},{"version":"ab7d58e6161a550ff92e5aff755dc37fe896245348332cd5f1e1203479fe0ed1","affectsGlobalScope":true},{"version":"6bda95ea27a59a276e46043b7065b55bd4b316c25e70e29b572958fa77565d43","affectsGlobalScope":true},{"version":"aedb8de1abb2ff1095c153854a6df7deae4a5709c37297f9d6e9948b6806fa66","affectsGlobalScope":true},{"version":"a4da0551fd39b90ca7ce5f68fb55d4dc0c1396d589b612e1902f68ee090aaada","affectsGlobalScope":true},{"version":"11ffe3c281f375fff9ffdde8bbec7669b4dd671905509079f866f2354a788064","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"bf237922b06c558ee82c997549c28541d2e4c60a7c449c635cd7116663bff11b","ec646851bb3302d774d4fbec3555fdf0cea4dc30a7f2c663d66387653abecdd6","5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd",{"version":"7f9844af49faece125da77aa099fd5c1da64270e31b414edef84f159a15f61b7","affectsGlobalScope":true},"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","fcc9e6f2da1759e4abe577f938f7d6eec119963abae917c290913a537cf8cd89","67b56598de49ea49e177ed09417ec97c642775a4fe73259df996923517eb652d","98d8c2cce0da7f218eda38d46b3d715adfb4c99c59ad67dbe0fd105113292f9f","d562cf993f138dc03c5b1aed57d7d80e96555ce41365e0e79db9b93a0b49a6b2","4e7fded78c59e63cc94cd8c0c920b287b885ae0512c412e0f7a890b0d700bc3d","7fc1326aae51ca02c357b8391270858387cce4afa9928d6580a42119dfcca9eb","a95d033d647339e3932fd15c01ae763c0e6fba915418c01b2fb1b1d4063a6d7f","9ec473f428d74650f0ce05b81e6a27fc84906a36838fd11875fcae5193f3cbbb","acdd8a10fac8748502509cb57bdd53a7c5b85fa4a2ee3a560c00a40404ff65cb","59bd81abd493fa554955bf7dd7006273192ea8d553d3e4a819e866a14725cdfe","a29acac88d5df222deeb58568f2e56b42075d9b043b4f158b7a55a8eed18985f","56d09baa6411529b9edfed10d627aa294412c3aa33d26e1254b8f1422ecfbfd9","31feea0066a629bfcacfc80bd5ec1551d26cf7a8dad949dc24cde82307748a45","b23ee85f4ae6affbd6d92df4a305756b2d7a7d687108bac625b83d662aabe063","c541b4b619ff47a8f1d2e242f69cab2f1490797934a31b9d15fe1b9d59183626","10f0161e27ec211a27512406022e5381ee1eff148c356579a07392c1cab67205","50d0abf4fb3d7fa0d929459ec9560f6761eb9e80bc568e6367868f6402fae0b5","4be1e84f8a23aa1c9b37669820a5dc6c0d664131c2549b54b40ec225abcff77c","2d6acf4fe93fb92f0259c6bbed436112c7daf0ad9e1318f2f0bd2613083261f0","58024638b80b48562cce5f0e5f65ce5924a2309224400787a4e40dea0ce3c7f4","ed7ed4acdc5b5e7f531cb8a2b62cadc0a8a88d054637965ba585a370f3538dbc","59453dd1a944cc11ef41fc0e21d4afaa4906eb4015fc605b423776ab26be5c35","12bb43d7c61d1b5e4340ed3599bbdcdd8d781994f08a94f010c88d4d26f285bb","f40d60f92714d69e75d0f03e3b51acbe2ff52064dd0e4774fa818ff72f043ea4","797cfbacb483d815b7819b3cf867533af99a630f2beea11cc26592b0c2d42cb1","4b26040bc29ea84ee18561c65d6994a07cfb168240c5bda0eb04bfb48190b219","06709b34a5d72762ab905843ac3443277ab884dc32fce8b3b0d51bcdb5064b74","cbb6fbcffa54cb81308247f17b64f1cb22ca015fba420fdb7c2c61c3a2adfcda","d37a6f1e29ec3244911f7d28cf815251ef113387c8618426acdab8d153940bbc","0e0af8c8426a911142d13768859c1b49e120f60bb153ce6dd197e30f9b8b6820","87e68d28db4ab68bfa35d6d1b57ea233d90e1c678f3da187f796075ff3a8e85d","afdf59e4068da139bff61ba0887ae9c76f46373f95932efd54ee7910b6502a1a","b07d57ba8d3e203d16450dd2426270030368821d3d418b291a05801a362d4d99","ecd8abab263e35cda153af96d4f29c711ff477a4c2bd81698cdfc727836547e3","e9a208aad09ea42f46bdd52d309774b73e7a02762281c51377973025a9cb7250","d264ffe701d5be437313c4f6f7d8f27ce029fc5cc3c51e42e9b60bed6d943e34","d2dcfbb9046a3f918ba22ebc91310f31606cebca173944df0544dc14ed26939a","2bef42b3474c69a11119442d099d6ee4952a9e1ee2674a76df68e67ee853c9f8","0880a3c557fb7ce460173df4c71dc39365359c053da107caad5fbe03a249c69e","f636742cc740b78907aa1010d1fc25cd7d2e5966a3aa149d74ce9370627ff852","b8ef751a4bad89dfe59fa19218e89bdb5c74e6cba080bdbee9921e1c9bf4a615","930d085f4aaabd1cc8d0f4f4837d13e04e948e77c8cf97a2e64c997088fbffcf","df1fd1099460e2d762f69fccb745265e72c14b8048f3e7de60767bbf714f6ad0","dba7c59c1095d9d149ec234ad3846af7fcb0bf6c11822f76d78c19fd0e086473","de378d46014d3f7e673fecf74f8d02bc27a30ffd85ca378927fba171f83f2f66","ec8924ce154b4a9dc676762fd43a7f785fc2cb6a21a0250b34216c8ed757f0bd","6da8dd746a2c6c74c7a874d809f62f908439319fed0505b579774066ce551bcb","a0cbce32b63aa070e5f4aa15e918886492e71c9753426d573e8a9deac1dd8abe","2431e657962c860594400df7d3c49f3c6eefb7e193f158bd9e7f0f965256a33c","30e5961d52cdabbbdaa5169c3c71a77a5aa0f8ac70ebb1f250f6fdaa2007ed3d","37e82fceaba98ef3038072809e67d0b8ed4b37c3a4aa82ed7dbf48676bf2750e","3fa0235c0ee6318d87108b06d6f922f525dcf039a32231d1667b96e202a8b009","5b7c7e06d9f383a1ee8d3b700c4d1419331f4166aa340c7788a35bec98331f34","2df3bf27c69b2c5d47b17649447817b802ad9166d31bfb7c33806195c03a8d83","ee235306953241273af6e40d709d4097476ecb599229473fb55b461288ed1993","2bef48831eaf4bf89166732f51f741488205c30f5184adc03a34a63a6c9a70bd","5fb0a11bc0cb66afc528b180067199bc542c46f6fd95649c3137f3a94bf8412b","6b6814ee731c1e6ee609b98086b273d1aa13333182edd24be8be569c7b7d07df","18cce8e15d2846c71faa2543b08b70b1c04bac9a26427eb98a4e0bad24976a90","ab3a5590e693ad5fb0a1a19c17e2b01258c88fe4617a4cae9d4058cc18946d08","8b4025f2c3f2aed06120f2d20f55d5bc10a06c7a40e058eafe13af9240f85c7c","698972a628b6dbbc1d4d917d422b56e429501ec8758270e527c70401227d094a","212e0c8f420a4c1866546cb7d50ba94537c25aaa715e84685d8995798125b9b9","39b74fe9bd08e3154f281117a5fe5bfa6b1afdfe8556eda1fc82428828329fd4","8b80893422089fff8f07496f4f66f1207847f6a9645c88d75c2877fabd453f11","cf41eb0cb37e385c1d777bdfefc05f0617857fd72d3a455d6d4f81e5e31a397f","583b9e0633074c66e97445426ac0b07bdb388f87e92449baae08cd5ab9cbf846","07646330c0cf3e5429bf2fce8647b0369a9cef8dc9b7a327e2ff47c4d1b916e3","eb277e8bb50c4fbc16ac5e8238b88880626f3ad672d7af92f2d29eaa522a9399","bfdff632c328e37b1946e1b6d7120933c145fac5a6eed6c8adaba5f5e56e64e3","b04f1498e13102326e1968fac4c2d37ca0c2b7abd76812892d9496151083aa91","c413aa82126a73c6280ce1177d151c01640790b5913e6ac80b62b0cce0ebaed3","93436c1aebb65cf409cf9879764d584439bbccc2f87e05763c30b70ead288013","2bbe03e00b2dd6db70bee6237f166c7fbc2b6e301918b3e9a6b62cf0df6eb370","522b79a823b5d466fbfe86cd25473045a8ad45f2a9b9df00e19fe5f3d00ab635","db17b27cc4514d286387592824d7bd39dea6737b799787d72acaa6556d40092e","0d6d484d91ba60f459fc8fcb35d08f6791711f05c8156bb6fc17b0a6fca81541","7bfc9cdd904b12b8f14d2160a092c90afd13cedffe96b8b50a71806431a01873","4981a6995ea12a015408f795188b03a7476c5148b051ea55126a82b62e06708f","843b27075f3ed5a868bad8c9f29b9d275f8a61b3e3c4e760ff6d64e1bf9a6f9c","3c54e9f8641d69914fbda6cac089757a412fb904f0a075dbc65bce568f4a90b7","472d9a32c8571cbfbddbe80686e464464ab008caa48c65677b0d35a0e506d06c","9daca9b36125be1487105a71756caff00669c1871a01209f63b3f9285c5503ec","9567454f4649cdcd899ec3328e8ddf843e0cfd59b832b3e23879d56ca4fadb35","2687e7d974ad531a64538810770312b81193fb7f143cd09fa89e05aad414cb55","c00565777871b6d76d065c51af1d2fbc414f8804498f8692861f0ef3759d8812","12a3233962e3103fd3e4f4de0c26e0f17cd7c3d37b0aaa0743b8dcc7038d0e33","4da29c03d43f81993290813ab4d7b3d29812ce0cc1ccfce9784d076f726fe753","fb58a4485f54c463027b36c4843098de5fdb536594f49ed81f783252561f77f6","6c09333a0c899f83c1444a379ebdcebeea8fd6b25fc6bec2e0e1e5724bcdecc5","ec85cf13bd5d52a3b29672c8d5509e0d6478721d814d933578fc769e82ac7f2d","939c575afa1e1720c9cafcf09d5ad218f7ffcc36743b7cf33581dff722fde7fc","315000295ec26a0a60741a2021d3b84b8f2cc2b8f636de5851436f7464f7ab98","b7956653d6f5d55877326e67cedd538243d9953819e019242502c432381fcee5","d655eefdb3a03cdab08a7d48ff49f42feef1974b3702a1b3010888d51e2428f5","8bd215328a9fd468ffa6f0c1bec8727e9081eadcc4659f3ea56b2e54412a4cc9","d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","833e92c058d033cde3f29a6c7603f517001d1ddd8020bc94d2067a3bc69b2a8e","08b2fae7b0f553ad9f79faec864b179fc58bc172e295a70943e8585dd85f600c","f12edf1672a94c578eca32216839604f1e1c16b40a1896198deabf99c882b340","e3498cf5e428e6c6b9e97bd88736f26d6cf147dedbfa5a8ad3ed8e05e059af8a","dba3f34531fd9b1b6e072928b6f885aa4d28dd6789cbd0e93563d43f4b62da53","f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","2329d90062487e1eaca87b5e06abcbbeeecf80a82f65f949fd332cfcf824b87b","25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","4fdb529707247a1a917a4626bfb6a293d52cd8ee57ccf03830ec91d39d606d6d","a9ebb67d6bbead6044b43714b50dcb77b8f7541ffe803046fdec1714c1eba206","5780b706cece027f0d4444fbb4e1af62dc51e19da7c3d3719f67b22b033859b9","7253b2045ea6b599d85ef9dd7ce2bf5439a1a98a27f078ba2115bedf61d738c7","ca58ededf2c0cd0563e8d83fef922817ff2a1ed9bd750242b17146354c1c5243","9d34b57d308ce327e484887106e68e2a82beaf263fea298e4ada5b3925ccbb8d","fe1f945db9c3cb35788d028ce9338b06256cd6041f2597668b9359f2b4fd4197","641fe481fff812b6a151b7fe0996468ced591244c6682b6ba2610b0bf016a9c6","63e5f3ffc50b8c29acf5396c0468a290c927cb7a5208ffb74add35670867e476","06c3f71832c76a82329b45610793b56d0b78fb02603d90f8a7629f49cb0dec1f","ca586208341738cb5e6d144536d83f91d96856c5828307088d242d52e4d439d4","fde0e854df7095db9f8b5cbe3804845a437750ff3c9edcaf2572e66885b230a3","6a63ec446b7fda7a8f1307c1a4659d6b8d1c617400b46d6b49f3d97ddfa93905","c461e128927c8492fff179d344735023ae189c4b626af91adb7b63c6c4b7248f","6b2706a5cee62ef25fdb7a9a268f558a15de9df894984ed13a07c8318576ef51","353fe785452a3c2d6ff2a41fb0684bd2878e78f3728fc5dae98634ccfaa9beae","521bbccf0edf1f69c488c6828716bdfb04acb69ea3ee5e3b7140bfa22ed6c342","dfdb07c32025c9aac5707797e48c46c8fc1416c3c3a5cab9677a75ab78a787ae","e1e115f590a02130c539f61c20460291711dccbdaa3fe4bbad43ab770dd4306e","e4fe42173b249ff533174cfbde4510ce5345da50c2f717b3ca27eda49929dad1","0dbd184576784dbc0b0caa1f022bbb1024a4f27b77e9bf5738c73841c218f4ab","17023bb4eba80df5152e45fa10ec0fa4105fa1c59cb30a51d5724c77cf041151","05b84716272aee3042dbeb319aa5b1ff5b8e77b62ae24be00b88cf8e04cab4a2","86d850e3572c2ed8f56d73a1ce7c5c4f3ea5a62170b82db65f3055f73614099d","4ab4cb977736067eda6f2ff73e521424a818319a1a70616ad2db2ba0b9dd5322","fa790e874499cb17016556f3168948f8d751dcb35a0862a9b9c55bb2ec353d48","795692a29dca5a39f904825a4abc78f9acc3a54ecc6858d8a268c52679f21751",{"version":"6876211ece0832abdfe13c43c65a555549bb4ca8c6bb4078d68cf923aeb6009e","affectsGlobalScope":true},{"version":"394fda71d5d6bd00a372437dff510feab37b92f345861e592f956d6995e9c1ce","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},{"version":"c564fc7c6f57b43ebe0b69bc6719d38ff753f6afe55dadf2dba36fb3558f39b6","affectsGlobalScope":true},{"version":"109b9c280e8848c08bf4a78fff1fed0750a6ca1735671b5cf08b71bae5448c03","affectsGlobalScope":true},"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","e525f9e67f5ddba7b5548430211cae2479070b70ef1fd93550c96c10529457bd","ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","17fe9131bec653b07b0a1a8b99a830216e3e43fe0ea2605be318dc31777c8bbf","3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","2c9875466123715464539bfd69bcaccb8ff6f3e217809428e0d7bd6323416d01","ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","2472ef4c28971272a897fdb85d4155df022e1f5d9a474a526b8fc2ef598af94e","6c8e442ba33b07892169a14f7757321e49ab0f1032d676d321a1fdab8a67d40c","b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","19851a6596401ca52d42117108d35e87230fc21593df5c4d3da7108526b6111c","3825bf209f1662dfd039010a27747b73d0ef379f79970b1d05601ec8e8a4249f","0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","40bfc70953be2617dc71979c14e9e99c5e65c940a4f1c9759ddb90b0f8ff6b1a","da52342062e70c77213e45107921100ba9f9b3a30dd019444cf349e5fb3470c4","e9ace91946385d29192766bf783b8460c7dbcbfc63284aa3c9cae6de5155c8bc","40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","561c60d8bfe0fec2c08827d09ff039eca0c1f9b50ef231025e5a549655ed0298","1e30c045732e7db8f7a82cf90b516ebe693d2f499ce2250a977ec0d12e44a529","84b736594d8760f43400202859cda55607663090a43445a078963031d47e25e7","499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","e38d4fdf79e1eadd92ed7844c331dbaa40f29f21541cfee4e1acff4db09cda33","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","7c10a32ae6f3962672e6869ee2c794e8055d8225ef35c91c0228e354b4e5d2d3","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e",{"version":"f4b4faedc57701ae727d78ba4a83e466a6e3bdcbe40efbf913b17e860642897c","affectsGlobalScope":true},"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7",{"version":"003ec918ec442c3a4db2c36dc0c9c766977ea1c8bcc1ca7c2085868727c3d3f6","affectsGlobalScope":true},"938f94db8400d0b479626b9006245a833d50ce8337f391085fad4af540279567","c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c",{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true},"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a",{"version":"12fb9c13f24845000d7bd9660d11587e27ef967cbd64bd9df19ae3e6aa9b52d4","affectsGlobalScope":true},"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","5078cd62dbdf91ae8b1dc90b1384dec71a9c0932d62bdafb1a811d2a8e26bef2","a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c",{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true},"2f32444438ecb1fa4519f6ec3977d69ce0e3acfa18b803e5cd725c204501f350","0ab3c844f1eb5a1d94c90edc346a25eb9d3943af7a7812f061bf2d627d8afac0","b0a84d9348601dbc217017c0721d6064c3b1af9b392663348ba146fdae0c7afd","161f09445a8b4ba07f62ae54b27054e4234e7957062e34c6362300726dabd315","77fced47f495f4ff29bb49c52c605c5e73cd9b47d50080133783032769a9d8a6","e6057f9e7b0c64d4527afeeada89f313f96a53291705f069a9193c18880578cb",{"version":"34ecb9596317c44dab586118fb62c1565d3dad98d201cd77f3e6b0dde453339c","affectsGlobalScope":true},"0f5cda0282e1d18198e2887387eb2f026372ebc4e11c4e4516fef8a19ee4d514","e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86",{"version":"237581f5ec4620a17e791d3bb79bad3af01e27a274dbee875ac9b0721a4fe97d","affectsGlobalScope":true},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true},"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","e6d81b1f7ab11dc1b1ad7ad29fcfad6904419b36baf55ed5e80df48d56ac3aff","1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","b6b8e3736383a1d27e2592c484a940eeb37ec4808ba9e74dd57679b2453b5865","d6f36b683c59ac0d68a1d5ee906e578e2f5e9a285bca80ff95ce61cdc9ddcdeb","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093",{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true},"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","b338a6e6c1d456e65a6ea78da283e3077fe8edf7202ae10490abbba5b952b05e",{"version":"2918b7c516051c30186a1055ebcdb3580522be7190f8a2fff4100ea714c7c366","affectsGlobalScope":true},"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","982efeb2573605d4e6d5df4dc7e40846bda8b9e678e058fc99522ab6165c479e","e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055",{"version":"d67fc92a91171632fc74f413ce42ff1aa7fbcc5a85b127101f7ec446d2039a1f","affectsGlobalScope":true},{"version":"d40e4631100dbc067268bce96b07d7aff7f28a541b1bfb7ef791c64a696b3d33","affectsGlobalScope":true},"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","42180b657831d1b8fead051698618b31da623fb71ff37f002cb9d932cfa775f1","4f98d6fb4fe7cbeaa04635c6eaa119d966285d4d39f0eb55b2654187b0b27446",{"version":"e4c653466d0497d87fa9ffd00e59a95f33bc1c1722c3f5c84dab2e950c18da70","affectsGlobalScope":true},"e6dcc3b933e864e91d4bea94274ad69854d5d2a1311a4b0e20408a57af19e95d","2119ab23f794e7b563cc1a005b964e2f59b8ebcb3dfe2ce61d0c782bfd5e02a2","0fd641a3b3e3ec89058051a284135a3f30b94a325fb809c4e4159ec5495b5cdc","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","e66eb237e7629bdc09f5f99fd69b73a0511fafb799783496a37432dde5ce0bf0","fdec06934bf00cb7c1187b7f2f1ac6bf2f327ab5af71a543c48d919baa194f1a","9c8f99dfcd80875222e3a4923525595503174088a6eedce78ae3ea81fd650323","652c8e676e1b94c7829671c0eb237528f76a0ba67ac846c065bceb4088ebddd7","caac4c00061a947d2b1010bb6464f06197f2671bdf948fa1aa40bf1e244ee2a0","95b6c669e7ed7c5358c03f8aa24986640f6125ee81bb99e70e9155974f7fd253","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","c3e5b75e1af87b8e67e12e21332e708f7eccee6aac6261cfe98ca36652cdcb53","f7dd7280ee4f0420865e6423fe199aeac63d1d66203a8b631077cdc15501ef1f","ef62b4aa372f77458d84c26614b44129f929e263c81b5cd1034f5828a5530412","8610558ae88a43ad794c4ab1da4f0e8e174e0357c88f6cbb21f523e67414e9a9","0b0feb9837c561c0a67b61024328045bb16bac6e4b10f7b0b217d3b8b43b0b12","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","d1c6c35d174dbe63a76ed8ac6621cca8dbe8794961a2121feb5f0239747d1b7e","051c1bc0efd3690031a97ac49133c9486c22bd07852e75a11ed4b40ceb722569","a22270cba4f004f64a61cec3e39574416e3ca72e848f53a36ba3add746243217","447b9b631351b40faa0e961e6cbb5e269bc1fa61f7a615b8077b31a94aaefae3","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","e641fd321ca5fe17b532bd3b5a6e85a8741bbde7a9d7110d8ed272605c1c4a25","9d63720cd09e8b0ae76e0ade1993b7ec600e6729e453f459d4039d6914914c1a","8b324c8813c2bee210a7a79eede7abc4b5c60132fd497e140ce312a856af22a4","ff2d2f19561cd3a594d7cfeeb29797e62c8d9ef62df65916e6be9bdcfbaf8f7d","d59191f0bb663800c0856116d69ae11125eeae891d0a46c0be52f3c78ed4890e","d8360fe15a60f549584a9ff7d0e6129ed77abdbcf062b4da1a10a78175d34f71","a57b37eae916e680e5e15b36d17b22bb05834115041fe940f11d9e714501ff84","e53086c8f861bee1717e3e001498d2a493f786c6fcbb0027fc4352f00fcaa3cd","446242adee16900500f9d9dba2678258641f7e8f692f43c18dde8872167107bb","6ef7ba3b3d2514336c59d1af84e2d7550a886a5be193d9cb980cc6d16698236f","185e38aa301aaaaf3870183acd48f9b4da7baa5282cb9ed102a10004b0751cc2","1f0c7b51e98442f125414c1d43c6a04abc8ee800066834d742eb99b0e542d327","131c58b9b527fa99139dabaaf585ed52e9f5c450c1347c87bcb9af9b884e63ea","2642f053f18152ed5ba6403217f932e4fa0be0077f38734b168ab92da948b3c4","5718fb71731197c4e623120e93c5ece9061f569aa4dc28ffcbb8b4fb5ffe2ba6","9bc5d8cd23570760dc417cb10b01079bdb919b4dfeaab9c4341cf11d37d7a29e","0671e90198a35ffd8e5dd35c5ce0fd4839305f6fe9878ca9851a25c097a7874a","a3d9df9d57f7e47f70e013a46cf1c38177579dbb2c5b567bde24c7a67ed1303d","b4ac0ae1e7ed09d2ab8496d65c04643742a1811c6c5f34d9f9504a3868bc02e8","b63b8dfe391e40354edfb991062b8e8e28ef36a28644a7904f6a38f51a8a2386","375ecb9cebdd43c6fd230cfc02c6640344aadf920319b73a3c8514f45f23167c","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73","67c51fa68aadbb50e4ffc650b704620e0393bddb3d3eac3a6195bf1956562fe4","8187d9966b8fa5a2d0e53c71903adb5aa71ebc2a23410ab2d37eb764db800829","d851073758ff1ce39bb428d8a3b3385ca26da1745ca742789e876d67dc0aae43","0cee5b30f4300e628927dde7e7ae7b5bc32250a685242474d069b9346da8a2b1","6fdc7cbbbc0601f9bb153c30c0e8063321cd1c9211ad512b9fde1d1f785b35dd","6ae7157666262b5c0402463531996601150583cb1f4f9421f184a0eec9049f10","fbd0ac5a6097c20307587444815092eb1825d831991363423ef0ce70ef053e82","ec0b2f8ed3cc053fdb004ab4979c32625179a746717504e08fc30cef9ec9d7a3","2887592574fcdfd087647c539dcb0fbe5af2521270dad4a37f9d17c16190d579","ed434fd49cf57789f99d3d2f4fb4d5f4930825280ceaae21200d840609345161","3ea3b60de13285b50d9752812d3a6d2cae078d89031713613f58cd2f5565589a","4b0465994a4b18dd63a9af850c74024e6184deac2477ab87135f7d1b11a07178","3031ed6baeacbaf771576f64094d8a977e5be37b04d4dbb335fff9cc1d95a147","5f02cf0f7cc845c12b09607f97e57f942c313ebee6c33a3efbc346f19b499c7f","8e1eb67ef6924cd14793af526f9a4e3195b5734920a75ec29900731b1997f2ce","07fa4bb359f3cacde0e0b6d75cd9a53b88168088be58e01b385cd12e12a6d5d4","52d5d4a344ea0781bf00874c4829e3cfb0c12e1fa28c17740e773bc247fa663c","89ebb5291da50663149fc01245eeca4f8bf1a2bd8a3fe84ea62d926d53a6460f","792128daaa6209b5d52148b1952b56aad02fcf72435283a2d5ac1fb22113cd91","c474689555d4e49d5210e6c6d95f939e31f49158af350cbc403e4fdda5d32386","d4c5aebfd4d5468e03fee82920222d861737cc6ec5c9829474a36e379753fc52","f8fd01e7967e335266c6113c5d9bf15113768c5747265420dae0fdf1868eb05c","7a89d77bf137521a06ff5b3ce7297c663f3c27912b09320fa520c1b2d6bab9e5","7647ed4e66d98048478e6245f50b794a916ffa456fb362672e52c01e1b09a644","9a22045cb43de6fab0b5e524e4cef807e5a2c6e0a49044de56b65448e1572a14","4441e06cf8e7ffff0519950e34df3608ca1016f09f83fdfb7f71ab7376ac5a47","45d0cb97f71ad1fd0688b8a95c2a2b3cce347cd458ec365af4079c0273b49dc6","6c86a8ced863164acfbe7753660a7ba4aa97cdaa1e3b8d193a18316f906d4bbf","2dd10019ccc6f059b703db2f58f6f385625d235869fe562978b5a913e5db4c69","e4c66039756093e60d857430f451ffff1ca3fa5a951367b67dcc8f29b47b2d72","48433ed0754c860ebfeeec213f9c5943cc6b8aa7b70ce1bd9c5c6a490ed91229","c2708a205c4afa73bfeebaf0e939390b3b3fe9cd1788b09389ee0d736cd75a72","8f6d44ee7619da14f50cf051a243c41793ff1dccda8d8a3bb2255989df114c30","2aca83fda179d79a68a259bc47999615976b935d2eeb391304db8a095af721e6","26b3b07bb0229b36ba87ec2b0ca1a42a927c2e8a8bd5ae9339d5a82d950eb3ce","8767c93beffebe9eda0c03e4893ab2fe9b62ff65bf767a003cbba50cfe810a28","d7f211b5ba9e9fc21ba0fbf12b3ceda8680f672da595068dbb4d2d1f9a0c83b1","e613a48817a40243523fa26bb5e3396e6d60c79a1c0c59274889560f34cfdde7","ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","80b232969d72e6f08081a4a0b558537db2671a1a60bb44559d5e3b5f1fc89cd6",{"version":"841784cfa9046a2b3e453d638ea5c3e53680eb8225a45db1c13813f6ea4095e5","affectsGlobalScope":true},"646ef1cff0ec3cf8e96adb1848357788f244b217345944c2be2942a62764b771","0ab7506c71d3467c8db4fdc2512e5960afcfeb0a4f51467d79c9b51af5ec9e63","d45bd3d7c328e85331b3deb75be0f5bef5746ff9efa27900c769ad0e3461acb4","0eb2ed1c1c8d87ba91ae080e95a5f4891e3bdd31626b894655985760a2e56afd","3cfb7c0c642b19fb75132154040bb7cd840f0002f9955b14154e69611b9b3f81","8387ec1601cf6b8948672537cf8d430431ba0d87b1f9537b4597c1ab8d3ade5b","d16f1c460b1ca9158e030fdf3641e1de11135e0c7169d3e8cf17cc4cc35d5e64","a934063af84f8117b8ce51851c1af2b76efe960aa4c7b48d0343a1b15c01aedf","e3c5ad476eb2fca8505aee5bdfdf9bf11760df5d0f9545db23f12a5c4d72a718","d0570ce419fb38287e7b39c910b468becb5b2278cf33b1000a3d3e82a46ecae2","3aca7f4260dad9dcc0a0333654cb3cde6664d34a553ec06c953bce11151764d7","a0a6f0095f25f08a7129bc4d7cb8438039ec422dc341218d274e1e5131115988","b58f396fe4cfe5a0e4d594996bc8c1bfe25496fbc66cf169d41ac3c139418c77","45785e608b3d380c79e21957a6d1467e1206ac0281644e43e8ed6498808ace72","bece27602416508ba946868ad34d09997911016dbd6893fb884633017f74e2c5","2a90177ebaef25de89351de964c2c601ab54d6e3a157cba60d9cd3eaf5a5ee1a","82200e963d3c767976a5a9f41ecf8c65eca14a6b33dcbe00214fcbe959698c46","b4966c503c08bbd9e834037a8ab60e5f53c5fd1092e8873c4a1c344806acdab2","480c20eddc2ee5f57954609b2f7a3368f6e0dda4037aa09ccf0d37e0b20d4e5c","40a9e5673448badb43d693daf20698c452782ae1682887b9d1ccbf207589781a","f2834e7008d641386a0d313ef33e974effb5815755254506341a0f3ba846a506","2e44250d356340733b1f210ad994bf11a0ae802186d5ad6b602661030f811db2","d01f869e0aa82d99b590ac59b6906d0f4ccae1d903d1dd1e622d944f4741b829","8d5a0a154fda1d5422fc0a0432821d5485ef88588ceb267651bf0ac786addcfa","b25d24260ac27016213b336707cb6bd279e12b946304118837ca0bd93831bb0b","81b8cf069b2fad8ff8112f832db6a32b7735b3291855ae71876e8dd07687a438","da0f84fcd93700b4a5fbf9c6f166a6cc19fc798231bff56dd1e3875bfc6966eb","634ff08e0143bec98401c737de7bfc6883bfec09200bd3806d2a4cfc79c62aaa","90a86863e3a57143c50fec5129d844ec12cef8fe44d120e56650ed51a6ce9867","472c0a98c5de98b8f5206132c941b052f5cc1ae78860cb8712ac4f1ebf4550ca","538c4903ef9f8df7d84c6cf2e065d589a2532d152fa44105c7093a606393b814","cfcb6acbb793a78b20899e6537c010bfbbf939c77471abcdc2a41faf9682ca1a","a7798e86de8e76844f774f8e0e338149893789cdc08970381f0ae78c86e8667f","eebc21bb922816f92302a1f9dcefc938e74d4af8c0a111b2a52519d7e25d4868","6b359d3c3138a9f4d3a9c9a8fda24be6fd15bd789e692252b53e68ce99db8edc","9488b648a6a4146b26c0fd4e85984f617056293092a89861f5259a69be16ca5c","e156513655462b5811a8f980e32ccd204c19042f8c9756430fe4e8d6f7c1326e","5679b694d138b8c4b3d56c9b1210f903c6b0ca2b5e7f1682a2dd41a6c955f094","ca8da035b76fb0136d2c1390dda650b7979202dbe0f5dc7eaefcde1c76dee4f4","4b1022a607444684abeee6537e4cace97263d1ef047c31b012c41fdc15838a79",{"version":"dd0271250f1e4314e52d7e0da9f3b25a708827f8a43ceff847a2a5e3fd3283e8","affectsGlobalScope":true},{"version":"47971d8a8639a2a2dd684091c6e7660ec5909fed540c4479ca24e22ac237194e","affectsGlobalScope":true},"e1075312b07671ef1cbf46409a0fa2eb2b90bb59c6215c94f0e530113013eeda","1bfd63c3f3749c5dc925bb0c05f229f9a376b8d3f8173d0e01901c08202caf6f","da850b4fdbabdd528f8b9c2784c5ba3b3bedc4e2e1e34dcd08b6407f9ec61a25","e61c918bb5f4a39b795a06e22bc4d44befcefd22f6a5c8a732c9ed0b565a6128","ee56351989b0e6f31fd35c9048e222146ced0aac68c64ce2e034f7c881327d6d","f58b2f1c8f4bcf519377d39f9555631b6507977ad2f4d8b73ac04622716dc925","4c805d3d1228c73877e7550afd8b881d89d9bc0c6b73c88940cffcdd2931b1f6","4aa74b4bc57c535815ae004550c59a953c8f8c3c61418ac47a7dcfefba76d1ba","78b17ceb133d95df989a1e073891259b54c968f71f416cd76185308af4f9a185","d76e5d04d111581b97e0aa35de3063022d20d572f22f388d3846a73f6ce0b788","0a53bb48eba6e9f5a56e3b85529fbbe786d96e84871579d10593d4f3ae0f9dba","d34fb8b0a66f0a406c7ce63a36f16dda7ff4500b11b0bd30a491aa0d59336d1f","282b31893b18a06114e5173f775dd085597ca220d183b8bd474d21846c048334","ed27d5ce258f069acf0036471d1fbb56b4cb3c16d7401b52a51297eca651db62","ec203a515afd88589bf1d384535024f5b90ebe6b5c416fb3dcca0abd428a8ba4","32a2a1374b57f0744d284ca93b477bd97825922513a24dfe262cbf3497377d96","a8b60d24dc1eb26c0e987f9461c893744339a7f48e4496f8077f258a644cffab",{"version":"3f9df27a77a23d69088e369b42af5f95bcb3e605e6b5c2395f0bfcd82045e051","affectsGlobalScope":true},"9fd080a9458c6d6f3eb6d4e2b12a3ec498d7d219863e9dca0646bdee9acce875",{"version":"e5d31928bee2ba0e72aeb858881891f8948326e4f91823028d0aea5c6f9e7564","affectsGlobalScope":true},"9a9ba9f6fd097bb2f57d68da8a39403bbe4dc818b8ccd155a780e4e23fa556f2","e50c4cd1f5cbce3e74c19a5bbf503c460e6ae86597e6d648a98c7f6c90b596dd",{"version":"fa140f881e20591ce163039a7968b54c5e51c11228708b4f9147473d06471cf5","affectsGlobalScope":true},"295eca0c47be1191690fd2fe588195fff9d4dc43852aceb8b4cab2aa634579f0","59ee7346e19b0050508a592702871dc943083c6dcb69a47d52e888115d840781","067712491fb2094c212c733dd8e2d56e74c309a9ce9dac9e919286b7245a1eb4","a5eae58ac55bd30c42359e4b01fb2be5eddac336869d3f04ffb4daa54b58f009","d12d691ef8933e8db39f2ca81d6973940ff5e37bb421752f5b6e7bc15dea3abf","4c5f8bd9b3a1aae4e4fddfee41667e495a045f73ed603993038fa6a8ba92fa14","dfb274ab0f319cf18ce7152067c25f984c7fd1924fc72b3f66734588444c934a","108c8c05cbc3fbbbd4ff4fc0779c9bef55655c28528eb0f77829795dc9f0b484","a7e5444d24cdec45f113f4fb8a687e1c83a5d30c55d2da19a04be71108ad77bd","41ec17e218b7358fcff25c719bc419fec8ec98f13e561b9a33b07392d4fec24c","23c204326746e981e02d7f0a15ab6f8015f9035998cb3766c9ddbf8ea247aea2","25f994b5d76ce6a3186a3319555bbba79706dac2174019915c39ac6080e98c7e","dfa4e2c6a612d43851ccbc499598cb006a3a78bc8c7f972c52078f862fa84e47","02c1705fa902f172be6e9020d74bcd92ce5db8d2ef3e1b03aabc2ac8eb46c3db","99d2d8a0c7bb3dd77459552269a7b5865fa912cedab69db686d40d2586b551f7","b47abe58626d76d258472b1d5f76752dd29efe681545f32698db84e7f83517df","3a99bbbbbf42e45c3d203e7c74f1319b79f9821c5e5f3cdd03249184d3e003ce","aaacc0e12ab4de27bdf131f666e315d8e60abec26c7f87501e0a7806fc824ae6","3b4195afd41a9215afc7be0820f8083f6bd2e85e5e0b45bb0061fb041944711e","108df8095f5e25d7189dd0d1433ac2df75ec40c779d8faf7d2670f1485beb643","ddd3c1d3c9ff67140191a3cf49b09875e20f28f2fc5535ae5ea16e14293a989b","7b496e53d5f7e1737adcb5610516476ee055bf547918797348f245c68e7418fe","577f44389d7faedd7fc9c0330caf73140e5d0d5f6c968210bff78be569f398a7","3046c57724587a59bceefadd30040d418e9df81b9f3cfd680618a3511302ed7a","15ccc911ed15397e838471bfe6d476c28deffe976c05cb057e6b1ea7491242c2","64b5a5ebdaead77a9a564aa938f4fb7a45e27cda7441d3bee8c9de8a4df5a04f","a48037f7af5f80df8973db5e562e17566407541de284b8dadf1879ea3aed8a2f","dab97d96ce986857150db03f0d435b44c060d126b4a387c7807f4e9f6c92e531","85f39366ea7bc5e34b596fc97de18a7e377856755e789d8e931054f2191d9b8b","daf3ea3d49f6e8a2fa70b7ca1f21bd97f1b65021b31fbfccb73dd55f86abb792","b15bd260805f9dd06cd4b2b741057209994823942c5696fd835e8a04fb4aab6b","6635a824edf99ed52dbd3502d5bce35990c3ed5e2ec5cef88229df8ac0c52b06","d6577effa37aae713c34363b7cc4c84851cbabe399882c60e2b70bcbb02bfa01","8eaf80ad438890fe5880c39a7bbf2c998ce7d29d4c14dd56d82db63bd871eefb","9b3e7f776f312c76ac67e1060e5398d7ac2c69d6a3a928a9daaae2eb05b15f56","202042eccb4789b7dee51ba9ecab0b854834ea5c1d6a3946504bfc733d4468c3","2b2ef76a9f36094b07ee6f76a5ac6903f2f65c0a20283201814a8d1e752cb592","8882e4e087d0bc8cc713cb3d8090c45d33e373e6f5c83e0f8d00fe6a950ef875","42979c197a22211d72c9cf1de8559f0a39de0b0687eea63c6407a69d9d73c13f","cc36098e27200f5daceffff4a4694148746aaa1b369536186fa1caa43d8b4bde","07133796953f82127aebef603392f1430690fe6cfd5d3d4c2bd3b277c6566d79","9079300efc80cdcb5a5cd153bdc354ac3439619e661e5f35413f81f94d4aa897","3655e77b67da6b52b34f7abd79890cdbc9ce2e2a3579fc2568f07d77d1d60ec9","95a1ff30ceba2b8c185a76002e2a4578cca9a593d8b642b7d5b13275ece952b9","2a43ea656e1e3ae2ec876766d9d4576a53b079a1cd352367db12fc721033c08b","e8835cfaf67d1730e430a800d447ea79d33c59fc990455965ca85dcc16c6ec64","98631e5438157a2bc50970527c20d9a0d02def63700cb8f21ee19520a982fbc0","93a5f2ecf21f69045a129ef7821396276c117b34eb39d0b5510ff90c34839f56","4d054866f6bed47338a905264c4cc16108dfb55353a97d67b5beb0393f78fbc4","cc611eddaabd228585429f406dc5b2ef53db92e954f3fab97f8cc67b84b0a67b","51d3abc39997f19e1e0e13fe545c786465259a3f6625b27828e47847a00acc27","982c00b942df3ad3aa49500b7f253bad1f2624d4c5e0e0eea1ee20529d90296f","a9f610a8bd1aa513ca9ee39a05566e7439b45ef24670858f4b0a3b1b33a17923","a7b268ed0284472916b39062cea1ec8ca946b048b7f8992b14221d4318cb7f5b","7748692e43d33e0f58fd69f9e84f568430d147be8a5fec55aea68c73f63908a1","cee3e7bec863f019aa744e00dd7a8470f2f6ff951c498c501ad6e296aca9f418","98e5bfadb80d850109194eb7cbdae761564cf0aa4cdd39e70eb73fe628af6bf8","5da731f0b18d358e4e0ca682928298de26c6eabee5990d03333e0e8aef335ea2","5ed1241d2008dfabf2145443b9fb285b7bdcd8211266187ed9dfb2ae5b80f869","f60e1afcef13dcd11edafbd3f7720a5a50c3d2d90b4cb27cea58adb16efd12ed","e6a1fc7243e8a4f92cbafa2bac261e3540968403f082df44ae521b8e2658efbd","b745f5b14ad0407d94b3b3e764ceb6e6c1c0873528461421046751f7a3c84b17","554028fd3b11a78660ed0cb98b5fd343bc9b8a9b8495114e6ae5d13aed49f242","e4125c670944f6369be310c830b37391a82b4f8f500399a17b041962e1fe1dd2","60cded932be8d4f5de5c3a7f56c5e01438ce8ec7f110d4c87fdf2bfdb910dbd0","06e0622d8d29254863de52ca0da62329d78c5e02086481fbcef6c9cd74796d84","ad5346fa860e1577699a7a1e6543f7e811dd209164ed4e226566595c50ad3dd4","749ad4dbb8d1d33ab4283f8ffa875669e067f917cf1d17162e149b571c689f9a","dc278a8129f50ef9555060cf12ba10a11c2a816bad01c2f1abd2f87f6ac3796c","ee94a249d6f6c94e2656e1abc6820a25a88ec1351c21929d1365d60a4381d797","bc5a1ad94db45ea72a8632a18d57efe131671c54c51347c8c9a266f5ca059d8f","1ecb3bf08e05193e81b052ca5180d2a2cfcf64602d57312dd7a5686755938b88","ee2a7977e7cc78906b894656baaf8d4080962056ee12b2024fa2f42bf8e447bf","88124457c6ce628eb357aefa18c0e23a58d92997bed3e28a5e53217a9d8ec590","bda82ce02ca6b44902394fd57e57b1b41e4de290727d92cef3cb537b21cbc5af","c288bf4485ccf06ac2da23408bbdd47c987b1ea7db59f7d3caf736d115323e42","c0007fbf0456531d2c2ac6243689559d4ea2b5a5bba9ddb28c006db5a15fe32d","c7d9afa4d252d9dee7c7c0c3752db5efcbaa39dda3df9a1e193aea3a0d056ac1","475709fda88e76c7b3bcf00a2ffa16eb2d91088caa6d9f4abdf9a6592664f676","ec1bc8ff1a835119253f23d674c3e13ba983744620a0655f73dc61f6aaeea004","4f9b48c8b5098f29ddf9041e81676fb06b078e1dfe76e1b160f93ca214d05ff3","94c5a9b9991dc4e164779653c1f2af90ad961fd23d9164c0b6e570be7456ce31","13ed3c245e4a6a8b90d3f0909198c01fd7cb48e41364c1ece3c11edecb9dc9c7","81212195a5a76330d166ecfd85eb7119e93d3b814177643fa8a10f4b40055fbf","b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","82e5a50e17833a10eb091923b7e429dc846d42f1c6161eb6beeb964288d98a15","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","f9e22729fa06ed20f8b1fe60670b7c74933fdfd44d869ddfb1919c15a5cf12fb","d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed",{"version":"a8932b7a5ef936687cc5b2492b525e2ad5e7ed321becfea4a17d5a6c80f49e92","affectsGlobalScope":true},"689be50b735f145624c6f391042155ae2ff6b90a93bac11ca5712bc866f6010c",{"version":"64d4b35c5456adf258d2cf56c341e203a073253f229ef3208fc0d5020253b241","affectsGlobalScope":true},"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","dd0c1b380ba3437adedef134b2e48869449b1db0b07b2a229069309ce7b9dd39","1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a",{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true},"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","ee65fe452abe1309389c5f50710f24114e08a302d40708101c4aa950a2a7d044","63786b6f821dee19eb898afb385bd58f1846e6cba593a35edcf9631ace09ba25","c5a14bdeb170e0e67fb4200c54e0e02fd0ec94aca894c212c9d43c2916891542","a39f2a304ccc39e70914e9db08f971d23b862b6f0e34753fad86b895fe566533","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","d88a5e779faf033be3d52142a04fbe1cb96009868e3bbdd296b2bc6c59e06c0e","8b677e0b88f3c4501c6f3ec44d3ccad1c2ba08efd8faf714b9b631b5dba1421b","8a19491eba2108d5c333c249699f40aff05ad312c04a17504573b27d91f0aede","199f9ead0daf25ae4c5632e3d1f42570af59685294a38123eef457407e13f365","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","ddef25f825320de051dcb0e62ffce621b41c67712b5b4105740c32fd83f4c449","1b3dffaa4ca8e38ac434856843505af767a614d187fb3a5ef4fcebb023c355aa","15fe687c59d62741b4494d5e623d497d55eb38966ecf5bea7f36e48fc3fbe15e",{"version":"2c3b8be03577c98530ef9cb1a76e2c812636a871f367e9edf4c5f3ce702b77f8","affectsGlobalScope":true},"1ba59c8bbeed2cb75b239bb12041582fa3e8ef32f8d0bd0ec802e38442d3f317"],"options":{"allowSyntheticDefaultImports":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":99,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":99,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"fileIdsList":[[73,201,245],[73,74,76,201,245],[73,75,201,245],[201,245],[73,75,76,77,78,79,80,201,245],[75,201,245],[69,70,201,245],[63,201,245],[63,66,201,245],[63,64,65,67,201,245],[69,201,245],[68,201,245],[68,69,71,72,201,245],[201,245,537],[201,245,248,289,295,298],[201,245,300],[201,245,298,312,315],[201,245,298,299,300,301,316],[201,245,312,332,334,363,364],[201,245,312,332,376,378],[201,245,377],[201,245,312,332],[201,245,365,378,379,380,381],[201,245,312,332,363],[201,245,291,295,312,335,338],[201,245,336,337],[201,245,315,335],[201,245,315],[201,245,312,339,350],[201,245,332,369],[201,245,312,332,369,370],[201,245,312,367,369],[201,245,295,312,332,369,370],[201,245,295,312,332,369,372],[201,245,296,297,312],[201,245,309,312,332,366,369,370,371,372,373,374,375],[201,245,312,322,328,332,368],[201,245,352,353],[201,245,353,354],[201,245,329],[201,245,312,329],[201,245,329,330,331],[201,245,296,297,312,317,322,328],[201,245,312,357],[201,245,357,358,359,360],[201,245,312,356],[201,245,295,302],[201,245,304,306,308],[201,245,297],[201,245,302,303,309,310,311],[201,245,396],[201,245,393,394,395,396,397,398,399,400,401,402,403,404,405],[201,245,386],[201,245,342],[201,245,393,394,395],[201,245,393,394],[201,245,342,396,397],[201,245,394],[201,245,388],[201,245,385,387],[201,245,406],[201,245,490],[201,245,477,478,479],[201,245,472,473,474],[201,245,450,451,452,453],[201,245,416,490],[201,245,416],[201,245,416,417,418,419,464],[201,245,454],[201,245,449,455,456,457,458,459,460,461,462,463],[201,245,464],[201,245,415],[201,245,468,470,471,489,490],[201,245,468,470],[201,245,465,468,490],[201,245,475,476,480,481,486],[201,245,469,471,481,489],[201,245,488,489],[201,245,465,469,471,487,488],[201,245,469,490],[201,245,467],[201,245,467,469,490],[201,245,465,466],[201,245,482,483,484,485],[201,245,471,490],[201,245,426],[201,245,420,427],[201,245,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],[201,245,446,490],[201,245,537,538,539,540,541],[201,245,537,539],[201,245,260,295,543],[201,245,251,295],[201,245,288,295,550],[201,245,260,295],[201,245,553,555],[201,245,552,553,554],[201,245,257,260,295,547,548,549],[201,245,544,548,550,558,559],[201,245,258,295],[201,245,257,260,262,265,277,288,295],[201,245,305],[201,245,295],[201,242,245],[201,244,245],[201,245,250,280],[201,245,246,251,257,258,265,277,288],[201,245,246,247,257,265],[201,245,248,289],[201,245,249,250,258,266],[201,245,250,277,285],[201,245,251,253,257,265],[201,244,245,252],[201,245,253,254],[201,245,255,257],[201,244,245,257],[201,245,257,258,259,277,288],[201,245,257,258,259,272,277,280],[201,240,245],[201,240,245,253,257,260,265,277,288],[201,245,257,258,260,261,265,277,285,288],[201,245,260,262,277,285,288],[201,245,257,263],[201,245,264,288],[201,245,253,257,265,277],[201,245,266],[201,245,267],[201,244,245,268],[201,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[201,245,270],[201,245,271],[201,245,257,272,273],[201,245,272,274,289,291],[201,245,257,277,278,280],[201,245,279,280],[201,245,277,278],[201,245,280],[201,245,281],[201,242,245,277,282],[201,245,257,283,284],[201,245,283,284],[201,245,250,265,277,285],[201,245,286],[197,198,199,200,201,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[245],[201,245,265,287],[201,245,260,271,288],[201,245,250,289],[201,245,277,290],[201,245,264,291],[201,245,292],[201,245,257,259,268,277,280,288,290,291,293],[201,245,277,294],[201,245,570,609],[201,245,570,594,609],[201,245,609],[201,245,570],[201,245,570,595,609],[201,245,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],[201,245,595,609],[201,245,258,277,295,546],[201,245,258,560],[201,245,260,295,547,557],[201,245,612],[201,245,257,260,262,265,277,285,288,294,295],[201,245,307],[201,245,263,295],[201,245,349],[201,245,312,347,348],[172,201,245],[201,245,312,333],[201,245,312],[201,245,383],[201,245,340,343],[201,245,340,343,344,345],[201,245,312,320],[201,245,257,295,312,319,320,321],[201,245,295,312,318,319,321],[201,245,304,346],[201,245,312,314],[201,245,313],[201,245,326,327],[201,245,312,322,323,324,325],[201,245,312,322,328,332,339,351,355,361,362],[201,245,312,322,328],[201,245,382,384],[201,245,341],[61,201,245],[57,201,245],[57,58,59,60,201,245],[201,210,214,245,288],[201,210,245,277,288],[201,245,277],[201,205,245],[201,207,210,245,288],[201,245,265,285],[201,205,245,295],[201,207,210,245,265,288],[201,202,203,204,206,209,245,257,277,288],[201,210,218,245],[201,203,208,245],[201,210,234,235,245],[201,203,206,210,245,280,288,295],[201,210,245],[201,202,245],[201,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,245],[201,210,227,230,245,253],[201,210,218,219,220,245],[201,208,210,219,221,245],[201,209,245],[201,203,205,210,245],[201,210,214,219,221,245],[201,214,245],[201,208,210,213,245,288],[201,203,207,210,218,245],[201,210,227,245],[201,205,210,234,245,280,293,295],[171,201,245],[159,160,161,201,245],[162,163,201,245],[159,160,162,164,165,170,201,245],[160,162,201,245],[170,201,245],[162,201,245],[159,160,162,165,166,167,168,169,201,245],[62,81,83,85,87,123,133,134,135,138,143,144,145,158,175,176,177,178,179,183,190,191,192,193,194,201,245],[83,84,145,201,245,407],[92,96,97,201,245],[83,201,245],[101,102,201,245],[83,92,201,245],[201,245,411],[87,92,201,245],[62,81,83,201,245],[92,201,245],[83,87,92,106,201,245],[174,201,245],[141,201,245],[83,84,98,201,245,407,491],[83,84,145,201,245,407,491],[194,201,245,407],[83,103,104,105,201,245,407],[201,245,407,413],[83,84,126,201,245,407,491],[83,87,106,107,201,245,407],[83,108,201,245,407],[83,87,128,201,245,407],[62,175,201,245,407],[89,201,245],[81,83,201,245],[81,201,245],[81,83,135,201,245],[135,136,137,138,139,201,245],[124,201,245],[125,126,201,245],[83,87,92,93,94,95,98,99,100,101,102,103,104,105,107,108,109,123,127,201,245],[83,87,141,201,245],[128,201,245,407,491],[124,125,127,128,142,201,245],[94,95,99,100,101,103,104,105,129,130,131,132,133,134,140,201,245],[187,201,245,407],[188,201,245,407],[81,186,201,245,407],[83,110,120,123,201,245],[83,92,110,201,245],[87,112,114,115,123,201,245],[113,201,245],[111,201,245,407],[201,245,407,510],[116,201,245,407],[84,116,201,245,407],[110,111,115,116,117,118,119,121,122,201,245],[83,145,201,245],[83,145,146,201,245],[83,145,146,147,148,151,152,153,154,155,156,157,201,245],[201,245,407,491],[83,145,146,201,245,407,491],[83,145,146,158,201,245,407,491],[93,146,201,245,407,411],[147,148,149,150,151,152,153,154,155,156,157,158,201,245],[83,145,149,150,201,245],[83,149,150,201,245],[88,201,245,407,491],[88,89,90,91,201,245],[84,201,245,407],[84,201,245,407,491],[84,85,86,201,245],[201,245,407,411],[145,201,245],[62,195,201,245],[62,201,245],[62,92,175,176,201,245],[62,83,201,245],[62,81,140,201,245],[62,143,201,245],[62,81,184,185,186,187,188,189,201,245],[62,83,191,201,245,407],[62,83,85,193,201,245,407],[62,83,84,85,182,201,245,407],[62,83,85,180,201,245,407],[62,83,192,201,245,407],[62,83,84,181,201,245,407],[62,190,201,245,407],[180,181,182,201,245],[173,201,245],[82,201,245]],"referencedMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"exportedModulesMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"semanticDiagnosticsPerFile":[74,75,76,80,81,77,78,79,71,70,64,67,65,68,66,63,72,69,73,539,537,299,300,301,316,317,298,365,379,378,380,382,364,381,339,338,336,337,351,370,371,368,372,373,374,375,367,366,376,369,354,355,353,330,331,332,329,358,360,361,359,357,356,303,309,302,310,311,312,404,401,400,397,406,393,402,396,395,403,398,405,399,394,389,388,387,407,477,478,480,479,472,473,475,474,450,452,451,454,453,417,415,418,465,419,455,464,456,459,457,460,462,458,461,463,416,491,476,471,481,487,488,490,489,469,470,466,468,467,482,486,483,484,485,420,421,424,422,423,426,427,428,429,425,430,431,432,433,434,435,449,436,437,438,439,440,441,442,445,443,444,446,447,448,386,542,538,540,541,544,545,551,543,556,552,555,553,550,560,559,318,561,557,562,297,305,306,554,563,546,564,242,243,244,245,246,247,199,248,249,250,251,252,253,254,256,255,257,258,259,241,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,278,280,281,282,283,284,285,286,197,295,201,198,200,287,288,289,290,291,292,293,294,565,566,567,548,549,568,569,594,595,570,573,592,593,583,582,580,575,588,586,590,574,587,591,576,577,589,571,578,579,581,585,596,584,572,609,608,603,605,604,597,598,600,602,606,607,599,601,547,610,558,611,313,613,612,614,307,308,352,304,296,377,350,348,349,173,334,333,383,384,340,344,346,345,343,319,321,322,320,347,315,314,335,323,328,326,324,325,327,363,362,385,342,341,62,58,61,60,57,59,11,12,14,13,2,15,16,17,18,19,20,21,22,3,4,26,23,24,25,27,28,29,5,30,31,32,33,6,37,34,35,36,38,7,39,44,45,40,41,42,43,8,49,46,47,48,50,9,51,52,53,54,55,1,10,56,218,229,216,230,239,208,207,238,233,237,210,226,209,236,205,206,211,212,217,215,203,240,231,221,220,222,224,219,223,234,213,214,225,204,228,227,232,202,235,172,162,164,171,166,167,165,168,159,160,161,163,169,170,195,391,392,408,101,98,95,134,97,409,103,104,132,410,129,109,99,412,177,102,131,105,178,194,413,126,414,96,176,107,133,94,108,100,175,130,492,493,494,495,496,497,498,499,500,501,502,139,135,136,137,138,140,503,124,125,127,504,128,142,505,143,141,506,187,185,189,188,186,184,507,508,509,121,144,111,510,122,117,119,110,116,118,115,114,113,511,512,513,514,123,120,150,147,149,148,158,516,517,518,519,515,155,156,154,152,151,157,153,88,89,90,91,520,521,92,112,85,84,179,86,145,522,523,87,528,524,525,93,411,526,527,146,196,191,193,182,180,192,181,190,529,530,531,532,533,534,535,183,174,390,83,82,536,106],"affectedFilesPendingEmit":[[74,1],[75,1],[76,1],[80,1],[81,1],[77,1],[78,1],[79,1],[71,1],[70,1],[64,1],[67,1],[65,1],[68,1],[66,1],[63,1],[72,1],[69,1],[73,1],[539,1],[537,1],[299,1],[300,1],[301,1],[316,1],[317,1],[298,1],[365,1],[379,1],[378,1],[380,1],[382,1],[364,1],[381,1],[339,1],[338,1],[336,1],[337,1],[351,1],[370,1],[371,1],[368,1],[372,1],[373,1],[374,1],[375,1],[367,1],[366,1],[376,1],[369,1],[354,1],[355,1],[353,1],[330,1],[331,1],[332,1],[329,1],[358,1],[360,1],[361,1],[359,1],[357,1],[356,1],[303,1],[309,1],[302,1],[310,1],[311,1],[312,1],[404,1],[401,1],[400,1],[397,1],[406,1],[393,1],[402,1],[396,1],[395,1],[403,1],[398,1],[405,1],[399,1],[394,1],[389,1],[388,1],[387,1],[407,1],[477,1],[478,1],[480,1],[479,1],[472,1],[473,1],[475,1],[474,1],[450,1],[452,1],[451,1],[454,1],[453,1],[417,1],[415,1],[418,1],[465,1],[419,1],[455,1],[464,1],[456,1],[459,1],[457,1],[460,1],[462,1],[458,1],[461,1],[463,1],[416,1],[491,1],[476,1],[471,1],[481,1],[487,1],[488,1],[490,1],[489,1],[469,1],[470,1],[466,1],[468,1],[467,1],[482,1],[486,1],[483,1],[484,1],[485,1],[420,1],[421,1],[424,1],[422,1],[423,1],[426,1],[427,1],[428,1],[429,1],[425,1],[430,1],[
./.code/agents/1/exec-call_lmaGajgVnK37auksouScRpzT.txt:7557:frontend/node_modules/.cache/tsconfig.tsbuildinfo:1:{"program":{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.sharedmemory.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../react-router/dist/development/routeModules-rOzWJJ9x.d.ts","../react-router/dist/development/index-react-server-client-BKpa2trA.d.ts","../react-router/node_modules/cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/shared.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-localstorage.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-memory.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/key-manifest.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-manager.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/index.d.ts","../@auth0/auth0-spa-js/dist/typings/global.d.ts","../@auth0/auth0-spa-js/dist/typings/TokenExchange.d.ts","../@auth0/auth0-spa-js/dist/typings/Auth0Client.d.ts","../@auth0/auth0-spa-js/dist/typings/errors.d.ts","../@auth0/auth0-spa-js/dist/typings/index.d.ts","../@auth0/auth0-react/dist/auth-state.d.ts","../@auth0/auth0-react/dist/auth0-context.d.ts","../@auth0/auth0-react/dist/auth0-provider.d.ts","../@auth0/auth0-react/dist/use-auth0.d.ts","../@auth0/auth0-react/dist/with-auth0.d.ts","../@auth0/auth0-react/dist/with-authentication-required.d.ts","../@auth0/auth0-react/dist/errors.d.ts","../@auth0/auth0-react/dist/index.d.ts","../../src/theme/theme.js","../../src/theme/Provider.js","../../src/context/GameProvider.js","../../src/context/AuthContext.js","../../src/context/SheetSyncContext.js","../../src/context/index.js","../../src/components/ui/Button.js","../../src/components/ui/Card.js","../../src/components/ui/Input.js","../../src/components/ui/Select.js","../../src/components/ui/index.js","../../src/hooks/useOddsCalculation.js","../../src/components/ShotResultWidget.js","../../src/components/BettingOpportunityWidget.js","../../src/components/ProbabilityVisualization.js","../../src/components/EducationalTooltip.js","../../src/components/BettingOddsPanel.js","../../src/components/GameStateWidget.js","../../src/components/StrategicAnalysisWidget.js","../../src/components/AnalyticsDashboard.js","../../src/components/HoleStrategyDisplay.js","../../src/components/EnhancedBettingWidget.js","../../src/components/EnhancedScoringWidget.js","../../src/components/InteractivePlayerCard.js","../../src/utils/api.js","../../src/components/ShotAnalysisWidget.js","../../src/components/ShotVisualizationOverlay.js","../../src/components/GameHistory.js","../../src/components/simulation/SimulationDecisionPanel.tsx","../../src/components/simulation/GamePlay.js","../../src/config/environment.js","../../src/components/simulation/__fixtures__/simulationMockData.js","../../src/components/simulation/__fixtures__/index.js","../../src/components/simulation/TurnBasedInterface.js","../../src/components/simulation/SimulationMode.js","../../src/components/simulation/MonteCarloSimulation.js","../../src/components/simulation/Timeline.js","../../src/components/simulation/PokerBettingPanel.js","../../src/components/simulation/styles/enhancedSimulationLayout.js","../../src/components/simulation/EnhancedSimulationLayout.js","../../src/components/simulation/HoleVisualization.tsx","../../src/components/simulation/index.js","../../src/components/game/CourseImport.js","../../src/components/game/CourseManager.js","../../src/components/PlayerProfileManager.js","../../src/components/game/GameSetupForm.js","../../src/components/game/UnifiedGameInterface.js","../../src/components/GameDashboard.js","../../src/components/WolfGoatPigDashboard.js","../../src/components/HoleVisualization.js","../../src/components/EnhancedWGPInterface.js","../../src/components/ShotRangeAnalyzer.js","../../src/components/ColdStartHandler.js","../../src/components/auth/LoginButton.js","../../src/components/auth/LogoutButton.js","../../src/components/auth/Profile.js","../../src/components/auth/ProtectedRoute.js","../../src/components/auth/AuthHealthCheck.js","../../src/components/auth/index.js","../../src/components/index.js","../../src/components/game/WolfGoatPigGame.js","../../src/components/game/index.js","../../src/components/simulation/FeedAnalyzer.js","../../src/context/TutorialContext.js","../../src/hooks/useTutorialProgress.js","../../src/components/tutorial/ProgressTracker.js","../../src/components/tutorial/TutorialOverlay.js","../../src/components/tutorial/TutorialModule.js","../../src/components/tutorial/InteractiveElement.js","../../src/components/tutorial/modules/GolfBasicsModule.js","../../src/components/tutorial/modules/GameOverviewModule.js","../../src/components/tutorial/modules/TeamFormationModule.js","../../src/components/tutorial/modules/BettingSystemModule.js","../../src/components/tutorial/modules/AdvancedRulesModule.js","../../src/components/tutorial/modules/AnalysisToolsModule.js","../../src/components/tutorial/modules/PracticeGameModule.js","../../src/components/tutorial/TutorialSystem.js","../zod/v3/helpers/typeAliases.d.cts","../zod/v3/helpers/util.d.cts","../zod/v3/index.d.cts","../zod/v3/ZodError.d.cts","../zod/v3/locales/en.d.cts","../zod/v3/errors.d.cts","../zod/v3/helpers/parseUtil.d.cts","../zod/v3/helpers/enumUtil.d.cts","../zod/v3/helpers/errorUtil.d.cts","../zod/v3/helpers/partialUtil.d.cts","../zod/v3/standard-schema.d.cts","../zod/v3/types.d.cts","../zod/v3/external.d.cts","../zod/index.d.cts","../ghin/dist/index.d.ts","../../src/services/ghinService.js","../../src/components/WGPAnalyticsDashboard.js","../../src/components/SheetIntegrationDashboard.js","../../src/components/GoogleSheetsLiveSync.js","../../src/components/Leaderboard.js","../../src/context/MockAuthContext.js","../../src/pages/HomePage.js","../../src/pages/SetupPage.js","../../src/pages/GamePage.js","../../src/pages/index.js","../../src/components/signup/SignupCalendar.js","../../src/components/signup/DailySignupView.js","../../src/components/signup/PlayerAvailability.js","../../src/components/signup/AllPlayersAvailability.js","../../src/components/signup/MatchmakingSuggestions.js","../../src/components/signup/EmailPreferences.js","../../src/pages/SignupPage.js","../../src/pages/AboutPage.js","../../src/pages/RulesPage.js","../../src/pages/AdminPage.js","../../src/components/Navigation.js","../../src/App.js","../../src/index.js","../@types/node/ts5.1/compatibility/disposable.d.ts","../@types/node/ts5.6/compatibility/float16array.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/ts5.6/globals.typedarray.d.ts","../@types/node/ts5.6/buffer.buffer.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/globals.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/dom-events.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/ts5.1/index.d.ts","../collect-v8-coverage/index.d.ts","../@types/istanbul-lib-coverage/index.d.ts","../@jest/console/build/types.d.ts","../@jest/console/build/BufferedConsole.d.ts","../@jest/console/build/CustomConsole.d.ts","../@jest/console/build/NullConsole.d.ts","../@jest/types/build/Global.d.ts","../@jest/types/build/Circus.d.ts","../chalk/index.d.ts","../@types/istanbul-lib-report/index.d.ts","../@types/istanbul-reports/index.d.ts","../@types/yargs-parser/index.d.ts","../@types/yargs/index.d.ts","../@jest/types/build/Config.d.ts","../@jest/types/build/TestResult.d.ts","../@jest/types/build/Transform.d.ts","../@jest/types/build/index.d.ts","../@types/stack-utils/index.d.ts","../jest-message-util/build/types.d.ts","../jest-message-util/build/index.d.ts","../@jest/console/build/getConsoleOutput.d.ts","../@jest/console/build/index.d.ts","../@types/graceful-fs/index.d.ts","../jest-haste-map/build/HasteFS.d.ts","../jest-haste-map/build/types.d.ts","../jest-haste-map/build/ModuleMap.d.ts","../jest-haste-map/build/index.d.ts","../jest-resolve/build/ModuleNotFoundError.d.ts","../jest-resolve/build/shouldLoadAsEsm.d.ts","../jest-resolve/build/types.d.ts","../jest-resolve/build/resolver.d.ts","../jest-resolve/build/utils.d.ts","../jest-resolve/build/index.d.ts","../@jest/test-result/build/types.d.ts","../@jest/test-result/build/formatTestResults.d.ts","../@jest/test-result/build/helpers.d.ts","../@jest/test-result/build/index.d.ts","../jest-changed-files/build/types.d.ts","../jest-changed-files/build/index.d.ts","../jest-mock/build/index.d.ts","../@jest/fake-timers/build/legacyFakeTimers.d.ts","../@jest/fake-timers/build/modernFakeTimers.d.ts","../@jest/fake-timers/build/index.d.ts","../@jest/environment/build/index.d.ts","../jest-diff/build/cleanupSemantic.d.ts","../pretty-format/build/types.d.ts","../pretty-format/build/index.d.ts","../jest-diff/build/types.d.ts","../jest-diff/build/diffLines.d.ts","../jest-diff/build/printDiffs.d.ts","../jest-diff/build/index.d.ts","../jest-matcher-utils/build/index.d.ts","../expect/build/jestMatchersObject.d.ts","../expect/build/types.d.ts","../expect/build/index.d.ts","../@jest/globals/build/index.d.ts","../callsites/index.d.ts","../@jest/source-map/build/types.d.ts","../@jest/source-map/build/getCallsite.d.ts","../@jest/source-map/build/index.d.ts","../@jest/transform/node_modules/source-map/source-map.d.ts","../@jest/transform/build/types.d.ts","../@jest/transform/build/ScriptTransformer.d.ts","../@jest/transform/build/shouldInstrument.d.ts","../@jest/transform/build/enhanceUnexpectedTokenMessage.d.ts","../@jest/transform/build/index.d.ts","../jest-runtime/build/types.d.ts","../jest-runtime/build/index.d.ts","../@jest/core/build/types.d.ts","../@jest/core/build/SearchSource.d.ts","../@jest/reporters/build/getResultHeader.d.ts","../@jest/reporters/build/generateEmptyCoverage.d.ts","../@jest/reporters/build/CoverageWorker.d.ts","../@jest/reporters/build/types.d.ts","../@jest/reporters/build/BaseReporter.d.ts","../@jest/reporters/build/CoverageReporter.d.ts","../@jest/reporters/build/DefaultReporter.d.ts","../@jest/reporters/build/NotifyReporter.d.ts","../@jest/reporters/build/SummaryReporter.d.ts","../@jest/reporters/build/VerboseReporter.d.ts","../@jest/reporters/build/index.d.ts","../emittery/index.d.ts","../@jest/core/build/TestWatcher.d.ts","../@jest/core/build/TestScheduler.d.ts","../@jest/core/build/cli/index.d.ts","../@jest/core/build/version.d.ts","../@jest/core/build/jest.d.ts","../jest-cli/build/cli/index.d.ts","../jest-cli/build/index.d.ts","../jest/build/jest.d.ts","../@types/aria-query/index.d.ts","../@testing-library/jest-dom/types/matchers.d.ts","../@testing-library/jest-dom/types/jest.d.ts","../@testing-library/jest-dom/types/index.d.ts","../../src/setupTests.js","../../src/__mocks__/react-router-dom.js","../../src/__tests__/fixtures/gameFixtures.js","../@testing-library/dom/types/matches.d.ts","../@testing-library/dom/types/wait-for.d.ts","../@testing-library/dom/types/query-helpers.d.ts","../@testing-library/dom/types/queries.d.ts","../@testing-library/dom/types/get-queries-for-element.d.ts","../@testing-library/dom/types/screen.d.ts","../@testing-library/dom/types/wait-for-element-to-be-removed.d.ts","../@testing-library/dom/types/get-node-text.d.ts","../@testing-library/dom/types/events.d.ts","../@testing-library/dom/types/pretty-dom.d.ts","../@testing-library/dom/types/role-helpers.d.ts","../@testing-library/dom/types/config.d.ts","../@testing-library/dom/types/suggestions.d.ts","../@testing-library/dom/types/index.d.ts","../@testing-library/react/types/index.d.ts","../../src/__tests__/utils/testHelpers.js","../../src/components/EmailSettings.js","../../src/components/GHINIntegration.js","../../src/hooks/usePlayerProfile.js","../../src/components/GameStatsTracker.js","../../src/components/PerformanceAnalytics.js","../../src/components/PlayerStatistics.js","../@testing-library/user-event/dist/types/event/eventMap.d.ts","../@testing-library/user-event/dist/types/event/types.d.ts","../@testing-library/user-event/dist/types/event/dispatchEvent.d.ts","../@testing-library/user-event/dist/types/event/focus.d.ts","../@testing-library/user-event/dist/types/event/input.d.ts","../@testing-library/user-event/dist/types/utils/click/isClickableInput.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Blob.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/DataTransfer.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/FileList.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Clipboard.d.ts","../@testing-library/user-event/dist/types/utils/edit/timeValue.d.ts","../@testing-library/user-event/dist/types/utils/edit/isContentEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/isEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/maxLength.d.ts","../@testing-library/user-event/dist/types/utils/edit/setFiles.d.ts","../@testing-library/user-event/dist/types/utils/focus/cursor.d.ts","../@testing-library/user-event/dist/types/utils/focus/getActiveElement.d.ts","../@testing-library/user-event/dist/types/utils/focus/getTabDestination.d.ts","../@testing-library/user-event/dist/types/utils/focus/isFocusable.d.ts","../@testing-library/user-event/dist/types/utils/focus/selection.d.ts","../@testing-library/user-event/dist/types/utils/focus/selector.d.ts","../@testing-library/user-event/dist/types/utils/keyDef/readNextDescriptor.d.ts","../@testing-library/user-event/dist/types/utils/misc/cloneEvent.d.ts","../@testing-library/user-event/dist/types/utils/misc/findClosest.d.ts","../@testing-library/user-event/dist/types/utils/misc/getDocumentFromNode.d.ts","../@testing-library/user-event/dist/types/utils/misc/getTreeDiff.d.ts","../@testing-library/user-event/dist/types/utils/misc/getWindow.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDescendantOrSelf.d.ts","../@testing-library/user-event/dist/types/utils/misc/isElementType.d.ts","../@testing-library/user-event/dist/types/utils/misc/isVisible.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDisabled.d.ts","../@testing-library/user-event/dist/types/utils/misc/level.d.ts","../@testing-library/user-event/dist/types/utils/misc/wait.d.ts","../@testing-library/user-event/dist/types/utils/pointer/cssPointerEvents.d.ts","../@testing-library/user-event/dist/types/utils/index.d.ts","../@testing-library/user-event/dist/types/document/UI.d.ts","../@testing-library/user-event/dist/types/document/getValueOrTextContent.d.ts","../@testing-library/user-event/dist/types/document/copySelection.d.ts","../@testing-library/user-event/dist/types/document/trackValue.d.ts","../@testing-library/user-event/dist/types/document/index.d.ts","../@testing-library/user-event/dist/types/event/selection/getInputRange.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelection.d.ts","../@testing-library/user-event/dist/types/event/selection/moveSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/selectAll.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionRange.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/updateSelectionOnFocus.d.ts","../@testing-library/user-event/dist/types/event/selection/index.d.ts","../@testing-library/user-event/dist/types/event/index.d.ts","../@testing-library/user-event/dist/types/system/pointer/buttons.d.ts","../@testing-library/user-event/dist/types/system/pointer/shared.d.ts","../@testing-library/user-event/dist/types/system/pointer/index.d.ts","../@testing-library/user-event/dist/types/system/index.d.ts","../@testing-library/user-event/dist/types/system/keyboard.d.ts","../@testing-library/user-event/dist/types/options.d.ts","../@testing-library/user-event/dist/types/convenience/click.d.ts","../@testing-library/user-event/dist/types/convenience/hover.d.ts","../@testing-library/user-event/dist/types/convenience/tab.d.ts","../@testing-library/user-event/dist/types/convenience/index.d.ts","../@testing-library/user-event/dist/types/keyboard/index.d.ts","../@testing-library/user-event/dist/types/clipboard/copy.d.ts","../@testing-library/user-event/dist/types/clipboard/cut.d.ts","../@testing-library/user-event/dist/types/clipboard/paste.d.ts","../@testing-library/user-event/dist/types/clipboard/index.d.ts","../@testing-library/user-event/dist/types/pointer/index.d.ts","../@testing-library/user-event/dist/types/utility/clear.d.ts","../@testing-library/user-event/dist/types/utility/selectOptions.d.ts","../@testing-library/user-event/dist/types/utility/type.d.ts","../@testing-library/user-event/dist/types/utility/upload.d.ts","../@testing-library/user-event/dist/types/utility/index.d.ts","../@testing-library/user-event/dist/types/setup/api.d.ts","../@testing-library/user-event/dist/types/setup/directApi.d.ts","../@testing-library/user-event/dist/types/setup/setup.d.ts","../@testing-library/user-event/dist/types/setup/index.d.ts","../@testing-library/user-event/dist/types/index.d.ts","../../src/components/__tests__/BettingOddsPanel.test.js","../../src/components/__tests__/GameDashboard.test.js","../../src/components/__tests__/Navigation.test.js","../../src/components/__tests__/NewComponents.test.js","../../src/components/__tests__/PerformanceAnalytics.test.js","../../src/components/__tests__/PlayerProfileManager.test.js","../../src/components/__tests__/ShotAnalysisWidget.test.js","../../src/components/__tests__/ShotVisualizationOverlay.test.js","../../src/components/__tests__/UnifiedGameInterface.integration.test.js","../../src/components/__tests__/WGPAnalyticsDashboard.test.js","../../src/components/analytics/PostHoleAnalytics.js","../../src/components/email/EmailSettings.js","../../src/components/game/TVPokerLayout.js","../../src/components/game/__tests__/UnifiedGameInterface.test.js","../../src/components/practice/EnhancedPracticeMode.js","../../src/components/signup/__tests__/AllPlayersAvailability.test.js","../../src/components/signup/__tests__/MatchmakingSuggestions.test.js","../../src/components/signup/__tests__/PlayerAvailability.test.js","../../src/components/simulation/GameSetup.tsx","../../src/components/simulation/__tests__/GamePlay.test.js","../../src/components/simulation/__tests__/GameSetup.test.js","../../src/components/simulation/__tests__/SimulationMode.probabilities.test.js","../../src/components/simulation/__tests__/SimulationMode.test.js","../../src/components/tutorial/index.js","../../src/components/tutorial/__tests__/InteractiveElement.test.js","../../src/components/tutorial/__tests__/ProgressTracker.test.js","../../src/components/tutorial/__tests__/TutorialSystem.test.js","../../src/components/tutorial/__tests__/hooks.test.js","../../src/components/ui/__tests__/Button.test.js","../../src/components/ui/__tests__/UIComponents.test.js","../../src/context/__tests__/GameProvider.shotProbabilities.test.js","../../src/context/__tests__/GameProvider.test.js","../../src/hooks/useAuth.js","../../src/hooks/useGameApi.js","../../src/hooks/usePostHoleAnalytics.js","../../src/hooks/useSimulationApi.js","../../src/hooks/__tests__/usePlayerProfile.test.js","../../src/pages/__tests__/AboutPage.test.js","../../src/pages/__tests__/AdminPage.test.js","../../src/pages/__tests__/GamePage.test.js","../../src/pages/__tests__/HomePage.test.js","../../src/pages/__tests__/RulesPage.test.js","../../src/pages/__tests__/SetupPage.test.js","../../src/pages/__tests__/SignupPage.test.js","../../src/utils/__tests__/api.test.js","../@babel/types/lib/index.d.ts","../@types/babel__generator/index.d.ts","../@babel/parser/typings/babel-parser.d.ts","../@types/babel__template/index.d.ts","../@types/babel__traverse/index.d.ts","../@types/babel__core/index.d.ts","../@types/connect/index.d.ts","../@types/body-parser/index.d.ts","../@types/bonjour/index.d.ts","../@types/mime/index.d.ts","../@types/send/index.d.ts","../@types/qs/index.d.ts","../@types/range-parser/index.d.ts","../@types/express-serve-static-core/index.d.ts","../@types/connect-history-api-fallback/index.d.ts","../@types/eslint/helpers.d.ts","../@types/estree/index.d.ts","../@types/json-schema/index.d.ts","../@types/eslint/index.d.ts","../@types/eslint-scope/index.d.ts","../@types/http-errors/index.d.ts","../@types/serve-static/index.d.ts","../@types/express/node_modules/@types/express-serve-static-core/index.d.ts","../@types/express/index.d.ts","../@types/html-minifier-terser/index.d.ts","../@types/http-proxy/index.d.ts","../@types/json5/index.d.ts","../@types/node-forge/index.d.ts","../@types/parse-json/index.d.ts","../@types/prettier/index.d.ts","../@types/q/index.d.ts","../@types/resolve/index.d.ts","../@types/retry/index.d.ts","../@types/semver/classes/semver.d.ts","../@types/semver/functions/parse.d.ts","../@types/semver/functions/valid.d.ts","../@types/semver/functions/clean.d.ts","../@types/semver/functions/inc.d.ts","../@types/semver/functions/diff.d.ts","../@types/semver/functions/major.d.ts","../@types/semver/functions/minor.d.ts","../@types/semver/functions/patch.d.ts","../@types/semver/functions/prerelease.d.ts","../@types/semver/functions/compare.d.ts","../@types/semver/functions/rcompare.d.ts","../@types/semver/functions/compare-loose.d.ts","../@types/semver/functions/compare-build.d.ts","../@types/semver/functions/sort.d.ts","../@types/semver/functions/rsort.d.ts","../@types/semver/functions/gt.d.ts","../@types/semver/functions/lt.d.ts","../@types/semver/functions/eq.d.ts","../@types/semver/functions/neq.d.ts","../@types/semver/functions/gte.d.ts","../@types/semver/functions/lte.d.ts","../@types/semver/functions/cmp.d.ts","../@types/semver/functions/coerce.d.ts","../@types/semver/classes/comparator.d.ts","../@types/semver/classes/range.d.ts","../@types/semver/functions/satisfies.d.ts","../@types/semver/ranges/max-satisfying.d.ts","../@types/semver/ranges/min-satisfying.d.ts","../@types/semver/ranges/to-comparators.d.ts","../@types/semver/ranges/min-version.d.ts","../@types/semver/ranges/valid.d.ts","../@types/semver/ranges/outside.d.ts","../@types/semver/ranges/gtr.d.ts","../@types/semver/ranges/ltr.d.ts","../@types/semver/ranges/intersects.d.ts","../@types/semver/ranges/simplify.d.ts","../@types/semver/ranges/subset.d.ts","../@types/semver/internals/identifiers.d.ts","../@types/semver/index.d.ts","../@types/serve-index/index.d.ts","../@types/sockjs/index.d.ts","../@types/trusted-types/lib/index.d.ts","../@types/trusted-types/index.d.ts","../@types/ws/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9","746d62152361558ea6d6115cf0da4dd10ede041d14882ede3568bce5dc4b4f1f","d11a03592451da2d1065e09e61f4e2a9bf68f780f4f6623c18b57816a9679d17","aea179452def8a6152f98f63b191b84e7cbd69b0e248c91e61fb2e52328abe8c",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"f3d4da15233e593eacb3965cde7960f3fddf5878528d882bcedd5cbaba0193c7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"6c55633c733c8378db65ac3da7a767c3cf2cf3057f0565a9124a16a3a2019e87","affectsGlobalScope":true},{"version":"fb4416144c1bf0323ccbc9afb0ab289c07312214e8820ad17d709498c865a3fe","affectsGlobalScope":true},{"version":"5b0ca94ec819d68d33da516306c15297acec88efeb0ae9e2b39f71dbd9685ef7","affectsGlobalScope":true},{"version":"34c839eaaa6d78c8674ae2c37af2236dee6831b13db7b4ef4df3ec889a04d4f2","affectsGlobalScope":true},{"version":"34478567f8a80171f88f2f30808beb7da15eac0538ae91282dd33dce928d98ed","affectsGlobalScope":true},{"version":"ab7d58e6161a550ff92e5aff755dc37fe896245348332cd5f1e1203479fe0ed1","affectsGlobalScope":true},{"version":"6bda95ea27a59a276e46043b7065b55bd4b316c25e70e29b572958fa77565d43","affectsGlobalScope":true},{"version":"aedb8de1abb2ff1095c153854a6df7deae4a5709c37297f9d6e9948b6806fa66","affectsGlobalScope":true},{"version":"a4da0551fd39b90ca7ce5f68fb55d4dc0c1396d589b612e1902f68ee090aaada","affectsGlobalScope":true},{"version":"11ffe3c281f375fff9ffdde8bbec7669b4dd671905509079f866f2354a788064","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"bf237922b06c558ee82c997549c28541d2e4c60a7c449c635cd7116663bff11b","ec646851bb3302d774d4fbec3555fdf0cea4dc30a7f2c663d66387653abecdd6","5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd",{"version":"7f9844af49faece125da77aa099fd5c1da64270e31b414edef84f159a15f61b7","affectsGlobalScope":true},"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","fcc9e6f2da1759e4abe577f938f7d6eec119963abae917c290913a537cf8cd89","67b56598de49ea49e177ed09417ec97c642775a4fe73259df996923517eb652d","98d8c2cce0da7f218eda38d46b3d715adfb4c99c59ad67dbe0fd105113292f9f","d562cf993f138dc03c5b1aed57d7d80e96555ce41365e0e79db9b93a0b49a6b2","4e7fded78c59e63cc94cd8c0c920b287b885ae0512c412e0f7a890b0d700bc3d","7fc1326aae51ca02c357b8391270858387cce4afa9928d6580a42119dfcca9eb","a95d033d647339e3932fd15c01ae763c0e6fba915418c01b2fb1b1d4063a6d7f","9ec473f428d74650f0ce05b81e6a27fc84906a36838fd11875fcae5193f3cbbb","acdd8a10fac8748502509cb57bdd53a7c5b85fa4a2ee3a560c00a40404ff65cb","59bd81abd493fa554955bf7dd7006273192ea8d553d3e4a819e866a14725cdfe","a29acac88d5df222deeb58568f2e56b42075d9b043b4f158b7a55a8eed18985f","56d09baa6411529b9edfed10d627aa294412c3aa33d26e1254b8f1422ecfbfd9","31feea0066a629bfcacfc80bd5ec1551d26cf7a8dad949dc24cde82307748a45","b23ee85f4ae6affbd6d92df4a305756b2d7a7d687108bac625b83d662aabe063","c541b4b619ff47a8f1d2e242f69cab2f1490797934a31b9d15fe1b9d59183626","10f0161e27ec211a27512406022e5381ee1eff148c356579a07392c1cab67205","50d0abf4fb3d7fa0d929459ec9560f6761eb9e80bc568e6367868f6402fae0b5","4be1e84f8a23aa1c9b37669820a5dc6c0d664131c2549b54b40ec225abcff77c","2d6acf4fe93fb92f0259c6bbed436112c7daf0ad9e1318f2f0bd2613083261f0","58024638b80b48562cce5f0e5f65ce5924a2309224400787a4e40dea0ce3c7f4","ed7ed4acdc5b5e7f531cb8a2b62cadc0a8a88d054637965ba585a370f3538dbc","59453dd1a944cc11ef41fc0e21d4afaa4906eb4015fc605b423776ab26be5c35","12bb43d7c61d1b5e4340ed3599bbdcdd8d781994f08a94f010c88d4d26f285bb","f40d60f92714d69e75d0f03e3b51acbe2ff52064dd0e4774fa818ff72f043ea4","797cfbacb483d815b7819b3cf867533af99a630f2beea11cc26592b0c2d42cb1","4b26040bc29ea84ee18561c65d6994a07cfb168240c5bda0eb04bfb48190b219","06709b34a5d72762ab905843ac3443277ab884dc32fce8b3b0d51bcdb5064b74","cbb6fbcffa54cb81308247f17b64f1cb22ca015fba420fdb7c2c61c3a2adfcda","d37a6f1e29ec3244911f7d28cf815251ef113387c8618426acdab8d153940bbc","0e0af8c8426a911142d13768859c1b49e120f60bb153ce6dd197e30f9b8b6820","87e68d28db4ab68bfa35d6d1b57ea233d90e1c678f3da187f796075ff3a8e85d","afdf59e4068da139bff61ba0887ae9c76f46373f95932efd54ee7910b6502a1a","b07d57ba8d3e203d16450dd2426270030368821d3d418b291a05801a362d4d99","ecd8abab263e35cda153af96d4f29c711ff477a4c2bd81698cdfc727836547e3","e9a208aad09ea42f46bdd52d309774b73e7a02762281c51377973025a9cb7250","d264ffe701d5be437313c4f6f7d8f27ce029fc5cc3c51e42e9b60bed6d943e34","d2dcfbb9046a3f918ba22ebc91310f31606cebca173944df0544dc14ed26939a","2bef42b3474c69a11119442d099d6ee4952a9e1ee2674a76df68e67ee853c9f8","0880a3c557fb7ce460173df4c71dc39365359c053da107caad5fbe03a249c69e","f636742cc740b78907aa1010d1fc25cd7d2e5966a3aa149d74ce9370627ff852","b8ef751a4bad89dfe59fa19218e89bdb5c74e6cba080bdbee9921e1c9bf4a615","930d085f4aaabd1cc8d0f4f4837d13e04e948e77c8cf97a2e64c997088fbffcf","df1fd1099460e2d762f69fccb745265e72c14b8048f3e7de60767bbf714f6ad0","dba7c59c1095d9d149ec234ad3846af7fcb0bf6c11822f76d78c19fd0e086473","de378d46014d3f7e673fecf74f8d02bc27a30ffd85ca378927fba171f83f2f66","ec8924ce154b4a9dc676762fd43a7f785fc2cb6a21a0250b34216c8ed757f0bd","6da8dd746a2c6c74c7a874d809f62f908439319fed0505b579774066ce551bcb","a0cbce32b63aa070e5f4aa15e918886492e71c9753426d573e8a9deac1dd8abe","2431e657962c860594400df7d3c49f3c6eefb7e193f158bd9e7f0f965256a33c","30e5961d52cdabbbdaa5169c3c71a77a5aa0f8ac70ebb1f250f6fdaa2007ed3d","37e82fceaba98ef3038072809e67d0b8ed4b37c3a4aa82ed7dbf48676bf2750e","3fa0235c0ee6318d87108b06d6f922f525dcf039a32231d1667b96e202a8b009","5b7c7e06d9f383a1ee8d3b700c4d1419331f4166aa340c7788a35bec98331f34","2df3bf27c69b2c5d47b17649447817b802ad9166d31bfb7c33806195c03a8d83","ee235306953241273af6e40d709d4097476ecb599229473fb55b461288ed1993","2bef48831eaf4bf89166732f51f741488205c30f5184adc03a34a63a6c9a70bd","5fb0a11bc0cb66afc528b180067199bc542c46f6fd95649c3137f3a94bf8412b","6b6814ee731c1e6ee609b98086b273d1aa13333182edd24be8be569c7b7d07df","18cce8e15d2846c71faa2543b08b70b1c04bac9a26427eb98a4e0bad24976a90","ab3a5590e693ad5fb0a1a19c17e2b01258c88fe4617a4cae9d4058cc18946d08","8b4025f2c3f2aed06120f2d20f55d5bc10a06c7a40e058eafe13af9240f85c7c","698972a628b6dbbc1d4d917d422b56e429501ec8758270e527c70401227d094a","212e0c8f420a4c1866546cb7d50ba94537c25aaa715e84685d8995798125b9b9","39b74fe9bd08e3154f281117a5fe5bfa6b1afdfe8556eda1fc82428828329fd4","8b80893422089fff8f07496f4f66f1207847f6a9645c88d75c2877fabd453f11","cf41eb0cb37e385c1d777bdfefc05f0617857fd72d3a455d6d4f81e5e31a397f","583b9e0633074c66e97445426ac0b07bdb388f87e92449baae08cd5ab9cbf846","07646330c0cf3e5429bf2fce8647b0369a9cef8dc9b7a327e2ff47c4d1b916e3","eb277e8bb50c4fbc16ac5e8238b88880626f3ad672d7af92f2d29eaa522a9399","bfdff632c328e37b1946e1b6d7120933c145fac5a6eed6c8adaba5f5e56e64e3","b04f1498e13102326e1968fac4c2d37ca0c2b7abd76812892d9496151083aa91","c413aa82126a73c6280ce1177d151c01640790b5913e6ac80b62b0cce0ebaed3","93436c1aebb65cf409cf9879764d584439bbccc2f87e05763c30b70ead288013","2bbe03e00b2dd6db70bee6237f166c7fbc2b6e301918b3e9a6b62cf0df6eb370","522b79a823b5d466fbfe86cd25473045a8ad45f2a9b9df00e19fe5f3d00ab635","db17b27cc4514d286387592824d7bd39dea6737b799787d72acaa6556d40092e","0d6d484d91ba60f459fc8fcb35d08f6791711f05c8156bb6fc17b0a6fca81541","7bfc9cdd904b12b8f14d2160a092c90afd13cedffe96b8b50a71806431a01873","4981a6995ea12a015408f795188b03a7476c5148b051ea55126a82b62e06708f","843b27075f3ed5a868bad8c9f29b9d275f8a61b3e3c4e760ff6d64e1bf9a6f9c","3c54e9f8641d69914fbda6cac089757a412fb904f0a075dbc65bce568f4a90b7","472d9a32c8571cbfbddbe80686e464464ab008caa48c65677b0d35a0e506d06c","9daca9b36125be1487105a71756caff00669c1871a01209f63b3f9285c5503ec","9567454f4649cdcd899ec3328e8ddf843e0cfd59b832b3e23879d56ca4fadb35","2687e7d974ad531a64538810770312b81193fb7f143cd09fa89e05aad414cb55","c00565777871b6d76d065c51af1d2fbc414f8804498f8692861f0ef3759d8812","12a3233962e3103fd3e4f4de0c26e0f17cd7c3d37b0aaa0743b8dcc7038d0e33","4da29c03d43f81993290813ab4d7b3d29812ce0cc1ccfce9784d076f726fe753","fb58a4485f54c463027b36c4843098de5fdb536594f49ed81f783252561f77f6","6c09333a0c899f83c1444a379ebdcebeea8fd6b25fc6bec2e0e1e5724bcdecc5","ec85cf13bd5d52a3b29672c8d5509e0d6478721d814d933578fc769e82ac7f2d","939c575afa1e1720c9cafcf09d5ad218f7ffcc36743b7cf33581dff722fde7fc","315000295ec26a0a60741a2021d3b84b8f2cc2b8f636de5851436f7464f7ab98","b7956653d6f5d55877326e67cedd538243d9953819e019242502c432381fcee5","d655eefdb3a03cdab08a7d48ff49f42feef1974b3702a1b3010888d51e2428f5","8bd215328a9fd468ffa6f0c1bec8727e9081eadcc4659f3ea56b2e54412a4cc9","d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","833e92c058d033cde3f29a6c7603f517001d1ddd8020bc94d2067a3bc69b2a8e","08b2fae7b0f553ad9f79faec864b179fc58bc172e295a70943e8585dd85f600c","f12edf1672a94c578eca32216839604f1e1c16b40a1896198deabf99c882b340","e3498cf5e428e6c6b9e97bd88736f26d6cf147dedbfa5a8ad3ed8e05e059af8a","dba3f34531fd9b1b6e072928b6f885aa4d28dd6789cbd0e93563d43f4b62da53","f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","2329d90062487e1eaca87b5e06abcbbeeecf80a82f65f949fd332cfcf824b87b","25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","4fdb529707247a1a917a4626bfb6a293d52cd8ee57ccf03830ec91d39d606d6d","a9ebb67d6bbead6044b43714b50dcb77b8f7541ffe803046fdec1714c1eba206","5780b706cece027f0d4444fbb4e1af62dc51e19da7c3d3719f67b22b033859b9","7253b2045ea6b599d85ef9dd7ce2bf5439a1a98a27f078ba2115bedf61d738c7","ca58ededf2c0cd0563e8d83fef922817ff2a1ed9bd750242b17146354c1c5243","9d34b57d308ce327e484887106e68e2a82beaf263fea298e4ada5b3925ccbb8d","fe1f945db9c3cb35788d028ce9338b06256cd6041f2597668b9359f2b4fd4197","641fe481fff812b6a151b7fe0996468ced591244c6682b6ba2610b0bf016a9c6","63e5f3ffc50b8c29acf5396c0468a290c927cb7a5208ffb74add35670867e476","06c3f71832c76a82329b45610793b56d0b78fb02603d90f8a7629f49cb0dec1f","ca586208341738cb5e6d144536d83f91d96856c5828307088d242d52e4d439d4","fde0e854df7095db9f8b5cbe3804845a437750ff3c9edcaf2572e66885b230a3","6a63ec446b7fda7a8f1307c1a4659d6b8d1c617400b46d6b49f3d97ddfa93905","c461e128927c8492fff179d344735023ae189c4b626af91adb7b63c6c4b7248f","6b2706a5cee62ef25fdb7a9a268f558a15de9df894984ed13a07c8318576ef51","353fe785452a3c2d6ff2a41fb0684bd2878e78f3728fc5dae98634ccfaa9beae","521bbccf0edf1f69c488c6828716bdfb04acb69ea3ee5e3b7140bfa22ed6c342","dfdb07c32025c9aac5707797e48c46c8fc1416c3c3a5cab9677a75ab78a787ae","e1e115f590a02130c539f61c20460291711dccbdaa3fe4bbad43ab770dd4306e","e4fe42173b249ff533174cfbde4510ce5345da50c2f717b3ca27eda49929dad1","0dbd184576784dbc0b0caa1f022bbb1024a4f27b77e9bf5738c73841c218f4ab","17023bb4eba80df5152e45fa10ec0fa4105fa1c59cb30a51d5724c77cf041151","05b84716272aee3042dbeb319aa5b1ff5b8e77b62ae24be00b88cf8e04cab4a2","86d850e3572c2ed8f56d73a1ce7c5c4f3ea5a62170b82db65f3055f73614099d","4ab4cb977736067eda6f2ff73e521424a818319a1a70616ad2db2ba0b9dd5322","fa790e874499cb17016556f3168948f8d751dcb35a0862a9b9c55bb2ec353d48","795692a29dca5a39f904825a4abc78f9acc3a54ecc6858d8a268c52679f21751",{"version":"6876211ece0832abdfe13c43c65a555549bb4ca8c6bb4078d68cf923aeb6009e","affectsGlobalScope":true},{"version":"394fda71d5d6bd00a372437dff510feab37b92f345861e592f956d6995e9c1ce","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},{"version":"c564fc7c6f57b43ebe0b69bc6719d38ff753f6afe55dadf2dba36fb3558f39b6","affectsGlobalScope":true},{"version":"109b9c280e8848c08bf4a78fff1fed0750a6ca1735671b5cf08b71bae5448c03","affectsGlobalScope":true},"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","e525f9e67f5ddba7b5548430211cae2479070b70ef1fd93550c96c10529457bd","ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","17fe9131bec653b07b0a1a8b99a830216e3e43fe0ea2605be318dc31777c8bbf","3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","2c9875466123715464539bfd69bcaccb8ff6f3e217809428e0d7bd6323416d01","ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","2472ef4c28971272a897fdb85d4155df022e1f5d9a474a526b8fc2ef598af94e","6c8e442ba33b07892169a14f7757321e49ab0f1032d676d321a1fdab8a67d40c","b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","19851a6596401ca52d42117108d35e87230fc21593df5c4d3da7108526b6111c","3825bf209f1662dfd039010a27747b73d0ef379f79970b1d05601ec8e8a4249f","0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","40bfc70953be2617dc71979c14e9e99c5e65c940a4f1c9759ddb90b0f8ff6b1a","da52342062e70c77213e45107921100ba9f9b3a30dd019444cf349e5fb3470c4","e9ace91946385d29192766bf783b8460c7dbcbfc63284aa3c9cae6de5155c8bc","40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","561c60d8bfe0fec2c08827d09ff039eca0c1f9b50ef231025e5a549655ed0298","1e30c045732e7db8f7a82cf90b516ebe693d2f499ce2250a977ec0d12e44a529","84b736594d8760f43400202859cda55607663090a43445a078963031d47e25e7","499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","e38d4fdf79e1eadd92ed7844c331dbaa40f29f21541cfee4e1acff4db09cda33","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","7c10a32ae6f3962672e6869ee2c794e8055d8225ef35c91c0228e354b4e5d2d3","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e",{"version":"f4b4faedc57701ae727d78ba4a83e466a6e3bdcbe40efbf913b17e860642897c","affectsGlobalScope":true},"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7",{"version":"003ec918ec442c3a4db2c36dc0c9c766977ea1c8bcc1ca7c2085868727c3d3f6","affectsGlobalScope":true},"938f94db8400d0b479626b9006245a833d50ce8337f391085fad4af540279567","c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c",{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true},"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a",{"version":"12fb9c13f24845000d7bd9660d11587e27ef967cbd64bd9df19ae3e6aa9b52d4","affectsGlobalScope":true},"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","5078cd62dbdf91ae8b1dc90b1384dec71a9c0932d62bdafb1a811d2a8e26bef2","a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c",{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true},"2f32444438ecb1fa4519f6ec3977d69ce0e3acfa18b803e5cd725c204501f350","0ab3c844f1eb5a1d94c90edc346a25eb9d3943af7a7812f061bf2d627d8afac0","b0a84d9348601dbc217017c0721d6064c3b1af9b392663348ba146fdae0c7afd","161f09445a8b4ba07f62ae54b27054e4234e7957062e34c6362300726dabd315","77fced47f495f4ff29bb49c52c605c5e73cd9b47d50080133783032769a9d8a6","e6057f9e7b0c64d4527afeeada89f313f96a53291705f069a9193c18880578cb",{"version":"34ecb9596317c44dab586118fb62c1565d3dad98d201cd77f3e6b0dde453339c","affectsGlobalScope":true},"0f5cda0282e1d18198e2887387eb2f026372ebc4e11c4e4516fef8a19ee4d514","e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86",{"version":"237581f5ec4620a17e791d3bb79bad3af01e27a274dbee875ac9b0721a4fe97d","affectsGlobalScope":true},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true},"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","e6d81b1f7ab11dc1b1ad7ad29fcfad6904419b36baf55ed5e80df48d56ac3aff","1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","b6b8e3736383a1d27e2592c484a940eeb37ec4808ba9e74dd57679b2453b5865","d6f36b683c59ac0d68a1d5ee906e578e2f5e9a285bca80ff95ce61cdc9ddcdeb","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093",{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true},"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","b338a6e6c1d456e65a6ea78da283e3077fe8edf7202ae10490abbba5b952b05e",{"version":"2918b7c516051c30186a1055ebcdb3580522be7190f8a2fff4100ea714c7c366","affectsGlobalScope":true},"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","982efeb2573605d4e6d5df4dc7e40846bda8b9e678e058fc99522ab6165c479e","e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055",{"version":"d67fc92a91171632fc74f413ce42ff1aa7fbcc5a85b127101f7ec446d2039a1f","affectsGlobalScope":true},{"version":"d40e4631100dbc067268bce96b07d7aff7f28a541b1bfb7ef791c64a696b3d33","affectsGlobalScope":true},"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","42180b657831d1b8fead051698618b31da623fb71ff37f002cb9d932cfa775f1","4f98d6fb4fe7cbeaa04635c6eaa119d966285d4d39f0eb55b2654187b0b27446",{"version":"e4c653466d0497d87fa9ffd00e59a95f33bc1c1722c3f5c84dab2e950c18da70","affectsGlobalScope":true},"e6dcc3b933e864e91d4bea94274ad69854d5d2a1311a4b0e20408a57af19e95d","2119ab23f794e7b563cc1a005b964e2f59b8ebcb3dfe2ce61d0c782bfd5e02a2","0fd641a3b3e3ec89058051a284135a3f30b94a325fb809c4e4159ec5495b5cdc","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","e66eb237e7629bdc09f5f99fd69b73a0511fafb799783496a37432dde5ce0bf0","fdec06934bf00cb7c1187b7f2f1ac6bf2f327ab5af71a543c48d919baa194f1a","9c8f99dfcd80875222e3a4923525595503174088a6eedce78ae3ea81fd650323","652c8e676e1b94c7829671c0eb237528f76a0ba67ac846c065bceb4088ebddd7","caac4c00061a947d2b1010bb6464f06197f2671bdf948fa1aa40bf1e244ee2a0","95b6c669e7ed7c5358c03f8aa24986640f6125ee81bb99e70e9155974f7fd253","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","c3e5b75e1af87b8e67e12e21332e708f7eccee6aac6261cfe98ca36652cdcb53","f7dd7280ee4f0420865e6423fe199aeac63d1d66203a8b631077cdc15501ef1f","ef62b4aa372f77458d84c26614b44129f929e263c81b5cd1034f5828a5530412","8610558ae88a43ad794c4ab1da4f0e8e174e0357c88f6cbb21f523e67414e9a9","0b0feb9837c561c0a67b61024328045bb16bac6e4b10f7b0b217d3b8b43b0b12","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","d1c6c35d174dbe63a76ed8ac6621cca8dbe8794961a2121feb5f0239747d1b7e","051c1bc0efd3690031a97ac49133c9486c22bd07852e75a11ed4b40ceb722569","a22270cba4f004f64a61cec3e39574416e3ca72e848f53a36ba3add746243217","447b9b631351b40faa0e961e6cbb5e269bc1fa61f7a615b8077b31a94aaefae3","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","e641fd321ca5fe17b532bd3b5a6e85a8741bbde7a9d7110d8ed272605c1c4a25","9d63720cd09e8b0ae76e0ade1993b7ec600e6729e453f459d4039d6914914c1a","8b324c8813c2bee210a7a79eede7abc4b5c60132fd497e140ce312a856af22a4","ff2d2f19561cd3a594d7cfeeb29797e62c8d9ef62df65916e6be9bdcfbaf8f7d","d59191f0bb663800c0856116d69ae11125eeae891d0a46c0be52f3c78ed4890e","d8360fe15a60f549584a9ff7d0e6129ed77abdbcf062b4da1a10a78175d34f71","a57b37eae916e680e5e15b36d17b22bb05834115041fe940f11d9e714501ff84","e53086c8f861bee1717e3e001498d2a493f786c6fcbb0027fc4352f00fcaa3cd","446242adee16900500f9d9dba2678258641f7e8f692f43c18dde8872167107bb","6ef7ba3b3d2514336c59d1af84e2d7550a886a5be193d9cb980cc6d16698236f","185e38aa301aaaaf3870183acd48f9b4da7baa5282cb9ed102a10004b0751cc2","1f0c7b51e98442f125414c1d43c6a04abc8ee800066834d742eb99b0e542d327","131c58b9b527fa99139dabaaf585ed52e9f5c450c1347c87bcb9af9b884e63ea","2642f053f18152ed5ba6403217f932e4fa0be0077f38734b168ab92da948b3c4","5718fb71731197c4e623120e93c5ece9061f569aa4dc28ffcbb8b4fb5ffe2ba6","9bc5d8cd23570760dc417cb10b01079bdb919b4dfeaab9c4341cf11d37d7a29e","0671e90198a35ffd8e5dd35c5ce0fd4839305f6fe9878ca9851a25c097a7874a","a3d9df9d57f7e47f70e013a46cf1c38177579dbb2c5b567bde24c7a67ed1303d","b4ac0ae1e7ed09d2ab8496d65c04643742a1811c6c5f34d9f9504a3868bc02e8","b63b8dfe391e40354edfb991062b8e8e28ef36a28644a7904f6a38f51a8a2386","375ecb9cebdd43c6fd230cfc02c6640344aadf920319b73a3c8514f45f23167c","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73","67c51fa68aadbb50e4ffc650b704620e0393bddb3d3eac3a6195bf1956562fe4","8187d9966b8fa5a2d0e53c71903adb5aa71ebc2a23410ab2d37eb764db800829","d851073758ff1ce39bb428d8a3b3385ca26da1745ca742789e876d67dc0aae43","0cee5b30f4300e628927dde7e7ae7b5bc32250a685242474d069b9346da8a2b1","6fdc7cbbbc0601f9bb153c30c0e8063321cd1c9211ad512b9fde1d1f785b35dd","6ae7157666262b5c0402463531996601150583cb1f4f9421f184a0eec9049f10","fbd0ac5a6097c20307587444815092eb1825d831991363423ef0ce70ef053e82","ec0b2f8ed3cc053fdb004ab4979c32625179a746717504e08fc30cef9ec9d7a3","2887592574fcdfd087647c539dcb0fbe5af2521270dad4a37f9d17c16190d579","ed434fd49cf57789f99d3d2f4fb4d5f4930825280ceaae21200d840609345161","3ea3b60de13285b50d9752812d3a6d2cae078d89031713613f58cd2f5565589a","4b0465994a4b18dd63a9af850c74024e6184deac2477ab87135f7d1b11a07178","3031ed6baeacbaf771576f64094d8a977e5be37b04d4dbb335fff9cc1d95a147","5f02cf0f7cc845c12b09607f97e57f942c313ebee6c33a3efbc346f19b499c7f","8e1eb67ef6924cd14793af526f9a4e3195b5734920a75ec29900731b1997f2ce","07fa4bb359f3cacde0e0b6d75cd9a53b88168088be58e01b385cd12e12a6d5d4","52d5d4a344ea0781bf00874c4829e3cfb0c12e1fa28c17740e773bc247fa663c","89ebb5291da50663149fc01245eeca4f8bf1a2bd8a3fe84ea62d926d53a6460f","792128daaa6209b5d52148b1952b56aad02fcf72435283a2d5ac1fb22113cd91","c474689555d4e49d5210e6c6d95f939e31f49158af350cbc403e4fdda5d32386","d4c5aebfd4d5468e03fee82920222d861737cc6ec5c9829474a36e379753fc52","f8fd01e7967e335266c6113c5d9bf15113768c5747265420dae0fdf1868eb05c","7a89d77bf137521a06ff5b3ce7297c663f3c27912b09320fa520c1b2d6bab9e5","7647ed4e66d98048478e6245f50b794a916ffa456fb362672e52c01e1b09a644","9a22045cb43de6fab0b5e524e4cef807e5a2c6e0a49044de56b65448e1572a14","4441e06cf8e7ffff0519950e34df3608ca1016f09f83fdfb7f71ab7376ac5a47","45d0cb97f71ad1fd0688b8a95c2a2b3cce347cd458ec365af4079c0273b49dc6","6c86a8ced863164acfbe7753660a7ba4aa97cdaa1e3b8d193a18316f906d4bbf","2dd10019ccc6f059b703db2f58f6f385625d235869fe562978b5a913e5db4c69","e4c66039756093e60d857430f451ffff1ca3fa5a951367b67dcc8f29b47b2d72","48433ed0754c860ebfeeec213f9c5943cc6b8aa7b70ce1bd9c5c6a490ed91229","c2708a205c4afa73bfeebaf0e939390b3b3fe9cd1788b09389ee0d736cd75a72","8f6d44ee7619da14f50cf051a243c41793ff1dccda8d8a3bb2255989df114c30","2aca83fda179d79a68a259bc47999615976b935d2eeb391304db8a095af721e6","26b3b07bb0229b36ba87ec2b0ca1a42a927c2e8a8bd5ae9339d5a82d950eb3ce","8767c93beffebe9eda0c03e4893ab2fe9b62ff65bf767a003cbba50cfe810a28","d7f211b5ba9e9fc21ba0fbf12b3ceda8680f672da595068dbb4d2d1f9a0c83b1","e613a48817a40243523fa26bb5e3396e6d60c79a1c0c59274889560f34cfdde7","ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","80b232969d72e6f08081a4a0b558537db2671a1a60bb44559d5e3b5f1fc89cd6",{"version":"841784cfa9046a2b3e453d638ea5c3e53680eb8225a45db1c13813f6ea4095e5","affectsGlobalScope":true},"646ef1cff0ec3cf8e96adb1848357788f244b217345944c2be2942a62764b771","0ab7506c71d3467c8db4fdc2512e5960afcfeb0a4f51467d79c9b51af5ec9e63","d45bd3d7c328e85331b3deb75be0f5bef5746ff9efa27900c769ad0e3461acb4","0eb2ed1c1c8d87ba91ae080e95a5f4891e3bdd31626b894655985760a2e56afd","3cfb7c0c642b19fb75132154040bb7cd840f0002f9955b14154e69611b9b3f81","8387ec1601cf6b8948672537cf8d430431ba0d87b1f9537b4597c1ab8d3ade5b","d16f1c460b1ca9158e030fdf3641e1de11135e0c7169d3e8cf17cc4cc35d5e64","a934063af84f8117b8ce51851c1af2b76efe960aa4c7b48d0343a1b15c01aedf","e3c5ad476eb2fca8505aee5bdfdf9bf11760df5d0f9545db23f12a5c4d72a718","d0570ce419fb38287e7b39c910b468becb5b2278cf33b1000a3d3e82a46ecae2","3aca7f4260dad9dcc0a0333654cb3cde6664d34a553ec06c953bce11151764d7","a0a6f0095f25f08a7129bc4d7cb8438039ec422dc341218d274e1e5131115988","b58f396fe4cfe5a0e4d594996bc8c1bfe25496fbc66cf169d41ac3c139418c77","45785e608b3d380c79e21957a6d1467e1206ac0281644e43e8ed6498808ace72","bece27602416508ba946868ad34d09997911016dbd6893fb884633017f74e2c5","2a90177ebaef25de89351de964c2c601ab54d6e3a157cba60d9cd3eaf5a5ee1a","82200e963d3c767976a5a9f41ecf8c65eca14a6b33dcbe00214fcbe959698c46","b4966c503c08bbd9e834037a8ab60e5f53c5fd1092e8873c4a1c344806acdab2","480c20eddc2ee5f57954609b2f7a3368f6e0dda4037aa09ccf0d37e0b20d4e5c","40a9e5673448badb43d693daf20698c452782ae1682887b9d1ccbf207589781a","f2834e7008d641386a0d313ef33e974effb5815755254506341a0f3ba846a506","2e44250d356340733b1f210ad994bf11a0ae802186d5ad6b602661030f811db2","d01f869e0aa82d99b590ac59b6906d0f4ccae1d903d1dd1e622d944f4741b829","8d5a0a154fda1d5422fc0a0432821d5485ef88588ceb267651bf0ac786addcfa","b25d24260ac27016213b336707cb6bd279e12b946304118837ca0bd93831bb0b","81b8cf069b2fad8ff8112f832db6a32b7735b3291855ae71876e8dd07687a438","da0f84fcd93700b4a5fbf9c6f166a6cc19fc798231bff56dd1e3875bfc6966eb","634ff08e0143bec98401c737de7bfc6883bfec09200bd3806d2a4cfc79c62aaa","90a86863e3a57143c50fec5129d844ec12cef8fe44d120e56650ed51a6ce9867","472c0a98c5de98b8f5206132c941b052f5cc1ae78860cb8712ac4f1ebf4550ca","538c4903ef9f8df7d84c6cf2e065d589a2532d152fa44105c7093a606393b814","cfcb6acbb793a78b20899e6537c010bfbbf939c77471abcdc2a41faf9682ca1a","a7798e86de8e76844f774f8e0e338149893789cdc08970381f0ae78c86e8667f","eebc21bb922816f92302a1f9dcefc938e74d4af8c0a111b2a52519d7e25d4868","6b359d3c3138a9f4d3a9c9a8fda24be6fd15bd789e692252b53e68ce99db8edc","9488b648a6a4146b26c0fd4e85984f617056293092a89861f5259a69be16ca5c","e156513655462b5811a8f980e32ccd204c19042f8c9756430fe4e8d6f7c1326e","5679b694d138b8c4b3d56c9b1210f903c6b0ca2b5e7f1682a2dd41a6c955f094","ca8da035b76fb0136d2c1390dda650b7979202dbe0f5dc7eaefcde1c76dee4f4","4b1022a607444684abeee6537e4cace97263d1ef047c31b012c41fdc15838a79",{"version":"dd0271250f1e4314e52d7e0da9f3b25a708827f8a43ceff847a2a5e3fd3283e8","affectsGlobalScope":true},{"version":"47971d8a8639a2a2dd684091c6e7660ec5909fed540c4479ca24e22ac237194e","affectsGlobalScope":true},"e1075312b07671ef1cbf46409a0fa2eb2b90bb59c6215c94f0e530113013eeda","1bfd63c3f3749c5dc925bb0c05f229f9a376b8d3f8173d0e01901c08202caf6f","da850b4fdbabdd528f8b9c2784c5ba3b3bedc4e2e1e34dcd08b6407f9ec61a25","e61c918bb5f4a39b795a06e22bc4d44befcefd22f6a5c8a732c9ed0b565a6128","ee56351989b0e6f31fd35c9048e222146ced0aac68c64ce2e034f7c881327d6d","f58b2f1c8f4bcf519377d39f9555631b6507977ad2f4d8b73ac04622716dc925","4c805d3d1228c73877e7550afd8b881d89d9bc0c6b73c88940cffcdd2931b1f6","4aa74b4bc57c535815ae004550c59a953c8f8c3c61418ac47a7dcfefba76d1ba","78b17ceb133d95df989a1e073891259b54c968f71f416cd76185308af4f9a185","d76e5d04d111581b97e0aa35de3063022d20d572f22f388d3846a73f6ce0b788","0a53bb48eba6e9f5a56e3b85529fbbe786d96e84871579d10593d4f3ae0f9dba","d34fb8b0a66f0a406c7ce63a36f16dda7ff4500b11b0bd30a491aa0d59336d1f","282b31893b18a06114e5173f775dd085597ca220d183b8bd474d21846c048334","ed27d5ce258f069acf0036471d1fbb56b4cb3c16d7401b52a51297eca651db62","ec203a515afd88589bf1d384535024f5b90ebe6b5c416fb3dcca0abd428a8ba4","32a2a1374b57f0744d284ca93b477bd97825922513a24dfe262cbf3497377d96","a8b60d24dc1eb26c0e987f9461c893744339a7f48e4496f8077f258a644cffab",{"version":"3f9df27a77a23d69088e369b42af5f95bcb3e605e6b5c2395f0bfcd82045e051","affectsGlobalScope":true},"9fd080a9458c6d6f3eb6d4e2b12a3ec498d7d219863e9dca0646bdee9acce875",{"version":"e5d31928bee2ba0e72aeb858881891f8948326e4f91823028d0aea5c6f9e7564","affectsGlobalScope":true},"9a9ba9f6fd097bb2f57d68da8a39403bbe4dc818b8ccd155a780e4e23fa556f2","e50c4cd1f5cbce3e74c19a5bbf503c460e6ae86597e6d648a98c7f6c90b596dd",{"version":"fa140f881e20591ce163039a7968b54c5e51c11228708b4f9147473d06471cf5","affectsGlobalScope":true},"295eca0c47be1191690fd2fe588195fff9d4dc43852aceb8b4cab2aa634579f0","59ee7346e19b0050508a592702871dc943083c6dcb69a47d52e888115d840781","067712491fb2094c212c733dd8e2d56e74c309a9ce9dac9e919286b7245a1eb4","a5eae58ac55bd30c42359e4b01fb2be5eddac336869d3f04ffb4daa54b58f009","d12d691ef8933e8db39f2ca81d6973940ff5e37bb421752f5b6e7bc15dea3abf","4c5f8bd9b3a1aae4e4fddfee41667e495a045f73ed603993038fa6a8ba92fa14","dfb274ab0f319cf18ce7152067c25f984c7fd1924fc72b3f66734588444c934a","108c8c05cbc3fbbbd4ff4fc0779c9bef55655c28528eb0f77829795dc9f0b484","a7e5444d24cdec45f113f4fb8a687e1c83a5d30c55d2da19a04be71108ad77bd","41ec17e218b7358fcff25c719bc419fec8ec98f13e561b9a33b07392d4fec24c","23c204326746e981e02d7f0a15ab6f8015f9035998cb3766c9ddbf8ea247aea2","25f994b5d76ce6a3186a3319555bbba79706dac2174019915c39ac6080e98c7e","dfa4e2c6a612d43851ccbc499598cb006a3a78bc8c7f972c52078f862fa84e47","02c1705fa902f172be6e9020d74bcd92ce5db8d2ef3e1b03aabc2ac8eb46c3db","99d2d8a0c7bb3dd77459552269a7b5865fa912cedab69db686d40d2586b551f7","b47abe58626d76d258472b1d5f76752dd29efe681545f32698db84e7f83517df","3a99bbbbbf42e45c3d203e7c74f1319b79f9821c5e5f3cdd03249184d3e003ce","aaacc0e12ab4de27bdf131f666e315d8e60abec26c7f87501e0a7806fc824ae6","3b4195afd41a9215afc7be0820f8083f6bd2e85e5e0b45bb0061fb041944711e","108df8095f5e25d7189dd0d1433ac2df75ec40c779d8faf7d2670f1485beb643","ddd3c1d3c9ff67140191a3cf49b09875e20f28f2fc5535ae5ea16e14293a989b","7b496e53d5f7e1737adcb5610516476ee055bf547918797348f245c68e7418fe","577f44389d7faedd7fc9c0330caf73140e5d0d5f6c968210bff78be569f398a7","3046c57724587a59bceefadd30040d418e9df81b9f3cfd680618a3511302ed7a","15ccc911ed15397e838471bfe6d476c28deffe976c05cb057e6b1ea7491242c2","64b5a5ebdaead77a9a564aa938f4fb7a45e27cda7441d3bee8c9de8a4df5a04f","a48037f7af5f80df8973db5e562e17566407541de284b8dadf1879ea3aed8a2f","dab97d96ce986857150db03f0d435b44c060d126b4a387c7807f4e9f6c92e531","85f39366ea7bc5e34b596fc97de18a7e377856755e789d8e931054f2191d9b8b","daf3ea3d49f6e8a2fa70b7ca1f21bd97f1b65021b31fbfccb73dd55f86abb792","b15bd260805f9dd06cd4b2b741057209994823942c5696fd835e8a04fb4aab6b","6635a824edf99ed52dbd3502d5bce35990c3ed5e2ec5cef88229df8ac0c52b06","d6577effa37aae713c34363b7cc4c84851cbabe399882c60e2b70bcbb02bfa01","8eaf80ad438890fe5880c39a7bbf2c998ce7d29d4c14dd56d82db63bd871eefb","9b3e7f776f312c76ac67e1060e5398d7ac2c69d6a3a928a9daaae2eb05b15f56","202042eccb4789b7dee51ba9ecab0b854834ea5c1d6a3946504bfc733d4468c3","2b2ef76a9f36094b07ee6f76a5ac6903f2f65c0a20283201814a8d1e752cb592","8882e4e087d0bc8cc713cb3d8090c45d33e373e6f5c83e0f8d00fe6a950ef875","42979c197a22211d72c9cf1de8559f0a39de0b0687eea63c6407a69d9d73c13f","cc36098e27200f5daceffff4a4694148746aaa1b369536186fa1caa43d8b4bde","07133796953f82127aebef603392f1430690fe6cfd5d3d4c2bd3b277c6566d79","9079300efc80cdcb5a5cd153bdc354ac3439619e661e5f35413f81f94d4aa897","3655e77b67da6b52b34f7abd79890cdbc9ce2e2a3579fc2568f07d77d1d60ec9","95a1ff30ceba2b8c185a76002e2a4578cca9a593d8b642b7d5b13275ece952b9","2a43ea656e1e3ae2ec876766d9d4576a53b079a1cd352367db12fc721033c08b","e8835cfaf67d1730e430a800d447ea79d33c59fc990455965ca85dcc16c6ec64","98631e5438157a2bc50970527c20d9a0d02def63700cb8f21ee19520a982fbc0","93a5f2ecf21f69045a129ef7821396276c117b34eb39d0b5510ff90c34839f56","4d054866f6bed47338a905264c4cc16108dfb55353a97d67b5beb0393f78fbc4","cc611eddaabd228585429f406dc5b2ef53db92e954f3fab97f8cc67b84b0a67b","51d3abc39997f19e1e0e13fe545c786465259a3f6625b27828e47847a00acc27","982c00b942df3ad3aa49500b7f253bad1f2624d4c5e0e0eea1ee20529d90296f","a9f610a8bd1aa513ca9ee39a05566e7439b45ef24670858f4b0a3b1b33a17923","a7b268ed0284472916b39062cea1ec8ca946b048b7f8992b14221d4318cb7f5b","7748692e43d33e0f58fd69f9e84f568430d147be8a5fec55aea68c73f63908a1","cee3e7bec863f019aa744e00dd7a8470f2f6ff951c498c501ad6e296aca9f418","98e5bfadb80d850109194eb7cbdae761564cf0aa4cdd39e70eb73fe628af6bf8","5da731f0b18d358e4e0ca682928298de26c6eabee5990d03333e0e8aef335ea2","5ed1241d2008dfabf2145443b9fb285b7bdcd8211266187ed9dfb2ae5b80f869","f60e1afcef13dcd11edafbd3f7720a5a50c3d2d90b4cb27cea58adb16efd12ed","e6a1fc7243e8a4f92cbafa2bac261e3540968403f082df44ae521b8e2658efbd","b745f5b14ad0407d94b3b3e764ceb6e6c1c0873528461421046751f7a3c84b17","554028fd3b11a78660ed0cb98b5fd343bc9b8a9b8495114e6ae5d13aed49f242","e4125c670944f6369be310c830b37391a82b4f8f500399a17b041962e1fe1dd2","60cded932be8d4f5de5c3a7f56c5e01438ce8ec7f110d4c87fdf2bfdb910dbd0","06e0622d8d29254863de52ca0da62329d78c5e02086481fbcef6c9cd74796d84","ad5346fa860e1577699a7a1e6543f7e811dd209164ed4e226566595c50ad3dd4","749ad4dbb8d1d33ab4283f8ffa875669e067f917cf1d17162e149b571c689f9a","dc278a8129f50ef9555060cf12ba10a11c2a816bad01c2f1abd2f87f6ac3796c","ee94a249d6f6c94e2656e1abc6820a25a88ec1351c21929d1365d60a4381d797","bc5a1ad94db45ea72a8632a18d57efe131671c54c51347c8c9a266f5ca059d8f","1ecb3bf08e05193e81b052ca5180d2a2cfcf64602d57312dd7a5686755938b88","ee2a7977e7cc78906b894656baaf8d4080962056ee12b2024fa2f42bf8e447bf","88124457c6ce628eb357aefa18c0e23a58d92997bed3e28a5e53217a9d8ec590","bda82ce02ca6b44902394fd57e57b1b41e4de290727d92cef3cb537b21cbc5af","c288bf4485ccf06ac2da23408bbdd47c987b1ea7db59f7d3caf736d115323e42","c0007fbf0456531d2c2ac6243689559d4ea2b5a5bba9ddb28c006db5a15fe32d","c7d9afa4d252d9dee7c7c0c3752db5efcbaa39dda3df9a1e193aea3a0d056ac1","475709fda88e76c7b3bcf00a2ffa16eb2d91088caa6d9f4abdf9a6592664f676","ec1bc8ff1a835119253f23d674c3e13ba983744620a0655f73dc61f6aaeea004","4f9b48c8b5098f29ddf9041e81676fb06b078e1dfe76e1b160f93ca214d05ff3","94c5a9b9991dc4e164779653c1f2af90ad961fd23d9164c0b6e570be7456ce31","13ed3c245e4a6a8b90d3f0909198c01fd7cb48e41364c1ece3c11edecb9dc9c7","81212195a5a76330d166ecfd85eb7119e93d3b814177643fa8a10f4b40055fbf","b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","82e5a50e17833a10eb091923b7e429dc846d42f1c6161eb6beeb964288d98a15","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","f9e22729fa06ed20f8b1fe60670b7c74933fdfd44d869ddfb1919c15a5cf12fb","d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed",{"version":"a8932b7a5ef936687cc5b2492b525e2ad5e7ed321becfea4a17d5a6c80f49e92","affectsGlobalScope":true},"689be50b735f145624c6f391042155ae2ff6b90a93bac11ca5712bc866f6010c",{"version":"64d4b35c5456adf258d2cf56c341e203a073253f229ef3208fc0d5020253b241","affectsGlobalScope":true},"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","dd0c1b380ba3437adedef134b2e48869449b1db0b07b2a229069309ce7b9dd39","1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a",{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true},"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","ee65fe452abe1309389c5f50710f24114e08a302d40708101c4aa950a2a7d044","63786b6f821dee19eb898afb385bd58f1846e6cba593a35edcf9631ace09ba25","c5a14bdeb170e0e67fb4200c54e0e02fd0ec94aca894c212c9d43c2916891542","a39f2a304ccc39e70914e9db08f971d23b862b6f0e34753fad86b895fe566533","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","d88a5e779faf033be3d52142a04fbe1cb96009868e3bbdd296b2bc6c59e06c0e","8b677e0b88f3c4501c6f3ec44d3ccad1c2ba08efd8faf714b9b631b5dba1421b","8a19491eba2108d5c333c249699f40aff05ad312c04a17504573b27d91f0aede","199f9ead0daf25ae4c5632e3d1f42570af59685294a38123eef457407e13f365","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","ddef25f825320de051dcb0e62ffce621b41c67712b5b4105740c32fd83f4c449","1b3dffaa4ca8e38ac434856843505af767a614d187fb3a5ef4fcebb023c355aa","15fe687c59d62741b4494d5e623d497d55eb38966ecf5bea7f36e48fc3fbe15e",{"version":"2c3b8be03577c98530ef9cb1a76e2c812636a871f367e9edf4c5f3ce702b77f8","affectsGlobalScope":true},"1ba59c8bbeed2cb75b239bb12041582fa3e8ef32f8d0bd0ec802e38442d3f317"],"options":{"allowSyntheticDefaultImports":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":99,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":99,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"fileIdsList":[[73,201,245],[73,74,76,201,245],[73,75,201,245],[201,245],[73,75,76,77,78,79,80,201,245],[75,201,245],[69,70,201,245],[63,201,245],[63,66,201,245],[63,64,65,67,201,245],[69,201,245],[68,201,245],[68,69,71,72,201,245],[201,245,537],[201,245,248,289,295,298],[201,245,300],[201,245,298,312,315],[201,245,298,299,300,301,316],[201,245,312,332,334,363,364],[201,245,312,332,376,378],[201,245,377],[201,245,312,332],[201,245,365,378,379,380,381],[201,245,312,332,363],[201,245,291,295,312,335,338],[201,245,336,337],[201,245,315,335],[201,245,315],[201,245,312,339,350],[201,245,332,369],[201,245,312,332,369,370],[201,245,312,367,369],[201,245,295,312,332,369,370],[201,245,295,312,332,369,372],[201,245,296,297,312],[201,245,309,312,332,366,369,370,371,372,373,374,375],[201,245,312,322,328,332,368],[201,245,352,353],[201,245,353,354],[201,245,329],[201,245,312,329],[201,245,329,330,331],[201,245,296,297,312,317,322,328],[201,245,312,357],[201,245,357,358,359,360],[201,245,312,356],[201,245,295,302],[201,245,304,306,308],[201,245,297],[201,245,302,303,309,310,311],[201,245,396],[201,245,393,394,395,396,397,398,399,400,401,402,403,404,405],[201,245,386],[201,245,342],[201,245,393,394,395],[201,245,393,394],[201,245,342,396,397],[201,245,394],[201,245,388],[201,245,385,387],[201,245,406],[201,245,490],[201,245,477,478,479],[201,245,472,473,474],[201,245,450,451,452,453],[201,245,416,490],[201,245,416],[201,245,416,417,418,419,464],[201,245,454],[201,245,449,455,456,457,458,459,460,461,462,463],[201,245,464],[201,245,415],[201,245,468,470,471,489,490],[201,245,468,470],[201,245,465,468,490],[201,245,475,476,480,481,486],[201,245,469,471,481,489],[201,245,488,489],[201,245,465,469,471,487,488],[201,245,469,490],[201,245,467],[201,245,467,469,490],[201,245,465,466],[201,245,482,483,484,485],[201,245,471,490],[201,245,426],[201,245,420,427],[201,245,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],[201,245,446,490],[201,245,537,538,539,540,541],[201,245,537,539],[201,245,260,295,543],[201,245,251,295],[201,245,288,295,550],[201,245,260,295],[201,245,553,555],[201,245,552,553,554],[201,245,257,260,295,547,548,549],[201,245,544,548,550,558,559],[201,245,258,295],[201,245,257,260,262,265,277,288,295],[201,245,305],[201,245,295],[201,242,245],[201,244,245],[201,245,250,280],[201,245,246,251,257,258,265,277,288],[201,245,246,247,257,265],[201,245,248,289],[201,245,249,250,258,266],[201,245,250,277,285],[201,245,251,253,257,265],[201,244,245,252],[201,245,253,254],[201,245,255,257],[201,244,245,257],[201,245,257,258,259,277,288],[201,245,257,258,259,272,277,280],[201,240,245],[201,240,245,253,257,260,265,277,288],[201,245,257,258,260,261,265,277,285,288],[201,245,260,262,277,285,288],[201,245,257,263],[201,245,264,288],[201,245,253,257,265,277],[201,245,266],[201,245,267],[201,244,245,268],[201,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[201,245,270],[201,245,271],[201,245,257,272,273],[201,245,272,274,289,291],[201,245,257,277,278,280],[201,245,279,280],[201,245,277,278],[201,245,280],[201,245,281],[201,242,245,277,282],[201,245,257,283,284],[201,245,283,284],[201,245,250,265,277,285],[201,245,286],[197,198,199,200,201,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[245],[201,245,265,287],[201,245,260,271,288],[201,245,250,289],[201,245,277,290],[201,245,264,291],[201,245,292],[201,245,257,259,268,277,280,288,290,291,293],[201,245,277,294],[201,245,570,609],[201,245,570,594,609],[201,245,609],[201,245,570],[201,245,570,595,609],[201,245,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],[201,245,595,609],[201,245,258,277,295,546],[201,245,258,560],[201,245,260,295,547,557],[201,245,612],[201,245,257,260,262,265,277,285,288,294,295],[201,245,307],[201,245,263,295],[201,245,349],[201,245,312,347,348],[172,201,245],[201,245,312,333],[201,245,312],[201,245,383],[201,245,340,343],[201,245,340,343,344,345],[201,245,312,320],[201,245,257,295,312,319,320,321],[201,245,295,312,318,319,321],[201,245,304,346],[201,245,312,314],[201,245,313],[201,245,326,327],[201,245,312,322,323,324,325],[201,245,312,322,328,332,339,351,355,361,362],[201,245,312,322,328],[201,245,382,384],[201,245,341],[61,201,245],[57,201,245],[57,58,59,60,201,245],[201,210,214,245,288],[201,210,245,277,288],[201,245,277],[201,205,245],[201,207,210,245,288],[201,245,265,285],[201,205,245,295],[201,207,210,245,265,288],[201,202,203,204,206,209,245,257,277,288],[201,210,218,245],[201,203,208,245],[201,210,234,235,245],[201,203,206,210,245,280,288,295],[201,210,245],[201,202,245],[201,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,245],[201,210,227,230,245,253],[201,210,218,219,220,245],[201,208,210,219,221,245],[201,209,245],[201,203,205,210,245],[201,210,214,219,221,245],[201,214,245],[201,208,210,213,245,288],[201,203,207,210,218,245],[201,210,227,245],[201,205,210,234,245,280,293,295],[171,201,245],[159,160,161,201,245],[162,163,201,245],[159,160,162,164,165,170,201,245],[160,162,201,245],[170,201,245],[162,201,245],[159,160,162,165,166,167,168,169,201,245],[62,81,83,85,87,123,133,134,135,138,143,144,145,158,175,176,177,178,179,183,190,191,192,193,194,201,245],[83,84,145,201,245,407],[92,96,97,201,245],[83,201,245],[101,102,201,245],[83,92,201,245],[201,245,411],[87,92,201,245],[62,81,83,201,245],[92,201,245],[83,87,92,106,201,245],[174,201,245],[141,201,245],[83,84,98,201,245,407,491],[83,84,145,201,245,407,491],[194,201,245,407],[83,103,104,105,201,245,407],[201,245,407,413],[83,84,126,201,245,407,491],[83,87,106,107,201,245,407],[83,108,201,245,407],[83,87,128,201,245,407],[62,175,201,245,407],[89,201,245],[81,83,201,245],[81,201,245],[81,83,135,201,245],[135,136,137,138,139,201,245],[124,201,245],[125,126,201,245],[83,87,92,93,94,95,98,99,100,101,102,103,104,105,107,108,109,123,127,201,245],[83,87,141,201,245],[128,201,245,407,491],[124,125,127,128,142,201,245],[94,95,99,100,101,103,104,105,129,130,131,132,133,134,140,201,245],[187,201,245,407],[188,201,245,407],[81,186,201,245,407],[83,110,120,123,201,245],[83,92,110,201,245],[87,112,114,115,123,201,245],[113,201,245],[111,201,245,407],[201,245,407,510],[116,201,245,407],[84,116,201,245,407],[110,111,115,116,117,118,119,121,122,201,245],[83,145,201,245],[83,145,146,201,245],[83,145,146,147,148,151,152,153,154,155,156,157,201,245],[201,245,407,491],[83,145,146,201,245,407,491],[83,145,146,158,201,245,407,491],[93,146,201,245,407,411],[147,148,149,150,151,152,153,154,155,156,157,158,201,245],[83,145,149,150,201,245],[83,149,150,201,245],[88,201,245,407,491],[88,89,90,91,201,245],[84,201,245,407],[84,201,245,407,491],[84,85,86,201,245],[201,245,407,411],[145,201,245],[62,195,201,245],[62,201,245],[62,92,175,176,201,245],[62,83,201,245],[62,81,140,201,245],[62,143,201,245],[62,81,184,185,186,187,188,189,201,245],[62,83,191,201,245,407],[62,83,85,193,201,245,407],[62,83,84,85,182,201,245,407],[62,83,85,180,201,245,407],[62,83,192,201,245,407],[62,83,84,181,201,245,407],[62,190,201,245,407],[180,181,182,201,245],[173,201,245],[82,201,245]],"referencedMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"exportedModulesMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"semanticDiagnosticsPerFile":[74,75,76,80,81,77,78,79,71,70,64,67,65,68,66,63,72,69,73,539,537,299,300,301,316,317,298,365,379,378,380,382,364,381,339,338,336,337,351,370,371,368,372,373,374,375,367,366,376,369,354,355,353,330,331,332,329,358,360,361,359,357,356,303,309,302,310,311,312,404,401,400,397,406,393,402,396,395,403,398,405,399,394,389,388,387,407,477,478,480,479,472,473,475,474,450,452,451,454,453,417,415,418,465,419,455,464,456,459,457,460,462,458,461,463,416,491,476,471,481,487,488,490,489,469,470,466,468,467,482,486,483,484,485,420,421,424,422,423,426,427,428,429,425,430,431,432,433,434,435,449,436,437,438,439,440,441,442,445,443,444,446,447,448,386,542,538,540,541,544,545,551,543,556,552,555,553,550,560,559,318,561,557,562,297,305,306,554,563,546,564,242,243,244,245,246,247,199,248,249,250,251,252,253,254,256,255,257,258,259,241,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,278,280,281,282,283,284,285,286,197,295,201,198,200,287,288,289,290,291,292,293,294,565,566,567,548,549,568,569,594,595,570,573,592,593,583,582,580,575,588,586,590,574,587,591,576,577,589,571,578,579,581,585,596,584,572,609,608,603,605,604,597,598,600,602,606,607,599,601,547,610,558,611,313,613,612,614,307,308,352,304,296,377,350,348,349,173,334,333,383,384,340,344,346,345,343,319,321,322,320,347,315,314,335,323,328,326,324,325,327,363,362,385,342,341,62,58,61,60,57,59,11,12,14,13,2,15,16,17,18,19,20,21,22,3,4,26,23,24,25,27,28,29,5,30,31,32,33,6,37,34,35,36,38,7,39,44,45,40,41,42,43,8,49,46,47,48,50,9,51,52,53,54,55,1,10,56,218,229,216,230,239,208,207,238,233,237,210,226,209,236,205,206,211,212,217,215,203,240,231,221,220,222,224,219,223,234,213,214,225,204,228,227,232,202,235,172,162,164,171,166,167,165,168,159,160,161,163,169,170,195,391,392,408,101,98,95,134,97,409,103,104,132,410,129,109,99,412,177,102,131,105,178,194,413,126,414,96,176,107,133,94,108,100,175,130,492,493,494,495,496,497,498,499,500,501,502,139,135,136,137,138,140,503,124,125,127,504,128,142,505,143,141,506,187,185,189,188,186,184,507,508,509,121,144,111,510,122,117,119,110,116,118,115,114,113,511,512,513,514,123,120,150,147,149,148,158,516,517,518,519,515,155,156,154,152,151,157,153,88,89,90,91,520,521,92,112,85,84,179,86,145,522,523,87,528,524,525,93,411,526,527,146,196,191,193,182,180,192,181,190,529,530,531,532,533,534,535,183,174,390,83,82,536,106],"affectedFilesPendingEmit":[[74,1],[75,1],[76,1],[80,1],[81,1],[77,1],[78,1],[79,1],[71,1],[70,1],[64,1],[67,1],[65,1],[68,1],[66,1],[63,1],[72,1],[69,1],[73,1],[539,1],[537,1],[299,1],[300,1],[301,1],[316,1],[317,1],[298,1],[365,1],[379,1],[378,1],[380,1],[382,1],[364,1],[381,1],[339,1],[338,1],[336,1],[337,1],[351,1],[370,1],[371,1],[368,1],[372,1],[373,1],[374,1],[375,1],[367,1],[366,1],[376,1],[369,1],[354,1],[355,1],[353,1],[330,1],[331,1],[332,1],[329,1],[358,1],[360,1],[361,1],[359,1],[357,1],[356,1],[303,1],[309,1],[302,1],[310,1],[311,1],[312,1],[404,1],[401,1],[400,1],[397,1],[406,1],[393,1],[402,1],[396,1],[395,1],[403,1],[398,1],[405,1],[399,1],[394,1],[389,1],[388,1],[387,1],[407,1],[477,1],[478,1],[480,1],[479,1],[472,1],[473,1],[475,1],[474,1],[450,1],[452,1],[451,1],[454,1],[453,1],[417,1],[415,1],[418,1],[465,1],[419,1],[455,1],[464,1],[456,1],[459,1],[457,1],[460,1],[462,1],[458,1],[461,1],[463,1],[416,1],[491,1],[476,1],[471,1],[481,1],[487,1],[488,1],[490,1],[489,1],[469,1],[470,1],[466,1],[468,1],[467,1],[482,1],[486,1],[483,1],[484,1],[485,1],[420,1],[421,1],[424,1],[422,1],[423,1],[426,1],[427,1],[428,1],[429,1],[425,1],[430,1],[431,1],[432,1],[433,1],[434,1],[435,1],[449,1],[436,1],[437,1],[438,1],[439,1],[440,1],[441,1],[442,1],[445,1],[443,1],[444,1],[446,1],[447,1],[448,1],[386,1],[542,1],[538,1],[540,1],[541,1],[544,1],[545,1],[551,1],[543,1],[556,1],[552,1],[555,1],[553,1],[550,1],[560,1],[559,1],[318,1],[561,1],[557,1],[562,1],[297,1],[305,1],[306,1],[554,1],[563,1],[546,1],[564,1],[242,1],[243,1],[244,1],[245,1],[246,1],[247,1],[199,1],[248,1],[249,1],[250,1],[251,1],[252,1],[253,1],[254,1],[256,1],[255,1],[257,1],[258,1],[259,1],[241,1],[260,1],[261,1],[262,1],[263,1],[264,1],[265,1],[266,1],[267,1],[268,1],[269,1],[270,1],[271,1],[272,1],[273,1],[274,1],[275,1],[276,1],[277,1],[279,1],[278,1],[280,1],[281,1],[282,1],[283,1],[284,1],[285,1],[286,1],[197,1],[295,1],[201,1],[198,1],[200,1],[287,1],[288,1],[289,1],[290,1],[291,1],[292,1],[293,1],[294,1],[565,1],[566,1],[567,1],[548,1],[549,1],[568,1],[569,1],[594,1],[595,1],[570,1],[573,1],[592,1],[593,1],[583,1],[582,1],[580,1],[575,1],[588,1],[586,1],[590,1],[574,1],[587,1],[591,1],[576,1],[577,1],[589,1],[571,1],[578,1],[579,1],[581,1],[585,1],[596,1],[584,1],[572,1],[609,1],[608,1],[603,1],[605,1],[604,1],[597,1],[598,1],[600,1],[602,1],[606,1],[607,1],[599,1],[601,1],[547,1],[610,1],[558,1],[611,1],[313,1],[613,1],[612,1],[614,1],[307,1],[308,1],[352,1],[304,1],[296,1],[377,1],[350,1],[348,1],[349,1],[173,1],[334,1],[333,1],[383,1],[384,1],[340,1],[344,1],[346,1],[345,1],[343,1],[319,1],[321,1],[322,1],[320,1],[347,1],[315,1],[314,1],[335,1],[323,1],[328,1],[326,1],[324,1],[325,1],[327,1],[363,1],[362,1],[385,1],[342,1],[341,1],[62,1],[58,1],[61,1],[60,1],[57,1],[59,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[218,1],[229,1],[216,1],[230,1],[239,1],[208,1],[207,1],[238,1],[233,1],[237,1],[210,1],[226,1],[209,1],[236,1],[205,1],[206,1],[211,1],[212,1],[217,1],[215,1],[203,1],[240,1],[231,1],[221,1],[220,1],[222,1],[224,1],[219,1],[223,1],[234,1],[213,1],[214,1],[225,1],[204,1],[228,1],[227,1],[232,1],[202,1],[235,1],[172,1],[162,1],[164,1],[171,1],[166,1],[167,1],[165,1],[168,1],[159,1],[160,1],[161,1],[163,1],[169,1],[170,1],[195,1],[391,1],[392,1],[408,1],[101,1],[98,1],[95,1],[134,1],[97,1],[409,1],[103,1],[104,1],[132,1],[410,1],[129,1],[109,1],[99,1],[412,1],[177,1],[102,1],[131,1],[105,1],[178,1],[194,1],[413,1],[126,1],[414,1],[96,1],[176,1],[107,1],[133,1],[94,1],[108,1],[100,1],[175,1],[130,1],[492,1],[493,1],[494,1],[495,1],[496,1],[497,1],[498,1],[499,1],[500,1],[501,1],[502,1],[139,1],[135,1],[136,1],[137,1],[138,1],[140,1],[503,1],[124,1],[125,1],[127,1],[504,1],[128,1],[142,1],[505,1],[143,1],[141,1],[506,1],[187,1],[185,1],[189,1],[188,1],[186,1],[184,1],[507,1],[508,1],[509,1],[121,1],[144,1],[111,1],[510,1],[122,1],[117,1],[119,1],[110,1],[116,1],[118,1],[115,1],[114,1],[113,1],[511,1],[512,1],[513,1],[514,1],[123,1],[120,1],[150,1],[147,1],[149,1],[148,1],[158,1],[516,1],[517,1],[518,1],[519,1],[515,1],[155,1],[156,1],[154,1],[152,1],[151,1],[157,1],[153,1],[88,1],[89,1],[90,1],[91,1],[520,1],[521,1],[92,1],[112,1],[85,1],[84,1],[179,1],[86,1],[145,1],[522,1],[523,1],[87,1],[528,1],[524,1],[525,1],[93,1],[411,1],[526,1],[527,1],[146,1],[196,1],[191,1],[193,1],[182,1],[180,1],[192,1],[181,1],[190,1],[529,1],[530,1],[531,1],[532,1],[533,1],[534,1],[535,1],[183,1],[174,1],[390,1],[83,1],[82,1],[536,1],[106,1]]},"version":"4.9.5"}
./.code/agents/1/exec-call_lmaGajgVnK37auksouScRpzT.txt:7567:frontend/node_modules/.cache/babel-loader/21f41cb11065df99f93c670d4587140cd8953f50c9b675fa4d5c3ca024f77708.json:1:{"ast":null,"code":"// src/client/ghin/index.ts\nimport { z as z22 } from \"zod\";\n\n// src/errors/index.ts\nvar GhinError = class extends Error {\n  code;\n  statusCode;\n  cause;\n  constructor(message, code, statusCode, cause) {\n    super(message);\n    this.name = \"GhinError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.cause = cause;\n  }\n};\nvar AuthenticationError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"AUTHENTICATION_ERROR\", statusCode, cause);\n    this.name = \"AuthenticationError\";\n  }\n};\nvar NetworkError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"NETWORK_ERROR\", statusCode, cause);\n    this.name = \"NetworkError\";\n  }\n};\nvar ValidationError = class extends GhinError {\n  field;\n  constructor(message, field, cause) {\n    super(message, \"VALIDATION_ERROR\", void 0, cause);\n    this.name = \"ValidationError\";\n    this.field = field;\n  }\n};\nvar RateLimitError = class extends GhinError {\n  retryAfter;\n  constructor(message, retryAfter, cause) {\n    super(message, \"RATE_LIMIT_ERROR\", 429, cause);\n    this.name = \"RateLimitError\";\n    this.retryAfter = retryAfter;\n  }\n};\nvar ConfigurationError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CONFIGURATION_ERROR\", void 0, cause);\n    this.name = \"ConfigurationError\";\n  }\n};\nvar CacheError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CACHE_ERROR\", void 0, cause);\n    this.name = \"CacheError\";\n  }\n};\n\n// src/models/cache-client.ts\nimport { z } from \"zod\";\nvar schemaStringOrUndefined = z.union([z.string(), z.undefined()]);\nvar schemaPromiseOrNonPromiseStringOrUndefined = z.union([z.promise(schemaStringOrUndefined), schemaStringOrUndefined]);\nvar schemaPromiseOrNonPromiseVoid = z.union([z.promise(z.void()), z.void()]);\nvar schemaCacheClient = z.object({\n  read: z.function().args().returns(schemaPromiseOrNonPromiseStringOrUndefined),\n  write: z.function().args(z.string()).returns(schemaPromiseOrNonPromiseVoid)\n});\n\n// src/models/client-config.ts\nimport { z as z3 } from \"zod\";\n\n// src/models/validation.ts\nimport { z as z2 } from \"zod\";\nvar boolean = z2.union([z2.boolean(), z2.literal(\"true\"), z2.literal(\"false\"), z2.null()]).transform(value => value === true || value === \"true\");\nvar date = z2.union([z2.date(), z2.string()]).refine(value => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform(value => value ? new Date(value) : void 0);\nvar emptyString = z2.string().trim();\nvar emptyStringToNull = emptyString.nullable().transform(value => value || null);\nvar float = z2.coerce.number();\nvar gender = z2.enum([\"M\", \"F\"]);\nvar handicap = z2.union([float, z2.string(), z2.null()]).refine(value => {\n  if (typeof value === \"number\") {\n    return true;\n  }\n  if (typeof value === \"string\" && value === \"NH\") {\n    return true;\n  }\n  return false;\n}).transform(value => {\n  if (value === \"NH\") {\n    return null;\n  }\n  return value;\n});\nvar number = float.int();\nvar string = emptyString.min(1);\nvar monthDay = string.or(emptyString).transform(value => {\n  if (!value) {\n    return null;\n  }\n  const [month, day] = value.split(\"/\");\n  return `${month?.toString().padStart(2, \"0\")}-${day?.toString().padStart(2, \"0\")}`;\n});\nvar shortDate = z2.union([z2.date(), z2.string(), z2.null()]).refine(value => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform(value => {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const [year, month, day] = value.split(\"-\");\n  return /* @__PURE__ */new Date(`${year}-${month}-${day}T00:00Z`);\n});\n\n// src/models/client-config.ts\nvar schemaClientConfig = z3.object({\n  cache: schemaCacheClient.optional(),\n  password: string,\n  username: string\n});\n\n// src/client/in-memory-cache-client/index.ts\nvar InMemoryCacheClient = class {\n  value = (() => void 0)();\n  async read() {\n    return this.value;\n  }\n  async write(value) {\n    this.value = value;\n  }\n};\n\n// src/client/request-client/index.ts\nimport { Mutex } from \"async-mutex\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { err as err2, ok as ok2 } from \"neverthrow\";\n\n// src/utils/retry.ts\nimport { err, ok } from \"neverthrow\";\nvar DEFAULT_RETRY_CONFIG = {\n  maxAttempts: 3,\n  baseDelay: 1e3,\n  // 1 second\n  maxDelay: 1e4,\n  // 10 seconds\n  backoffMultiplier: 2,\n  retryableStatusCodes: [408, 429, 500, 502, 503, 504]\n};\nfunction isRetryableError(error) {\n  if (error instanceof NetworkError) {\n    return error.statusCode ? DEFAULT_RETRY_CONFIG.retryableStatusCodes.includes(error.statusCode) : true;\n  }\n  if (error instanceof RateLimitError) {\n    return true;\n  }\n  return false;\n}\nfunction calculateDelay(attempt, config) {\n  const delay = config.baseDelay * config.backoffMultiplier ** (attempt - 1);\n  return Math.min(delay, config.maxDelay);\n}\nasync function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nasync function withRetry(operation) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const finalConfig = {\n    ...DEFAULT_RETRY_CONFIG,\n    ...config\n  };\n  for (let attempt = 1; attempt <= finalConfig.maxAttempts; attempt++) {\n    const result = await operation();\n    if (result.isOk()) {\n      return result;\n    }\n    const error = result.error;\n    if (attempt === finalConfig.maxAttempts) {\n      return result;\n    }\n    if (!isRetryableError(error)) {\n      return result;\n    }\n    const delay = calculateDelay(attempt, finalConfig);\n    const jitter = Math.random() * 0.1 * delay;\n    const totalDelay = delay + jitter;\n    await sleep(totalDelay);\n  }\n  return err(new Error(\"Retry exhausted\"));\n}\n\n// src/client/request-client/models/access-token.ts\nimport { z as z4 } from \"zod\";\nvar schemaAccessToken = z4.object({\n  expiresIn: string,\n  token: string\n}).transform(_ref => {\n  let {\n    expiresIn: tmpExpiresIn,\n    ...values\n  } = _ref;\n  const now = /* @__PURE__ */new Date();\n  const secondsUntilExpiry = Number(tmpExpiresIn.replace(/[^0-9]/g, \"\"));\n  const millisecondsUntilExpiry = secondsUntilExpiry * 1e3;\n  const expiresIn = new Date(now.getTime() + millisecondsUntilExpiry);\n  return {\n    ...values,\n    expiresIn\n  };\n});\n\n// src/client/request-client/models/client-config.ts\nimport { z as z5 } from \"zod\";\nvar schemaClientConfig2 = z5.object({\n  cache: schemaCacheClient,\n  password: string,\n  username: string\n});\n\n// src/client/request-client/models/session.ts\nimport { z as z6 } from \"zod\";\nvar schemaSession = z6.object({\n  appId: string,\n  authVersion: string,\n  fid: string,\n  sdkVersion: string\n});\nvar schemaSessionResponse = z6.object({\n  authToken: schemaAccessToken\n});\n\n// src/client/request-client/models/login.ts\nimport { z as z7 } from \"zod\";\nvar schemaLoginResponse = z7.object({\n  golfer_user: z7.object({\n    golfer_user_token: string\n  })\n});\n\n// src/client/request-client/index.ts\nvar FIREBASE_SESSION_URL = new URL(\"https://firebaseinstallations.googleapis.com/v1/projects/ghin-mobile-app/installations\");\nvar GOOGLE_API_KEY = \"AIzaSyBxgTOAWxiud0HuaE5tN-5NTlzFnrtyz-I\";\nvar DEFAULT_USER_AGENT = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36\";\nvar CLIENT_SOURCE = \"GHINcom\";\nvar SESSION_DEFAULTS = {\n  appId: \"1:884417644529:web:47fb315bc6c70242f72650\",\n  authVersion: \"FIS_v2\",\n  fid: \"fg6JfS0U01YmrelthLX9Iz\",\n  sdkVersion: \"w:0.5.7\"\n};\nvar FETCH_HEADER_DEFAULTS = {\n  \"Content-Type\": \"application/json\",\n  \"User-Agent\": DEFAULT_USER_AGENT\n};\nvar apiPathnames = {\n  course_countries: \"/get_countries_and_states.json\",\n  course_details: \"/crsCourseMethods.asmx/GetCourseDetails.json\",\n  course_handicaps: \"/playing_handicaps.json\",\n  course_search: \"/crsCourseMethods.asmx/SearchCourses.json\",\n  golfer: \"/search_golfer.json\",\n  golfers_search: \"/golfers.json\",\n  login: \"/golfer_login.json\",\n  scores: \"/scores.json\"\n};\nvar toFullApiUrl = (baseUrl, pathname) => new URL(`${baseUrl.pathname}${apiPathnames[pathname]}`, baseUrl);\nvar makeAuthHeaders = accessToken => ({\n  Authorization: `Bearer ${accessToken}`\n});\nvar RequestClient = class {\n  accessToken;\n  apiVersion = \"v1\";\n  config;\n  baseUrl = (() => new URL(`https://api2.ghin.com/api/${this.apiVersion}`))();\n  lock;\n  sessionToken;\n  constructor(config) {\n    const results = schemaClientConfig2.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid RequestClientConfig: ${results.error.message}`);\n    }\n    this.lock = new Mutex();\n    this.config = schemaClientConfig2.parse(results.data);\n  }\n  async _fetch(_ref2) {\n    let {\n      options,\n      schema,\n      url\n    } = _ref2;\n    try {\n      const response = await fetch(url.toString(), options);\n      if (!response.ok || response.status >= 400) {\n        let body;\n        try {\n          body = await response.json();\n        } catch {\n          body = await response.text();\n        }\n        if (response.status === 401 || response.status === 403) {\n          return err2(new AuthenticationError(`Authentication failed: ${response.status} ${response.statusText}`, response.status, new Error(JSON.stringify(body))));\n        }\n        if (response.status === 429) {\n          const retryAfter = response.headers.get(\"Retry-After\");\n          const retryAfterSeconds = retryAfter ? Number.parseInt(retryAfter, 10) : void 0;\n          return err2(new RateLimitError(`Rate limit exceeded: ${response.status} ${response.statusText}`, retryAfterSeconds, new Error(JSON.stringify(body))));\n        }\n        if (response.status >= 500) {\n          return err2(new NetworkError(`Server error: ${response.status} ${response.statusText}`, response.status, new Error(JSON.stringify(body))));\n        }\n        return err2(new NetworkError(`Request failed: ${response.status} ${response.statusText}`, response.status, new Error(JSON.stringify(body))));\n      }\n      const raw = await response.json();\n      const parsed = schema.safeParse(raw);\n      if (!parsed.success) {\n        return err2(new ValidationError(`Response validation failed: ${JSON.stringify(parsed.error)}`, void 0, new Error(`URL: ${url.toString()}`)));\n      }\n      return ok2(parsed.data);\n    } catch (error) {\n      if (error instanceof Error) {\n        return err2(new NetworkError(`Network request failed: ${error.message}`, void 0, error));\n      }\n      return err2(new NetworkError(`Unknown network error: ${String(error)}`));\n    }\n  }\n  async refreshSessionToken() {\n    const url = new URL(FIREBASE_SESSION_URL);\n    const body = JSON.stringify(SESSION_DEFAULTS);\n    const result = await this._fetch({\n      options: {\n        body,\n        headers: {\n          ...FETCH_HEADER_DEFAULTS,\n          \"x-goog-api-key\": GOOGLE_API_KEY\n        },\n        method: \"POST\"\n      },\n      schema: schemaSessionResponse,\n      url\n    });\n    return result.map(response => response.authToken);\n  }\n  isAccessTokenValid(accessToken) {\n    if (!accessToken) {\n      return false;\n    }\n    try {\n      const decoded = jwtDecode(accessToken);\n      const expirationDate = new Date(decoded.exp * 1e3);\n      return expirationDate > /* @__PURE__ */new Date();\n    } catch {\n      return false;\n    }\n  }\n  async getAccessToken() {\n    const isAccessTokenValid = this.isAccessTokenValid(this.accessToken);\n    if (isAccessTokenValid) {\n      return ok2(this.accessToken);\n    }\n    try {\n      const cachedAccessToken = await this.config.cache.read();\n      const isCachedTokenValid = this.isAccessTokenValid(cachedAccessToken);\n      if (isCachedTokenValid) {\n        this.accessToken = cachedAccessToken;\n        return ok2(cachedAccessToken);\n      }\n    } catch (error) {\n      return err2(new CacheError(`Failed to read from cache: ${error instanceof Error ? error.message : String(error)}`, error instanceof Error ? error : void 0));\n    }\n    const refreshResult = await this.refreshAccessToken();\n    if (refreshResult.isErr()) {\n      return refreshResult;\n    }\n    const accessToken = refreshResult.value;\n    this.accessToken = accessToken;\n    try {\n      await this.config.cache.write(accessToken);\n    } catch (error) {\n      return err2(new CacheError(`Failed to write to cache: ${error instanceof Error ? error.message : String(error)}`, error instanceof Error ? error : void 0));\n    }\n    return ok2(accessToken);\n  }\n  async refreshAccessToken() {\n    const sessionResult = await this.refreshSessionToken();\n    if (sessionResult.isErr()) {\n      return err2(sessionResult.error);\n    }\n    this.sessionToken = sessionResult.value;\n    const url = toFullApiUrl(this.baseUrl, \"login\");\n    const body = JSON.stringify({\n      token: this.sessionToken.token,\n      user: {\n        email_or_ghin: this.config.username,\n        password: this.config.password\n      }\n    });\n    const response = await this._fetch({\n      options: {\n        body,\n        headers: FETCH_HEADER_DEFAULTS,\n        method: \"POST\"\n      },\n      schema: schemaLoginResponse,\n      url\n    });\n    return response.map(resp => resp?.golfer_user?.golfer_user_token);\n  }\n  async fetch(_ref3) {\n    let {\n      entity,\n      schema,\n      options = {}\n    } = _ref3;\n    const accessTokenResult = await this.lock.runExclusive(async () => this.getAccessToken());\n    if (accessTokenResult.isErr()) {\n      return err2(accessTokenResult.error);\n    }\n    const accessToken = accessTokenResult.value;\n    const url = toFullApiUrl(this.baseUrl, entity);\n    const {\n      headers,\n      searchParams,\n      ...requestInitOptions\n    } = options;\n    const actualOptions = {\n      ...requestInitOptions,\n      headers: {\n        ...FETCH_HEADER_DEFAULTS,\n        source: CLIENT_SOURCE,\n        ...makeAuthHeaders(accessToken),\n        ...headers\n      }\n    };\n    if (searchParams) {\n      url.search = searchParams.toString();\n    }\n    return withRetry(() => this._fetch({\n      options: actualOptions,\n      schema,\n      url\n    }));\n  }\n};\n\n// src/client/ghin/models/course/country.ts\nimport { z as z8 } from \"zod\";\nvar FOREIGN_COUNTRY_CODE = \"Fo\";\nvar schemaCourseCountryCode = string.refine(value => {\n  if (value === FOREIGN_COUNTRY_CODE) {\n    return true;\n  }\n  return /^[A-Z]{3}$/.test(value);\n}, 'Invalid country code. Expected format: ISO 3166-1 alpha-3 code or \"Fo\" for foreign countries');\nvar schemaCourseCountryState = z8.object({\n  code: string,\n  //schemaCourseCountryCode,\n  course_code: string,\n  //schemaCourseCountryCode.nullable(),\n  name: string\n});\nvar schemaCourseCountry = z8.object({\n  code: string,\n  crs_code: z8.string().trim().transform(value => value || null).nullable(),\n  name: string,\n  states: z8.array(schemaCourseCountryState)\n});\n\n// src/client/ghin/models/course/request.ts\nimport { z as z9 } from \"zod\";\n\n// src/client/ghin/models/course/state.ts\nvar FOREIGN_STATE_CODE = \"*F\";\nvar courseStateCodeRegex = /^[A-Z]{1,2}-[A-Z*0-9]{1,4}$/;\nvar schemaCourseSearchState = string.refine(value => {\n  if (value === FOREIGN_STATE_CODE) {\n    return true;\n  }\n  return courseStateCodeRegex.test(value);\n}, {\n  message: \"Invalid state code format. Expected format: US-OH, LC-01, MX-*A, or *F\"\n});\n\n// src/client/ghin/models/course/request.ts\nvar schemaCourseSearchRequest = z9.object({\n  country: schemaCourseCountryCode.optional(),\n  facility_id: number.optional(),\n  name: string.optional(),\n  state: schemaCourseSearchState.optional(),\n  updated_at: date.optional()\n}).refine(_ref4 => {\n  let {\n    country,\n    state,\n    facility_id,\n    updated_at\n  } = _ref4;\n  switch (true) {\n    case Boolean(country && state):\n      return true;\n    case Boolean(facility_id):\n      return true;\n    case Boolean(updated_at):\n      return true;\n    default:\n      return false;\n  }\n}, {\n  message: \"At least one of the following are required: country + state, facility_id, or updated_at must be provided\"\n});\nvar schemaCourseDetailsRequest = z9.object({\n  course_id: number,\n  include_altered_tees: boolean.optional()\n}).transform(data => ({\n  ...data,\n  include_altered_tees: data.include_altered_tees ?? false\n}));\n\n// src/client/ghin/models/course/response.ts\nimport { z as z11 } from \"zod\";\n\n// src/client/ghin/models/course/course.ts\nimport { z as z10 } from \"zod\";\n\n// src/client/ghin/models/course/geolocation.ts\nvar schemaGeoCoordinate = float.transform(value => value ? value : null).nullable();\n\n// src/client/ghin/models/course/course.ts\nvar schemaStatus = string.transform(value => value.toUpperCase()).pipe(z10.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourse = z10.object({\n  Address1: string.nullable(),\n  Address2: string.nullable(),\n  City: string.nullable(),\n  Country: string.nullable(),\n  CourseID: number,\n  CourseName: string,\n  CourseStatus: schemaStatus,\n  Email: string.email().nullable(),\n  EntCountryCode: number.nullable(),\n  EntStateCode: number.nullable(),\n  FacilityID: number,\n  FacilityName: string,\n  FacilityStatus: schemaStatus,\n  FullName: string,\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  LegacyCRPCourseId: number.nullable(),\n  Ratings: z10.array(z10.unknown()),\n  State: string.nullable(),\n  Telephone: string.nullable(),\n  UpdatedOn: shortDate.nullable(),\n  Zip: z10.string().trim().transform(zip => zip?.trim() || null).nullable().or(z10.array(z10.unknown()))\n});\n\n// src/client/ghin/models/course/response.ts\nvar schemaStatus2 = string.transform(value => value.toUpperCase()).pipe(z11.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourseCountriesResponse = z11.object({\n  countries: z11.array(schemaCourseCountry.passthrough())\n});\nvar schemaCourseSearchResponse = z11.object({\n  courses: z11.array(schemaCourse.passthrough())\n});\nvar schemaCourseDetailsFacility = z11.object({\n  FacilityId: number,\n  FacilityName: string,\n  FacilityNumber: number.nullable(),\n  FacilityStatus: string,\n  GeoLocationFormattedAddress: string.nullable(),\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  GolfAssociationId: number.nullable()\n});\nvar schemaCourseDetailsSeason = z11.object({\n  IsAllYear: boolean,\n  SeasonEndDate: monthDay.nullable(),\n  SeasonName: string,\n  SeasonStartDate: monthDay.nullable()\n});\nvar schemaCourseDetailsTeeSetRatings = z11.object({\n  BogeyRating: float,\n  CourseRating: float,\n  RatingType: z11.enum([\"Front\", \"Back\", \"Total\"]),\n  SlopeRating: float\n});\nvar schemaCourseDetailsTeeSetHole = z11.object({\n  Allocation: number,\n  HoleId: number,\n  Length: number,\n  Number: number,\n  Par: number\n});\nvar schemaCourseDetailsTeeSet = z11.object({\n  EligibleSides: z11.unknown(),\n  Gender: z11.enum([\"Male\", \"Female\", \"Mixed\"]).nullable(),\n  Holes: z11.array(schemaCourseDetailsTeeSetHole),\n  HolesNumber: number,\n  IsShorter: boolean.nullable(),\n  LegacyCRPTeeId: number,\n  Ratings: z11.array(schemaCourseDetailsTeeSetRatings),\n  StrokeAllocation: boolean,\n  TeeSetRatingId: number,\n  TeeSetRatingName: string,\n  TotalMeters: number,\n  TotalPar: number,\n  TotalYardage: number\n});\nvar schemaCourseDetailsResponse = z11.object({\n  CourseCity: string,\n  CourseId: number,\n  CourseName: string,\n  CourseNumber: number.nullable(),\n  CourseState: schemaCourseSearchState,\n  CourseStatus: schemaStatus2,\n  Facility: schemaCourseDetailsFacility,\n  Season: schemaCourseDetailsSeason,\n  TeeSets: z11.array(schemaCourseDetailsTeeSet)\n});\n\n// src/client/ghin/models/golfers/search.ts\nimport { z as z12 } from \"zod\";\nvar schemaGolferStatus = z12.enum([\"Active\", \"Inactive\"]).transform(value => value.toUpperCase());\nvar schemaGolferSearchRequest = z12.object({\n  country: string.transform(value => value?.toUpperCase()),\n  first_name: string,\n  from_ghin: boolean,\n  ghin: number,\n  last_name: string.optional(),\n  order: z12.enum([\"asc\", \"desc\"]),\n  page: number,\n  per_page: number.max(100),\n  sorting_criteria: z12.enum([\"country\", \"full_name\", \"handicap_index\", \"state\", \"status\"]),\n  state: string.transform(value => value?.toUpperCase()),\n  status: schemaGolferStatus\n}).partial();\nvar schemaGolfer = z12.object({\n  ghin: number,\n  first_name: string,\n  last_name: string,\n  association_id: number,\n  association_name: string,\n  handicap_index: handicap,\n  club_affiliation_id: number,\n  club_id: number,\n  club_name: emptyStringToNull,\n  country: emptyStringToNull,\n  entitlement: boolean,\n  gender,\n  hard_cap: boolean,\n  has_digital_profile: boolean,\n  hi_display: string,\n  hi_value: handicap,\n  is_home_club: boolean,\n  low_hi_date: date.nullable(),\n  low_hi_display: string,\n  low_hi_value: handicap,\n  low_hi: handicap,\n  message_club_authorized: string.nullable(),\n  middle_name: emptyStringToNull.nullable().optional(),\n  phone_number: emptyStringToNull.nullable().optional(),\n  prefix: emptyStringToNull.optional(),\n  rev_date: date.nullable(),\n  soft_cap: boolean,\n  state: emptyStringToNull,\n  status: z12.enum([\"Active\", \"Inactive\"]),\n  suffix: emptyStringToNull.optional()\n});\nvar schemaGolferSearchResponse = z12.object({\n  golfers: z12.array(schemaGolfer)\n});\n\n// src/client/ghin/models/handicaps/course-player-handicap.ts\nimport { z as z13 } from \"zod\";\nvar schemaPlayerCourseHandicap = z13.object({\n  playing_handicap: number,\n  playing_handicap_display: string,\n  shots_off: number\n});\nvar schemaCoursePercentPlayerHandicap = z13.record(string, schemaPlayerCourseHandicap);\n\n// src/client/ghin/models/handicaps/request.ts\nimport { z as z14 } from \"zod\";\nvar schemaTeeSetSide = z14.enum([\"All 18\", \"F9\", \"B9\"]);\nvar schemaGolferCourseHandicapBaseRequest = z14.object({\n  ghin: number.optional(),\n  handicap_index: number.optional(),\n  tee_set_id: number,\n  tee_set_side: schemaTeeSetSide\n});\nvar schemaGolferCourseHandicapRequest = schemaGolferCourseHandicapBaseRequest.refine(_ref5 => {\n  let {\n    ghin,\n    handicap_index\n  } = _ref5;\n  if (ghin && handicap_index) {\n    throw new Error(\"Cannot provide both ghin and handicap_index\");\n  }\n  if (!Number.isSafeInteger(ghin) && !Number.isSafeInteger(handicap_index)) {\n    throw new Error(\"Must provide either ghin or handicap_index\");\n  }\n  return true;\n});\nvar schemaCourseHandicapsRequest = z14.object({\n  golfers: z14.array(schemaGolferCourseHandicapBaseRequest.omit({\n    ghin: true\n  }).extend({\n    golfer_id: number.optional()\n  })),\n  source: z14.literal(CLIENT_SOURCE).default(CLIENT_SOURCE).optional()\n});\n\n// src/client/ghin/models/handicaps/response.ts\nimport { z as z15 } from \"zod\";\nvar schemaGolferHandicapClub = z15.object({\n  active: boolean,\n  association_id: number,\n  club_name: string,\n  id: number\n});\nvar schemaGolferHandicapResponse = z15.object({\n  golfer: z15.object({\n    clubs: z15.array(schemaGolferHandicapClub),\n    handicap_index: handicap\n  })\n}).passthrough();\nvar schemaCoursePlayerHandicapsResponse = z15.object({\n  100: schemaCoursePercentPlayerHandicap,\n  95: schemaCoursePercentPlayerHandicap,\n  90: schemaCoursePercentPlayerHandicap,\n  85: schemaCoursePercentPlayerHandicap,\n  80: schemaCoursePercentPlayerHandicap,\n  75: schemaCoursePercentPlayerHandicap,\n  70: schemaCoursePercentPlayerHandicap,\n  65: schemaCoursePercentPlayerHandicap,\n  60: schemaCoursePercentPlayerHandicap,\n  55: schemaCoursePercentPlayerHandicap,\n  50: schemaCoursePercentPlayerHandicap,\n  45: schemaCoursePercentPlayerHandicap,\n  40: schemaCoursePercentPlayerHandicap,\n  35: schemaCoursePercentPlayerHandicap,\n  30: schemaCoursePercentPlayerHandicap,\n  25: schemaCoursePercentPlayerHandicap,\n  20: schemaCoursePercentPlayerHandicap,\n  15: schemaCoursePercentPlayerHandicap,\n  10: schemaCoursePercentPlayerHandicap,\n  5: schemaCoursePercentPlayerHandicap\n});\n\n// src/client/ghin/models/scores/adjustment.ts\nimport { z as z16 } from \"zod\";\nvar schemaScoringAdjustment = z16.object({\n  display: string,\n  type: string,\n  value: float\n});\n\n// src/client/ghin/models/scores/hole-detail.ts\nimport { z as z17 } from \"zod\";\nvar schemaHoleDetail = z17.object({\n  adjusted_gross_score: number,\n  approach_shot_accuracy: float.nullable().default(0),\n  drive_accuracy: float.nullable(),\n  fairway_hit: boolean.nullable(),\n  gir_flag: z17.any(),\n  hole_number: number,\n  id: number,\n  most_likely_score: number.nullable(),\n  par: number,\n  putts: number.nullable(),\n  raw_score: number,\n  stroke_allocation: number,\n  x_hole: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nimport { z as z20 } from \"zod\";\n\n// src/client/ghin/models/scores/score.ts\nimport { z as z19 } from \"zod\";\n\n// src/client/ghin/models/scores/statistics.ts\nimport { z as z18 } from \"zod\";\nvar schemaStatistics = z18.object({\n  birdies_or_better_percent: float,\n  bogeys_percent: float,\n  double_bogeys_percent: float,\n  fairway_hits_percent: float,\n  gir_percent: float,\n  last_stats_update_date: date,\n  last_stats_update_type: emptyStringToNull,\n  missed_general_approach_shot_accuracy_percent: float,\n  missed_left_approach_shot_accuracy_percent: float,\n  missed_left_percent: float,\n  missed_long_approach_shot_accuracy_percent: float,\n  missed_long_percent: float,\n  missed_right_approach_shot_accuracy_percent: float,\n  missed_right_percent: float,\n  missed_short_approach_shot_accuracy_percent: float,\n  missed_short_percent: float,\n  one_putt_or_better_percent: float,\n  par3s_average: float,\n  par4s_average: float,\n  par5s_average: float,\n  pars_percent: float,\n  putts_total: number,\n  three_putt_or_worse_percent: float,\n  triple_bogeys_or_worse_percent: float,\n  two_putt_or_better_percent: float,\n  two_putt_percent: float,\n  up_and_downs_total: number\n});\n\n// src/client/ghin/models/scores/score.ts\nvar rawScoreTypes = [\"A\", \"C\", \"E\", \"H\", \"N\", \"P\", \"T\"];\nvar schemaRawScoreTypes = z19.enum(rawScoreTypes);\nvar scoreTypes = [\"AWAY\", \"COMPETITION\", \"EXCEPTIONAL\", \"HOME\", \"9_HOLE_ROUNDS\", \"PENALTY\", \"TOURNAMENT\"];\nvar schemaScoreType = z19.enum(scoreTypes);\nvar scoreTypesMap = {\n  A: \"AWAY\",\n  C: \"COMPETITION\",\n  E: \"EXCEPTIONAL\",\n  H: \"HOME\",\n  N: \"9_HOLE_ROUNDS\",\n  P: \"PENALTY\",\n  T: \"TOURNAMENT\"\n};\nvar schemaScoreTypeWithTransform = schemaRawScoreTypes.transform(value => scoreTypesMap[value]);\nvar scoreStatuses = [\"VALIDATED\", \"UNDER_REVIEW\"];\nvar schemaScoreStatus = z19.enum(scoreStatuses);\nvar rawScoreStatuses = [\"Validated\", \"UnderReview\"];\nvar schemaRawScoreStatus = z19.enum(rawScoreStatuses);\nvar scoreStatusesMap = {\n  Validated: \"VALIDATED\",\n  UnderReview: \"UNDER_REVIEW\"\n};\nvar schemaScoreStatusWithTransform = schemaRawScoreStatus.transform(value => scoreStatusesMap[value]);\nvar schemaScore = z19.object({\n  adjusted_gross_score: number,\n  adjustments: z19.array(schemaScoringAdjustment),\n  back9_adjusted: number.nullable(),\n  back9_course_rating: float.nullable(),\n  back9_slope_rating: float.nullable(),\n  course_rating: float,\n  differential: float,\n  edited: boolean,\n  exceptional: boolean,\n  front9_adjusted: number.nullable(),\n  front9_course_rating: float.nullable(),\n  front9_slope_rating: float.nullable(),\n  gender,\n  golfer_id: number,\n  hole_details: z19.array(schemaHoleDetail),\n  id: number,\n  is_manual: boolean,\n  is_recent: boolean,\n  message_club_authorized: string.nullable(),\n  net_score_differential: float.nullable(),\n  number_of_holes: number,\n  number_of_played_holes: number,\n  order_number: number,\n  parent_id: number.nullable(),\n  pcc: float,\n  penalty_method: string.nullable(),\n  penalty_type: string.nullable(),\n  penalty: boolean.optional(),\n  played_at: date,\n  posted_at: date,\n  revision: boolean,\n  score_day_order: number,\n  score_type_display_full: string,\n  score_type_display_short: string,\n  score_type: schemaScoreTypeWithTransform,\n  season_end_date_at: monthDay,\n  season_start_date_at: monthDay,\n  slope_rating: float,\n  statistics: schemaStatistics.nullable().optional(),\n  status: schemaScoreStatusWithTransform,\n  unadjusted_differential: float,\n  used: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nvar schemaScoresRequest = z20.object({\n  course_id: number,\n  from_date_played: date,\n  limit: number.default(100),\n  offset: number.default(0),\n  score_types: z20.array(z20.enum(rawScoreTypes)),\n  statuses: z20.array(string),\n  tee_set_id: number,\n  to_date_played: date\n}).partial().default({}).optional();\n\n// src/client/ghin/models/scores/response.ts\nimport { z as z21 } from \"zod\";\nvar schemaNumberOrDash = z21.union([number, z21.literal(\"-\")]).transform(value => value === \"-\" ? null : Number(value));\nvar schemaFloatOrDash = z21.union([float, z21.literal(\"-\")]).transform(value => value === \"-\" ? null : Number.parseFloat(value.toString()));\nvar schemaScoresResponse = z21.object({\n  average: schemaFloatOrDash.default(0),\n  highest_score: schemaNumberOrDash,\n  lowest_score: schemaNumberOrDash,\n  scores: z21.array(schemaScore),\n  total_count: schemaNumberOrDash.default(0)\n});\n\n// src/client/ghin/index.ts\nvar searchParameters = {\n  GOLFER_ID: \"golfer_id\",\n  SOURCE: \"source\"\n};\nvar GhinClient = class {\n  httpClient;\n  courses;\n  golfers;\n  handicaps;\n  constructor(config) {\n    const results = schemaClientConfig.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid GhinClientConfig: ${results.error.message}`);\n    }\n    this.httpClient = new RequestClient({\n      ...results.data,\n      cache: results.data.cache ?? new InMemoryCacheClient()\n    });\n    this.courses = {\n      getCountries: this.coursesGetCountries.bind(this),\n      getDetails: this.courseGetDetails.bind(this),\n      search: this.courseSearch.bind(this)\n    };\n    this.handicaps = {\n      getOne: this.handicapsGetOne.bind(this),\n      getCoursePlayerHandicaps: this.handicapsGetCoursePlayerHandicaps.bind(this)\n    };\n    this.golfers = {\n      getOne: this.golfersGetOne.bind(this),\n      getScores: this.golfersGetScores.bind(this),\n      search: this.golfersSearch.bind(this)\n    };\n  }\n  async coursesGetCountries() {\n    try {\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_countries\",\n        options,\n        schema: schemaCourseCountriesResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.countries;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseGetDetails(request) {\n    try {\n      const validRequest = schemaCourseDetailsRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_details\",\n        options,\n        schema: schemaCourseDetailsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course details request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseSearch(request) {\n    try {\n      const validRequest = schemaCourseSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_search\",\n        options,\n        schema: schemaCourseSearchResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.courses;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetOne(ghin) {\n    try {\n      const ghinNumber = number.parse(ghin);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE], [\"ghin\", ghinNumber.toString()]]);\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfer\",\n        options,\n        schema: schemaGolferHandicapResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfer;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetCoursePlayerHandicaps(request) {\n    try {\n      const golfers = z22.array(schemaGolferCourseHandicapRequest).parse(request).map(_ref6 => {\n        let {\n          ghin,\n          ...golfer\n        } = _ref6;\n        return {\n          ...golfer,\n          [searchParameters.GOLFER_ID]: ghin\n        };\n      });\n      const searchParams = new URLSearchParams();\n      const courseHandicapRequest = {\n        golfers,\n        source: CLIENT_SOURCE\n      };\n      const options = {\n        body: JSON.stringify(courseHandicapRequest),\n        method: \"POST\",\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_handicaps\",\n        options,\n        schema: schemaCoursePlayerHandicapsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course handicap request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersSearch(request) {\n    try {\n      const {\n        ghin,\n        ...params\n      } = schemaGolferSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const searchDefaults = {\n        from_ghin: true,\n        per_page: 25,\n        sorting_criteria: \"full_name\",\n        order: \"asc\",\n        page: 1\n      };\n      for (const [key, value] of Object.entries(searchDefaults)) {\n        searchParams.set(key, value.toString());\n      }\n      if (ghin) {\n        searchParams.set(searchParameters.GOLFER_ID, ghin.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfers_search\",\n        schema: schemaGolferSearchResponse,\n        options\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfers;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid golfer search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetOne(ghinNumber) {\n    try {\n      const ghin = number.parse(ghinNumber);\n      const results = await this.golfersSearch({\n        ghin,\n        status: \"Active\"\n      });\n      return results.find(golfer => golfer.status === \"Active\");\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetScores(ghinNumber, request) {\n    try {\n      const validRequest = schemaScoresRequest.parse(request) ?? {};\n      const ghin = number.parse(ghinNumber);\n      const searchParams = new URLSearchParams([[searchParameters.GOLFER_ID, ghin.toString()], [\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        if (value === null) {\n          continue;\n        }\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            searchParams.append(key, v.toString());\n          }\n          continue;\n        }\n        if (typeof value === \"object\" && value instanceof Date) {\n          searchParams.set(key, value.toISOString().split(\"T\")[0]);\n          continue;\n        }\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"scores\",\n        options,\n        schema: schemaScoresResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid scores request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n};\nexport { GhinClient };","map":{"version":3,"names":["z","z22","GhinError","Error","code","statusCode","cause","constructor","message","name","AuthenticationError","NetworkError","ValidationError","field","RateLimitError","retryAfter","ConfigurationError","CacheError","schemaStringOrUndefined","union","string","undefined","schemaPromiseOrNonPromiseStringOrUndefined","promise","schemaPromiseOrNonPromiseVoid","void","schemaCacheClient","object","read","function","args","returns","write","z3","z2","boolean","literal","null","transform","value","date","refine","Number","isNaN","Date","parse","toString","emptyString","trim","emptyStringToNull","nullable","float","coerce","number","gender","enum","handicap","int","min","monthDay","or","month","day","split","padStart","shortDate","year","schemaClientConfig","cache","optional","password","username","InMemoryCacheClient","Mutex","jwtDecode","err","err2","ok","ok2","DEFAULT_RETRY_CONFIG","maxAttempts","baseDelay","maxDelay","backoffMultiplier","retryableStatusCodes","isRetryableError","error","includes","calculateDelay","attempt","config","delay","Math","sleep","ms","Promise","resolve","setTimeout","withRetry","operation","arguments","length","finalConfig","result","isOk","jitter","random","totalDelay","z4","schemaAccessToken","expiresIn","token","_ref","tmpExpiresIn","values","now","secondsUntilExpiry","replace","millisecondsUntilExpiry","getTime","z5","schemaClientConfig2","z6","schemaSession","appId","authVersion","fid","sdkVersion","schemaSessionResponse","authToken","z7","schemaLoginResponse","golfer_user","golfer_user_token","FIREBASE_SESSION_URL","URL","GOOGLE_API_KEY","DEFAULT_USER_AGENT","CLIENT_SOURCE","SESSION_DEFAULTS","FETCH_HEADER_DEFAULTS","apiPathnames","course_countries","course_details","course_handicaps","course_search","golfer","golfers_search","login","scores","toFullApiUrl","baseUrl","pathname","makeAuthHeaders","accessToken","Authorization","RequestClient","apiVersion","lock","sessionToken","results","safeParse","success","data","_fetch","_ref2","options","schema","url","response","fetch","status","body","json","text","statusText","JSON","stringify","headers","get","retryAfterSeconds","parseInt","raw","parsed","String","refreshSessionToken","method","map","isAccessTokenValid","decoded","expirationDate","exp","getAccessToken","cachedAccessToken","isCachedTokenValid","refreshResult","refreshAccessToken","isErr","sessionResult","user","email_or_ghin","resp","_ref3","entity","accessTokenResult","runExclusive","searchParams","requestInitOptions","actualOptions","source","search","z8","FOREIGN_COUNTRY_CODE","schemaCourseCountryCode","test","schemaCourseCountryState","course_code","schemaCourseCountry","crs_code","states","array","z9","FOREIGN_STATE_CODE","courseStateCodeRegex","schemaCourseSearchState","schemaCourseSearchRequest","country","facility_id","state","updated_at","_ref4","Boolean","schemaCourseDetailsRequest","course_id","include_altered_tees","z11","z10","schemaGeoCoordinate","schemaStatus","toUpperCase","pipe","schemaCourse","Address1","Address2","City","Country","CourseID","CourseName","CourseStatus","Email","email","EntCountryCode","EntStateCode","FacilityID","FacilityName","FacilityStatus","FullName","GeoLocationLatitude","GeoLocationLongitude","LegacyCRPCourseId","Ratings","unknown","State","Telephone","UpdatedOn","Zip","zip","schemaStatus2","schemaCourseCountriesResponse","countries","passthrough","schemaCourseSearchResponse","courses","schemaCourseDetailsFacility","FacilityId","FacilityNumber","GeoLocationFormattedAddress","GolfAssociationId","schemaCourseDetailsSeason","IsAllYear","SeasonEndDate","SeasonName","SeasonStartDate","schemaCourseDetailsTeeSetRatings","BogeyRating","CourseRating","RatingType","SlopeRating","schemaCourseDetailsTeeSetHole","Allocation","HoleId","Length","Par","schemaCourseDetailsTeeSet","EligibleSides","Gender","Holes","HolesNumber","IsShorter","LegacyCRPTeeId","StrokeAllocation","TeeSetRatingId","TeeSetRatingName","TotalMeters","TotalPar","TotalYardage","schemaCourseDetailsResponse","CourseCity","CourseId","CourseNumber","CourseState","Facility","Season","TeeSets","z12","schemaGolferStatus","schemaGolferSearchRequest","first_name","from_ghin","ghin","last_name","order","page","per_page","max","sorting_criteria","partial","schemaGolfer","association_id","association_name","handicap_index","club_affiliation_id","club_id","club_name","entitlement","hard_cap","has_digital_profile","hi_display","hi_value","is_home_club","low_hi_date","low_hi_display","low_hi_value","low_hi","message_club_authorized","middle_name","phone_number","prefix","rev_date","soft_cap","suffix","schemaGolferSearchResponse","golfers","z13","schemaPlayerCourseHandicap","playing_handicap","playing_handicap_display","shots_off","schemaCoursePercentPlayerHandicap","record","z14","schemaTeeSetSide","schemaGolferCourseHandicapBaseRequest","tee_set_id","tee_set_side","schemaGolferCourseHandicapRequest","_ref5","isSafeInteger","schemaCourseHandicapsRequest","omit","extend","golfer_id","default","z15","schemaGolferHandicapClub","active","id","schemaGolferHandicapResponse","clubs","schemaCoursePlayerHandicapsResponse","z16","schemaScoringAdjustment","display","type","z17","schemaHoleDetail","adjusted_gross_score","approach_shot_accuracy","drive_accuracy","fairway_hit","gir_flag","any","hole_number","most_likely_score","par","putts","raw_score","stroke_allocation","x_hole","z20","z19","z18","schemaStatistics","birdies_or_better_percent","bogeys_percent","double_bogeys_percent","fairway_hits_percent","gir_percent","last_stats_update_date","last_stats_update_type","missed_general_approach_shot_accuracy_percent","missed_left_approach_shot_accuracy_percent","missed_left_percent","missed_long_approach_shot_accuracy_percent","missed_long_percent","missed_right_approach_shot_accuracy_percent","missed_right_percent","missed_short_approach_shot_accuracy_percent","missed_short_percent","one_putt_or_better_percent","par3s_average","par4s_average","par5s_average","pars_percent","putts_total","three_putt_or_worse_percent","triple_bogeys_or_worse_percent","two_putt_or_better_percent","two_putt_percent","up_and_downs_total","rawScoreTypes","schemaRawScoreTypes","scoreTypes","schemaScoreType","scoreTypesMap","A","C","E","H","N","P","T","schemaScoreTypeWithTransform","scoreStatuses","schemaScoreStatus","rawScoreStatuses","schemaRawScoreStatus","scoreStatusesMap","Validated","UnderReview","schemaScoreStatusWithTransform","schemaScore","adjustments","back9_adjusted","back9_course_rating","back9_slope_rating","course_rating","differential","edited","exceptional","front9_adjusted","front9_course_rating","front9_slope_rating","hole_details","is_manual","is_recent","net_score_differential","number_of_holes","number_of_played_holes","order_number","parent_id","pcc","penalty_method","penalty_type","penalty","played_at","posted_at","revision","score_day_order","score_type_display_full","score_type_display_short","score_type","season_end_date_at","season_start_date_at","slope_rating","statistics","unadjusted_differential","used","schemaScoresRequest","from_date_played","limit","offset","score_types","statuses","to_date_played","z21","schemaNumberOrDash","schemaFloatOrDash","parseFloat","schemaScoresResponse","average","highest_score","lowest_score","total_count","searchParameters","GOLFER_ID","SOURCE","GhinClient","httpClient","handicaps","getCountries","coursesGetCountries","bind","getDetails","courseGetDetails","courseSearch","getOne","handicapsGetOne","getCoursePlayerHandicaps","handicapsGetCoursePlayerHandicaps","golfersGetOne","getScores","golfersGetScores","golfersSearch","URLSearchParams","request","validRequest","key","Object","entries","set","ZodError","ghinNumber","_ref6","courseHandicapRequest","params","searchDefaults","find","Array","isArray","v","append","toISOString"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/ghin/dist/index.js"],"sourcesContent":["// src/client/ghin/index.ts\nimport { z as z22 } from \"zod\";\n\n// src/errors/index.ts\nvar GhinError = class extends Error {\n  code;\n  statusCode;\n  cause;\n  constructor(message, code, statusCode, cause) {\n    super(message);\n    this.name = \"GhinError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.cause = cause;\n  }\n};\nvar AuthenticationError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"AUTHENTICATION_ERROR\", statusCode, cause);\n    this.name = \"AuthenticationError\";\n  }\n};\nvar NetworkError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"NETWORK_ERROR\", statusCode, cause);\n    this.name = \"NetworkError\";\n  }\n};\nvar ValidationError = class extends GhinError {\n  field;\n  constructor(message, field, cause) {\n    super(message, \"VALIDATION_ERROR\", void 0, cause);\n    this.name = \"ValidationError\";\n    this.field = field;\n  }\n};\nvar RateLimitError = class extends GhinError {\n  retryAfter;\n  constructor(message, retryAfter, cause) {\n    super(message, \"RATE_LIMIT_ERROR\", 429, cause);\n    this.name = \"RateLimitError\";\n    this.retryAfter = retryAfter;\n  }\n};\nvar ConfigurationError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CONFIGURATION_ERROR\", void 0, cause);\n    this.name = \"ConfigurationError\";\n  }\n};\nvar CacheError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CACHE_ERROR\", void 0, cause);\n    this.name = \"CacheError\";\n  }\n};\n\n// src/models/cache-client.ts\nimport { z } from \"zod\";\nvar schemaStringOrUndefined = z.union([z.string(), z.undefined()]);\nvar schemaPromiseOrNonPromiseStringOrUndefined = z.union([\n  z.promise(schemaStringOrUndefined),\n  schemaStringOrUndefined\n]);\nvar schemaPromiseOrNonPromiseVoid = z.union([z.promise(z.void()), z.void()]);\nvar schemaCacheClient = z.object({\n  read: z.function().args().returns(schemaPromiseOrNonPromiseStringOrUndefined),\n  write: z.function().args(z.string()).returns(schemaPromiseOrNonPromiseVoid)\n});\n\n// src/models/client-config.ts\nimport { z as z3 } from \"zod\";\n\n// src/models/validation.ts\nimport { z as z2 } from \"zod\";\nvar boolean = z2.union([z2.boolean(), z2.literal(\"true\"), z2.literal(\"false\"), z2.null()]).transform((value) => value === true || value === \"true\");\nvar date = z2.union([z2.date(), z2.string()]).refine((value) => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform((value) => value ? new Date(value) : void 0);\nvar emptyString = z2.string().trim();\nvar emptyStringToNull = emptyString.nullable().transform((value) => value || null);\nvar float = z2.coerce.number();\nvar gender = z2.enum([\"M\", \"F\"]);\nvar handicap = z2.union([float, z2.string(), z2.null()]).refine((value) => {\n  if (typeof value === \"number\") {\n    return true;\n  }\n  if (typeof value === \"string\" && value === \"NH\") {\n    return true;\n  }\n  return false;\n}).transform((value) => {\n  if (value === \"NH\") {\n    return null;\n  }\n  return value;\n});\nvar number = float.int();\nvar string = emptyString.min(1);\nvar monthDay = string.or(emptyString).transform((value) => {\n  if (!value) {\n    return null;\n  }\n  const [month, day] = value.split(\"/\");\n  return `${month?.toString().padStart(2, \"0\")}-${day?.toString().padStart(2, \"0\")}`;\n});\nvar shortDate = z2.union([z2.date(), z2.string(), z2.null()]).refine((value) => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform((value) => {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const [year, month, day] = value.split(\"-\");\n  return /* @__PURE__ */ new Date(`${year}-${month}-${day}T00:00Z`);\n});\n\n// src/models/client-config.ts\nvar schemaClientConfig = z3.object({\n  cache: schemaCacheClient.optional(),\n  password: string,\n  username: string\n});\n\n// src/client/in-memory-cache-client/index.ts\nvar InMemoryCacheClient = class {\n  value = void 0;\n  async read() {\n    return this.value;\n  }\n  async write(value) {\n    this.value = value;\n  }\n};\n\n// src/client/request-client/index.ts\nimport { Mutex } from \"async-mutex\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { err as err2, ok as ok2 } from \"neverthrow\";\n\n// src/utils/retry.ts\nimport { err, ok } from \"neverthrow\";\nvar DEFAULT_RETRY_CONFIG = {\n  maxAttempts: 3,\n  baseDelay: 1e3,\n  // 1 second\n  maxDelay: 1e4,\n  // 10 seconds\n  backoffMultiplier: 2,\n  retryableStatusCodes: [408, 429, 500, 502, 503, 504]\n};\nfunction isRetryableError(error) {\n  if (error instanceof NetworkError) {\n    return error.statusCode ? DEFAULT_RETRY_CONFIG.retryableStatusCodes.includes(error.statusCode) : true;\n  }\n  if (error instanceof RateLimitError) {\n    return true;\n  }\n  return false;\n}\nfunction calculateDelay(attempt, config) {\n  const delay = config.baseDelay * config.backoffMultiplier ** (attempt - 1);\n  return Math.min(delay, config.maxDelay);\n}\nasync function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\nasync function withRetry(operation, config = {}) {\n  const finalConfig = { ...DEFAULT_RETRY_CONFIG, ...config };\n  for (let attempt = 1; attempt <= finalConfig.maxAttempts; attempt++) {\n    const result = await operation();\n    if (result.isOk()) {\n      return result;\n    }\n    const error = result.error;\n    if (attempt === finalConfig.maxAttempts) {\n      return result;\n    }\n    if (!isRetryableError(error)) {\n      return result;\n    }\n    const delay = calculateDelay(attempt, finalConfig);\n    const jitter = Math.random() * 0.1 * delay;\n    const totalDelay = delay + jitter;\n    await sleep(totalDelay);\n  }\n  return err(new Error(\"Retry exhausted\"));\n}\n\n// src/client/request-client/models/access-token.ts\nimport { z as z4 } from \"zod\";\nvar schemaAccessToken = z4.object({\n  expiresIn: string,\n  token: string\n}).transform(({ expiresIn: tmpExpiresIn, ...values }) => {\n  const now = /* @__PURE__ */ new Date();\n  const secondsUntilExpiry = Number(tmpExpiresIn.replace(/[^0-9]/g, \"\"));\n  const millisecondsUntilExpiry = secondsUntilExpiry * 1e3;\n  const expiresIn = new Date(now.getTime() + millisecondsUntilExpiry);\n  return {\n    ...values,\n    expiresIn\n  };\n});\n\n// src/client/request-client/models/client-config.ts\nimport { z as z5 } from \"zod\";\nvar schemaClientConfig2 = z5.object({\n  cache: schemaCacheClient,\n  password: string,\n  username: string\n});\n\n// src/client/request-client/models/session.ts\nimport { z as z6 } from \"zod\";\nvar schemaSession = z6.object({\n  appId: string,\n  authVersion: string,\n  fid: string,\n  sdkVersion: string\n});\nvar schemaSessionResponse = z6.object({\n  authToken: schemaAccessToken\n});\n\n// src/client/request-client/models/login.ts\nimport { z as z7 } from \"zod\";\nvar schemaLoginResponse = z7.object({\n  golfer_user: z7.object({\n    golfer_user_token: string\n  })\n});\n\n// src/client/request-client/index.ts\nvar FIREBASE_SESSION_URL = new URL(\n  \"https://firebaseinstallations.googleapis.com/v1/projects/ghin-mobile-app/installations\"\n);\nvar GOOGLE_API_KEY = \"AIzaSyBxgTOAWxiud0HuaE5tN-5NTlzFnrtyz-I\";\nvar DEFAULT_USER_AGENT = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36\";\nvar CLIENT_SOURCE = \"GHINcom\";\nvar SESSION_DEFAULTS = {\n  appId: \"1:884417644529:web:47fb315bc6c70242f72650\",\n  authVersion: \"FIS_v2\",\n  fid: \"fg6JfS0U01YmrelthLX9Iz\",\n  sdkVersion: \"w:0.5.7\"\n};\nvar FETCH_HEADER_DEFAULTS = {\n  \"Content-Type\": \"application/json\",\n  \"User-Agent\": DEFAULT_USER_AGENT\n};\nvar apiPathnames = {\n  course_countries: \"/get_countries_and_states.json\",\n  course_details: \"/crsCourseMethods.asmx/GetCourseDetails.json\",\n  course_handicaps: \"/playing_handicaps.json\",\n  course_search: \"/crsCourseMethods.asmx/SearchCourses.json\",\n  golfer: \"/search_golfer.json\",\n  golfers_search: \"/golfers.json\",\n  login: \"/golfer_login.json\",\n  scores: \"/scores.json\"\n};\nvar toFullApiUrl = (baseUrl, pathname) => new URL(`${baseUrl.pathname}${apiPathnames[pathname]}`, baseUrl);\nvar makeAuthHeaders = (accessToken) => ({\n  Authorization: `Bearer ${accessToken}`\n});\nvar RequestClient = class {\n  accessToken;\n  apiVersion = \"v1\";\n  config;\n  baseUrl = new URL(`https://api2.ghin.com/api/${this.apiVersion}`);\n  lock;\n  sessionToken;\n  constructor(config) {\n    const results = schemaClientConfig2.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid RequestClientConfig: ${results.error.message}`);\n    }\n    this.lock = new Mutex();\n    this.config = schemaClientConfig2.parse(results.data);\n  }\n  async _fetch({\n    options,\n    schema,\n    url\n  }) {\n    try {\n      const response = await fetch(url.toString(), options);\n      if (!response.ok || response.status >= 400) {\n        let body;\n        try {\n          body = await response.json();\n        } catch {\n          body = await response.text();\n        }\n        if (response.status === 401 || response.status === 403) {\n          return err2(\n            new AuthenticationError(\n              `Authentication failed: ${response.status} ${response.statusText}`,\n              response.status,\n              new Error(JSON.stringify(body))\n            )\n          );\n        }\n        if (response.status === 429) {\n          const retryAfter = response.headers.get(\"Retry-After\");\n          const retryAfterSeconds = retryAfter ? Number.parseInt(retryAfter, 10) : void 0;\n          return err2(\n            new RateLimitError(\n              `Rate limit exceeded: ${response.status} ${response.statusText}`,\n              retryAfterSeconds,\n              new Error(JSON.stringify(body))\n            )\n          );\n        }\n        if (response.status >= 500) {\n          return err2(\n            new NetworkError(\n              `Server error: ${response.status} ${response.statusText}`,\n              response.status,\n              new Error(JSON.stringify(body))\n            )\n          );\n        }\n        return err2(\n          new NetworkError(\n            `Request failed: ${response.status} ${response.statusText}`,\n            response.status,\n            new Error(JSON.stringify(body))\n          )\n        );\n      }\n      const raw = await response.json();\n      const parsed = schema.safeParse(raw);\n      if (!parsed.success) {\n        return err2(\n          new ValidationError(\n            `Response validation failed: ${JSON.stringify(parsed.error)}`,\n            void 0,\n            new Error(`URL: ${url.toString()}`)\n          )\n        );\n      }\n      return ok2(parsed.data);\n    } catch (error) {\n      if (error instanceof Error) {\n        return err2(new NetworkError(`Network request failed: ${error.message}`, void 0, error));\n      }\n      return err2(new NetworkError(`Unknown network error: ${String(error)}`));\n    }\n  }\n  async refreshSessionToken() {\n    const url = new URL(FIREBASE_SESSION_URL);\n    const body = JSON.stringify(SESSION_DEFAULTS);\n    const result = await this._fetch({\n      options: {\n        body,\n        headers: {\n          ...FETCH_HEADER_DEFAULTS,\n          \"x-goog-api-key\": GOOGLE_API_KEY\n        },\n        method: \"POST\"\n      },\n      schema: schemaSessionResponse,\n      url\n    });\n    return result.map((response) => response.authToken);\n  }\n  isAccessTokenValid(accessToken) {\n    if (!accessToken) {\n      return false;\n    }\n    try {\n      const decoded = jwtDecode(accessToken);\n      const expirationDate = new Date(decoded.exp * 1e3);\n      return expirationDate > /* @__PURE__ */ new Date();\n    } catch {\n      return false;\n    }\n  }\n  async getAccessToken() {\n    const isAccessTokenValid = this.isAccessTokenValid(this.accessToken);\n    if (isAccessTokenValid) {\n      return ok2(this.accessToken);\n    }\n    try {\n      const cachedAccessToken = await this.config.cache.read();\n      const isCachedTokenValid = this.isAccessTokenValid(cachedAccessToken);\n      if (isCachedTokenValid) {\n        this.accessToken = cachedAccessToken;\n        return ok2(cachedAccessToken);\n      }\n    } catch (error) {\n      return err2(\n        new CacheError(\n          `Failed to read from cache: ${error instanceof Error ? error.message : String(error)}`,\n          error instanceof Error ? error : void 0\n        )\n      );\n    }\n    const refreshResult = await this.refreshAccessToken();\n    if (refreshResult.isErr()) {\n      return refreshResult;\n    }\n    const accessToken = refreshResult.value;\n    this.accessToken = accessToken;\n    try {\n      await this.config.cache.write(accessToken);\n    } catch (error) {\n      return err2(\n        new CacheError(\n          `Failed to write to cache: ${error instanceof Error ? error.message : String(error)}`,\n          error instanceof Error ? error : void 0\n        )\n      );\n    }\n    return ok2(accessToken);\n  }\n  async refreshAccessToken() {\n    const sessionResult = await this.refreshSessionToken();\n    if (sessionResult.isErr()) {\n      return err2(sessionResult.error);\n    }\n    this.sessionToken = sessionResult.value;\n    const url = toFullApiUrl(this.baseUrl, \"login\");\n    const body = JSON.stringify({\n      token: this.sessionToken.token,\n      user: {\n        email_or_ghin: this.config.username,\n        password: this.config.password\n      }\n    });\n    const response = await this._fetch({\n      options: {\n        body,\n        headers: FETCH_HEADER_DEFAULTS,\n        method: \"POST\"\n      },\n      schema: schemaLoginResponse,\n      url\n    });\n    return response.map((resp) => resp?.golfer_user?.golfer_user_token);\n  }\n  async fetch({\n    entity,\n    schema,\n    options = {}\n  }) {\n    const accessTokenResult = await this.lock.runExclusive(async () => this.getAccessToken());\n    if (accessTokenResult.isErr()) {\n      return err2(accessTokenResult.error);\n    }\n    const accessToken = accessTokenResult.value;\n    const url = toFullApiUrl(this.baseUrl, entity);\n    const { headers, searchParams, ...requestInitOptions } = options;\n    const actualOptions = {\n      ...requestInitOptions,\n      headers: { ...FETCH_HEADER_DEFAULTS, source: CLIENT_SOURCE, ...makeAuthHeaders(accessToken), ...headers }\n    };\n    if (searchParams) {\n      url.search = searchParams.toString();\n    }\n    return withRetry(() => this._fetch({ options: actualOptions, schema, url }));\n  }\n};\n\n// src/client/ghin/models/course/country.ts\nimport { z as z8 } from \"zod\";\nvar FOREIGN_COUNTRY_CODE = \"Fo\";\nvar schemaCourseCountryCode = string.refine((value) => {\n  if (value === FOREIGN_COUNTRY_CODE) {\n    return true;\n  }\n  return /^[A-Z]{3}$/.test(value);\n}, 'Invalid country code. Expected format: ISO 3166-1 alpha-3 code or \"Fo\" for foreign countries');\nvar schemaCourseCountryState = z8.object({\n  code: string,\n  //schemaCourseCountryCode,\n  course_code: string,\n  //schemaCourseCountryCode.nullable(),\n  name: string\n});\nvar schemaCourseCountry = z8.object({\n  code: string,\n  crs_code: z8.string().trim().transform((value) => value || null).nullable(),\n  name: string,\n  states: z8.array(schemaCourseCountryState)\n});\n\n// src/client/ghin/models/course/request.ts\nimport { z as z9 } from \"zod\";\n\n// src/client/ghin/models/course/state.ts\nvar FOREIGN_STATE_CODE = \"*F\";\nvar courseStateCodeRegex = /^[A-Z]{1,2}-[A-Z*0-9]{1,4}$/;\nvar schemaCourseSearchState = string.refine(\n  (value) => {\n    if (value === FOREIGN_STATE_CODE) {\n      return true;\n    }\n    return courseStateCodeRegex.test(value);\n  },\n  {\n    message: \"Invalid state code format. Expected format: US-OH, LC-01, MX-*A, or *F\"\n  }\n);\n\n// src/client/ghin/models/course/request.ts\nvar schemaCourseSearchRequest = z9.object({\n  country: schemaCourseCountryCode.optional(),\n  facility_id: number.optional(),\n  name: string.optional(),\n  state: schemaCourseSearchState.optional(),\n  updated_at: date.optional()\n}).refine(\n  ({ country, state, facility_id, updated_at }) => {\n    switch (true) {\n      case Boolean(country && state):\n        return true;\n      case Boolean(facility_id):\n        return true;\n      case Boolean(updated_at):\n        return true;\n      default:\n        return false;\n    }\n  },\n  {\n    message: \"At least one of the following are required: country + state, facility_id, or updated_at must be provided\"\n  }\n);\nvar schemaCourseDetailsRequest = z9.object({\n  course_id: number,\n  include_altered_tees: boolean.optional()\n}).transform((data) => ({\n  ...data,\n  include_altered_tees: data.include_altered_tees ?? false\n}));\n\n// src/client/ghin/models/course/response.ts\nimport { z as z11 } from \"zod\";\n\n// src/client/ghin/models/course/course.ts\nimport { z as z10 } from \"zod\";\n\n// src/client/ghin/models/course/geolocation.ts\nvar schemaGeoCoordinate = float.transform((value) => value ? value : null).nullable();\n\n// src/client/ghin/models/course/course.ts\nvar schemaStatus = string.transform((value) => value.toUpperCase()).pipe(z10.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourse = z10.object({\n  Address1: string.nullable(),\n  Address2: string.nullable(),\n  City: string.nullable(),\n  Country: string.nullable(),\n  CourseID: number,\n  CourseName: string,\n  CourseStatus: schemaStatus,\n  Email: string.email().nullable(),\n  EntCountryCode: number.nullable(),\n  EntStateCode: number.nullable(),\n  FacilityID: number,\n  FacilityName: string,\n  FacilityStatus: schemaStatus,\n  FullName: string,\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  LegacyCRPCourseId: number.nullable(),\n  Ratings: z10.array(z10.unknown()),\n  State: string.nullable(),\n  Telephone: string.nullable(),\n  UpdatedOn: shortDate.nullable(),\n  Zip: z10.string().trim().transform((zip) => zip?.trim() || null).nullable().or(z10.array(z10.unknown()))\n});\n\n// src/client/ghin/models/course/response.ts\nvar schemaStatus2 = string.transform((value) => value.toUpperCase()).pipe(z11.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourseCountriesResponse = z11.object({\n  countries: z11.array(schemaCourseCountry.passthrough())\n});\nvar schemaCourseSearchResponse = z11.object({\n  courses: z11.array(schemaCourse.passthrough())\n});\nvar schemaCourseDetailsFacility = z11.object({\n  FacilityId: number,\n  FacilityName: string,\n  FacilityNumber: number.nullable(),\n  FacilityStatus: string,\n  GeoLocationFormattedAddress: string.nullable(),\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  GolfAssociationId: number.nullable()\n});\nvar schemaCourseDetailsSeason = z11.object({\n  IsAllYear: boolean,\n  SeasonEndDate: monthDay.nullable(),\n  SeasonName: string,\n  SeasonStartDate: monthDay.nullable()\n});\nvar schemaCourseDetailsTeeSetRatings = z11.object({\n  BogeyRating: float,\n  CourseRating: float,\n  RatingType: z11.enum([\"Front\", \"Back\", \"Total\"]),\n  SlopeRating: float\n});\nvar schemaCourseDetailsTeeSetHole = z11.object({\n  Allocation: number,\n  HoleId: number,\n  Length: number,\n  Number: number,\n  Par: number\n});\nvar schemaCourseDetailsTeeSet = z11.object({\n  EligibleSides: z11.unknown(),\n  Gender: z11.enum([\"Male\", \"Female\", \"Mixed\"]).nullable(),\n  Holes: z11.array(schemaCourseDetailsTeeSetHole),\n  HolesNumber: number,\n  IsShorter: boolean.nullable(),\n  LegacyCRPTeeId: number,\n  Ratings: z11.array(schemaCourseDetailsTeeSetRatings),\n  StrokeAllocation: boolean,\n  TeeSetRatingId: number,\n  TeeSetRatingName: string,\n  TotalMeters: number,\n  TotalPar: number,\n  TotalYardage: number\n});\nvar schemaCourseDetailsResponse = z11.object({\n  CourseCity: string,\n  CourseId: number,\n  CourseName: string,\n  CourseNumber: number.nullable(),\n  CourseState: schemaCourseSearchState,\n  CourseStatus: schemaStatus2,\n  Facility: schemaCourseDetailsFacility,\n  Season: schemaCourseDetailsSeason,\n  TeeSets: z11.array(schemaCourseDetailsTeeSet)\n});\n\n// src/client/ghin/models/golfers/search.ts\nimport { z as z12 } from \"zod\";\nvar schemaGolferStatus = z12.enum([\"Active\", \"Inactive\"]).transform((value) => value.toUpperCase());\nvar schemaGolferSearchRequest = z12.object({\n  country: string.transform((value) => value?.toUpperCase()),\n  first_name: string,\n  from_ghin: boolean,\n  ghin: number,\n  last_name: string.optional(),\n  order: z12.enum([\"asc\", \"desc\"]),\n  page: number,\n  per_page: number.max(100),\n  sorting_criteria: z12.enum([\"country\", \"full_name\", \"handicap_index\", \"state\", \"status\"]),\n  state: string.transform((value) => value?.toUpperCase()),\n  status: schemaGolferStatus\n}).partial();\nvar schemaGolfer = z12.object({\n  ghin: number,\n  first_name: string,\n  last_name: string,\n  association_id: number,\n  association_name: string,\n  handicap_index: handicap,\n  club_affiliation_id: number,\n  club_id: number,\n  club_name: emptyStringToNull,\n  country: emptyStringToNull,\n  entitlement: boolean,\n  gender,\n  hard_cap: boolean,\n  has_digital_profile: boolean,\n  hi_display: string,\n  hi_value: handicap,\n  is_home_club: boolean,\n  low_hi_date: date.nullable(),\n  low_hi_display: string,\n  low_hi_value: handicap,\n  low_hi: handicap,\n  message_club_authorized: string.nullable(),\n  middle_name: emptyStringToNull.nullable().optional(),\n  phone_number: emptyStringToNull.nullable().optional(),\n  prefix: emptyStringToNull.optional(),\n  rev_date: date.nullable(),\n  soft_cap: boolean,\n  state: emptyStringToNull,\n  status: z12.enum([\"Active\", \"Inactive\"]),\n  suffix: emptyStringToNull.optional()\n});\nvar schemaGolferSearchResponse = z12.object({\n  golfers: z12.array(schemaGolfer)\n});\n\n// src/client/ghin/models/handicaps/course-player-handicap.ts\nimport { z as z13 } from \"zod\";\nvar schemaPlayerCourseHandicap = z13.object({\n  playing_handicap: number,\n  playing_handicap_display: string,\n  shots_off: number\n});\nvar schemaCoursePercentPlayerHandicap = z13.record(string, schemaPlayerCourseHandicap);\n\n// src/client/ghin/models/handicaps/request.ts\nimport { z as z14 } from \"zod\";\nvar schemaTeeSetSide = z14.enum([\"All 18\", \"F9\", \"B9\"]);\nvar schemaGolferCourseHandicapBaseRequest = z14.object({\n  ghin: number.optional(),\n  handicap_index: number.optional(),\n  tee_set_id: number,\n  tee_set_side: schemaTeeSetSide\n});\nvar schemaGolferCourseHandicapRequest = schemaGolferCourseHandicapBaseRequest.refine(({ ghin, handicap_index }) => {\n  if (ghin && handicap_index) {\n    throw new Error(\"Cannot provide both ghin and handicap_index\");\n  }\n  if (!Number.isSafeInteger(ghin) && !Number.isSafeInteger(handicap_index)) {\n    throw new Error(\"Must provide either ghin or handicap_index\");\n  }\n  return true;\n});\nvar schemaCourseHandicapsRequest = z14.object({\n  golfers: z14.array(\n    schemaGolferCourseHandicapBaseRequest.omit({\n      ghin: true\n    }).extend({\n      golfer_id: number.optional()\n    })\n  ),\n  source: z14.literal(CLIENT_SOURCE).default(CLIENT_SOURCE).optional()\n});\n\n// src/client/ghin/models/handicaps/response.ts\nimport { z as z15 } from \"zod\";\nvar schemaGolferHandicapClub = z15.object({\n  active: boolean,\n  association_id: number,\n  club_name: string,\n  id: number\n});\nvar schemaGolferHandicapResponse = z15.object({\n  golfer: z15.object({\n    clubs: z15.array(schemaGolferHandicapClub),\n    handicap_index: handicap\n  })\n}).passthrough();\nvar schemaCoursePlayerHandicapsResponse = z15.object({\n  100: schemaCoursePercentPlayerHandicap,\n  95: schemaCoursePercentPlayerHandicap,\n  90: schemaCoursePercentPlayerHandicap,\n  85: schemaCoursePercentPlayerHandicap,\n  80: schemaCoursePercentPlayerHandicap,\n  75: schemaCoursePercentPlayerHandicap,\n  70: schemaCoursePercentPlayerHandicap,\n  65: schemaCoursePercentPlayerHandicap,\n  60: schemaCoursePercentPlayerHandicap,\n  55: schemaCoursePercentPlayerHandicap,\n  50: schemaCoursePercentPlayerHandicap,\n  45: schemaCoursePercentPlayerHandicap,\n  40: schemaCoursePercentPlayerHandicap,\n  35: schemaCoursePercentPlayerHandicap,\n  30: schemaCoursePercentPlayerHandicap,\n  25: schemaCoursePercentPlayerHandicap,\n  20: schemaCoursePercentPlayerHandicap,\n  15: schemaCoursePercentPlayerHandicap,\n  10: schemaCoursePercentPlayerHandicap,\n  5: schemaCoursePercentPlayerHandicap\n});\n\n// src/client/ghin/models/scores/adjustment.ts\nimport { z as z16 } from \"zod\";\nvar schemaScoringAdjustment = z16.object({\n  display: string,\n  type: string,\n  value: float\n});\n\n// src/client/ghin/models/scores/hole-detail.ts\nimport { z as z17 } from \"zod\";\nvar schemaHoleDetail = z17.object({\n  adjusted_gross_score: number,\n  approach_shot_accuracy: float.nullable().default(0),\n  drive_accuracy: float.nullable(),\n  fairway_hit: boolean.nullable(),\n  gir_flag: z17.any(),\n  hole_number: number,\n  id: number,\n  most_likely_score: number.nullable(),\n  par: number,\n  putts: number.nullable(),\n  raw_score: number,\n  stroke_allocation: number,\n  x_hole: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nimport { z as z20 } from \"zod\";\n\n// src/client/ghin/models/scores/score.ts\nimport { z as z19 } from \"zod\";\n\n// src/client/ghin/models/scores/statistics.ts\nimport { z as z18 } from \"zod\";\nvar schemaStatistics = z18.object({\n  birdies_or_better_percent: float,\n  bogeys_percent: float,\n  double_bogeys_percent: float,\n  fairway_hits_percent: float,\n  gir_percent: float,\n  last_stats_update_date: date,\n  last_stats_update_type: emptyStringToNull,\n  missed_general_approach_shot_accuracy_percent: float,\n  missed_left_approach_shot_accuracy_percent: float,\n  missed_left_percent: float,\n  missed_long_approach_shot_accuracy_percent: float,\n  missed_long_percent: float,\n  missed_right_approach_shot_accuracy_percent: float,\n  missed_right_percent: float,\n  missed_short_approach_shot_accuracy_percent: float,\n  missed_short_percent: float,\n  one_putt_or_better_percent: float,\n  par3s_average: float,\n  par4s_average: float,\n  par5s_average: float,\n  pars_percent: float,\n  putts_total: number,\n  three_putt_or_worse_percent: float,\n  triple_bogeys_or_worse_percent: float,\n  two_putt_or_better_percent: float,\n  two_putt_percent: float,\n  up_and_downs_total: number\n});\n\n// src/client/ghin/models/scores/score.ts\nvar rawScoreTypes = [\"A\", \"C\", \"E\", \"H\", \"N\", \"P\", \"T\"];\nvar schemaRawScoreTypes = z19.enum(rawScoreTypes);\nvar scoreTypes = [\"AWAY\", \"COMPETITION\", \"EXCEPTIONAL\", \"HOME\", \"9_HOLE_ROUNDS\", \"PENALTY\", \"TOURNAMENT\"];\nvar schemaScoreType = z19.enum(scoreTypes);\nvar scoreTypesMap = {\n  A: \"AWAY\",\n  C: \"COMPETITION\",\n  E: \"EXCEPTIONAL\",\n  H: \"HOME\",\n  N: \"9_HOLE_ROUNDS\",\n  P: \"PENALTY\",\n  T: \"TOURNAMENT\"\n};\nvar schemaScoreTypeWithTransform = schemaRawScoreTypes.transform(\n  (value) => scoreTypesMap[value]\n);\nvar scoreStatuses = [\"VALIDATED\", \"UNDER_REVIEW\"];\nvar schemaScoreStatus = z19.enum(scoreStatuses);\nvar rawScoreStatuses = [\"Validated\", \"UnderReview\"];\nvar schemaRawScoreStatus = z19.enum(rawScoreStatuses);\nvar scoreStatusesMap = {\n  Validated: \"VALIDATED\",\n  UnderReview: \"UNDER_REVIEW\"\n};\nvar schemaScoreStatusWithTransform = schemaRawScoreStatus.transform(\n  (value) => scoreStatusesMap[value]\n);\nvar schemaScore = z19.object({\n  adjusted_gross_score: number,\n  adjustments: z19.array(schemaScoringAdjustment),\n  back9_adjusted: number.nullable(),\n  back9_course_rating: float.nullable(),\n  back9_slope_rating: float.nullable(),\n  course_rating: float,\n  differential: float,\n  edited: boolean,\n  exceptional: boolean,\n  front9_adjusted: number.nullable(),\n  front9_course_rating: float.nullable(),\n  front9_slope_rating: float.nullable(),\n  gender,\n  golfer_id: number,\n  hole_details: z19.array(schemaHoleDetail),\n  id: number,\n  is_manual: boolean,\n  is_recent: boolean,\n  message_club_authorized: string.nullable(),\n  net_score_differential: float.nullable(),\n  number_of_holes: number,\n  number_of_played_holes: number,\n  order_number: number,\n  parent_id: number.nullable(),\n  pcc: float,\n  penalty_method: string.nullable(),\n  penalty_type: string.nullable(),\n  penalty: boolean.optional(),\n  played_at: date,\n  posted_at: date,\n  revision: boolean,\n  score_day_order: number,\n  score_type_display_full: string,\n  score_type_display_short: string,\n  score_type: schemaScoreTypeWithTransform,\n  season_end_date_at: monthDay,\n  season_start_date_at: monthDay,\n  slope_rating: float,\n  statistics: schemaStatistics.nullable().optional(),\n  status: schemaScoreStatusWithTransform,\n  unadjusted_differential: float,\n  used: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nvar schemaScoresRequest = z20.object({\n  course_id: number,\n  from_date_played: date,\n  limit: number.default(100),\n  offset: number.default(0),\n  score_types: z20.array(z20.enum(rawScoreTypes)),\n  statuses: z20.array(string),\n  tee_set_id: number,\n  to_date_played: date\n}).partial().default({}).optional();\n\n// src/client/ghin/models/scores/response.ts\nimport { z as z21 } from \"zod\";\nvar schemaNumberOrDash = z21.union([number, z21.literal(\"-\")]).transform((value) => value === \"-\" ? null : Number(value));\nvar schemaFloatOrDash = z21.union([float, z21.literal(\"-\")]).transform((value) => value === \"-\" ? null : Number.parseFloat(value.toString()));\nvar schemaScoresResponse = z21.object({\n  average: schemaFloatOrDash.default(0),\n  highest_score: schemaNumberOrDash,\n  lowest_score: schemaNumberOrDash,\n  scores: z21.array(schemaScore),\n  total_count: schemaNumberOrDash.default(0)\n});\n\n// src/client/ghin/index.ts\nvar searchParameters = {\n  GOLFER_ID: \"golfer_id\",\n  SOURCE: \"source\"\n};\nvar GhinClient = class {\n  httpClient;\n  courses;\n  golfers;\n  handicaps;\n  constructor(config) {\n    const results = schemaClientConfig.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid GhinClientConfig: ${results.error.message}`);\n    }\n    this.httpClient = new RequestClient({\n      ...results.data,\n      cache: results.data.cache ?? new InMemoryCacheClient()\n    });\n    this.courses = {\n      getCountries: this.coursesGetCountries.bind(this),\n      getDetails: this.courseGetDetails.bind(this),\n      search: this.courseSearch.bind(this)\n    };\n    this.handicaps = {\n      getOne: this.handicapsGetOne.bind(this),\n      getCoursePlayerHandicaps: this.handicapsGetCoursePlayerHandicaps.bind(this)\n    };\n    this.golfers = {\n      getOne: this.golfersGetOne.bind(this),\n      getScores: this.golfersGetScores.bind(this),\n      search: this.golfersSearch.bind(this)\n    };\n  }\n  async coursesGetCountries() {\n    try {\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const options = { searchParams };\n      const result = await this.httpClient.fetch({\n        entity: \"course_countries\",\n        options,\n        schema: schemaCourseCountriesResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.countries;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseGetDetails(request) {\n    try {\n      const validRequest = schemaCourseDetailsRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = { searchParams };\n      const result = await this.httpClient.fetch({\n        entity: \"course_details\",\n        options,\n        schema: schemaCourseDetailsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course details request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseSearch(request) {\n    try {\n      const validRequest = schemaCourseSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = { searchParams };\n      const result = await this.httpClient.fetch({\n        entity: \"course_search\",\n        options,\n        schema: schemaCourseSearchResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.courses;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetOne(ghin) {\n    try {\n      const ghinNumber = number.parse(ghin);\n      const searchParams = new URLSearchParams([\n        [\"source\", CLIENT_SOURCE],\n        [\"ghin\", ghinNumber.toString()]\n      ]);\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfer\",\n        options,\n        schema: schemaGolferHandicapResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfer;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetCoursePlayerHandicaps(request) {\n    try {\n      const golfers = z22.array(schemaGolferCourseHandicapRequest).parse(request).map(({ ghin, ...golfer }) => ({\n        ...golfer,\n        [searchParameters.GOLFER_ID]: ghin\n      }));\n      const searchParams = new URLSearchParams();\n      const courseHandicapRequest = {\n        golfers,\n        source: CLIENT_SOURCE\n      };\n      const options = {\n        body: JSON.stringify(courseHandicapRequest),\n        method: \"POST\",\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_handicaps\",\n        options,\n        schema: schemaCoursePlayerHandicapsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course handicap request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersSearch(request) {\n    try {\n      const { ghin, ...params } = schemaGolferSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const searchDefaults = {\n        from_ghin: true,\n        per_page: 25,\n        sorting_criteria: \"full_name\",\n        order: \"asc\",\n        page: 1\n      };\n      for (const [key, value] of Object.entries(searchDefaults)) {\n        searchParams.set(key, value.toString());\n      }\n      if (ghin) {\n        searchParams.set(searchParameters.GOLFER_ID, ghin.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfers_search\",\n        schema: schemaGolferSearchResponse,\n        options\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfers;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid golfer search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetOne(ghinNumber) {\n    try {\n      const ghin = number.parse(ghinNumber);\n      const results = await this.golfersSearch({ ghin, status: \"Active\" });\n      return results.find((golfer) => golfer.status === \"Active\");\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetScores(ghinNumber, request) {\n    try {\n      const validRequest = schemaScoresRequest.parse(request) ?? {};\n      const ghin = number.parse(ghinNumber);\n      const searchParams = new URLSearchParams([\n        [searchParameters.GOLFER_ID, ghin.toString()],\n        [\"source\", CLIENT_SOURCE]\n      ]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        if (value === null) {\n          continue;\n        }\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            searchParams.append(key, v.toString());\n          }\n          continue;\n        }\n        if (typeof value === \"object\" && value instanceof Date) {\n          searchParams.set(key, value.toISOString().split(\"T\")[0]);\n          continue;\n        }\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"scores\",\n        options,\n        schema: schemaScoresResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid scores request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n};\nexport {\n  GhinClient\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./.code/agents/1/exec-call_lmaGajgVnK37auksouScRpzT.txt:7568:frontend/node_modules/.cache/babel-loader/c94fb4e30421399b08397851d996084ad731b8cb61a5f9e68df1f16395257a7c.json:1:{"ast":null,"code":"// @ts-nocheck\nimport React,{useState,useEffect}from'react';import{useTheme}from'../../theme/Provider';import{Button,Card,Input,Select}from'../ui';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||\"\";const GameSetup=_ref=>{let{humanPlayer,setHumanPlayer,computerPlayers,setComputerPlayers,selectedCourse,setSelectedCourse,courses,setCourses,personalities=[],setPersonalities,suggestedOpponents=[],setSuggestedOpponents,onStartGame}=_ref;const theme=useTheme();// GHIN lookup modal state\nconst[ghinLookupSlot,setGhinLookupSlot]=useState(null);const[ghinLookupFirstName,setGhinLookupFirstName]=useState(\"\");const[ghinLookupLastName,setGhinLookupLastName]=useState(\"\");const[ghinLookupResults,setGhinLookupResults]=useState([]);const[ghinLookupLoading,setGhinLookupLoading]=useState(false);const[ghinLookupError,setGhinLookupError]=useState(\"\");useEffect(()=>{// Fetch courses with error handling\nfetch(`${API_URL}/courses`).then(res=>{if(!res.ok){throw new Error(`HTTP ${res.status}: ${res.statusText}`);}return res.json();}).then(data=>{if(!data||typeof data!=='object'){throw new Error('Invalid courses data format');}setCourses(data);// Auto-select first course if none selected\nif(!selectedCourse&&Object.keys(data).length>0){setSelectedCourse(Object.keys(data));}}).catch(error=>{console.error('Failed to load courses:',error);// Provide fallback courses so game can still start\nconst fallbackCourses={\"Default Course\":{name:\"Default Course\",holes:Array.from({length:18},(_,i)=>({hole_number:i+1,par:4,yards:400,stroke_index:i+1,description:`Hole ${i+1}`})),total_par:72,total_yards:7200,hole_count:18}};setCourses(fallbackCourses);setSelectedCourse(\"Default Course\");// Show user-friendly error message but don't block the game\nalert('Unable to load courses from server. Using default course to continue the game.');});// Fetch personalities with error handling\nfetch(`${API_URL}/personalities`).then(res=>{if(!res.ok){throw new Error(`HTTP ${res.status}: ${res.statusText}`);}return res.json();}).then(data=>{if(Array.isArray(data)){setPersonalities(data);}else{throw new Error('Invalid personalities data format');}}).catch(error=>{console.error('Failed to load personalities:',error);// Provide fallback personalities\nconst fallbackPersonalities=[{id:'aggressive',name:'Aggressive'},{id:'conservative',name:'Conservative'},{id:'balanced',name:'Balanced'}];setPersonalities(fallbackPersonalities);});// Fetch suggested opponents with error handling\nfetch(`${API_URL}/suggested_opponents`).then(res=>{if(!res.ok){throw new Error(`HTTP ${res.status}: ${res.statusText}`);}return res.json();}).then(data=>{if(Array.isArray(data)){setSuggestedOpponents(data);}else{throw new Error('Invalid suggested opponents data format');}}).catch(error=>{console.error('Failed to load suggested opponents:',error);// Provide fallback suggested opponents\nconst fallbackOpponents=[{name:'Bob',handicap:'12',personality:'aggressive'},{name:'Alice',handicap:'8',personality:'conservative'},{name:'Charlie',handicap:'16',personality:'balanced'}];setSuggestedOpponents(fallbackOpponents);});},[setCourses,setPersonalities,setSuggestedOpponents,selectedCourse,setSelectedCourse]);// Initialize computer players if empty\nuseEffect(()=>{if(computerPlayers.length===0){setComputerPlayers([{id:\"comp1\",name:\"\",handicap:\"\",personality:\"\",is_human:false},{id:\"comp2\",name:\"\",handicap:\"\",personality:\"\",is_human:false},{id:\"comp3\",name:\"\",handicap:\"\",personality:\"\",is_human:false}]);}},[computerPlayers,setComputerPlayers]);const openGhinLookup=slot=>{setGhinLookupSlot(slot);setGhinLookupFirstName(\"\");setGhinLookupLastName(\"\");setGhinLookupResults([]);setGhinLookupLoading(false);setGhinLookupError(\"\");};const closeGhinLookup=()=>{setGhinLookupSlot(null);};const doGhinLookup=async()=>{if(!ghinLookupLastName.trim()){setGhinLookupError(\"Last name required\");return;}setGhinLookupLoading(true);setGhinLookupError(\"\");setGhinLookupResults([]);try{const params=new URLSearchParams({last_name:ghinLookupLastName,first_name:ghinLookupFirstName});const res=await fetch(`${API_URL}/ghin/lookup?${params.toString()}`);if(!res.ok)throw new Error(\"Lookup failed\");const data=await res.json();setGhinLookupResults(data);if(data.length===0)setGhinLookupError(\"No golfers found\");}catch(err){setGhinLookupError(\"Lookup failed\");}finally{setGhinLookupLoading(false);}};const selectGhinGolfer=golfer=>{if(ghinLookupSlot===\"human\"){setHumanPlayer(h=>({...h,name:golfer.name,handicap:golfer.handicap||\"\",is_human:true}));}else{setComputerPlayers(players=>players.map((p,i)=>{const slotId=`comp${i+1}`;return slotId===ghinLookupSlot?{...p,name:golfer.name,handicap:golfer.handicap||\"\",is_human:false}:p;}));}closeGhinLookup();};const loadSuggestedOpponent=(opponentData,index)=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,...opponentData,id:p.id}:p));};const validateAndStartGame=()=>{if(!humanPlayer.name.trim()){alert(\"Please enter your name\");return;}const invalidComputers=computerPlayers.filter(p=>!p.name.trim()||!p.handicap);if(invalidComputers.length>0){alert(\"Please fill in all computer player details\");return;}if(!selectedCourse){alert(\"Please select a course\");return;}onStartGame();};return/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:800,margin:\"0 auto\",padding:20},children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:theme.colors.primary,marginBottom:theme.spacing},children:\"\\uD83C\\uDFAE Wolf Goat Pig Simulation Mode\"}),/*#__PURE__*/_jsx(\"p\",{style:{marginBottom:20},children:\"Practice Wolf Goat Pig against computer opponents! This mode helps you learn the betting strategies and get comfortable with the game mechanics. After each hole, you'll receive educational feedback about your decisions.\"}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Details\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"1fr 1fr\",gap:16},children:[/*#__PURE__*/_jsx(Input,{label:\"Your Name:\",value:humanPlayer.name,onChange:e=>setHumanPlayer({...humanPlayer,name:e.target.value})}),/*#__PURE__*/_jsx(Input,{label:\"Your Handicap:\",type:\"number\",value:humanPlayer.handicap,onChange:e=>setHumanPlayer({...humanPlayer,handicap:e.target.value})})]}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",size:\"small\",onClick:()=>openGhinLookup(\"human\"),style:{marginTop:theme.spacing},children:\"Lookup GHIN Handicap\"}),ghinLookupSlot===\"human\"&&/*#__PURE__*/_jsxs(Card,{variant:\"info\",style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"GHIN Handicap Lookup\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"First Name (optional)\",value:ghinLookupFirstName,onChange:e=>setGhinLookupFirstName(e.target.value)}),/*#__PURE__*/_jsx(Input,{placeholder:\"Last Name (required)\",value:ghinLookupLastName,onChange:e=>setGhinLookupLastName(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:theme.spacing,marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:doGhinLookup,disabled:ghinLookupLoading,children:\"Search\"}),/*#__PURE__*/_jsx(Button,{variant:\"error\",size:\"small\",onClick:closeGhinLookup,children:\"Cancel\"})]}),ghinLookupLoading&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.textSecondary,marginTop:8},children:\"Searching...\"}),ghinLookupError&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.error,marginTop:8},children:ghinLookupError}),ghinLookupResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Results:\"}),ghinLookupResults.map((g,idx)=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:8,border:`1px solid ${theme.colors.border}`,borderRadius:6,marginBottom:4,cursor:\"pointer\",background:theme.colors.paper},onClick:()=>selectGhinGolfer(g),children:[/*#__PURE__*/_jsx(\"strong\",{children:g.name}),\" (H: \",g.handicap,\")\",g.club&&/*#__PURE__*/_jsxs(\"span\",{style:{color:theme.colors.textSecondary},children:[\"@ \",g.club]})]},idx))]})]})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Computer Opponents\"}),computerPlayers.map((player,index)=>/*#__PURE__*/_jsxs(Card,{variant:\"default\",style:{marginBottom:16},children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Computer Player \",index+1]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"1fr 1fr\",gap:16},children:[/*#__PURE__*/_jsx(Input,{label:\"Name:\",value:player.name,onChange:e=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,name:e.target.value}:p));}}),/*#__PURE__*/_jsx(Input,{label:\"Handicap:\",type:\"number\",value:player.handicap,onChange:e=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,handicap:e.target.value}:p));}})]}),/*#__PURE__*/_jsx(Select,{label:\"Personality:\",value:player.personality,onChange:e=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,personality:e.target.value}:p));},options:personalities.map(p=>({value:p.id,label:p.name})),placeholder:\"Select personality...\"}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",size:\"small\",onClick:()=>openGhinLookup(`comp${index+1}`),style:{marginTop:theme.spacing},children:\"Lookup GHIN Handicap\"}),ghinLookupSlot===`comp${index+1}`&&/*#__PURE__*/_jsxs(Card,{variant:\"info\",style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"GHIN Handicap Lookup\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"First Name (optional)\",value:ghinLookupFirstName,onChange:e=>setGhinLookupFirstName(e.target.value)}),/*#__PURE__*/_jsx(Input,{placeholder:\"Last Name (required)\",value:ghinLookupLastName,onChange:e=>setGhinLookupLastName(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:theme.spacing,marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:doGhinLookup,disabled:ghinLookupLoading,children:\"Search\"}),/*#__PURE__*/_jsx(Button,{variant:\"error\",size:\"small\",onClick:closeGhinLookup,children:\"Cancel\"})]}),ghinLookupLoading&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.textSecondary,marginTop:8},children:\"Searching...\"}),ghinLookupError&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.error,marginTop:8},children:ghinLookupError}),ghinLookupResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Results:\"}),ghinLookupResults.map((g,idx)=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:8,border:`1px solid ${theme.colors.border}`,borderRadius:6,marginBottom:4,cursor:\"pointer\",background:theme.colors.paper},onClick:()=>selectGhinGolfer(g),children:[/*#__PURE__*/_jsx(\"strong\",{children:g.name}),\" (H: \",g.handicap,\")\",g.club&&/*#__PURE__*/_jsxs(\"span\",{style:{color:theme.colors.textSecondary},children:[\"@ \",g.club]})]},idx))]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:14,color:theme.colors.textSecondary},children:\"Quick select:\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:theme.spacing,marginTop:theme.spacing,flexWrap:'wrap'},children:suggestedOpponents.map((opponent,oppIdx)=>/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"small\",onClick:()=>loadSuggestedOpponent(opponent,index),children:opponent.name},oppIdx))})]})]},index))]}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Select,{label:\"Select Course:\",value:selectedCourse||'',onChange:e=>setSelectedCourse(e.target.value),options:Object.keys(courses).map(courseId=>{var _courses$courseId;return{value:courseId,label:((_courses$courseId=courses[courseId])===null||_courses$courseId===void 0?void 0:_courses$courseId.name)||courseId};}),placeholder:\"Choose a course...\"})}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginTop:theme.spacing},children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"large\",onClick:validateAndStartGame,children:\"\\uD83D\\uDE80 Start Simulation\"})})]})});};export default GameSetup;","map":{"version":3,"names":["React","useState","useEffect","useTheme","Button","Card","Input","Select","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_API_URL","GameSetup","_ref","humanPlayer","setHumanPlayer","computerPlayers","setComputerPlayers","selectedCourse","setSelectedCourse","courses","setCourses","personalities","setPersonalities","suggestedOpponents","setSuggestedOpponents","onStartGame","theme","ghinLookupSlot","setGhinLookupSlot","ghinLookupFirstName","setGhinLookupFirstName","ghinLookupLastName","setGhinLookupLastName","ghinLookupResults","setGhinLookupResults","ghinLookupLoading","setGhinLookupLoading","ghinLookupError","setGhinLookupError","fetch","then","res","ok","Error","status","statusText","json","data","Object","keys","length","catch","error","console","fallbackCourses","name","holes","Array","from","_","i","hole_number","par","yards","stroke_index","description","total_par","total_yards","hole_count","alert","isArray","fallbackPersonalities","id","fallbackOpponents","handicap","personality","is_human","openGhinLookup","slot","closeGhinLookup","doGhinLookup","trim","params","URLSearchParams","last_name","first_name","toString","err","selectGhinGolfer","golfer","h","players","map","p","slotId","loadSuggestedOpponent","opponentData","index","validateAndStartGame","invalidComputers","filter","style","maxWidth","margin","padding","children","color","colors","primary","marginBottom","spacing","display","gridTemplateColumns","gap","label","value","onChange","e","target","type","variant","size","onClick","marginTop","placeholder","disabled","textSecondary","g","idx","border","borderRadius","cursor","background","paper","club","player","options","fontSize","flexWrap","opponent","oppIdx","courseId","_courses$courseId","textAlign"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/simulation/GameSetup.tsx"],"sourcesContent":["// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { useTheme } from '../../theme/Provider';\nimport { Button, Card, Input, Select } from '../ui';\n\nconst API_URL = process.env.REACT_APP_API_URL || \"\";\n\ninterface Player {\n  id?: string;\n  name: string;\n  handicap: string;\n  personality?: string;\n  is_human: boolean;\n}\n\ninterface Course {\n  name: string;\n  holes: Array<{\n    hole_number: number;\n    par: number;\n    yards: number;\n    stroke_index: number;\n    description: string;\n  }>;\n  total_par: number;\n  total_yards: number;\n  hole_count: number;\n}\n\ninterface Personality {\n  id: string;\n  name: string;\n}\n\ninterface SuggestedOpponent {\n  name: string;\n  handicap: string;\n  personality: string;\n}\n\ninterface GhinGolfer {\n  name: string;\n  handicap: string;\n  club?: string;\n}\n\ninterface GameSetupProps {\n  humanPlayer: Player;\n  setHumanPlayer: React.Dispatch<React.SetStateAction<Player>>;\n  computerPlayers: Player[];\n  setComputerPlayers: React.Dispatch<React.SetStateAction<Player[]>>;\n  selectedCourse: string | null;\n  setSelectedCourse: React.Dispatch<React.SetStateAction<string | null>>;\n  courses: { [key: string]: Course };\n  setCourses: React.Dispatch<React.SetStateAction<{ [key: string]: Course }>>;\n  personalities?: Personality[];\n  setPersonalities: React.Dispatch<React.SetStateAction<Personality[]>>;\n  suggestedOpponents?: SuggestedOpponent[];\n  setSuggestedOpponents: React.Dispatch<React.SetStateAction<SuggestedOpponent[]>>;\n  onStartGame: () => void;\n}\n\nconst GameSetup: React.FC<GameSetupProps> = ({\n  humanPlayer,\n  setHumanPlayer,\n  computerPlayers,\n  setComputerPlayers,\n  selectedCourse,\n  setSelectedCourse,\n  courses,\n  setCourses,\n  personalities = [],\n  setPersonalities,\n  suggestedOpponents = [],\n  setSuggestedOpponents,\n  onStartGame\n}) => {\n  const theme = useTheme();\n  \n  // GHIN lookup modal state\n  const [ghinLookupSlot, setGhinLookupSlot] = useState<string | null>(null);\n  const [ghinLookupFirstName, setGhinLookupFirstName] = useState(\"\");\n  const [ghinLookupLastName, setGhinLookupLastName] = useState(\"\");\n  const [ghinLookupResults, setGhinLookupResults] = useState<GhinGolfer[]>([]);\n  const [ghinLookupLoading, setGhinLookupLoading] = useState(false);\n  const [ghinLookupError, setGhinLookupError] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch courses with error handling\n    fetch(`${API_URL}/courses`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((data: { [key: string]: Course }) => {\n        if (!data || typeof data !== 'object') {\n          throw new Error('Invalid courses data format');\n        }\n        setCourses(data);\n        \n        // Auto-select first course if none selected\n        if (!selectedCourse && Object.keys(data).length > 0) {\n          setSelectedCourse(Object.keys(data));\n        }\n      })\n      .catch(error => {\n        console.error('Failed to load courses:', error);\n        \n        // Provide fallback courses so game can still start\n        const fallbackCourses: { [key: string]: Course } = {\n          \"Default Course\": {\n            name: \"Default Course\",\n            holes: Array.from({length: 18}, (_, i) => ({\n              hole_number: i + 1,\n              par: 4,\n              yards: 400,\n              stroke_index: i + 1,\n              description: `Hole ${i + 1}`\n            })),\n            total_par: 72,\n            total_yards: 7200,\n            hole_count: 18\n          }\n        };\n        \n        setCourses(fallbackCourses);\n        setSelectedCourse(\"Default Course\");\n        \n        // Show user-friendly error message but don't block the game\n        alert('Unable to load courses from server. Using default course to continue the game.');\n      });\n    \n    // Fetch personalities with error handling\n    fetch(`${API_URL}/personalities`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((data: Personality[]) => {\n        if (Array.isArray(data)) {\n          setPersonalities(data);\n        } else {\n          throw new Error('Invalid personalities data format');\n        }\n      })\n      .catch(error => {\n        console.error('Failed to load personalities:', error);\n        // Provide fallback personalities\n        const fallbackPersonalities: Personality[] = [\n          { id: 'aggressive', name: 'Aggressive' },\n          { id: 'conservative', name: 'Conservative' },\n          { id: 'balanced', name: 'Balanced' }\n        ];\n        setPersonalities(fallbackPersonalities);\n      });\n    \n    // Fetch suggested opponents with error handling\n    fetch(`${API_URL}/suggested_opponents`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((data: SuggestedOpponent[]) => {\n        if (Array.isArray(data)) {\n          setSuggestedOpponents(data);\n        } else {\n          throw new Error('Invalid suggested opponents data format');\n        }\n      })\n      .catch(error => {\n        console.error('Failed to load suggested opponents:', error);\n        // Provide fallback suggested opponents\n        const fallbackOpponents: SuggestedOpponent[] = [\n          { name: 'Bob', handicap: '12', personality: 'aggressive' },\n          { name: 'Alice', handicap: '8', personality: 'conservative' },\n          { name: 'Charlie', handicap: '16', personality: 'balanced' }\n        ];\n        setSuggestedOpponents(fallbackOpponents);\n      });\n  }, [setCourses, setPersonalities, setSuggestedOpponents, selectedCourse, setSelectedCourse]);\n\n  // Initialize computer players if empty\n  useEffect(() => {\n    if (computerPlayers.length === 0) {\n      setComputerPlayers([\n        { id: \"comp1\", name: \"\", handicap: \"\", personality: \"\", is_human: false },\n        { id: \"comp2\", name: \"\", handicap: \"\", personality: \"\", is_human: false },\n        { id: \"comp3\", name: \"\", handicap: \"\", personality: \"\", is_human: false }\n      ]);\n    }\n  }, [computerPlayers, setComputerPlayers]);\n\n  const openGhinLookup = (slot: string) => {\n    setGhinLookupSlot(slot);\n    setGhinLookupFirstName(\"\");\n    setGhinLookupLastName(\"\");\n    setGhinLookupResults([]);\n    setGhinLookupLoading(false);\n    setGhinLookupError(\"\");\n  };\n\n  const closeGhinLookup = () => {\n    setGhinLookupSlot(null);\n  };\n\n  const doGhinLookup = async () => {\n    if (!ghinLookupLastName.trim()) {\n      setGhinLookupError(\"Last name required\");\n      return;\n    }\n    setGhinLookupLoading(true);\n    setGhinLookupError(\"\");\n    setGhinLookupResults([]);\n    try {\n      const params = new URLSearchParams({ \n        last_name: ghinLookupLastName, \n        first_name: ghinLookupFirstName \n      });\n      const res = await fetch(`${API_URL}/ghin/lookup?${params.toString()}`);\n      if (!res.ok) throw new Error(\"Lookup failed\");\n      const data: GhinGolfer[] = await res.json();\n      setGhinLookupResults(data);\n      if (data.length === 0) setGhinLookupError(\"No golfers found\");\n    } catch (err: any) {\n      setGhinLookupError(\"Lookup failed\");\n    } finally {\n      setGhinLookupLoading(false);\n    }\n  };\n\n  const selectGhinGolfer = (golfer: GhinGolfer) => {\n    if (ghinLookupSlot === \"human\") {\n      setHumanPlayer(h => ({ ...h, name: golfer.name, handicap: golfer.handicap || \"\", is_human: true }));\n    } else {\n      setComputerPlayers(players => players.map((p, i) => {\n        const slotId = `comp${i+1}`;\n        return slotId === ghinLookupSlot ? { ...p, name: golfer.name, handicap: golfer.handicap || \"\", is_human: false } : p;\n      }));\n    }\n    closeGhinLookup();\n  };\n\n  const loadSuggestedOpponent = (opponentData: SuggestedOpponent, index: number) => {\n    setComputerPlayers(players => players.map((p, i) => \n      i === index ? { ...p, ...opponentData, id: p.id } : p\n    ));\n  };\n\n  const validateAndStartGame = () => {\n    if (!humanPlayer.name.trim()) {\n      alert(\"Please enter your name\");\n      return;\n    }\n    \n    const invalidComputers = computerPlayers.filter(p => !p.name.trim() || !p.handicap);\n    if (invalidComputers.length > 0) {\n      alert(\"Please fill in all computer player details\");\n      return;\n    }\n    \n    if (!selectedCourse) {\n      alert(\"Please select a course\");\n      return;\n    }\n    \n    onStartGame();\n  };\n\n  return (\n    <div style={{ maxWidth: 800, margin: \"0 auto\", padding: 20 }}>\n      <Card>\n        <h2 style={{ color: theme.colors.primary, marginBottom: theme.spacing }}>\n          🎮 Wolf Goat Pig Simulation Mode\n        </h2>\n        <p style={{ marginBottom: 20 }}>\n          Practice Wolf Goat Pig against computer opponents! This mode helps you learn the betting strategies\n          and get comfortable with the game mechanics. After each hole, you'll receive educational feedback\n          about your decisions.\n        </p>\n        \n        {/* Human Player Setup */}\n        <Card>\n          <h3>Your Details</h3>\n          <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 16 }}>\n            <Input\n              label=\"Your Name:\"\n              value={humanPlayer.name}\n              onChange={(e) => setHumanPlayer({...humanPlayer, name: e.target.value})}\n            />\n            <Input\n              label=\"Your Handicap:\"\n              type=\"number\"\n              value={humanPlayer.handicap}\n              onChange={(e) => setHumanPlayer({...humanPlayer, handicap: e.target.value})}\n            />\n          </div>\n          \n          <Button \n            variant=\"secondary\"\n            size=\"small\"\n            onClick={() => openGhinLookup(\"human\")}\n            style={{ marginTop: theme.spacing }}\n          >\n            Lookup GHIN Handicap\n          </Button>\n          \n          {ghinLookupSlot === \"human\" && (\n            <Card variant=\"info\" style={{ marginTop: theme.spacing }}>\n              <h4>GHIN Handicap Lookup</h4>\n              <Input\n                placeholder=\"First Name (optional)\"\n                value={ghinLookupFirstName}\n                onChange={e => setGhinLookupFirstName(e.target.value)}\n              />\n              <Input\n                placeholder=\"Last Name (required)\"\n                value={ghinLookupLastName}\n                onChange={e => setGhinLookupLastName(e.target.value)}\n              />\n              <div style={{ display: 'flex', gap: theme.spacing, marginTop: theme.spacing }}>\n                <Button \n                  size=\"small\"\n                  onClick={doGhinLookup} \n                  disabled={ghinLookupLoading}\n                >\n                  Search\n                </Button>\n                <Button \n                  variant=\"error\"\n                  size=\"small\"\n                  onClick={closeGhinLookup}\n                >\n                  Cancel\n                </Button>\n              </div>\n              \n              {ghinLookupLoading && <div style={{ color: theme.colors.textSecondary, marginTop: 8 }}>Searching...</div>}\n              {ghinLookupError && <div style={{ color: theme.colors.error, marginTop: 8 }}>{ghinLookupError}</div>}\n              \n              {ghinLookupResults.length > 0 && (\n                <div style={{ marginTop: theme.spacing }}>\n                  <h5>Results:</h5>\n                  {ghinLookupResults.map((g, idx) => (\n                    <div \n                      key={idx} \n                      style={{ \n                        padding: 8, \n                        border: `1px solid ${theme.colors.border}`, \n                        borderRadius: 6, \n                        marginBottom: 4, \n                        cursor: \"pointer\", \n                        background: theme.colors.paper \n                      }} \n                      onClick={() => selectGhinGolfer(g)}\n                    >\n                      <strong>{g.name}</strong> (H: {g.handicap}) \n                      {g.club && <span style={{ color: theme.colors.textSecondary }}>@ {g.club}</span>}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </Card>\n          )}\n        </Card>\n\n        {/* Computer Players Setup */}\n        <Card>\n          <h3>Computer Opponents</h3>\n          {computerPlayers.map((player, index) => (\n            <Card key={index} variant=\"default\" style={{ marginBottom: 16 }}>\n              <h4>Computer Player {index + 1}</h4>\n              <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 16 }}>\n                <Input\n                  label=\"Name:\"\n                  value={player.name}\n                  onChange={(e) => {\n                    setComputerPlayers(players => players.map((p, i) => \n                      i === index ? { ...p, name: e.target.value } : p\n                    ));\n                  }}\n                />\n                <Input\n                  label=\"Handicap:\"\n                  type=\"number\"\n                  value={player.handicap}\n                  onChange={(e) => {\n                    setComputerPlayers(players => players.map((p, i) => \n                      i === index ? { ...p, handicap: e.target.value } : p\n                    ));\n                  }}\n                />\n              </div>\n              \n              <Select\n                label=\"Personality:\"\n                value={player.personality}\n                onChange={(e) => {\n                  setComputerPlayers(players => players.map((p, i) => \n                    i === index ? { ...p, personality: e.target.value } : p\n                  ));\n                }}\n                options={personalities.map(p => ({ value: p.id, label: p.name }))}\n                placeholder=\"Select personality...\"\n              />\n              \n              <Button \n                variant=\"secondary\"\n                size=\"small\"\n                onClick={() => openGhinLookup(`comp${index+1}`)}\n                style={{ marginTop: theme.spacing }}\n              >\n                Lookup GHIN Handicap\n              </Button>\n              \n              {ghinLookupSlot === `comp${index+1}` && (\n                <Card variant=\"info\" style={{ marginTop: theme.spacing }}>\n                  <h4>GHIN Handicap Lookup</h4>\n                  <Input\n                    placeholder=\"First Name (optional)\"\n                    value={ghinLookupFirstName}\n                    onChange={e => setGhinLookupFirstName(e.target.value)}\n                  />\n                  <Input\n                    placeholder=\"Last Name (required)\"\n                    value={ghinLookupLastName}\n                    onChange={e => setGhinLookupLastName(e.target.value)}\n                  />\n                  <div style={{ display: 'flex', gap: theme.spacing, marginTop: theme.spacing }}>\n                    <Button \n                      size=\"small\"\n                      onClick={doGhinLookup} \n                      disabled={ghinLookupLoading}\n                    >\n                      Search\n                    </Button>\n                    <Button \n                      variant=\"error\"\n                      size=\"small\"\n                      onClick={closeGhinLookup}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                  \n                  {ghinLookupLoading && <div style={{ color: theme.colors.textSecondary, marginTop: 8 }}>Searching...</div>}\n                  {ghinLookupError && <div style={{ color: theme.colors.error, marginTop: 8 }}>{ghinLookupError}</div>}\n                  \n                  {ghinLookupResults.length > 0 && (\n                    <div style={{ marginTop: theme.spacing }}>\n                      <h5>Results:</h5>\n                      {ghinLookupResults.map((g, idx) => (\n                        <div \n                          key={idx} \n                          style={{ \n                            padding: 8, \n                            border: `1px solid ${theme.colors.border}`, \n                            borderRadius: 6, \n                            marginBottom: 4, \n                            cursor: \"pointer\", \n                            background: theme.colors.paper \n                          }} \n                          onClick={() => selectGhinGolfer(g)}\n                        >\n                          <strong>{g.name}</strong> (H: {g.handicap}) \n                          {g.club && <span style={{ color: theme.colors.textSecondary }}>@ {g.club}</span>}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </Card>\n              )}\n              \n              <div style={{ marginTop: theme.spacing }}>\n                <span style={{ fontSize: 14, color: theme.colors.textSecondary }}>Quick select:</span>\n                <div style={{ display: 'flex', gap: theme.spacing, marginTop: theme.spacing, flexWrap: 'wrap' }}>\n                  {suggestedOpponents.map((opponent, oppIdx) => (\n                    <Button\n                      key={oppIdx}\n                      variant=\"ghost\"\n                      size=\"small\"\n                      onClick={() => loadSuggestedOpponent(opponent, index)}\n                    >\n                      {opponent.name}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            </Card>\n          ))}\n        </Card>\n\n        {/* Course Selection */}\n        <Card>\n          <Select\n            label=\"Select Course:\"\n            value={selectedCourse || ''}\n            onChange={(e) => setSelectedCourse(e.target.value)}\n            options={Object.keys(courses).map(courseId => ({ \n              value: courseId, \n              label: courses[courseId]?.name || courseId \n            }))}\n            placeholder=\"Choose a course...\"\n          />\n        </Card>\n\n        {/* Start Game Button */}\n        <div style={{ textAlign: 'center', marginTop: theme.spacing }}>\n          <Button\n            variant=\"primary\"\n            size=\"large\"\n            onClick={validateAndStartGame}\n          >\n            🚀 Start Simulation\n          </Button>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default GameSetup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./.code/agents/1/exec-call_lmaGajgVnK37auksouScRpzT.txt:7571:frontend/node_modules/.cache/babel-loader/509bcee8005537cb1312fbb75bb40d9470a8f53b5f9ab58fc6fa6edb04bed0fa.json:1:{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import{useGame}from\"../../context\";import{simulationConfig}from\"../../config/environment\";import{getSimulationMock}from\"./__fixtures__\";import{GameSetup,GamePlay,EnhancedSimulationLayout}from\"./\";import TurnBasedInterface from\"./TurnBasedInterface\";// import { Timeline, PokerBettingPanel } from \"./\"; // Removed - not currently used\n// import TVPokerLayout from \"../game/TVPokerLayout\"; // Removed - not currently used\nimport{jsx as _jsx}from\"react/jsx-runtime\";const{apiUrl:SIMULATION_API_URL,useMocks:USE_SIMULATION_MOCKS,mockPreset:SIMULATION_MOCK_PRESET}=simulationConfig;// Helper function to safely serialize error details\nconst formatErrorDetail=detail=>{if(typeof detail==='object'&&detail!==null){return JSON.stringify(detail);}return detail;};function SimulationMode(){var _gameState$hole_state;// const theme = useTheme(); // Unused for now\nconst{gameState,setGameState,isGameActive,startGame,endGame,loading,setLoading,feedback,addFeedback,clearFeedback,shotState,setShotState,interactionNeeded,setInteractionNeeded,pendingDecision,setPendingDecision,shotProbabilities,setShotProbabilities,hasNextShot,setHasNextShot}=useGame();// Timeline and Poker state\nconst[timelineEvents,setTimelineEvents]=useState([]);const[pokerState,setPokerState]=useState({});const[bettingOptions,setBettingOptions]=useState([]);const[timelineLoading,setTimelineLoading]=useState(false);const[mockStep,setMockStep]=useState(0);// Turn-based mode state\nconst useTurnBasedMode=true;const[turnBasedState,setTurnBasedState]=useState(null);// Setup state\nconst[humanPlayer,setHumanPlayer]=useState({id:\"human\",name:\"\",handicap:18,strength:\"Average\",is_human:true});const[computerPlayers,setComputerPlayers]=useState([]);const[suggestedOpponents,setSuggestedOpponents]=useState([]);const[personalities,setPersonalities]=useState([]);const[selectedCourse,setSelectedCourse]=useState(\"\");const[courses,setCourses]=useState({});// Hole decisions - setHoleDecisions used for resetting state between simulations\nconst[,setHoleDecisions]=useState({action:null,requested_partner:null,offer_double:false,accept_double:false});// Note: interactionNeeded and setInteractionNeeded come from useGame() context above\n// const [pendingDecision, setPendingDecision] = useState({}); // Also from context\n// New state for shot-by-shot simulation\n// Note: All simulation state (shotProbabilities, shotState, hasNextShot, etc.) comes from useGame() context above\n// GHIN lookup functionality removed - was not being used in current UI\n// GHIN lookup functions removed - functionality not currently exposed in UI\nconst isMockSessionEnabled=USE_SIMULATION_MOCKS;const resolveMockPreset=useCallback(()=>getSimulationMock(SIMULATION_MOCK_PRESET),[]);const pushMockTimelineEvent=partialEvent=>{setTimelineEvents(previous=>[{id:partialEvent.id||`mock-event-${Date.now()}`,timestamp:partialEvent.timestamp||new Date().toISOString(),...partialEvent},...previous]);};const hydrateMockSetup=useCallback(()=>{if(!isMockSessionEnabled){return;}const preset=resolveMockPreset();if(!preset){return;}const{setup,gameState:presetGameState}=preset;if(setup){setPersonalities(setup.personalities||[]);setSuggestedOpponents(setup.opponents||[]);setCourses(setup.courses||{});if(Array.isArray(setup.opponents)&&setup.opponents.length>0){setComputerPlayers(setup.opponents.slice(0,3).map((opponent,index)=>({id:opponent.id||`mock-opponent-${index+1}`,name:opponent.name,handicap:opponent.handicap,personality:opponent.personality,is_human:false})));}}if(presetGameState!==null&&presetGameState!==void 0&&presetGameState.players){const humanPlayerFromPreset=presetGameState.players.find(player=>(player===null||player===void 0?void 0:player.is_human)||(player===null||player===void 0?void 0:player.id)===\"human\");if(humanPlayerFromPreset){setHumanPlayer(prev=>({...prev,...humanPlayerFromPreset}));}}},[isMockSessionEnabled,resolveMockPreset,setPersonalities,setSuggestedOpponents,setCourses,setComputerPlayers,setHumanPlayer]);const runMockSimulation=()=>{const preset=resolveMockPreset();if(!preset){return;}setGameState(preset.gameState);startGame(preset.gameState);setShotState(preset.shotState||null);setShotProbabilities(preset.shotProbabilities||null);setHasNextShot(preset.hasNextShot!==undefined?Boolean(preset.hasNextShot):true);setInteractionNeeded(preset.interactionNeeded||null);clearFeedback();(preset.feedback||[]).forEach(entry=>addFeedback(entry));setTimelineEvents(preset.timelineEvents||[]);setPokerState(preset.pokerState||{});setBettingOptions(preset.bettingOptions||[]);setMockStep(0);};const handleMockDecision=decision=>{if(!isMockSessionEnabled){return;}if(decision.offer_double!==undefined){handleBettingAction(decision.offer_double?'offer_double':'decline_double',{label:decision.offer_double?'Offer Double':'Decline Double'});setInteractionNeeded(null);setPendingDecision({});return;}if(decision.accept_double!==undefined){handleBettingAction(decision.accept_double?'accept_double':'decline_double',{label:decision.accept_double?'Accept Double':'Decline Double'});setInteractionNeeded(null);setPendingDecision({});return;}if(decision.accept_partnership!==undefined){const accepted=Boolean(decision.accept_partnership);pushMockTimelineEvent({type:accepted?'partnership':'solo',description:accepted?'Mock: Partnership accepted. Robots brace for teamwork.':'Mock: Partnership declined. Captain must go solo.'});addFeedback(accepted?'✅ Mock confirmation: partnership locked in.':'⚠️ Mock decline: prepare for solo play.');if(!accepted){handleBettingAction('offer_double',{label:'Forced Solo Double'});}setInteractionNeeded(null);setPendingDecision({});return;}if(decision.action==='request_partner'){var _gameState$players,_gameState$players$fi;const partnerId=decision.requested_partner;const partnerName=(gameState===null||gameState===void 0?void 0:(_gameState$players=gameState.players)===null||_gameState$players===void 0?void 0:(_gameState$players$fi=_gameState$players.find(player=>player.id===partnerId))===null||_gameState$players$fi===void 0?void 0:_gameState$players$fi.name)||partnerId||'selected partner';pushMockTimelineEvent({type:'partnership',description:`Mock: You selected ${partnerName} as your partner.`});addFeedback(`🤝 Mock partner secured: ${partnerName}`);const pressurePreset=getSimulationMock('pressureDouble');setInteractionNeeded(pressurePreset.interactionNeeded||null);setShotState(pressurePreset.shotState||shotState);setShotProbabilities(pressurePreset.shotProbabilities||shotProbabilities);setBettingOptions(pressurePreset.bettingOptions||bettingOptions);setPokerState(previous=>({...previous,...pressurePreset.pokerState}));setMockStep(previous=>previous+1);setPendingDecision({});return;}if(decision.action==='go_solo'){pushMockTimelineEvent({type:'solo',description:'Mock: Captain elects to go solo and press the wager.'});addFeedback('🚀 Mock solo play engaged. The wager has been doubled.');handleBettingAction('offer_double',{label:'Mock Solo Double'});setInteractionNeeded(null);setPendingDecision({});return;}if(decision.action==='keep_watching'){pushMockTimelineEvent({type:'captain',description:'Mock: Captain keeps observing robot tee shots.'});addFeedback('👀 Mock mode: continuing to observe tee shots.');setInteractionNeeded(null);setPendingDecision({});return;}pushMockTimelineEvent({type:'info',description:`Mock decision recorded: ${JSON.stringify(decision)}`});addFeedback('ℹ️ Mock decision logged. No backend action triggered.');setInteractionNeeded(null);setPendingDecision({});};const fetchInitialData=useCallback(async()=>{if(isMockSessionEnabled){return;}try{const[personalitiesRes,opponentsRes,coursesRes]=await Promise.all([fetch(`${SIMULATION_API_URL}/simulation/available-personalities`),fetch(`${SIMULATION_API_URL}/simulation/suggested-opponents`),fetch(`${SIMULATION_API_URL}/courses`)]);const personalitiesData=await personalitiesRes.json();const opponentsData=await opponentsRes.json();const coursesData=await coursesRes.json();setPersonalities(personalitiesData.personalities||[]);setSuggestedOpponents(opponentsData.opponents||[]);setCourses(coursesData||{});if(opponentsData.opponents&&opponentsData.opponents.length>=3){setComputerPlayers([{id:\"comp1\",...opponentsData.opponents[0],is_human:false},{id:\"comp2\",...opponentsData.opponents[1],is_human:false},{id:\"comp3\",...opponentsData.opponents[2],is_human:false}]);}}catch(error){console.error(\"Error fetching initial data:\",error);}},[isMockSessionEnabled,setComputerPlayers,setCourses,setPersonalities,setSuggestedOpponents]);const fetchTurnBasedState=useCallback(async()=>{if(isMockSessionEnabled){return;}try{const response=await fetch(`${SIMULATION_API_URL}/simulation/turn-based-state`);const data=await response.json();if(data.success){setTurnBasedState(data.turn_based_state);}}catch(error){console.error('Error fetching turn-based state:',error);}},[isMockSessionEnabled,setTurnBasedState]);useEffect(()=>{if(isMockSessionEnabled){hydrateMockSetup();return;}fetchInitialData();},[fetchInitialData,hydrateMockSetup,isMockSessionEnabled]);// Fetch turn-based state when game is active\nuseEffect(()=>{if(isGameActive&&useTurnBasedMode&&!isMockSessionEnabled){fetchTurnBasedState();const interval=setInterval(fetchTurnBasedState,2000);return()=>clearInterval(interval);}return undefined;},[fetchTurnBasedState,isGameActive,isMockSessionEnabled,useTurnBasedMode]);const startSimulation=async()=>{if(!isMockSessionEnabled&&!humanPlayer.name.trim()){alert(\"Please enter your name\");return;}setLoading(true);try{// Reset all local state for new simulation\nsetGameState(null);endGame();// Use endGame directly instead of setIsGameActive\nclearFeedback();setShotProbabilities(null);setShotState(null);setHasNextShot(true);setInteractionNeeded(null);setPendingDecision({});setHoleDecisions({action:null,requested_partner:null,offer_double:false,accept_double:false});// GHIN lookup state reset removed - functionality not currently used\nsetMockStep(0);if(isMockSessionEnabled){runMockSimulation();setLoading(false);return;}const response=await fetch(`${SIMULATION_API_URL}/simulation/setup`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({human_player:humanPlayer,computer_players:computerPlayers,course_name:selectedCourse||null})});const data=await response.json();if(data.status===\"ok\"){// First set the game state\nsetGameState(data.game_state);// Then start the game with the new state\nstartGame(data.game_state);// Set initial feedback\nclearFeedback();if(data.feedback&&Array.isArray(data.feedback)){data.feedback.forEach(msg=>addFeedback(msg));}else{addFeedback(data.message||\"Simulation started!\");}// Set next shot availability from the response\nif(data.next_shot_available!==undefined){setHasNextShot(data.next_shot_available);}else{setHasNextShot(true);// Default to true after setup\n}// Don't immediately play next shot - let the user initiate\n// This prevents race conditions and gives user control\n}else{alert(\"Error starting simulation: \"+(formatErrorDetail(data.detail)||\"Unknown error\"));}}catch(error){console.error(\"Error starting simulation:\",error);alert(\"Error starting simulation\");}finally{if(!isMockSessionEnabled){setLoading(false);}}};// Fetch timeline events from backend\nconst fetchTimelineEvents=async()=>{if(!isGameActive||isMockSessionEnabled)return;try{setTimelineLoading(true);const response=await fetch(`${SIMULATION_API_URL}/simulation/timeline`);if(response.ok){const data=await response.json();setTimelineEvents(data.events||[]);}}catch(error){console.error(\"Error fetching timeline:\",error);}finally{setTimelineLoading(false);}};// Fetch poker-style betting state\nconst fetchPokerState=async()=>{if(!isGameActive||isMockSessionEnabled)return;try{const response=await fetch(`${SIMULATION_API_URL}/simulation/poker-state`);if(response.ok){const data=await response.json();setPokerState({pot_size:data.pot_size,base_bet:data.base_bet,current_bet:data.current_bet,betting_phase:data.betting_phase,doubled:data.doubled,players_in:data.players_in,wagering_closed:data.wagering_closed});setBettingOptions(data.betting_options||[]);}}catch(error){console.error(\"Error fetching poker state:\",error);}};// Handle poker-style betting actions\nconst handleBettingAction=async(action,option)=>{if(isMockSessionEnabled){var _ref,_gameState$betting$cu,_gameState$betting;const label=(option===null||option===void 0?void 0:option.label)||action;const currentWager=(_ref=(_gameState$betting$cu=gameState===null||gameState===void 0?void 0:(_gameState$betting=gameState.betting)===null||_gameState$betting===void 0?void 0:_gameState$betting.current_wager)!==null&&_gameState$betting$cu!==void 0?_gameState$betting$cu:gameState===null||gameState===void 0?void 0:gameState.base_wager)!==null&&_ref!==void 0?_ref:1;const updatedWager=action==='offer_double'?currentWager*2:currentWager;setGameState(previous=>{if(!previous){return previous;}return{...previous,betting:{...(previous.betting||{}),current_wager:updatedWager}};});setPokerState(previous=>{var _previous$current_wag,_previous$current_wag2;return{...previous,current_wager:action==='offer_double'?((_previous$current_wag=previous===null||previous===void 0?void 0:previous.current_wager)!==null&&_previous$current_wag!==void 0?_previous$current_wag:currentWager)*2:(_previous$current_wag2=previous===null||previous===void 0?void 0:previous.current_wager)!==null&&_previous$current_wag2!==void 0?_previous$current_wag2:updatedWager,pending_actions:[],last_mock_action:action};});pushMockTimelineEvent({type:action!==null&&action!==void 0&&action.includes('double')?'double':'bet',description:`Mock: ${label}`});addFeedback(`🃏 Mock betting action captured: ${label}`);return;}try{setLoading(true);const decision={decision_type:action,player_id:'human',amount:option.amount||0,...option};const response=await fetch(`${SIMULATION_API_URL}/simulation/betting-decision`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(decision)});if(response.ok){const result=await response.json();if(result.success){// Update game state if provided\nif(result.game_state){setGameState(result.game_state);}// Refresh timeline and poker state\nawait Promise.all([fetchTimelineEvents(),fetchPokerState()]);}}}catch(error){console.error(\"Error handling betting action:\",error);}finally{setLoading(false);}};// Auto-refresh timeline and poker state when game is active\nuseEffect(()=>{if(isGameActive&&!isMockSessionEnabled){// Initial fetch\nfetchTimelineEvents();fetchPokerState();// Set up polling for real-time updates\nconst interval=setInterval(()=>{fetchTimelineEvents();fetchPokerState();},3000);// Update every 3 seconds\nreturn()=>clearInterval(interval);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[isGameActive,gameState===null||gameState===void 0?void 0:gameState.current_hole,gameState===null||gameState===void 0?void 0:(_gameState$hole_state=gameState.hole_state)===null||_gameState$hole_state===void 0?void 0:_gameState$hole_state.current_shot_number]);// fetchTimelineEvents and fetchPokerState are stable\n// Removed unused testNewEndpoints function\n// Add the missing makeDecision function and improve interactive flow\nconst makeDecision=async decision=>{if(isMockSessionEnabled){handleMockDecision(decision);return;}setLoading(true);try{// Determine which endpoint to use based on decision type\nlet endpoint='/simulation/play-hole';let payload={...decision};// Handle different decision types\nif(decision.action==='request_partner'||decision.action==='go_solo'||decision.action==='keep_watching'){// Captain decisions during tee shots\nendpoint='/simulation/play-hole';payload={action:decision.action,requested_partner:decision.requested_partner||decision.partner_id};}else if(decision.accept_partnership!==undefined){// Partnership response\nendpoint='/simulation/play-hole';payload={accept_partnership:decision.accept_partnership};}else if(decision.offer_double!==undefined){// Doubling decisions\nendpoint='/simulation/betting-decision';payload={action:decision.offer_double?'offer_double':'decline_double'};}else if(decision.accept_double!==undefined){// Double response\nendpoint='/simulation/betting-decision';payload={action:decision.accept_double?'accept_double':'decline_double'};}const response=await fetch(`${SIMULATION_API_URL}${endpoint}`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});if(!response.ok){const errorText=await response.text();throw new Error(`Backend error: ${response.status} - ${errorText}`);}const data=await response.json();if(data.status===\"ok\"){var _data$decision_result;// Update game state\nsetGameState(data.game_state);// Add feedback messages\nif(data.feedback&&Array.isArray(data.feedback)){data.feedback.forEach(msg=>addFeedback(msg));}else if((_data$decision_result=data.decision_result)!==null&&_data$decision_result!==void 0&&_data$decision_result.message){addFeedback(`💰 ${data.decision_result.message}`);}// Handle interaction needed\nif(data.interaction_needed){setInteractionNeeded(data.interaction_needed);}else{setInteractionNeeded(null);setPendingDecision({});}// Update shot state if available\nif(data.next_shot_available!==undefined){setHasNextShot(data.next_shot_available);}const baseProbabilities=data.probabilities&&typeof data.probabilities===\"object\"&&!Array.isArray(data.probabilities)?data.probabilities:null;const bettingAnalysis=data.betting_probabilities&&typeof data.betting_probabilities===\"object\"?data.betting_probabilities:null;if(baseProbabilities||bettingAnalysis){const combinedProbabilities={...(baseProbabilities||{}),...(bettingAnalysis?{betting_analysis:bettingAnalysis}:{})};setShotProbabilities(combinedProbabilities);}// Auto-continue if no interaction needed and shots available\nif(!data.interaction_needed&&data.next_shot_available){// Small delay to let user see the feedback\nsetTimeout(()=>{if(!loading&&!interactionNeeded){playNextShot();}},1500);}}else{throw new Error(data.message||'Unknown error occurred');}}catch(error){console.error(\"Error making decision:\",error);// Provide user-friendly error messages\nlet errorMessage=\"Error making decision: \";if(error.message.includes(\"Backend error: 500\")){errorMessage+=\"Server error - please try again\";}else if(error.message.includes(\"Backend error: 400\")){errorMessage+=\"Invalid decision - please check your choice\";}else if(error.message.includes(\"fetch\")){errorMessage+=\"Network error - check your connection\";}else{errorMessage+=error.message;}// Add error to feedback instead of alert\naddFeedback(`❌ ${errorMessage}`);// Clear interaction needed to prevent stuck state\nsetInteractionNeeded(null);}finally{setLoading(false);}};const playNextShot=async()=>{if(loading||interactionNeeded){if(process.env.NODE_ENV!=='production'){console.debug(\"Cannot play shot:\",{loading,interactionNeeded});}return;}if(isMockSessionEnabled){var _nextPreset$shotState;const presetName=mockStep%2===0?'pressureDouble':SIMULATION_MOCK_PRESET;const nextPreset=getSimulationMock(presetName);pushMockTimelineEvent({type:'shot',description:((_nextPreset$shotState=nextPreset.shotState)===null||_nextPreset$shotState===void 0?void 0:_nextPreset$shotState.recommended_shot)||`Mock shot progression ${mockStep+1}.`});addFeedback(`🎯 Mock shot advanced (step ${mockStep+1}).`);setGameState(previous=>{var _previous$hole_state;if(!previous){return nextPreset.gameState||previous;}const nextHoleState={...(previous.hole_state||{}),...(nextPreset.gameState&&nextPreset.gameState.hole_state||{}),current_shot_number:(((_previous$hole_state=previous.hole_state)===null||_previous$hole_state===void 0?void 0:_previous$hole_state.current_shot_number)||0)+1};return{...previous,...(nextPreset.gameState||{}),hole_state:nextHoleState};});setShotState(nextPreset.shotState||null);setShotProbabilities(nextPreset.shotProbabilities||null);setInteractionNeeded(nextPreset.interactionNeeded||null);setBettingOptions(nextPreset.bettingOptions||bettingOptions);setPokerState(previous=>({...previous,...nextPreset.pokerState}));setHasNextShot(nextPreset.hasNextShot!==undefined?Boolean(nextPreset.hasNextShot):false);setMockStep(previous=>previous+1);return;}setLoading(true);try{const response=await fetch(`${SIMULATION_API_URL}/simulation/play-next-shot`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(pendingDecision)});if(!response.ok){const errorText=await response.text();throw new Error(`Backend error: ${response.status} - ${errorText}`);}const data=await response.json();if(data.status===\"ok\"){setGameState(data.game_state);// Add feedback from the shot simulation\nif(data.feedback&&data.feedback.length>0){data.feedback.forEach(msg=>addFeedback(msg));}// Handle shot result\nif(data.shot_result){addFeedback(`🎯 Shot Result: ${JSON.stringify(data.shot_result)}`);}// Handle interaction needed\nif(data.interaction_needed){setInteractionNeeded(data.interaction_needed);setPendingDecision({});}else{setInteractionNeeded(null);setPendingDecision({});}// Update next shot availability\nsetHasNextShot(data.next_shot_available);// Refresh timeline and poker state after shot\nawait Promise.all([fetchTimelineEvents(),fetchPokerState()]);}else{throw new Error(data.message||'Unknown error occurred');}}catch(error){console.error(\"Error playing next shot:\",error);let errorMessage=\"Error playing shot: \";if(error.message.includes(\"Backend error: 500\")){errorMessage+=\"Server error - please try again\";}else if(error.message.includes(\"fetch\")){errorMessage+=\"Network error - check your connection\";}else{errorMessage+=error.message;}addFeedback(`❌ ${errorMessage}`);}finally{setLoading(false);}};const resetSimulation=()=>{setGameState(null);endGame();// Use endGame directly instead of setIsGameActive\nclearFeedback();setHoleDecisions({action:null,requested_partner:null,offer_double:false,accept_double:false});setMockStep(0);};if(!isGameActive){return/*#__PURE__*/_jsx(GameSetup,{humanPlayer:humanPlayer,setHumanPlayer:setHumanPlayer,computerPlayers:computerPlayers,setComputerPlayers:setComputerPlayers,selectedCourse:selectedCourse,setSelectedCourse:setSelectedCourse,courses:courses,setCourses:setCourses,personalities:personalities,setPersonalities:setPersonalities,suggestedOpponents:suggestedOpponents,setSuggestedOpponents:setSuggestedOpponents,onStartGame:startSimulation});}// Choose interface based on mode preference\nif(useTurnBasedMode&&turnBasedState){return/*#__PURE__*/_jsx(TurnBasedInterface,{gameState:{...gameState,...(turnBasedState.turn_based_state||turnBasedState),interactionNeeded,hasNextShot,feedback},onMakeDecision:makeDecision,interactionNeeded:interactionNeeded,feedback:feedback,shotState:shotState,onNextShot:playNextShot,hasNextShot:hasNextShot});}// Use Enhanced Simulation Layout with Timeline and Poker Betting\nconst useEnhancedLayout=true;// TODO: Make this a user preference\nif(useEnhancedLayout){return/*#__PURE__*/_jsx(EnhancedSimulationLayout,{gameState:gameState,shotState:shotState,probabilities:shotProbabilities,onDecision:makeDecision,onPlayNextShot:playNextShot,timelineEvents:timelineEvents,timelineLoading:timelineLoading,pokerState:pokerState,bettingOptions:bettingOptions,onBettingAction:handleBettingAction,currentPlayer:\"human\",interactionNeeded:interactionNeeded,hasNextShot:hasNextShot,feedback:feedback});}return/*#__PURE__*/_jsx(GamePlay,{gameState:gameState,onEndSimulation:resetSimulation,interactionNeeded:interactionNeeded,onMakeDecision:makeDecision,feedback:feedback,shotState:shotState,shotProbabilities:shotProbabilities,onNextShot:playNextShot,hasNextShot:hasNextShot});}export default SimulationMode;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useGame","simulationConfig","getSimulationMock","GameSetup","GamePlay","EnhancedSimulationLayout","TurnBasedInterface","jsx","_jsx","apiUrl","SIMULATION_API_URL","useMocks","USE_SIMULATION_MOCKS","mockPreset","SIMULATION_MOCK_PRESET","formatErrorDetail","detail","JSON","stringify","SimulationMode","_gameState$hole_state","gameState","setGameState","isGameActive","startGame","endGame","loading","setLoading","feedback","addFeedback","clearFeedback","shotState","setShotState","interactionNeeded","setInteractionNeeded","pendingDecision","setPendingDecision","shotProbabilities","setShotProbabilities","hasNextShot","setHasNextShot","timelineEvents","setTimelineEvents","pokerState","setPokerState","bettingOptions","setBettingOptions","timelineLoading","setTimelineLoading","mockStep","setMockStep","useTurnBasedMode","turnBasedState","setTurnBasedState","humanPlayer","setHumanPlayer","id","name","handicap","strength","is_human","computerPlayers","setComputerPlayers","suggestedOpponents","setSuggestedOpponents","personalities","setPersonalities","selectedCourse","setSelectedCourse","courses","setCourses","setHoleDecisions","action","requested_partner","offer_double","accept_double","isMockSessionEnabled","resolveMockPreset","pushMockTimelineEvent","partialEvent","previous","Date","now","timestamp","toISOString","hydrateMockSetup","preset","setup","presetGameState","opponents","Array","isArray","length","slice","map","opponent","index","personality","players","humanPlayerFromPreset","find","player","prev","runMockSimulation","undefined","Boolean","forEach","entry","handleMockDecision","decision","handleBettingAction","label","accept_partnership","accepted","type","description","_gameState$players","_gameState$players$fi","partnerId","partnerName","pressurePreset","fetchInitialData","personalitiesRes","opponentsRes","coursesRes","Promise","all","fetch","personalitiesData","json","opponentsData","coursesData","error","console","fetchTurnBasedState","response","data","success","turn_based_state","interval","setInterval","clearInterval","startSimulation","trim","alert","method","headers","body","human_player","computer_players","course_name","status","game_state","msg","message","next_shot_available","fetchTimelineEvents","ok","events","fetchPokerState","pot_size","base_bet","current_bet","betting_phase","doubled","players_in","wagering_closed","betting_options","option","_ref","_gameState$betting$cu","_gameState$betting","currentWager","betting","current_wager","base_wager","updatedWager","_previous$current_wag","_previous$current_wag2","pending_actions","last_mock_action","includes","decision_type","player_id","amount","result","current_hole","hole_state","current_shot_number","makeDecision","endpoint","payload","partner_id","errorText","text","Error","_data$decision_result","decision_result","interaction_needed","baseProbabilities","probabilities","bettingAnalysis","betting_probabilities","combinedProbabilities","betting_analysis","setTimeout","playNextShot","errorMessage","process","env","NODE_ENV","debug","_nextPreset$shotState","presetName","nextPreset","recommended_shot","_previous$hole_state","nextHoleState","shot_result","resetSimulation","onStartGame","onMakeDecision","onNextShot","useEnhancedLayout","onDecision","onPlayNextShot","onBettingAction","currentPlayer","onEndSimulation"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/simulation/SimulationMode.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useGame } from \"../../context\";\nimport { simulationConfig } from \"../../config/environment\";\nimport { getSimulationMock } from \"./__fixtures__\";\nimport { GameSetup, GamePlay, EnhancedSimulationLayout } from \"./\";\nimport TurnBasedInterface from \"./TurnBasedInterface\";\n// import { Timeline, PokerBettingPanel } from \"./\"; // Removed - not currently used\n// import TVPokerLayout from \"../game/TVPokerLayout\"; // Removed - not currently used\n\nconst {\n  apiUrl: SIMULATION_API_URL,\n  useMocks: USE_SIMULATION_MOCKS,\n  mockPreset: SIMULATION_MOCK_PRESET,\n} = simulationConfig;\n\n// Helper function to safely serialize error details\nconst formatErrorDetail = (detail) => {\n  if (typeof detail === 'object' && detail !== null) {\n    return JSON.stringify(detail);\n  }\n  return detail;\n};\n\nfunction SimulationMode() {\n  // const theme = useTheme(); // Unused for now\n  const { \n    gameState, \n    setGameState, \n    isGameActive, \n    startGame, \n    endGame,\n    loading, \n    setLoading,\n    feedback,\n    addFeedback,\n    clearFeedback,\n    shotState,\n    setShotState,\n    interactionNeeded,\n    setInteractionNeeded,\n    pendingDecision,\n    setPendingDecision,\n    shotProbabilities,\n    setShotProbabilities,\n    hasNextShot,\n    setHasNextShot,\n  } = useGame();\n\n  // Timeline and Poker state\n  const [timelineEvents, setTimelineEvents] = useState([]);\n  const [pokerState, setPokerState] = useState({});\n  const [bettingOptions, setBettingOptions] = useState([]);\n  const [timelineLoading, setTimelineLoading] = useState(false);\n  const [mockStep, setMockStep] = useState(0);\n  \n  // Turn-based mode state\n  const useTurnBasedMode = true;\n  const [turnBasedState, setTurnBasedState] = useState(null);\n\n  // Setup state\n  const [humanPlayer, setHumanPlayer] = useState({\n    id: \"human\",\n    name: \"\",\n    handicap: 18,\n    strength: \"Average\",\n    is_human: true\n  });\n  const [computerPlayers, setComputerPlayers] = useState([]);\n  const [suggestedOpponents, setSuggestedOpponents] = useState([]);\n  const [personalities, setPersonalities] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\n  const [courses, setCourses] = useState({});\n  \n  // Hole decisions - setHoleDecisions used for resetting state between simulations\n  const [, setHoleDecisions] = useState({\n    action: null,\n    requested_partner: null,\n    offer_double: false,\n    accept_double: false\n  });\n  \n  // Note: interactionNeeded and setInteractionNeeded come from useGame() context above\n  // const [pendingDecision, setPendingDecision] = useState({}); // Also from context\n\n  // New state for shot-by-shot simulation\n  // Note: All simulation state (shotProbabilities, shotState, hasNextShot, etc.) comes from useGame() context above\n\n  // GHIN lookup functionality removed - was not being used in current UI\n\n  // GHIN lookup functions removed - functionality not currently exposed in UI\n\n  const isMockSessionEnabled = USE_SIMULATION_MOCKS;\n\n  const resolveMockPreset = useCallback(\n    () => getSimulationMock(SIMULATION_MOCK_PRESET),\n    []\n  );\n\n  const pushMockTimelineEvent = (partialEvent) => {\n    setTimelineEvents((previous) => [\n      {\n        id: partialEvent.id || `mock-event-${Date.now()}`,\n        timestamp: partialEvent.timestamp || new Date().toISOString(),\n        ...partialEvent,\n      },\n      ...previous,\n    ]);\n  };\n\n  const hydrateMockSetup = useCallback(() => {\n    if (!isMockSessionEnabled) {\n      return;\n    }\n\n    const preset = resolveMockPreset();\n    if (!preset) {\n      return;\n    }\n\n    const { setup, gameState: presetGameState } = preset;\n\n    if (setup) {\n      setPersonalities(setup.personalities || []);\n      setSuggestedOpponents(setup.opponents || []);\n      setCourses(setup.courses || {});\n\n      if (Array.isArray(setup.opponents) && setup.opponents.length > 0) {\n        setComputerPlayers(\n          setup.opponents.slice(0, 3).map((opponent, index) => ({\n            id: opponent.id || `mock-opponent-${index + 1}`,\n            name: opponent.name,\n            handicap: opponent.handicap,\n            personality: opponent.personality,\n            is_human: false,\n          }))\n        );\n      }\n    }\n\n    if (presetGameState?.players) {\n      const humanPlayerFromPreset = presetGameState.players.find(\n        (player) => player?.is_human || player?.id === \"human\"\n      );\n\n      if (humanPlayerFromPreset) {\n        setHumanPlayer((prev) => ({\n          ...prev,\n          ...humanPlayerFromPreset,\n        }));\n      }\n    }\n  }, [isMockSessionEnabled, resolveMockPreset, setPersonalities, setSuggestedOpponents, setCourses, setComputerPlayers, setHumanPlayer]);\n\n  const runMockSimulation = () => {\n    const preset = resolveMockPreset();\n    if (!preset) {\n      return;\n    }\n\n    setGameState(preset.gameState);\n    startGame(preset.gameState);\n    setShotState(preset.shotState || null);\n    setShotProbabilities(preset.shotProbabilities || null);\n    setHasNextShot(\n      preset.hasNextShot !== undefined ? Boolean(preset.hasNextShot) : true\n    );\n    setInteractionNeeded(preset.interactionNeeded || null);\n\n    clearFeedback();\n    (preset.feedback || []).forEach((entry) => addFeedback(entry));\n\n    setTimelineEvents(preset.timelineEvents || []);\n    setPokerState(preset.pokerState || {});\n    setBettingOptions(preset.bettingOptions || []);\n    setMockStep(0);\n  };\n\n  const handleMockDecision = (decision) => {\n    if (!isMockSessionEnabled) {\n      return;\n    }\n\n    if (decision.offer_double !== undefined) {\n      handleBettingAction(\n        decision.offer_double ? 'offer_double' : 'decline_double',\n        {\n          label: decision.offer_double ? 'Offer Double' : 'Decline Double',\n        }\n      );\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.accept_double !== undefined) {\n      handleBettingAction(\n        decision.accept_double ? 'accept_double' : 'decline_double',\n        {\n          label: decision.accept_double ? 'Accept Double' : 'Decline Double',\n        }\n      );\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.accept_partnership !== undefined) {\n      const accepted = Boolean(decision.accept_partnership);\n      pushMockTimelineEvent({\n        type: accepted ? 'partnership' : 'solo',\n        description: accepted\n          ? 'Mock: Partnership accepted. Robots brace for teamwork.'\n          : 'Mock: Partnership declined. Captain must go solo.',\n      });\n      addFeedback(\n        accepted\n          ? '✅ Mock confirmation: partnership locked in.'\n          : '⚠️ Mock decline: prepare for solo play.'\n      );\n\n      if (!accepted) {\n        handleBettingAction('offer_double', { label: 'Forced Solo Double' });\n      }\n\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.action === 'request_partner') {\n      const partnerId = decision.requested_partner;\n      const partnerName =\n        gameState?.players?.find((player) => player.id === partnerId)?.name || partnerId || 'selected partner';\n\n      pushMockTimelineEvent({\n        type: 'partnership',\n        description: `Mock: You selected ${partnerName} as your partner.`,\n      });\n\n      addFeedback(`🤝 Mock partner secured: ${partnerName}`);\n\n      const pressurePreset = getSimulationMock('pressureDouble');\n      setInteractionNeeded(pressurePreset.interactionNeeded || null);\n      setShotState(pressurePreset.shotState || shotState);\n      setShotProbabilities(pressurePreset.shotProbabilities || shotProbabilities);\n      setBettingOptions(pressurePreset.bettingOptions || bettingOptions);\n      setPokerState((previous) => ({\n        ...previous,\n        ...pressurePreset.pokerState,\n      }));\n      setMockStep((previous) => previous + 1);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.action === 'go_solo') {\n      pushMockTimelineEvent({\n        type: 'solo',\n        description: 'Mock: Captain elects to go solo and press the wager.',\n      });\n      addFeedback('🚀 Mock solo play engaged. The wager has been doubled.');\n      handleBettingAction('offer_double', { label: 'Mock Solo Double' });\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.action === 'keep_watching') {\n      pushMockTimelineEvent({\n        type: 'captain',\n        description: 'Mock: Captain keeps observing robot tee shots.',\n      });\n      addFeedback('👀 Mock mode: continuing to observe tee shots.');\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    pushMockTimelineEvent({\n      type: 'info',\n      description: `Mock decision recorded: ${JSON.stringify(decision)}`,\n    });\n    addFeedback('ℹ️ Mock decision logged. No backend action triggered.');\n    setInteractionNeeded(null);\n    setPendingDecision({});\n  };\n\n  const fetchInitialData = useCallback(async () => {\n    if (isMockSessionEnabled) {\n      return;\n    }\n\n    try {\n      const [personalitiesRes, opponentsRes, coursesRes] = await Promise.all([\n        fetch(`${SIMULATION_API_URL}/simulation/available-personalities`),\n        fetch(`${SIMULATION_API_URL}/simulation/suggested-opponents`),\n        fetch(`${SIMULATION_API_URL}/courses`)\n      ]);\n\n      const personalitiesData = await personalitiesRes.json();\n      const opponentsData = await opponentsRes.json();\n      const coursesData = await coursesRes.json();\n\n      setPersonalities(personalitiesData.personalities || []);\n      setSuggestedOpponents(opponentsData.opponents || []);\n      setCourses(coursesData || {});\n\n      if (opponentsData.opponents && opponentsData.opponents.length >= 3) {\n        setComputerPlayers([\n          { id: \"comp1\", ...opponentsData.opponents[0], is_human: false },\n          { id: \"comp2\", ...opponentsData.opponents[1], is_human: false },\n          { id: \"comp3\", ...opponentsData.opponents[2], is_human: false }\n        ]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching initial data:\", error);\n    }\n  }, [isMockSessionEnabled, setComputerPlayers, setCourses, setPersonalities, setSuggestedOpponents]);\n\n  const fetchTurnBasedState = useCallback(async () => {\n    if (isMockSessionEnabled) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/turn-based-state`);\n      const data = await response.json();\n\n      if (data.success) {\n        setTurnBasedState(data.turn_based_state);\n      }\n    } catch (error) {\n      console.error('Error fetching turn-based state:', error);\n    }\n  }, [isMockSessionEnabled, setTurnBasedState]);\n\n  useEffect(() => {\n    if (isMockSessionEnabled) {\n      hydrateMockSetup();\n      return;\n    }\n\n    fetchInitialData();\n  }, [fetchInitialData, hydrateMockSetup, isMockSessionEnabled]);\n  \n  // Fetch turn-based state when game is active\n  useEffect(() => {\n    if (isGameActive && useTurnBasedMode && !isMockSessionEnabled) {\n      fetchTurnBasedState();\n      const interval = setInterval(fetchTurnBasedState, 2000);\n      return () => clearInterval(interval);\n    }\n    return undefined;\n  }, [fetchTurnBasedState, isGameActive, isMockSessionEnabled, useTurnBasedMode]);\n  const startSimulation = async () => {\n    if (!isMockSessionEnabled && !humanPlayer.name.trim()) {\n      alert(\"Please enter your name\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Reset all local state for new simulation\n      setGameState(null);\n      endGame();  // Use endGame directly instead of setIsGameActive\n      clearFeedback();\n      setShotProbabilities(null);\n      setShotState(null);\n      setHasNextShot(true);\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      setHoleDecisions({\n        action: null,\n        requested_partner: null,\n        offer_double: false,\n        accept_double: false\n      });\n      // GHIN lookup state reset removed - functionality not currently used\n\n      setMockStep(0);\n\n      if (isMockSessionEnabled) {\n        runMockSimulation();\n        setLoading(false);\n        return;\n      }\n\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/setup`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          human_player: humanPlayer,\n          computer_players: computerPlayers,\n          course_name: selectedCourse || null\n        })\n      });\n      \n      const data = await response.json();\n      if (data.status === \"ok\") {\n        // First set the game state\n        setGameState(data.game_state);\n        \n        // Then start the game with the new state\n        startGame(data.game_state);\n        \n        // Set initial feedback\n        clearFeedback();\n        if (data.feedback && Array.isArray(data.feedback)) {\n          data.feedback.forEach((msg) => addFeedback(msg));\n        } else {\n          addFeedback(data.message || \"Simulation started!\");\n        }\n        \n        // Set next shot availability from the response\n        if (data.next_shot_available !== undefined) {\n          setHasNextShot(data.next_shot_available);\n        } else {\n          setHasNextShot(true);  // Default to true after setup\n        }\n        \n        // Don't immediately play next shot - let the user initiate\n        // This prevents race conditions and gives user control\n      } else {\n        alert(\"Error starting simulation: \" + (formatErrorDetail(data.detail) || \"Unknown error\"));\n      }\n    } catch (error) {\n      console.error(\"Error starting simulation:\", error);\n      alert(\"Error starting simulation\");\n    } finally {\n      if (!isMockSessionEnabled) {\n        setLoading(false);\n      }\n    }\n  };\n\n  // Fetch timeline events from backend\n  const fetchTimelineEvents = async () => {\n    if (!isGameActive || isMockSessionEnabled) return;\n    \n    try {\n      setTimelineLoading(true);\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/timeline`);\n      if (response.ok) {\n        const data = await response.json();\n        setTimelineEvents(data.events || []);\n      }\n    } catch (error) {\n      console.error(\"Error fetching timeline:\", error);\n    } finally {\n      setTimelineLoading(false);\n    }\n  };\n\n  // Fetch poker-style betting state\n  const fetchPokerState = async () => {\n    if (!isGameActive || isMockSessionEnabled) return;\n    \n    try {\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/poker-state`);\n      if (response.ok) {\n        const data = await response.json();\n        setPokerState({\n          pot_size: data.pot_size,\n          base_bet: data.base_bet, \n          current_bet: data.current_bet,\n          betting_phase: data.betting_phase,\n          doubled: data.doubled,\n          players_in: data.players_in,\n          wagering_closed: data.wagering_closed\n        });\n        setBettingOptions(data.betting_options || []);\n      }\n    } catch (error) {\n      console.error(\"Error fetching poker state:\", error);\n    }\n  };\n\n  // Handle poker-style betting actions\n  const handleBettingAction = async (action, option) => {\n    if (isMockSessionEnabled) {\n      const label = option?.label || action;\n      const currentWager = gameState?.betting?.current_wager ?? gameState?.base_wager ?? 1;\n      const updatedWager = action === 'offer_double' ? currentWager * 2 : currentWager;\n\n      setGameState((previous) => {\n        if (!previous) {\n          return previous;\n        }\n\n        return {\n          ...previous,\n          betting: {\n            ...(previous.betting || {}),\n            current_wager: updatedWager,\n          },\n        };\n      });\n\n      setPokerState((previous) => ({\n        ...previous,\n        current_wager:\n          action === 'offer_double'\n            ? (previous?.current_wager ?? currentWager) * 2\n            : previous?.current_wager ?? updatedWager,\n        pending_actions: [],\n        last_mock_action: action,\n      }));\n\n      pushMockTimelineEvent({\n        type: action?.includes('double') ? 'double' : 'bet',\n        description: `Mock: ${label}`,\n      });\n\n      addFeedback(`🃏 Mock betting action captured: ${label}`);\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const decision = {\n        decision_type: action,\n        player_id: 'human',\n        amount: option.amount || 0,\n        ...option\n      };\n\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/betting-decision`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(decision)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success) {\n          // Update game state if provided\n          if (result.game_state) {\n            setGameState(result.game_state);\n          }\n\n          // Refresh timeline and poker state\n          await Promise.all([fetchTimelineEvents(), fetchPokerState()]);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error handling betting action:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Auto-refresh timeline and poker state when game is active\n  useEffect(() => {\n    if (isGameActive && !isMockSessionEnabled) {\n      // Initial fetch\n      fetchTimelineEvents();\n      fetchPokerState();\n\n      // Set up polling for real-time updates\n      const interval = setInterval(() => {\n        fetchTimelineEvents();\n        fetchPokerState();\n      }, 3000); // Update every 3 seconds\n\n      return () => clearInterval(interval);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isGameActive, gameState?.current_hole, gameState?.hole_state?.current_shot_number]); // fetchTimelineEvents and fetchPokerState are stable\n  \n  // Removed unused testNewEndpoints function\n\n  // Add the missing makeDecision function and improve interactive flow\n  const makeDecision = async (decision) => {\n    if (isMockSessionEnabled) {\n      handleMockDecision(decision);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Determine which endpoint to use based on decision type\n      let endpoint = '/simulation/play-hole';\n      let payload = { ...decision };\n      \n      // Handle different decision types\n      if (decision.action === 'request_partner' || decision.action === 'go_solo' || decision.action === 'keep_watching') {\n        // Captain decisions during tee shots\n        endpoint = '/simulation/play-hole';\n        payload = {\n          action: decision.action,\n          requested_partner: decision.requested_partner || decision.partner_id\n        };\n      } else if (decision.accept_partnership !== undefined) {\n        // Partnership response\n        endpoint = '/simulation/play-hole';\n        payload = {\n          accept_partnership: decision.accept_partnership\n        };\n      } else if (decision.offer_double !== undefined) {\n        // Doubling decisions\n        endpoint = '/simulation/betting-decision';\n        payload = {\n          action: decision.offer_double ? 'offer_double' : 'decline_double'\n        };\n      } else if (decision.accept_double !== undefined) {\n        // Double response\n        endpoint = '/simulation/betting-decision';\n        payload = {\n          action: decision.accept_double ? 'accept_double' : 'decline_double'\n        };\n      }\n\n      const response = await fetch(`${SIMULATION_API_URL}${endpoint}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Backend error: ${response.status} - ${errorText}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.status === \"ok\") {\n        // Update game state\n        setGameState(data.game_state);\n        \n        // Add feedback messages\n        if (data.feedback && Array.isArray(data.feedback)) {\n          data.feedback.forEach(msg => addFeedback(msg));\n        } else if (data.decision_result?.message) {\n          addFeedback(`💰 ${data.decision_result.message}`);\n        }\n        \n        // Handle interaction needed\n        if (data.interaction_needed) {\n          setInteractionNeeded(data.interaction_needed);\n        } else {\n          setInteractionNeeded(null);\n          setPendingDecision({});\n        }\n        \n        // Update shot state if available\n        if (data.next_shot_available !== undefined) {\n          setHasNextShot(data.next_shot_available);\n        }\n        \n        const baseProbabilities =\n          data.probabilities && typeof data.probabilities === \"object\" && !Array.isArray(data.probabilities)\n            ? data.probabilities\n            : null;\n\n        const bettingAnalysis =\n          data.betting_probabilities && typeof data.betting_probabilities === \"object\"\n            ? data.betting_probabilities\n            : null;\n\n        if (baseProbabilities || bettingAnalysis) {\n          const combinedProbabilities = {\n            ...(baseProbabilities || {}),\n            ...(bettingAnalysis ? { betting_analysis: bettingAnalysis } : {}),\n          };\n\n          setShotProbabilities(combinedProbabilities);\n        }\n        \n        // Auto-continue if no interaction needed and shots available\n        if (!data.interaction_needed && data.next_shot_available) {\n          // Small delay to let user see the feedback\n          setTimeout(() => {\n            if (!loading && !interactionNeeded) {\n              playNextShot();\n            }\n          }, 1500);\n        }\n        \n      } else {\n        throw new Error(data.message || 'Unknown error occurred');\n      }\n      \n    } catch (error) {\n      console.error(\"Error making decision:\", error);\n      \n      // Provide user-friendly error messages\n      let errorMessage = \"Error making decision: \";\n      if (error.message.includes(\"Backend error: 500\")) {\n        errorMessage += \"Server error - please try again\";\n      } else if (error.message.includes(\"Backend error: 400\")) {\n        errorMessage += \"Invalid decision - please check your choice\";\n      } else if (error.message.includes(\"fetch\")) {\n        errorMessage += \"Network error - check your connection\";\n      } else {\n        errorMessage += error.message;\n      }\n      \n      // Add error to feedback instead of alert\n      addFeedback(`❌ ${errorMessage}`);\n      \n      // Clear interaction needed to prevent stuck state\n      setInteractionNeeded(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const playNextShot = async () => {\n    if (loading || interactionNeeded) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.debug(\"Cannot play shot:\", { loading, interactionNeeded });\n      }\n      return;\n    }\n\n    if (isMockSessionEnabled) {\n      const presetName = mockStep % 2 === 0 ? 'pressureDouble' : SIMULATION_MOCK_PRESET;\n      const nextPreset = getSimulationMock(presetName);\n\n      pushMockTimelineEvent({\n        type: 'shot',\n        description:\n          nextPreset.shotState?.recommended_shot ||\n          `Mock shot progression ${mockStep + 1}.`,\n      });\n\n      addFeedback(`🎯 Mock shot advanced (step ${mockStep + 1}).`);\n\n      setGameState((previous) => {\n        if (!previous) {\n          return nextPreset.gameState || previous;\n        }\n\n        const nextHoleState = {\n          ...(previous.hole_state || {}),\n          ...((nextPreset.gameState && nextPreset.gameState.hole_state) || {}),\n          current_shot_number:\n            (previous.hole_state?.current_shot_number || 0) + 1,\n        };\n\n        return {\n          ...previous,\n          ...(nextPreset.gameState || {}),\n          hole_state: nextHoleState,\n        };\n      });\n\n      setShotState(nextPreset.shotState || null);\n      setShotProbabilities(nextPreset.shotProbabilities || null);\n      setInteractionNeeded(nextPreset.interactionNeeded || null);\n      setBettingOptions(nextPreset.bettingOptions || bettingOptions);\n      setPokerState((previous) => ({\n        ...previous,\n        ...nextPreset.pokerState,\n      }));\n      setHasNextShot(\n        nextPreset.hasNextShot !== undefined\n          ? Boolean(nextPreset.hasNextShot)\n          : false\n      );\n      setMockStep((previous) => previous + 1);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/play-next-shot`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(pendingDecision)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Backend error: ${response.status} - ${errorText}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.status === \"ok\") {\n        setGameState(data.game_state);\n        \n        // Add feedback from the shot simulation\n        if (data.feedback && data.feedback.length > 0) {\n          data.feedback.forEach(msg => addFeedback(msg));\n        }\n        \n        // Handle shot result\n        if (data.shot_result) {\n          addFeedback(`🎯 Shot Result: ${JSON.stringify(data.shot_result)}`);\n        }\n        \n        // Handle interaction needed\n        if (data.interaction_needed) {\n          setInteractionNeeded(data.interaction_needed);\n          setPendingDecision({});\n        } else {\n          setInteractionNeeded(null);\n          setPendingDecision({});\n        }\n        \n        // Update next shot availability\n        setHasNextShot(data.next_shot_available);\n        \n        // Refresh timeline and poker state after shot\n        await Promise.all([fetchTimelineEvents(), fetchPokerState()]);\n        \n      } else {\n        throw new Error(data.message || 'Unknown error occurred');\n      }\n      \n    } catch (error) {\n      console.error(\"Error playing next shot:\", error);\n      \n      let errorMessage = \"Error playing shot: \";\n      if (error.message.includes(\"Backend error: 500\")) {\n        errorMessage += \"Server error - please try again\";\n      } else if (error.message.includes(\"fetch\")) {\n        errorMessage += \"Network error - check your connection\";\n      } else {\n        errorMessage += error.message;\n      }\n      \n      addFeedback(`❌ ${errorMessage}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const resetSimulation = () => {\n    setGameState(null);\n    endGame();  // Use endGame directly instead of setIsGameActive\n    clearFeedback();\n    setHoleDecisions({\n      action: null,\n      requested_partner: null,\n      offer_double: false,\n      accept_double: false\n    });\n    setMockStep(0);\n  };\n  \n  if (!isGameActive) {\n    return (\n      <GameSetup\n        humanPlayer={humanPlayer}\n        setHumanPlayer={setHumanPlayer}\n        computerPlayers={computerPlayers}\n        setComputerPlayers={setComputerPlayers}\n        selectedCourse={selectedCourse}\n        setSelectedCourse={setSelectedCourse}\n        courses={courses}\n        setCourses={setCourses}\n        personalities={personalities}\n        setPersonalities={setPersonalities}\n        suggestedOpponents={suggestedOpponents}\n        setSuggestedOpponents={setSuggestedOpponents}\n        onStartGame={startSimulation}\n      />\n    );\n  }\n\n  // Choose interface based on mode preference\n  if (useTurnBasedMode && turnBasedState) {\n    return (\n      <TurnBasedInterface\n        gameState={{\n          ...gameState,\n          ...(turnBasedState.turn_based_state || turnBasedState),\n          interactionNeeded,\n          hasNextShot,\n          feedback\n        }}\n        onMakeDecision={makeDecision}\n        interactionNeeded={interactionNeeded}\n        feedback={feedback}\n        shotState={shotState}\n        onNextShot={playNextShot}\n        hasNextShot={hasNextShot}\n      />\n    );\n  }\n  \n  // Use Enhanced Simulation Layout with Timeline and Poker Betting\n  const useEnhancedLayout = true; // TODO: Make this a user preference\n\n  if (useEnhancedLayout) {\n    return (\n      <EnhancedSimulationLayout\n        gameState={gameState}\n        shotState={shotState}\n        probabilities={shotProbabilities}\n        onDecision={makeDecision}\n        onPlayNextShot={playNextShot}\n        timelineEvents={timelineEvents}\n        timelineLoading={timelineLoading}\n        pokerState={pokerState}\n        bettingOptions={bettingOptions}\n        onBettingAction={handleBettingAction}\n        currentPlayer=\"human\"\n        interactionNeeded={interactionNeeded}\n        hasNextShot={hasNextShot}\n        feedback={feedback}\n      />\n    );\n  }\n\n  return (\n    <GamePlay\n      gameState={gameState}\n      onEndSimulation={resetSimulation}\n      interactionNeeded={interactionNeeded}\n      onMakeDecision={makeDecision}\n      feedback={feedback}\n      shotState={shotState}\n      shotProbabilities={shotProbabilities}\n      onNextShot={playNextShot}\n      hasNextShot={hasNextShot}\n    />\n  );\n}\n\nexport default SimulationMode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:14:Agent: Inventory backend product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup): list main code entry points (modules/routes/services), highlight key tests per mode, summarize current state & risks.
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:32:Agent: Inventory backend product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup): list main code entry points (modules/routes/services), highlight key tests per mode, summarize current state & risks.
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:357:**Inspecting GHIN service**
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:364:GHIN Service for integrating with Golf Handicap Information Network
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:367:- Syncing player handicaps from GHIN
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:369:- Updating local database with GHIN data
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:370:- Joining GHIN data with existing player statistics
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:384:**Identifying asynchronous behavior with GHIN integration**
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:519:**Reviewing test files for GHIN integration**
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:527:Test GHIN integration to verify API connection and handicap syncing
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:538:from app.services.ghin_service import GHINService
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:880:**Identifying test files for GHIN and analytics**
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:1041:   858	# GHIN Integration Endpoints
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:1112:I'm organizing the current state and risks across different service modes—simulation, signup/matchmaking, Sunday Game, GHIN/Sheets, and analytics—by reviewing their code implementation, test coverage, and dependencies. I'm noting concurrency and environment risks, especially with external APIs and global state reliance, while identifying gaps in test automation and integration. Let's verify analytics methods next to confirm coverage.
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:1493:**Mentioning GHIN script lines**
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:1501:     3	Test GHIN integration to verify API connection and handicap syncing
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:1515:I'll compile a concise but thorough overview of major backend modes, listing entry points with line references, core modules, tests, and current state or risks for each area—including Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets Sync, Analytics, and Legacy Signup. I’ll highlight risks like missing dependency injection, placeholder analytics values, unhandled service return values, and lack of input validation, wrapping up with a next step suggestion focused on adding integration tests and improving GHIN/Sheet client stubs.
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:1522:- GHIN / Sheets Sync — GHIN flows surface at `backend/app/main.py:859`, `backend/app/main.py:893`, `backend/app/main.py:3003` backed by `backend/app/services/ghin_service.py:1`; sheet reconciliation endpoints land at `backend/app/main.py:3193`, `backend/app/main.py:3254`, `backend/app/main.py:3306`, `backend/app/main.py:4024` and rely on `backend/app/services/sheet_integration_service.py:1`; only ad-hoc scripts like `backend/test_ghin_integration.py:1` exist (requiring live credentials) and there are no automated tests for the sheet pipeline, so the current state is “works with real services when properly configured” but fragile—network failures bubble up as 500s, rate limiting/auth renewal is manual, and CSV parsing in `sync_wgp_sheet_data` trusts remote structure.
./.code/agents/63ed56fd-14c9-4fe5-9549-f75489f48ac7/result.txt:1526:Next: consider adding FastAPI TestClient coverage for signups/matchmaking and a mocked GHIN/Sheets harness so the higher-risk endpoints can be validated without external dependencies.
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:12:Refresh Signup/Matchmaking, GHIN/Sheets, Analytics, and Legacy Signup mode mappings. List key FastAPI endpoints, services, tests, feature flags, and risks with path:line references. Capture any TODOs or doc notes impacting these modes.
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:14:Desired output: Signup/GHIN/Analytics/Legacy updated notes
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:30:Refresh Signup/Matchmaking, GHIN/Sheets, Analytics, and Legacy Signup mode mappings. List key FastAPI endpoints, services, tests, feature flags, and risks with path:line references. Capture any TODOs or doc notes impacting these modes.
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:32:Desired output: Signup/GHIN/Analytics/Legacy updated notes
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:213:backend/app/models.py:59:    ghin_id = Column(String, nullable=True, unique=True, index=True)  # GHIN ID for handicap lookup
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:214:backend/app/models.py:60:    ghin_last_updated = Column(String, nullable=True)  # When GHIN data was last synced
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:215:backend/app/models.py:202:# GHIN Integration Models
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:216:backend/app/models.py:203:class GHINScore(Base):
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:218:backend/app/models.py:207:    ghin_id = Column(String, index=True)  # GHIN ID
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:219:backend/app/models.py:217:    synced_at = Column(String)  # When this score was synced from GHIN
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:220:backend/app/models.py:221:class GHINHandicapHistory(Base):
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:222:backend/app/models.py:225:    ghin_id = Column(String, index=True)  # GHIN ID
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:223:backend/app/models.py:230:    synced_at = Column(String)  # When this record was synced from GHIN
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:672:**Reviewing feature flags and GHIN tests**
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:680:     3	Test GHIN integration to verify API connection and handicap syncing
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:691:    14	from app.services.ghin_service import GHINService
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1097:**Identifying GHIN integration points**
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1103:   410	    # GHIN API Integration - Now supports real API calls
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1106:   413	        """Fetch handicap from GHIN API."""
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1107:   414	        logger.info(f"Fetching handicap for GHIN ID {ghin_id}")
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1110:   417	            # Use environment-based GHIN integration
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1111:   418	            if not os.getenv("ENABLE_GHIN_INTEGRATION", "false").lower() == "true":
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1112:   419	                logger.info("GHIN integration disabled, using mock data")
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1116:   423	                logger.error("GHIN JWT token not available")
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1182:**Summarizing Signup, GHIN, and Sheets details**
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1184:I’m organizing notes on key endpoints, services, tests, feature flags, and risks related to Signup, GHIN, and Sheets. I’ll include file paths and line numbers for clarity and point out potential issues like test gaps and hardcoded API URLs to give the user a thorough overview of the codebase components.
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1370:[2025-10-20T15:34:40] exec bash -lc 'grep -Rin "GHIN" docs | head' in /Users/stuartgano/Documents/wolf-goat-pig
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1371:[2025-10-20T15:34:41] bash -lc 'grep -Rin "GHIN" docs | head' succeeded in 779ms:
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1375:docs/prd.md:418:- Real GHIN handicap integration
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1376:docs/architecture.md:192:GET /ghin/lookup               # GHIN golfer lookup
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1377:docs/architecture.md:193:GET /ghin/diagnostic           # GHIN API diagnostic
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1378:docs/architecture.md:457:GHIN_API_USER=<optional>
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1379:docs/architecture.md:458:GHIN_API_PASS=<optional>
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1380:docs/architecture.md:459:GHIN_API_STATIC_TOKEN=<optional>
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1381:docs/status/current-state.md:21:| Third-party integrations | ⚠️ Auth0, GHIN, and email services require secrets supplied via environment variables before production use. |
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1382:docs/DEPLOYMENT.md:57:- `GHIN_API_USER`: (Optional) Your GHIN email
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1383:docs/DEPLOYMENT.md:58:- `GHIN_API_PASS`: (Optional) Your GHIN password  
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1384:docs/DEPLOYMENT.md:59:- `GHIN_API_STATIC_TOKEN`: (Optional) Static token
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1401:I’m organizing detailed bullets covering Signup & Matchmaking, GHIN & Sheets, Analytics, and Legacy Signup with key FastAPI endpoints, services, tests, feature flags, risks, and docs references, aiming for clarity and conciseness in a friendly tone to wrap up the findings.
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1412:**GHIN & Sheets**
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1413:- **FastAPI-GHIN** `backend/app/main.py:859,893,914,2975,3003` cover lookup, per-player sync, diagnostics, handicap-enriched leaderboards, and bulk refresh.
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1416:- **Tests** GHIN relies on the async smoke script `backend/test_ghin_integration.py:23`; no dedicated automated coverage surfaced for sheet endpoints (search only hit legacy payload assertions in `backend/tests/test_legacy_signup_service.py:70`).
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1417:- **Feature Flags** Real API calls require `ENABLE_GHIN_INTEGRATION` plus GHIN credentials (`backend/app/services/ghin_service.py:418`; documented in `docs/architecture.md:457-459`).
./.code/agents/987bd962-3ab0-4ff1-bb91-918d0528d16c/result.txt:1418:- **Risks** GHIN falls back to mock handicaps when flags or JWTs are missing (`backend/app/services/ghin_service.py:418-445`); Sheet sync ships with a hard-coded default spreadsheet and aggressive auto-sync timers (`frontend/src/context/SheetSyncContext.js:10,188`).
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:12:Verify Signup/Matchmaking, GHIN/Sheets, Analytics, and Legacy Signup key endpoints, tests, and active risks with file:line references for final summary.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:30:Verify Signup/Matchmaking, GHIN/Sheets, Analytics, and Legacy Signup key endpoints, tests, and active risks with file:line references for final summary.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:41:[2025-10-20T15:52:00] tool sequential-thinking.sequentialthinking({"thought":"Need to audit repository for specific domain endpoints, tests, risks. Plan must gather relevant files for Signup/Matchmaking, GHIN/Sheets, Analytics, Legacy Signup. Steps: survey backend endpoints, locate tests, evaluate coverage and risks, compile summary.","thoughtNumber":1,"totalThoughts":4,"nextThoughtNeeded":true,"isRevision":false,"needsMoreThoughts":false})
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:42:[2025-10-20T15:52:00] sequential-thinking.sequentialthinking({"thought":"Need to audit repository for specific domain endpoints, tests, risks. Plan must gather relevant files for Signup/Matchmaking, GHIN/Sheets, Analytics, Legacy Signup. Steps: survey backend endpoints, locate tests, evaluate coverage and risks, compile summary.","thoughtNumber":1,"totalThoughts":4,"nextThoughtNeeded":true,"isRevision":false,"needsMoreThoughts":false}) success in 1ms:
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:56:[2025-10-20T15:52:04] tool sequential-thinking.sequentialthinking({"thought":"Outline steps: 1) Identify relevant backend routes and service files via rg. 2) Inspect corresponding tests under backend/tests etc. 3) For GHIN/Sheets, locate integrations maybe separate module. 4) Check frontend references if any. 5) Document observed risks or missing tests. Need to gather line numbers via `nl` or `sed -n` or `rg -n`.","thoughtNumber":2,"totalThoughts":4,"nextThoughtNeeded":true,"isRevision":false,"needsMoreThoughts":false})
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:57:[2025-10-20T15:52:04] sequential-thinking.sequentialthinking({"thought":"Outline steps: 1) Identify relevant backend routes and service files via rg. 2) Inspect corresponding tests under backend/tests etc. 3) For GHIN/Sheets, locate integrations maybe separate module. 4) Check frontend references if any. 5) Document observed risks or missing tests. Need to gather line numbers via `nl` or `sed -n` or `rg -n`.","thoughtNumber":2,"totalThoughts":4,"nextThoughtNeeded":true,"isRevision":false,"needsMoreThoughts":false}) success in 0ms:
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:86:[2025-10-20T15:52:13] tool sequential-thinking.sequentialthinking({"thought":"Once data collected, prepare final summary with categories: Signup/Matchmaking, GHIN/Sheets, Analytics, Legacy Signup. For each list endpoints (with file:line), tests (with file:line), highlight missing coverage or risks. Verified output is 'Other modes verification' maybe mention? Conclude with recommended actions/residual risks. No next thought after plan until data collected.","thoughtNumber":4,"totalThoughts":4,"nextThoughtNeeded":false,"isRevision":false,"needsMoreThoughts":false})
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:87:[2025-10-20T15:52:13] sequential-thinking.sequentialthinking({"thought":"Once data collected, prepare final summary with categories: Signup/Matchmaking, GHIN/Sheets, Analytics, Legacy Signup. For each list endpoints (with file:line), tests (with file:line), highlight missing coverage or risks. Verified output is 'Other modes verification' maybe mention? Conclude with recommended actions/residual risks. No next thought after plan until data collected.","thoughtNumber":4,"totalThoughts":4,"nextThoughtNeeded":false,"isRevision":false,"needsMoreThoughts":false}) success in 0ms:
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:458:**Searching for GHIN endpoints**
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:459:[2025-10-20T15:53:28] exec bash -lc 'grep -R "GHIN" -n backend/app | head' in /Users/stuartgano/Documents/wolf-goat-pig/.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:460:[2025-10-20T15:53:29] bash -lc 'grep -R "GHIN" -n backend/app | head' exited 124 in 1.00s:
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:472:backend/app/models.py:59:    ghin_id = Column(String, nullable=True, unique=True, index=True)  # GHIN ID for handicap lookup
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:473:backend/app/models.py:60:    ghin_last_updated = Column(String, nullable=True)  # When GHIN data was last synced
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:475:backend/app/models.py:207:    ghin_id = Column(String, index=True)  # GHIN ID
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:477:backend/app/models.py:225:    ghin_id = Column(String, index=True)  # GHIN ID
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:486:**Searching for GHIN references**
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:494:869:        from .services.ghin_service import GHINService
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:495:874:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:496:879:        ghin_service = GHINService(db)
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:501:899:    from .services.ghin_service import GHINService
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:502:902:    ghin_service = GHINService(db)
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:520:     2	GHIN Service for integrating with Golf Handicap Information Network
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:523:     5	- Syncing player handicaps from GHIN
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:525:     7	- Updating local database with GHIN data
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:526:     8	- Joining GHIN data with existing player statistics
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:548:     3	Test GHIN integration to verify API connection and handicap syncing
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:559:    14	from app.services.ghin_service import GHINService
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:567:**Searching for GHIN tests**
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:901:**Checking test coverage for GHIN endpoints**
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:902:[2025-10-20T15:55:51] exec bash -lc 'grep -R "GHIN" -n backend/tests' in /Users/stuartgano/Documents/wolf-goat-pig/.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:903:[2025-10-20T15:55:52] bash -lc 'grep -R "GHIN" -n backend/tests' exited 124 in 1.01s:
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:910:[2025-10-20T15:55:57] exec bash -lc 'grep -R "GHIN" -n backend/tests 2>/dev/null | head' in /Users/stuartgano/Documents/wolf-goat-pig
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:911:[2025-10-20T15:55:58] bash -lc 'grep -R "GHIN" -n backend/tests 2>/dev/null | head' succeeded in 1.18s:
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:990:**Searching for GHIN references in docs**
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:991:[2025-10-20T15:56:30] exec bash -lc 'grep -R "GHIN" -n docs | head' in /Users/stuartgano/Documents/wolf-goat-pig
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:992:[2025-10-20T15:56:31] bash -lc 'grep -R "GHIN" -n docs | head' succeeded in 989ms:
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:996:docs/prd.md:418:- Real GHIN handicap integration
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:997:docs/architecture.md:192:GET /ghin/lookup               # GHIN golfer lookup
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:998:docs/architecture.md:193:GET /ghin/diagnostic           # GHIN API diagnostic
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:999:docs/architecture.md:457:GHIN_API_USER=<optional>
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1000:docs/architecture.md:458:GHIN_API_PASS=<optional>
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1001:docs/architecture.md:459:GHIN_API_STATIC_TOKEN=<optional>
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1002:docs/status/current-state.md:21:| Third-party integrations | ⚠️ Auth0, GHIN, and email services require secrets supplied via environment variables before production use. |
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1003:docs/DEPLOYMENT.md:57:- `GHIN_API_USER`: (Optional) Your GHIN email
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1004:docs/DEPLOYMENT.md:58:- `GHIN_API_PASS`: (Optional) Your GHIN password  
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1005:docs/DEPLOYMENT.md:59:- `GHIN_API_STATIC_TOKEN`: (Optional) Static token
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1028:   192	GET /ghin/lookup               # GHIN golfer lookup
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1029:   193	GET /ghin/diagnostic           # GHIN API diagnostic
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1093:I’m checking which parts of the codebase have test coverage, especially around GHIN endpoints and analytics services like PostHole and PlayerService. I want to be sure which API endpoints lack tests and gather specific line numbers from test files for review. This will help me understand potential risks from missing tests or dependencies on live APIs.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1173:frontend/src/components/GHINIntegration.js:10:  const [ghinId, setGhinId] = useState('');
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1174:frontend/src/components/GHINIntegration.js:14:  const [ghinStatus, setGhinStatus] = useState(null);
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1175:frontend/src/components/GHINIntegration.js:38:      const response = await fetch(`${API_URL}/ghin/diagnostic`);
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1176:frontend/src/components/GHINIntegration.js:50:      const response = await fetch(`${API_URL}/leaderboard/ghin-enhanced`);
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1177:frontend/src/components/GHINIntegration.js:61:    if (!selectedPlayer || !ghinId) {
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1178:frontend/src/components/GHINIntegration.js:78:          ghin_id: ghinId
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1179:frontend/src/components/GHINIntegration.js:83:        setMessage(`✅ Added GHIN ID ${ghinId} to ${player.name}`);
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1180:frontend/src/components/GHINIntegration.js:103:      const response = await fetch(`${API_URL}/ghin/sync-player-handicap/${playerId}`, {
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1181:frontend/src/components/GHINIntegration.js:127:      const response = await fetch(`${API_URL}/ghin/sync-handicaps`, {
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1182:frontend/src/components/GHINIntegration.js:182:        {ghinStatus ? (
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1188:[2025-10-20T15:57:32] exec bash -lc "nl -ba frontend/src/components/GHINIntegration.js | sed -n '1,240p'" in /Users/stuartgano/Documents/wolf-goat-pig/.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1189:[2025-10-20T15:57:32] bash -lc "nl -ba frontend/src/components/GHINIntegration.js | sed -n '1,240p'" succeeded in 750ms:
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1198:     6	const GHINIntegration = () => {
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1302:   858	# GHIN Integration Endpoints
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1315:**Checking for search methods in GHINService**
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1336:   244	        """Search for golfers by name using the GHIN API."""
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1338:   246	            raise ConnectionError("GHIN service is not initialized or available.")
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1341:   249	        url = f"{self.GHIN_API_BASE_URL}/golfer_search"
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1428:I’m gathering details on risks like N+1 query issues, environment variable mismatches in GHINService, missing tests on analytics and signup endpoints, and duplicate signup validation gaps. I’m also noting related docs and front-end references to provide a thorough risk and coverage summary with precise file and line info.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1504:I’m gathering detailed references to hard-coded values, missing tests, and risks across key backend and frontend files, including GHIN, sheets integration, signup, matchmaking, analytics, and legacy signup. I’ll organize the final summary with bullet-pointed file:line evidence of endpoints, tests, and risks, noting absent test coverage where relevant, and citing docs where applicable. This will help present a clear, structured verification of current coverage and active issues.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1560:I’m pulling together a detailed summary of signup, matchmaking, GHIN, sheets, analytics, and legacy signup risks and test coverage with precise file and line references. This will highlight missing API tests, duplicate signup risks, environment mismatches, and manual legacy sync operations, referencing both backend and frontend sources plus documentation to give a holistic verification overview.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1570:- **GHIN & Sheets**
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1571:  - GHIN endpoints live in `backend/app/main.py:858-3030` (lookup, sync, diagnostics, leaderboard); sheet ingestion endpoints at `backend/app/main.py:3193-3407` call `SheetIntegrationService`.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1572:  - No automated tests exercise GHIN or sheet endpoints; the suite lacks any `ghin` references under `backend/tests`.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1573:  - Configuration bug: GHIN service reads `GHIN_USERNAME/GHIN_PASSWORD` (`backend/app/services/ghin_service.py:33-34`), while endpoints validate `GHIN_API_USER/GHIN_API_PASS` (`backend/app/main.py:872-874`), preventing successful initialization; `search_golfers` also ignores caller `per_page` by overwriting with `100` (`backend/app/services/ghin_service.py:252-257`).
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1574:  - Frontend GHIN console `frontend/src/components/GHINIntegration.js:24-144` assumes working endpoints but lacks credential/state checks; sheet sync context hardcodes a production spreadsheet and auto-polls the backend (`frontend/src/context/SheetSyncContext.js:11-176`), making unintended external calls every 30 s.
./.code/agents/ec531a74-b55f-456e-97ff-ce2223a6f447/result.txt:1588:Next step I can take: coordinate an API-level pytest module that exercises the signups, GHIN, analytics, and sheet endpoints using test doubles to surface these gaps.
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:14:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:34:Agent: Map backend product modes: Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets sync, Analytics, Legacy Signup. For each, list main FastAPI/CLI entry points, services, and database seeds. Identify corresponding pytest suites or scripts. Note any TODOs, feature flags (like ENABLE_TEST_ENDPOINTS), or risks referenced in code/docs.
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:333:869:        from .services.ghin_service import GHINService
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:334:874:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:335:879:        ghin_service = GHINService(db)
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:340:899:    from .services.ghin_service import GHINService
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:341:902:    ghin_service = GHINService(db)
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:352:**Searching for GHIN and Sheets references**
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:831:**Checking test coverage for GHIN and sheet integration**
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:895:backend/app/course_import.py:49:            "ghin_api_key": os.getenv("GHIN_API_KEY", ""),
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:912:GHIN Service for integrating with Golf Handicap Information Network
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:915:- Syncing player handicaps from GHIN
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:917:- Updating local database with GHIN data
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:918:- Joining GHIN data with existing player statistics
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:994:[2025-10-20T15:18:06] exec bash -lc 'grep -R "GHIN" docs' in /Users/stuartgano/Documents/wolf-goat-pig
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:995:[2025-10-20T15:18:07] bash -lc 'grep -R "GHIN" docs' succeeded in 1.19s:
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:999:docs/prd.md:- Real GHIN handicap integration
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1000:docs/architecture.md:GET /ghin/lookup               # GHIN golfer lookup
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1001:docs/architecture.md:GET /ghin/diagnostic           # GHIN API diagnostic
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1002:docs/architecture.md:GHIN_API_USER=<optional>
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1003:docs/architecture.md:GHIN_API_PASS=<optional>
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1004:docs/architecture.md:GHIN_API_STATIC_TOKEN=<optional>
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1005:docs/status/current-state.md:| Third-party integrations | ⚠️ Auth0, GHIN, and email services require secrets supplied via environment variables before production use. |
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1006:docs/DEPLOYMENT.md:- `GHIN_API_USER`: (Optional) Your GHIN email
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1007:docs/DEPLOYMENT.md:- `GHIN_API_PASS`: (Optional) Your GHIN password  
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1008:docs/DEPLOYMENT.md:- `GHIN_API_STATIC_TOKEN`: (Optional) Static token
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1009:docs/guides/production-setup.md:ENABLE_GHIN_INTEGRATION=false  # Set to true if GHIN configured
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1010:docs/guides/production-setup.md:| **GHIN Integration** | ✅ 90% | Mock data works, real GHIN optional |
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1011:docs/guides/production-setup.md:1. **GHIN API Integration** - Optional: Use real handicap data instead of mock
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1012:docs/UNIFIED_ACTION_API.md:- `GET /ghin/lookup` - GHIN golfer lookup
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1013:docs/UNIFIED_ACTION_API.md:- `GET /ghin/diagnostic` - GHIN API diagnostic
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1014:docs/DEPLOYMENT_CHECKLIST.md:GHIN_API_USER=<optional>
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1015:docs/DEPLOYMENT_CHECKLIST.md:GHIN_API_PASS=<optional>
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1280:**Preparing to extract GHIN endpoint code**
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1296:   858	# GHIN Integration Endpoints
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1324:  2979	    """Get leaderboard enhanced with GHIN handicap data."""
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1327:  2982	        from .services.ghin_service import GHINService
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1329:  2984	        ghin_service = GHINService(db)
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1334:**Extracting code for GHIN handshake analysis**
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1715:I’m gathering key mentions for the legacy signup service, relevant database seeds, and test files covering team formation and other features like sheet integration and simulation. I’m also outlining the Sunday Game service entry points, associated services and tests, feature flags, and potential risk around seeding. Additionally, I will confirm GHIN/Sheets sync endpoints around specific lines for accuracy.
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1722:   913	        raise HTTPException(status_code=500, detail=f"Failed to sync handicap for player {player_id}. Check if player has a GHIN ID and logs for details.")
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1725:   916	    """Diagnostic endpoint for GHIN API configuration"""
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1726:   917	    email = os.getenv("GHIN_API_USER")
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1727:   918	    password = os.getenv("GHIN_API_PASS")
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1728:   919	    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1742:**Summarizing GHIN integration details**
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1744:I'm gathering info on the GHIN diagnostic and sheet integration services, noting relevant endpoints, models, and tests. I'll also highlight that GHIN depends on live HTTP calls and environment feature flags, referencing documentation with precise line numbers to provide a clear overview.
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1772:[2025-10-20T15:22:44] tool sequential-thinking.sequentialthinking({"thought":"Collected key code/doc references per mode. Need to synthesize final report mapping entry points, services, seeds, tests, flags/risks referencing file:line. Ensure to highlight coverage gaps (e.g., GHIN lacks pytest). Next step: draft structured response with bullet sections per mode.","nextThoughtNeeded":true,"thoughtNumber":3,"totalThoughts":6,"isRevision":false,"revisesThought":0,"branchId":"","branchFromThought":0,"needsMoreThoughts":false})
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1773:[2025-10-20T15:22:44] sequential-thinking.sequentialthinking({"thought":"Collected key code/doc references per mode. Need to synthesize final report mapping entry points, services, seeds, tests, flags/risks referencing file:line. Ensure to highlight coverage gaps (e.g., GHIN lacks pytest). Next step: draft structured response with bullet sections per mode.","nextThoughtNeeded":true,"thoughtNumber":3,"totalThoughts":6,"isRevision":false,"revisesThought":0,"branchId":"","branchFromThought":0,"needsMoreThoughts":false}) success in 4ms:
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1823:**GHIN & Sheets Sync**
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1824:- FastAPI entry points: GHIN lookup/diagnostic/sync endpoints (`backend/app/main.py:859`, `backend/app/main.py:893`, `backend/app/main.py:914`) and sheet integration suite (`backend/app/main.py:3193`, `backend/app/main.py:3306`, `backend/app/main.py:4024`).
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1825:- Services: GHIN API adapter (`backend/app/services/ghin_service.py:19`), sheet integration service layered atop statistics (`backend/app/services/sheet_integration_service.py:20`).
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1826:- Seeds: none specific; relies on runtime sync storing `GHINScore`/`GHINHandicapHistory`.
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1827:- Tests & scripts: automated CLI checks for sheet/ghin sync (`scripts/diagnostics/test_sync_endpoints.py:1`, `scripts/diagnostics/test_google_sheets_live_sync.js:1`). No pytest covering GHIN endpoints—live API reliance is a gap.
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1828:- Flags & risks: Requires credentials (`GHIN_API_USER`, `GHIN_API_PASS`, optional `GHIN_API_STATIC_TOKEN`) or requests fail fast (`backend/app/main.py:876`, `backend/app/main.py:917`). Production guide keeps GHIN behind `ENABLE_GHIN_INTEGRATION` flag (`docs/guides/production-setup.md:49`). Status doc warns third-party integrations need secrets provisioned before go-live (`docs/status/current-state.md:24`). Live `httpx` calls mean tests must mock or risk network failures (`backend/app/services/ghin_service.py:40`).  
./.code/agents/d2500510-1eb3-4463-b8e7-50921c694cf1/result.txt:1844:Next steps (optional): 1) add targeted pytest coverage for signup CRUD and GHIN endpoints to close gaps.
./.code/agents/8e850405-6102-422a-9a86-96bbcd928775/result.txt:642:import ghinService, { initializeGHIN } from '../services/ghinService';
./.code/agents/8e850405-6102-422a-9a86-96bbcd928775/result.txt:1645:- APIs: Fetches `GET /leaderboard/ghin-enhanced` and, when GHIN is configured, hydrates via `ghinService.getBatchGolferInfo`; relies on `initializeGHIN()` gating (`frontend/src/components/WGPAnalyticsDashboard.js:30-118`).
./.code/agents/8e850405-6102-422a-9a86-96bbcd928775/result.txt:1647:- Notes/TODOs: GHIN integration remains optional—dashboard logs when the service isn’t initialized and skips lookups (`frontend/src/components/WGPAnalyticsDashboard.js:70-118`); same open frontend verification note applies (`docs/status/current-state.md:14-35`).
./.code/agents/6389/exec-call_eVdwJAu2Ues6kIqP5iFLG7kw.txt:704:        """Test the GHIN diagnostic function directly"""
./.code/agents/6389/exec-call_eVdwJAu2Ues6kIqP5iFLG7kw.txt:705:        print("🔍 GHIN Diagnostic Test")
./.code/agents/6389/exec-call_eVdwJAu2Ues6kIqP5iFLG7kw.txt:718:🔍 GHIN Diagnostic Test
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:14:Agent: Summarize backend code/routes/tests and current risks for all product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets, Analytics, Legacy Signup) using repo context.
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:32:Agent: Summarize backend code/routes/tests and current risks for all product modes (Simulation, Signup/Matchmaking, Sunday Game, GHIN/Sheets, Analytics, Legacy Signup) using repo context.
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:644:[2025-10-20T15:08:36] exec bash -lc 'grep -n "GHIN" -n backend/tests -R' in /Users/stuartgano/Documents/wolf-goat-pig/.
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:645:[2025-10-20T15:08:37] bash -lc 'grep -n "GHIN" -n backend/tests -R' exited 1 in 924ms:
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:763:**Preparing to summarize and assess GHIN service**
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:770:GHIN Service for integrating with Golf Handicap Information Network
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:773:- Syncing player handicaps from GHIN
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:775:- Updating local database with GHIN data
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:776:- Joining GHIN data with existing player statistics
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1067:The main.py file is huge and mixes many concerns with risky patterns like global state and manual DB sessions that could cause concurrency issues or double commits; specific services like simulation, signup, GHIN integration, and analytics each have particular vulnerabilities such as inconsistent state, environment variable mismatches, and insufficient test coverage that I'll carefully note and organize.
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1251:**Gathering line numbers for GHIN references**
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1278:**Locating GHIN endpoint**
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1305:**Searching for GHIN endpoints**
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1332:**Searching for GHINService references**
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1359:**Searching for GHIN endpoint section**
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1386:**Continuing to display GHIN content**
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1392:   858	# GHIN Integration Endpoints
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1401:   867	    """Look up golfers by name using GHIN API"""
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1403:   869	        from .services.ghin_service import GHINService
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1405:   871	        # Get GHIN credentials from environment
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1406:   872	        email = os.getenv("GHIN_API_USER")
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1407:   873	        password = os.getenv("GHIN_API_PASS")
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1408:   874	        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1431:**GHIN & Sheets**
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1432:- **Routes & Services** GHIN lookup/sync endpoints (`backend/app/main.py:858-914`) orchestrate `GHINService` (`backend/app/services/ghin_service.py:1`), while spreadsheet mirroring is implemented via `SheetIntegrationService` (`backend/app/services/sheet_integration_service.py:1`) but has no public routes yet.
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1433:- **Tests** Legacy GHIN behavior is barely exercised—`tests/backend/test_ghin_local.py:1` is mostly scaffolding and skips live calls, and there are no automated checks for sheet import/export.
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1434:- **Risks** Environment variables differ between routes (`GHIN_API_USER/GHIN_API_PASS` at `backend/app/main.py:872-873`) and the service (`GHIN_USERNAME/GHIN_PASSWORD` at `backend/app/services/ghin_service.py:21-26`), so production credentials may never load; async httpx calls run at request time without circuit breaking or rate limiting, risking blocked workers; Sheet integration assumes specific schemas and transformations without validation coverage, so data ingestion could silently corrupt stats.
./.code/agents/af632774-4ec4-4934-964d-e42e2261aba0/result.txt:1446:Potential follow-ups: tighten real HTTP tests for signups/matchmaking and GHIN, refactor global simulation state for multi-game safety, and reconcile GHIN env names before enabling production sync.
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:12:Compile concise updates for Signup/Matchmaking, GHIN/Sheets, Analytics, and Legacy Signup modes. For each mode capture key endpoints/services/tests with path:line, current state/risks (3–5 bullets), and candidate tasks.
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:14:Desired output: Signup/GHIN/Analytics/Legacy concise bullets
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:30:Compile concise updates for Signup/Matchmaking, GHIN/Sheets, Analytics, and Legacy Signup modes. For each mode capture key endpoints/services/tests with path:line, current state/risks (3–5 bullets), and candidate tasks.
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:32:Desired output: Signup/GHIN/Analytics/Legacy concise bullets
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:169:**Searching for GHIN references**
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:319:**Searching for GHIN endpoints**
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:327:869:        from .services.ghin_service import GHINService
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:328:874:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:329:879:        ghin_service = GHINService(db)
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:334:899:    from .services.ghin_service import GHINService
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:335:902:    ghin_service = GHINService(db)
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:523:**Identifying test needs for analytics and GHIN service**
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:530:     2	GHIN Service for integrating with Golf Handicap Information Network
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:533:     5	- Syncing player handicaps from GHIN
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:535:     7	- Updating local database with GHIN data
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:536:     8	- Joining GHIN data with existing player statistics
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:585:     3	Test GHIN integration to verify API connection and handicap syncing
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:596:    14	from app.services.ghin_service import GHINService
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:735:     2	import ghinService, { initializeGHIN } from '../services/ghinService';
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:844:     3	class GHINService {
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:851:    10	   * Initialize GHIN client with credentials
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:852:    11	   * @param {string} username - GHIN username
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:853:    12	   * @param {string} password - GHIN password
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:863:**Inspecting GHIN service initialization**
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:879:   210	const ghinService = new GHINService();
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:882:   213	export const initializeGHIN = async (username, password) => {
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:885:   216	    username = process.env.REACT_APP_GHIN_USERNAME;
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:918:[2025-10-20T15:44:26] tool sequential-thinking.sequentialthinking({"thought":"Collected key files for Signup, GHIN/Sheets, Analytics, and Legacy areas. Next: extract endpoint/service/test refs with line numbers and note state/risks from code/docs. Then craft concise bullet summaries per mode.","thoughtNumber":2,"totalThoughts":6,"nextThoughtNeeded":true,"isRevision":false,"needsMoreThoughts":false})
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:919:[2025-10-20T15:44:26] sequential-thinking.sequentialthinking({"thought":"Collected key files for Signup, GHIN/Sheets, Analytics, and Legacy areas. Next: extract endpoint/service/test refs with line numbers and note state/risks from code/docs. Then craft concise bullet summaries per mode.","thoughtNumber":2,"totalThoughts":6,"nextThoughtNeeded":true,"isRevision":false,"needsMoreThoughts":false}) success in 4ms:
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1054:**Gathering info on GHIN endpoints**
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1068:   858	# GHIN Integration Endpoints
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1081:**Highlighting GHIN service environment variable inconsistency**
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1083:I'm noticing a risk because the GHIN service expects environment variables named `GHIN_USERNAME` and `GHIN_PASSWORD`, but the endpoints use `GHIN_API_USER` and `GHIN_API_PASS`, which could cause failures. Also, the initialization of `GHINService` involves fetching a JWT over the network, which might fail during tests. I plan to check additional GHIN-related endpoints and integration points, including test files and frontend components, to provide a thorough overview and code snippets.
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1084:[2025-10-20T15:45:28] exec bash -lc "nl -ba frontend/src/components/GHINIntegration.js | sed -n '1,200p'" in /Users/stuartgano/Documents/wolf-goat-pig/.
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1085:[2025-10-20T15:45:29] bash -lc "nl -ba frontend/src/components/GHINIntegration.js | sed -n '1,200p'" succeeded in 842ms:
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1094:     6	const GHINIntegration = () => {
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1175:**Identifying key tests for analytics and GHIN/Sheets**
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1317:I've gathered detailed risk points and relevant code paths for Signup/Matchmaking, GHIN/Sheets, Analytics, and Legacy Signup areas, carefully balancing 3 concise risk bullets per section and listing concrete candidate tasks to guide future improvements—all while following instructions to keep the tone clear and friendly.
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1327:**GHIN / Sheets**
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1328:- Endpoints/Services/Tests: `backend/app/main.py#L859`, `backend/app/main.py#L893`, `backend/app/main.py#L3003`, `backend/app/main.py#L3193`, `backend/app/main.py#L3255`, `backend/app/main.py#L3282`, `backend/app/main.py#L3306`, `backend/app/main.py#L4024`, `backend/app/main.py#L4070`; `backend/app/services/ghin_service.py#L27`; `backend/app/services/sheet_integration_service.py#L32`; `frontend/src/components/GHINIntegration.js#L6`; `frontend/src/services/ghinService.js#L14`; `frontend/src/components/GoogleSheetsLiveSync.js#L5`; `backend/test_ghin_integration.py#L23`.
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1329:- Risk: The FastAPI layer reads `GHIN_API_USER`/`GHIN_API_PASS` but `GHINService` looks for `GHIN_USERNAME`/`GHIN_PASSWORD`, so production GHIN requests will fail until the env keys are unified (`backend/app/main.py#L872`, `backend/app/services/ghin_service.py#L33`).
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1330:- Risk: The browser-side singleton initializes GHIN with `REACT_APP_GHIN_USERNAME/PASSWORD`, which means bundling live credentials into the public build (`frontend/src/services/ghinService.js#L212`).
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1331:- Risk: `GHINIntegration` expects `data.handicap_index` and `data.player_name` directly from the POST response, but the API returns `{status, message, data}`—so success toasts will show “undefined” even when the sync works (`frontend/src/components/GHINIntegration.js#L107`, `backend/app/main.py#L906`).
./.code/agents/aebba27c-77e6-4ef4-9966-461f2b0d47c1/result.txt:1332:- Candidate tasks: 1) Standardize GHIN credential env names across backend and service layers; 2) Move GHIN authentication to the API (stop exposing credentials in the bundle) and gate client calls behind JWT; 3) Update the frontend to read `response.data.handicap_index` (or adjust the API payload); 4) Add mocked GHIN sync tests that cover `/ghin/sync-handicaps` and sheet sync endpoints.
Binary file ./.crush/crush.db-wal matches
./.crush/logs/crush.log:182:{"time":"2025-08-27T11:06:59.477747-07:00","level":"INFO","source":{"function":"github.com/charmbracelet/crush/internal/shell.(*loggingAdapter).InfoPersist","file":"/home/runner/work/crush/crush/internal/shell/persistent.go","line":36},"msg":"POSIX command finished","command":"git commit -m \"$(cat <<'EOF'\nrefactor(backend): Finalize GHIN service and endpoints\n\n- Correct GHIN authentication URL to `golfer_login.json`.\n- Implement `search_golfers` method in `GHINService`.\n- Fix `ghin_lookup` endpoint to be `async` and use `GHINService`.\n- Add `/players/all` endpoint to list player profiles for testing.\n\n💘 Generated with Crush\nCo-Authored-By: Crush <crush@charm.land>\nEOF\n)\" ","err":null}
Binary file ./.crush/crush.db matches
./.env.production:34:ENABLE_GHIN_INTEGRATION=false
./.env.production:43:ENABLE_GHIN_INTEGRATION=true
./.env.production:44:GHIN_API_KEY=replace-me-with-ghin-api-key
./.env.production:45:GHIN_CLUB_ID=replace-me-with-ghin-club-idAuth
./.env.production:46:GHIN_API_BASE_URL=https://api.ghin.com/v2
./.env.production:47:GHIN_API_TIMEOUT=10
./.env.production:48:GHIN_API_RETRIES=3
./.env.production:49:GHIN_API_BACKOFF_FACTOR=0.3
./.env.production:50:GHIN_API_MAX_RETRIES=5
./.env.production:51:GHIN_API_RATE_LIMIT=1000    # requests per hour
./.env.production:52:GHIN_API_RATE_LIMIT_WINDOW=3600  # seconds  in an hour
./.env.production:53:GHIN_API_CACHE_EXPIRY=3600  # seconds in an hour
./.env.production:54:GHIN_API_CACHE_MAXSIZE=1000 # max number of cached entries
./.env.production:55:GHIN_API_STATIC_TOKEN=f
./.env.production:56:GHIN_API_USER=stuagano@gmail.com
./.env.production:57:GHIN_API_PASS=yi88$G@@7Ydpt@BD
./render.yaml:25:      - key: ENABLE_GHIN_INTEGRATION
./render.yaml:26:        value: "false"  # Set to "true" only if you want to use real GHIN data
./render.yaml:27:      - key: GHIN_API_USER
./render.yaml:28:        value: ""  # Optional: Set only if ENABLE_GHIN_INTEGRATION=true
./render.yaml:29:      - key: GHIN_API_PASS
./render.yaml:30:        value: ""  # Optional: Set only if ENABLE_GHIN_INTEGRATION=true
./render.yaml:31:      - key: GHIN_API_STATIC_TOKEN
./render.yaml:32:        value: ""  # Optional: Set only if ENABLE_GHIN_INTEGRATION=true
./frontend/frontend.log:24:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:106:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:190:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:272:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:355:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:437:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:520:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:601:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:686:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:824:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:905:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:987:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:1066:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:1151:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:1237:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/frontend.log:1316:  Line 85:6:  React Hook useCallback has missing dependencies: 'fetchGHINData' and 'processLeaderboardData'. Either include them or remove the dependency array  react-hooks/exhaustive-deps
./frontend/node_modules/ghin/CHANGELOG.md:13:- 13b9e58: feat: ✨ Enhance GHIN client with course-related functionalities
./frontend/node_modules/ghin/dist/index.js:239:var CLIENT_SOURCE = "GHINcom";
./frontend/node_modules/ghin/dist/index.js:1045:        throw new ValidationError(`Invalid GHIN number: ${error.message}`);
./frontend/node_modules/ghin/dist/index.js:1125:        throw new ValidationError(`Invalid GHIN number: ${error.message}`);
./frontend/node_modules/ghin/dist/index.cjs:265:var CLIENT_SOURCE = "GHINcom";
./frontend/node_modules/ghin/dist/index.cjs:1071:        throw new ValidationError(`Invalid GHIN number: ${error.message}`);
./frontend/node_modules/ghin/dist/index.cjs:1151:        throw new ValidationError(`Invalid GHIN number: ${error.message}`);
./frontend/node_modules/ghin/README.md:3:⛳ An unofficial wrapper for the GHIN api
./frontend/node_modules/ghin/README.md:10:This TypeScript library provides a convenient and easy-to-use API wrapper for accessing the Golfer Handicap Index Network (GHIN) api unofficially. It allows you to interact with GHIN data, retrieve golfer handicaps, scores, and perform various operations related to golf handicaps.
./frontend/node_modules/ghin/package.json:3:  "description": "⛳ An unofficial api wrapper for the Golf Handicap and Information Network (GHIN)",
./frontend/node_modules/ghin/.env.example:1:GHIN_PASSWORD=
./frontend/node_modules/ghin/.env.example:2:GHIN_USERNAME=
./frontend/node_modules/ghin/playground.ts:6:      GHIN_PASSWORD: string
./frontend/node_modules/ghin/playground.ts:7:      GHIN_USERNAME: string
./frontend/node_modules/ghin/playground.ts:14:    password: process.env.GHIN_PASSWORD as string,
./frontend/node_modules/ghin/playground.ts:15:    username: process.env.GHIN_USERNAME as string,
./frontend/node_modules/ghin/playground.ts:19:    const golfer = await ghinClient.golfers.getOne(Number(process.env.GHIN_USERNAME))
./frontend/node_modules/ghin/src/client/request-client/index.ts:34:const CLIENT_SOURCE = 'GHINcom'
./frontend/node_modules/ghin/src/client/ghin/index.test.ts:10:  CLIENT_SOURCE: 'GHINcom',
./frontend/node_modules/ghin/src/client/ghin/index.ts:199:        throw new ValidationError(`Invalid GHIN number: ${error.message}`)
./frontend/node_modules/ghin/src/client/ghin/index.ts:301:        throw new ValidationError(`Invalid GHIN number: ${error.message}`)
./frontend/node_modules/.cache/tsconfig.tsbuildinfo:1:{"program":{"fileNames":["../typescript/lib/lib.es5.d.ts","../typescript/lib/lib.es2015.d.ts","../typescript/lib/lib.es2016.d.ts","../typescript/lib/lib.es2017.d.ts","../typescript/lib/lib.es2018.d.ts","../typescript/lib/lib.es2019.d.ts","../typescript/lib/lib.es2020.d.ts","../typescript/lib/lib.es2021.d.ts","../typescript/lib/lib.es2022.d.ts","../typescript/lib/lib.esnext.d.ts","../typescript/lib/lib.dom.d.ts","../typescript/lib/lib.dom.iterable.d.ts","../typescript/lib/lib.es2015.core.d.ts","../typescript/lib/lib.es2015.collection.d.ts","../typescript/lib/lib.es2015.generator.d.ts","../typescript/lib/lib.es2015.iterable.d.ts","../typescript/lib/lib.es2015.promise.d.ts","../typescript/lib/lib.es2015.proxy.d.ts","../typescript/lib/lib.es2015.reflect.d.ts","../typescript/lib/lib.es2015.symbol.d.ts","../typescript/lib/lib.es2015.symbol.wellknown.d.ts","../typescript/lib/lib.es2016.array.include.d.ts","../typescript/lib/lib.es2017.object.d.ts","../typescript/lib/lib.es2017.sharedmemory.d.ts","../typescript/lib/lib.es2017.string.d.ts","../typescript/lib/lib.es2017.intl.d.ts","../typescript/lib/lib.es2017.typedarrays.d.ts","../typescript/lib/lib.es2018.asyncgenerator.d.ts","../typescript/lib/lib.es2018.asynciterable.d.ts","../typescript/lib/lib.es2018.intl.d.ts","../typescript/lib/lib.es2018.promise.d.ts","../typescript/lib/lib.es2018.regexp.d.ts","../typescript/lib/lib.es2019.array.d.ts","../typescript/lib/lib.es2019.object.d.ts","../typescript/lib/lib.es2019.string.d.ts","../typescript/lib/lib.es2019.symbol.d.ts","../typescript/lib/lib.es2019.intl.d.ts","../typescript/lib/lib.es2020.bigint.d.ts","../typescript/lib/lib.es2020.date.d.ts","../typescript/lib/lib.es2020.promise.d.ts","../typescript/lib/lib.es2020.sharedmemory.d.ts","../typescript/lib/lib.es2020.string.d.ts","../typescript/lib/lib.es2020.symbol.wellknown.d.ts","../typescript/lib/lib.es2020.intl.d.ts","../typescript/lib/lib.es2020.number.d.ts","../typescript/lib/lib.es2021.promise.d.ts","../typescript/lib/lib.es2021.string.d.ts","../typescript/lib/lib.es2021.weakref.d.ts","../typescript/lib/lib.es2021.intl.d.ts","../typescript/lib/lib.es2022.array.d.ts","../typescript/lib/lib.es2022.error.d.ts","../typescript/lib/lib.es2022.intl.d.ts","../typescript/lib/lib.es2022.object.d.ts","../typescript/lib/lib.es2022.sharedmemory.d.ts","../typescript/lib/lib.es2022.string.d.ts","../typescript/lib/lib.esnext.intl.d.ts","../react-router/dist/development/routeModules-rOzWJJ9x.d.ts","../react-router/dist/development/index-react-server-client-BKpa2trA.d.ts","../react-router/node_modules/cookie/dist/index.d.ts","../react-router/dist/development/register-DiOIlEq5.d.ts","../react-router/dist/development/index.d.ts","../react-router-dom/dist/index.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/shared.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-localstorage.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-memory.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/key-manifest.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/cache-manager.d.ts","../@auth0/auth0-spa-js/dist/typings/cache/index.d.ts","../@auth0/auth0-spa-js/dist/typings/global.d.ts","../@auth0/auth0-spa-js/dist/typings/TokenExchange.d.ts","../@auth0/auth0-spa-js/dist/typings/Auth0Client.d.ts","../@auth0/auth0-spa-js/dist/typings/errors.d.ts","../@auth0/auth0-spa-js/dist/typings/index.d.ts","../@auth0/auth0-react/dist/auth-state.d.ts","../@auth0/auth0-react/dist/auth0-context.d.ts","../@auth0/auth0-react/dist/auth0-provider.d.ts","../@auth0/auth0-react/dist/use-auth0.d.ts","../@auth0/auth0-react/dist/with-auth0.d.ts","../@auth0/auth0-react/dist/with-authentication-required.d.ts","../@auth0/auth0-react/dist/errors.d.ts","../@auth0/auth0-react/dist/index.d.ts","../../src/theme/theme.js","../../src/theme/Provider.js","../../src/context/GameProvider.js","../../src/context/AuthContext.js","../../src/context/SheetSyncContext.js","../../src/context/index.js","../../src/components/ui/Button.js","../../src/components/ui/Card.js","../../src/components/ui/Input.js","../../src/components/ui/Select.js","../../src/components/ui/index.js","../../src/hooks/useOddsCalculation.js","../../src/components/ShotResultWidget.js","../../src/components/BettingOpportunityWidget.js","../../src/components/ProbabilityVisualization.js","../../src/components/EducationalTooltip.js","../../src/components/BettingOddsPanel.js","../../src/components/GameStateWidget.js","../../src/components/StrategicAnalysisWidget.js","../../src/components/AnalyticsDashboard.js","../../src/components/HoleStrategyDisplay.js","../../src/components/EnhancedBettingWidget.js","../../src/components/EnhancedScoringWidget.js","../../src/components/InteractivePlayerCard.js","../../src/utils/api.js","../../src/components/ShotAnalysisWidget.js","../../src/components/ShotVisualizationOverlay.js","../../src/components/GameHistory.js","../../src/components/simulation/SimulationDecisionPanel.tsx","../../src/components/simulation/GamePlay.js","../../src/config/environment.js","../../src/components/simulation/__fixtures__/simulationMockData.js","../../src/components/simulation/__fixtures__/index.js","../../src/components/simulation/TurnBasedInterface.js","../../src/components/simulation/SimulationMode.js","../../src/components/simulation/MonteCarloSimulation.js","../../src/components/simulation/Timeline.js","../../src/components/simulation/PokerBettingPanel.js","../../src/components/simulation/styles/enhancedSimulationLayout.js","../../src/components/simulation/EnhancedSimulationLayout.js","../../src/components/simulation/HoleVisualization.tsx","../../src/components/simulation/index.js","../../src/components/game/CourseImport.js","../../src/components/game/CourseManager.js","../../src/components/PlayerProfileManager.js","../../src/components/game/GameSetupForm.js","../../src/components/game/UnifiedGameInterface.js","../../src/components/GameDashboard.js","../../src/components/WolfGoatPigDashboard.js","../../src/components/HoleVisualization.js","../../src/components/EnhancedWGPInterface.js","../../src/components/ShotRangeAnalyzer.js","../../src/components/ColdStartHandler.js","../../src/components/auth/LoginButton.js","../../src/components/auth/LogoutButton.js","../../src/components/auth/Profile.js","../../src/components/auth/ProtectedRoute.js","../../src/components/auth/AuthHealthCheck.js","../../src/components/auth/index.js","../../src/components/index.js","../../src/components/game/WolfGoatPigGame.js","../../src/components/game/index.js","../../src/components/simulation/FeedAnalyzer.js","../../src/context/TutorialContext.js","../../src/hooks/useTutorialProgress.js","../../src/components/tutorial/ProgressTracker.js","../../src/components/tutorial/TutorialOverlay.js","../../src/components/tutorial/TutorialModule.js","../../src/components/tutorial/InteractiveElement.js","../../src/components/tutorial/modules/GolfBasicsModule.js","../../src/components/tutorial/modules/GameOverviewModule.js","../../src/components/tutorial/modules/TeamFormationModule.js","../../src/components/tutorial/modules/BettingSystemModule.js","../../src/components/tutorial/modules/AdvancedRulesModule.js","../../src/components/tutorial/modules/AnalysisToolsModule.js","../../src/components/tutorial/modules/PracticeGameModule.js","../../src/components/tutorial/TutorialSystem.js","../zod/v3/helpers/typeAliases.d.cts","../zod/v3/helpers/util.d.cts","../zod/v3/index.d.cts","../zod/v3/ZodError.d.cts","../zod/v3/locales/en.d.cts","../zod/v3/errors.d.cts","../zod/v3/helpers/parseUtil.d.cts","../zod/v3/helpers/enumUtil.d.cts","../zod/v3/helpers/errorUtil.d.cts","../zod/v3/helpers/partialUtil.d.cts","../zod/v3/standard-schema.d.cts","../zod/v3/types.d.cts","../zod/v3/external.d.cts","../zod/index.d.cts","../ghin/dist/index.d.ts","../../src/services/ghinService.js","../../src/components/WGPAnalyticsDashboard.js","../../src/components/SheetIntegrationDashboard.js","../../src/components/GoogleSheetsLiveSync.js","../../src/components/Leaderboard.js","../../src/context/MockAuthContext.js","../../src/pages/HomePage.js","../../src/pages/SetupPage.js","../../src/pages/GamePage.js","../../src/pages/index.js","../../src/components/signup/SignupCalendar.js","../../src/components/signup/DailySignupView.js","../../src/components/signup/PlayerAvailability.js","../../src/components/signup/AllPlayersAvailability.js","../../src/components/signup/MatchmakingSuggestions.js","../../src/components/signup/EmailPreferences.js","../../src/pages/SignupPage.js","../../src/pages/AboutPage.js","../../src/pages/RulesPage.js","../../src/pages/AdminPage.js","../../src/components/Navigation.js","../../src/App.js","../../src/index.js","../@types/node/ts5.1/compatibility/disposable.d.ts","../@types/node/ts5.6/compatibility/float16array.d.ts","../@types/node/compatibility/iterators.d.ts","../@types/node/ts5.6/globals.typedarray.d.ts","../@types/node/ts5.6/buffer.buffer.d.ts","../undici-types/utility.d.ts","../undici-types/header.d.ts","../undici-types/readable.d.ts","../undici-types/fetch.d.ts","../undici-types/formdata.d.ts","../undici-types/connector.d.ts","../undici-types/client.d.ts","../undici-types/errors.d.ts","../undici-types/dispatcher.d.ts","../undici-types/global-dispatcher.d.ts","../undici-types/global-origin.d.ts","../undici-types/pool-stats.d.ts","../undici-types/pool.d.ts","../undici-types/handlers.d.ts","../undici-types/balanced-pool.d.ts","../undici-types/h2c-client.d.ts","../undici-types/agent.d.ts","../undici-types/mock-interceptor.d.ts","../undici-types/mock-call-history.d.ts","../undici-types/mock-agent.d.ts","../undici-types/mock-client.d.ts","../undici-types/mock-pool.d.ts","../undici-types/mock-errors.d.ts","../undici-types/proxy-agent.d.ts","../undici-types/env-http-proxy-agent.d.ts","../undici-types/retry-handler.d.ts","../undici-types/retry-agent.d.ts","../undici-types/api.d.ts","../undici-types/cache-interceptor.d.ts","../undici-types/interceptors.d.ts","../undici-types/util.d.ts","../undici-types/cookies.d.ts","../undici-types/patch.d.ts","../undici-types/websocket.d.ts","../undici-types/eventsource.d.ts","../undici-types/diagnostics-channel.d.ts","../undici-types/content-type.d.ts","../undici-types/cache.d.ts","../undici-types/index.d.ts","../@types/node/globals.d.ts","../@types/node/assert.d.ts","../@types/node/assert/strict.d.ts","../@types/node/async_hooks.d.ts","../@types/node/buffer.d.ts","../@types/node/child_process.d.ts","../@types/node/cluster.d.ts","../@types/node/console.d.ts","../@types/node/constants.d.ts","../@types/node/crypto.d.ts","../@types/node/dgram.d.ts","../@types/node/diagnostics_channel.d.ts","../@types/node/dns.d.ts","../@types/node/dns/promises.d.ts","../@types/node/domain.d.ts","../@types/node/dom-events.d.ts","../@types/node/events.d.ts","../@types/node/fs.d.ts","../@types/node/fs/promises.d.ts","../@types/node/http.d.ts","../@types/node/http2.d.ts","../@types/node/https.d.ts","../@types/node/inspector.d.ts","../@types/node/module.d.ts","../@types/node/net.d.ts","../@types/node/os.d.ts","../@types/node/path.d.ts","../@types/node/perf_hooks.d.ts","../@types/node/process.d.ts","../@types/node/punycode.d.ts","../@types/node/querystring.d.ts","../@types/node/readline.d.ts","../@types/node/readline/promises.d.ts","../@types/node/repl.d.ts","../@types/node/sea.d.ts","../@types/node/sqlite.d.ts","../@types/node/stream.d.ts","../@types/node/stream/promises.d.ts","../@types/node/stream/consumers.d.ts","../@types/node/stream/web.d.ts","../@types/node/string_decoder.d.ts","../@types/node/test.d.ts","../@types/node/timers.d.ts","../@types/node/timers/promises.d.ts","../@types/node/tls.d.ts","../@types/node/trace_events.d.ts","../@types/node/tty.d.ts","../@types/node/url.d.ts","../@types/node/util.d.ts","../@types/node/v8.d.ts","../@types/node/vm.d.ts","../@types/node/wasi.d.ts","../@types/node/worker_threads.d.ts","../@types/node/zlib.d.ts","../@types/node/ts5.1/index.d.ts","../collect-v8-coverage/index.d.ts","../@types/istanbul-lib-coverage/index.d.ts","../@jest/console/build/types.d.ts","../@jest/console/build/BufferedConsole.d.ts","../@jest/console/build/CustomConsole.d.ts","../@jest/console/build/NullConsole.d.ts","../@jest/types/build/Global.d.ts","../@jest/types/build/Circus.d.ts","../chalk/index.d.ts","../@types/istanbul-lib-report/index.d.ts","../@types/istanbul-reports/index.d.ts","../@types/yargs-parser/index.d.ts","../@types/yargs/index.d.ts","../@jest/types/build/Config.d.ts","../@jest/types/build/TestResult.d.ts","../@jest/types/build/Transform.d.ts","../@jest/types/build/index.d.ts","../@types/stack-utils/index.d.ts","../jest-message-util/build/types.d.ts","../jest-message-util/build/index.d.ts","../@jest/console/build/getConsoleOutput.d.ts","../@jest/console/build/index.d.ts","../@types/graceful-fs/index.d.ts","../jest-haste-map/build/HasteFS.d.ts","../jest-haste-map/build/types.d.ts","../jest-haste-map/build/ModuleMap.d.ts","../jest-haste-map/build/index.d.ts","../jest-resolve/build/ModuleNotFoundError.d.ts","../jest-resolve/build/shouldLoadAsEsm.d.ts","../jest-resolve/build/types.d.ts","../jest-resolve/build/resolver.d.ts","../jest-resolve/build/utils.d.ts","../jest-resolve/build/index.d.ts","../@jest/test-result/build/types.d.ts","../@jest/test-result/build/formatTestResults.d.ts","../@jest/test-result/build/helpers.d.ts","../@jest/test-result/build/index.d.ts","../jest-changed-files/build/types.d.ts","../jest-changed-files/build/index.d.ts","../jest-mock/build/index.d.ts","../@jest/fake-timers/build/legacyFakeTimers.d.ts","../@jest/fake-timers/build/modernFakeTimers.d.ts","../@jest/fake-timers/build/index.d.ts","../@jest/environment/build/index.d.ts","../jest-diff/build/cleanupSemantic.d.ts","../pretty-format/build/types.d.ts","../pretty-format/build/index.d.ts","../jest-diff/build/types.d.ts","../jest-diff/build/diffLines.d.ts","../jest-diff/build/printDiffs.d.ts","../jest-diff/build/index.d.ts","../jest-matcher-utils/build/index.d.ts","../expect/build/jestMatchersObject.d.ts","../expect/build/types.d.ts","../expect/build/index.d.ts","../@jest/globals/build/index.d.ts","../callsites/index.d.ts","../@jest/source-map/build/types.d.ts","../@jest/source-map/build/getCallsite.d.ts","../@jest/source-map/build/index.d.ts","../@jest/transform/node_modules/source-map/source-map.d.ts","../@jest/transform/build/types.d.ts","../@jest/transform/build/ScriptTransformer.d.ts","../@jest/transform/build/shouldInstrument.d.ts","../@jest/transform/build/enhanceUnexpectedTokenMessage.d.ts","../@jest/transform/build/index.d.ts","../jest-runtime/build/types.d.ts","../jest-runtime/build/index.d.ts","../@jest/core/build/types.d.ts","../@jest/core/build/SearchSource.d.ts","../@jest/reporters/build/getResultHeader.d.ts","../@jest/reporters/build/generateEmptyCoverage.d.ts","../@jest/reporters/build/CoverageWorker.d.ts","../@jest/reporters/build/types.d.ts","../@jest/reporters/build/BaseReporter.d.ts","../@jest/reporters/build/CoverageReporter.d.ts","../@jest/reporters/build/DefaultReporter.d.ts","../@jest/reporters/build/NotifyReporter.d.ts","../@jest/reporters/build/SummaryReporter.d.ts","../@jest/reporters/build/VerboseReporter.d.ts","../@jest/reporters/build/index.d.ts","../emittery/index.d.ts","../@jest/core/build/TestWatcher.d.ts","../@jest/core/build/TestScheduler.d.ts","../@jest/core/build/cli/index.d.ts","../@jest/core/build/version.d.ts","../@jest/core/build/jest.d.ts","../jest-cli/build/cli/index.d.ts","../jest-cli/build/index.d.ts","../jest/build/jest.d.ts","../@types/aria-query/index.d.ts","../@testing-library/jest-dom/types/matchers.d.ts","../@testing-library/jest-dom/types/jest.d.ts","../@testing-library/jest-dom/types/index.d.ts","../../src/setupTests.js","../../src/__mocks__/react-router-dom.js","../../src/__tests__/fixtures/gameFixtures.js","../@testing-library/dom/types/matches.d.ts","../@testing-library/dom/types/wait-for.d.ts","../@testing-library/dom/types/query-helpers.d.ts","../@testing-library/dom/types/queries.d.ts","../@testing-library/dom/types/get-queries-for-element.d.ts","../@testing-library/dom/types/screen.d.ts","../@testing-library/dom/types/wait-for-element-to-be-removed.d.ts","../@testing-library/dom/types/get-node-text.d.ts","../@testing-library/dom/types/events.d.ts","../@testing-library/dom/types/pretty-dom.d.ts","../@testing-library/dom/types/role-helpers.d.ts","../@testing-library/dom/types/config.d.ts","../@testing-library/dom/types/suggestions.d.ts","../@testing-library/dom/types/index.d.ts","../@testing-library/react/types/index.d.ts","../../src/__tests__/utils/testHelpers.js","../../src/components/EmailSettings.js","../../src/components/GHINIntegration.js","../../src/hooks/usePlayerProfile.js","../../src/components/GameStatsTracker.js","../../src/components/PerformanceAnalytics.js","../../src/components/PlayerStatistics.js","../@testing-library/user-event/dist/types/event/eventMap.d.ts","../@testing-library/user-event/dist/types/event/types.d.ts","../@testing-library/user-event/dist/types/event/dispatchEvent.d.ts","../@testing-library/user-event/dist/types/event/focus.d.ts","../@testing-library/user-event/dist/types/event/input.d.ts","../@testing-library/user-event/dist/types/utils/click/isClickableInput.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Blob.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/DataTransfer.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/FileList.d.ts","../@testing-library/user-event/dist/types/utils/dataTransfer/Clipboard.d.ts","../@testing-library/user-event/dist/types/utils/edit/timeValue.d.ts","../@testing-library/user-event/dist/types/utils/edit/isContentEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/isEditable.d.ts","../@testing-library/user-event/dist/types/utils/edit/maxLength.d.ts","../@testing-library/user-event/dist/types/utils/edit/setFiles.d.ts","../@testing-library/user-event/dist/types/utils/focus/cursor.d.ts","../@testing-library/user-event/dist/types/utils/focus/getActiveElement.d.ts","../@testing-library/user-event/dist/types/utils/focus/getTabDestination.d.ts","../@testing-library/user-event/dist/types/utils/focus/isFocusable.d.ts","../@testing-library/user-event/dist/types/utils/focus/selection.d.ts","../@testing-library/user-event/dist/types/utils/focus/selector.d.ts","../@testing-library/user-event/dist/types/utils/keyDef/readNextDescriptor.d.ts","../@testing-library/user-event/dist/types/utils/misc/cloneEvent.d.ts","../@testing-library/user-event/dist/types/utils/misc/findClosest.d.ts","../@testing-library/user-event/dist/types/utils/misc/getDocumentFromNode.d.ts","../@testing-library/user-event/dist/types/utils/misc/getTreeDiff.d.ts","../@testing-library/user-event/dist/types/utils/misc/getWindow.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDescendantOrSelf.d.ts","../@testing-library/user-event/dist/types/utils/misc/isElementType.d.ts","../@testing-library/user-event/dist/types/utils/misc/isVisible.d.ts","../@testing-library/user-event/dist/types/utils/misc/isDisabled.d.ts","../@testing-library/user-event/dist/types/utils/misc/level.d.ts","../@testing-library/user-event/dist/types/utils/misc/wait.d.ts","../@testing-library/user-event/dist/types/utils/pointer/cssPointerEvents.d.ts","../@testing-library/user-event/dist/types/utils/index.d.ts","../@testing-library/user-event/dist/types/document/UI.d.ts","../@testing-library/user-event/dist/types/document/getValueOrTextContent.d.ts","../@testing-library/user-event/dist/types/document/copySelection.d.ts","../@testing-library/user-event/dist/types/document/trackValue.d.ts","../@testing-library/user-event/dist/types/document/index.d.ts","../@testing-library/user-event/dist/types/event/selection/getInputRange.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelection.d.ts","../@testing-library/user-event/dist/types/event/selection/moveSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/modifySelectionPerMouse.d.ts","../@testing-library/user-event/dist/types/event/selection/selectAll.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelectionRange.d.ts","../@testing-library/user-event/dist/types/event/selection/setSelection.d.ts","../@testing-library/user-event/dist/types/event/selection/updateSelectionOnFocus.d.ts","../@testing-library/user-event/dist/types/event/selection/index.d.ts","../@testing-library/user-event/dist/types/event/index.d.ts","../@testing-library/user-event/dist/types/system/pointer/buttons.d.ts","../@testing-library/user-event/dist/types/system/pointer/shared.d.ts","../@testing-library/user-event/dist/types/system/pointer/index.d.ts","../@testing-library/user-event/dist/types/system/index.d.ts","../@testing-library/user-event/dist/types/system/keyboard.d.ts","../@testing-library/user-event/dist/types/options.d.ts","../@testing-library/user-event/dist/types/convenience/click.d.ts","../@testing-library/user-event/dist/types/convenience/hover.d.ts","../@testing-library/user-event/dist/types/convenience/tab.d.ts","../@testing-library/user-event/dist/types/convenience/index.d.ts","../@testing-library/user-event/dist/types/keyboard/index.d.ts","../@testing-library/user-event/dist/types/clipboard/copy.d.ts","../@testing-library/user-event/dist/types/clipboard/cut.d.ts","../@testing-library/user-event/dist/types/clipboard/paste.d.ts","../@testing-library/user-event/dist/types/clipboard/index.d.ts","../@testing-library/user-event/dist/types/pointer/index.d.ts","../@testing-library/user-event/dist/types/utility/clear.d.ts","../@testing-library/user-event/dist/types/utility/selectOptions.d.ts","../@testing-library/user-event/dist/types/utility/type.d.ts","../@testing-library/user-event/dist/types/utility/upload.d.ts","../@testing-library/user-event/dist/types/utility/index.d.ts","../@testing-library/user-event/dist/types/setup/api.d.ts","../@testing-library/user-event/dist/types/setup/directApi.d.ts","../@testing-library/user-event/dist/types/setup/setup.d.ts","../@testing-library/user-event/dist/types/setup/index.d.ts","../@testing-library/user-event/dist/types/index.d.ts","../../src/components/__tests__/BettingOddsPanel.test.js","../../src/components/__tests__/GameDashboard.test.js","../../src/components/__tests__/Navigation.test.js","../../src/components/__tests__/NewComponents.test.js","../../src/components/__tests__/PerformanceAnalytics.test.js","../../src/components/__tests__/PlayerProfileManager.test.js","../../src/components/__tests__/ShotAnalysisWidget.test.js","../../src/components/__tests__/ShotVisualizationOverlay.test.js","../../src/components/__tests__/UnifiedGameInterface.integration.test.js","../../src/components/__tests__/WGPAnalyticsDashboard.test.js","../../src/components/analytics/PostHoleAnalytics.js","../../src/components/email/EmailSettings.js","../../src/components/game/TVPokerLayout.js","../../src/components/game/__tests__/UnifiedGameInterface.test.js","../../src/components/practice/EnhancedPracticeMode.js","../../src/components/signup/__tests__/AllPlayersAvailability.test.js","../../src/components/signup/__tests__/MatchmakingSuggestions.test.js","../../src/components/signup/__tests__/PlayerAvailability.test.js","../../src/components/simulation/GameSetup.tsx","../../src/components/simulation/__tests__/GamePlay.test.js","../../src/components/simulation/__tests__/GameSetup.test.js","../../src/components/simulation/__tests__/SimulationMode.probabilities.test.js","../../src/components/simulation/__tests__/SimulationMode.test.js","../../src/components/tutorial/index.js","../../src/components/tutorial/__tests__/InteractiveElement.test.js","../../src/components/tutorial/__tests__/ProgressTracker.test.js","../../src/components/tutorial/__tests__/TutorialSystem.test.js","../../src/components/tutorial/__tests__/hooks.test.js","../../src/components/ui/__tests__/Button.test.js","../../src/components/ui/__tests__/UIComponents.test.js","../../src/context/__tests__/GameProvider.shotProbabilities.test.js","../../src/context/__tests__/GameProvider.test.js","../../src/hooks/useAuth.js","../../src/hooks/useGameApi.js","../../src/hooks/usePostHoleAnalytics.js","../../src/hooks/useSimulationApi.js","../../src/hooks/__tests__/usePlayerProfile.test.js","../../src/pages/__tests__/AboutPage.test.js","../../src/pages/__tests__/AdminPage.test.js","../../src/pages/__tests__/GamePage.test.js","../../src/pages/__tests__/HomePage.test.js","../../src/pages/__tests__/RulesPage.test.js","../../src/pages/__tests__/SetupPage.test.js","../../src/pages/__tests__/SignupPage.test.js","../../src/utils/__tests__/api.test.js","../@babel/types/lib/index.d.ts","../@types/babel__generator/index.d.ts","../@babel/parser/typings/babel-parser.d.ts","../@types/babel__template/index.d.ts","../@types/babel__traverse/index.d.ts","../@types/babel__core/index.d.ts","../@types/connect/index.d.ts","../@types/body-parser/index.d.ts","../@types/bonjour/index.d.ts","../@types/mime/index.d.ts","../@types/send/index.d.ts","../@types/qs/index.d.ts","../@types/range-parser/index.d.ts","../@types/express-serve-static-core/index.d.ts","../@types/connect-history-api-fallback/index.d.ts","../@types/eslint/helpers.d.ts","../@types/estree/index.d.ts","../@types/json-schema/index.d.ts","../@types/eslint/index.d.ts","../@types/eslint-scope/index.d.ts","../@types/http-errors/index.d.ts","../@types/serve-static/index.d.ts","../@types/express/node_modules/@types/express-serve-static-core/index.d.ts","../@types/express/index.d.ts","../@types/html-minifier-terser/index.d.ts","../@types/http-proxy/index.d.ts","../@types/json5/index.d.ts","../@types/node-forge/index.d.ts","../@types/parse-json/index.d.ts","../@types/prettier/index.d.ts","../@types/q/index.d.ts","../@types/resolve/index.d.ts","../@types/retry/index.d.ts","../@types/semver/classes/semver.d.ts","../@types/semver/functions/parse.d.ts","../@types/semver/functions/valid.d.ts","../@types/semver/functions/clean.d.ts","../@types/semver/functions/inc.d.ts","../@types/semver/functions/diff.d.ts","../@types/semver/functions/major.d.ts","../@types/semver/functions/minor.d.ts","../@types/semver/functions/patch.d.ts","../@types/semver/functions/prerelease.d.ts","../@types/semver/functions/compare.d.ts","../@types/semver/functions/rcompare.d.ts","../@types/semver/functions/compare-loose.d.ts","../@types/semver/functions/compare-build.d.ts","../@types/semver/functions/sort.d.ts","../@types/semver/functions/rsort.d.ts","../@types/semver/functions/gt.d.ts","../@types/semver/functions/lt.d.ts","../@types/semver/functions/eq.d.ts","../@types/semver/functions/neq.d.ts","../@types/semver/functions/gte.d.ts","../@types/semver/functions/lte.d.ts","../@types/semver/functions/cmp.d.ts","../@types/semver/functions/coerce.d.ts","../@types/semver/classes/comparator.d.ts","../@types/semver/classes/range.d.ts","../@types/semver/functions/satisfies.d.ts","../@types/semver/ranges/max-satisfying.d.ts","../@types/semver/ranges/min-satisfying.d.ts","../@types/semver/ranges/to-comparators.d.ts","../@types/semver/ranges/min-version.d.ts","../@types/semver/ranges/valid.d.ts","../@types/semver/ranges/outside.d.ts","../@types/semver/ranges/gtr.d.ts","../@types/semver/ranges/ltr.d.ts","../@types/semver/ranges/intersects.d.ts","../@types/semver/ranges/simplify.d.ts","../@types/semver/ranges/subset.d.ts","../@types/semver/internals/identifiers.d.ts","../@types/semver/index.d.ts","../@types/serve-index/index.d.ts","../@types/sockjs/index.d.ts","../@types/trusted-types/lib/index.d.ts","../@types/trusted-types/index.d.ts","../@types/ws/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9","746d62152361558ea6d6115cf0da4dd10ede041d14882ede3568bce5dc4b4f1f","d11a03592451da2d1065e09e61f4e2a9bf68f780f4f6623c18b57816a9679d17","aea179452def8a6152f98f63b191b84e7cbd69b0e248c91e61fb2e52328abe8c",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"f3d4da15233e593eacb3965cde7960f3fddf5878528d882bcedd5cbaba0193c7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"6c55633c733c8378db65ac3da7a767c3cf2cf3057f0565a9124a16a3a2019e87","affectsGlobalScope":true},{"version":"fb4416144c1bf0323ccbc9afb0ab289c07312214e8820ad17d709498c865a3fe","affectsGlobalScope":true},{"version":"5b0ca94ec819d68d33da516306c15297acec88efeb0ae9e2b39f71dbd9685ef7","affectsGlobalScope":true},{"version":"34c839eaaa6d78c8674ae2c37af2236dee6831b13db7b4ef4df3ec889a04d4f2","affectsGlobalScope":true},{"version":"34478567f8a80171f88f2f30808beb7da15eac0538ae91282dd33dce928d98ed","affectsGlobalScope":true},{"version":"ab7d58e6161a550ff92e5aff755dc37fe896245348332cd5f1e1203479fe0ed1","affectsGlobalScope":true},{"version":"6bda95ea27a59a276e46043b7065b55bd4b316c25e70e29b572958fa77565d43","affectsGlobalScope":true},{"version":"aedb8de1abb2ff1095c153854a6df7deae4a5709c37297f9d6e9948b6806fa66","affectsGlobalScope":true},{"version":"a4da0551fd39b90ca7ce5f68fb55d4dc0c1396d589b612e1902f68ee090aaada","affectsGlobalScope":true},{"version":"11ffe3c281f375fff9ffdde8bbec7669b4dd671905509079f866f2354a788064","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"bf237922b06c558ee82c997549c28541d2e4c60a7c449c635cd7116663bff11b","ec646851bb3302d774d4fbec3555fdf0cea4dc30a7f2c663d66387653abecdd6","5a7ebcf5fe8ac590dd03af1bbe426dfed639a3490fb1e5d6b934e45643b8ea1b","b7e1119637195dffe2cf05b0807d5afff3d89d20e05c8aff85a003386013e9bd",{"version":"7f9844af49faece125da77aa099fd5c1da64270e31b414edef84f159a15f61b7","affectsGlobalScope":true},"9f49b8064f63b7b3275a8247692967da2458734ea9afcf5ffd86b5c177674740","fcc9e6f2da1759e4abe577f938f7d6eec119963abae917c290913a537cf8cd89","67b56598de49ea49e177ed09417ec97c642775a4fe73259df996923517eb652d","98d8c2cce0da7f218eda38d46b3d715adfb4c99c59ad67dbe0fd105113292f9f","d562cf993f138dc03c5b1aed57d7d80e96555ce41365e0e79db9b93a0b49a6b2","4e7fded78c59e63cc94cd8c0c920b287b885ae0512c412e0f7a890b0d700bc3d","7fc1326aae51ca02c357b8391270858387cce4afa9928d6580a42119dfcca9eb","a95d033d647339e3932fd15c01ae763c0e6fba915418c01b2fb1b1d4063a6d7f","9ec473f428d74650f0ce05b81e6a27fc84906a36838fd11875fcae5193f3cbbb","acdd8a10fac8748502509cb57bdd53a7c5b85fa4a2ee3a560c00a40404ff65cb","59bd81abd493fa554955bf7dd7006273192ea8d553d3e4a819e866a14725cdfe","a29acac88d5df222deeb58568f2e56b42075d9b043b4f158b7a55a8eed18985f","56d09baa6411529b9edfed10d627aa294412c3aa33d26e1254b8f1422ecfbfd9","31feea0066a629bfcacfc80bd5ec1551d26cf7a8dad949dc24cde82307748a45","b23ee85f4ae6affbd6d92df4a305756b2d7a7d687108bac625b83d662aabe063","c541b4b619ff47a8f1d2e242f69cab2f1490797934a31b9d15fe1b9d59183626","10f0161e27ec211a27512406022e5381ee1eff148c356579a07392c1cab67205","50d0abf4fb3d7fa0d929459ec9560f6761eb9e80bc568e6367868f6402fae0b5","4be1e84f8a23aa1c9b37669820a5dc6c0d664131c2549b54b40ec225abcff77c","2d6acf4fe93fb92f0259c6bbed436112c7daf0ad9e1318f2f0bd2613083261f0","58024638b80b48562cce5f0e5f65ce5924a2309224400787a4e40dea0ce3c7f4","ed7ed4acdc5b5e7f531cb8a2b62cadc0a8a88d054637965ba585a370f3538dbc","59453dd1a944cc11ef41fc0e21d4afaa4906eb4015fc605b423776ab26be5c35","12bb43d7c61d1b5e4340ed3599bbdcdd8d781994f08a94f010c88d4d26f285bb","f40d60f92714d69e75d0f03e3b51acbe2ff52064dd0e4774fa818ff72f043ea4","797cfbacb483d815b7819b3cf867533af99a630f2beea11cc26592b0c2d42cb1","4b26040bc29ea84ee18561c65d6994a07cfb168240c5bda0eb04bfb48190b219","06709b34a5d72762ab905843ac3443277ab884dc32fce8b3b0d51bcdb5064b74","cbb6fbcffa54cb81308247f17b64f1cb22ca015fba420fdb7c2c61c3a2adfcda","d37a6f1e29ec3244911f7d28cf815251ef113387c8618426acdab8d153940bbc","0e0af8c8426a911142d13768859c1b49e120f60bb153ce6dd197e30f9b8b6820","87e68d28db4ab68bfa35d6d1b57ea233d90e1c678f3da187f796075ff3a8e85d","afdf59e4068da139bff61ba0887ae9c76f46373f95932efd54ee7910b6502a1a","b07d57ba8d3e203d16450dd2426270030368821d3d418b291a05801a362d4d99","ecd8abab263e35cda153af96d4f29c711ff477a4c2bd81698cdfc727836547e3","e9a208aad09ea42f46bdd52d309774b73e7a02762281c51377973025a9cb7250","d264ffe701d5be437313c4f6f7d8f27ce029fc5cc3c51e42e9b60bed6d943e34","d2dcfbb9046a3f918ba22ebc91310f31606cebca173944df0544dc14ed26939a","2bef42b3474c69a11119442d099d6ee4952a9e1ee2674a76df68e67ee853c9f8","0880a3c557fb7ce460173df4c71dc39365359c053da107caad5fbe03a249c69e","f636742cc740b78907aa1010d1fc25cd7d2e5966a3aa149d74ce9370627ff852","b8ef751a4bad89dfe59fa19218e89bdb5c74e6cba080bdbee9921e1c9bf4a615","930d085f4aaabd1cc8d0f4f4837d13e04e948e77c8cf97a2e64c997088fbffcf","df1fd1099460e2d762f69fccb745265e72c14b8048f3e7de60767bbf714f6ad0","dba7c59c1095d9d149ec234ad3846af7fcb0bf6c11822f76d78c19fd0e086473","de378d46014d3f7e673fecf74f8d02bc27a30ffd85ca378927fba171f83f2f66","ec8924ce154b4a9dc676762fd43a7f785fc2cb6a21a0250b34216c8ed757f0bd","6da8dd746a2c6c74c7a874d809f62f908439319fed0505b579774066ce551bcb","a0cbce32b63aa070e5f4aa15e918886492e71c9753426d573e8a9deac1dd8abe","2431e657962c860594400df7d3c49f3c6eefb7e193f158bd9e7f0f965256a33c","30e5961d52cdabbbdaa5169c3c71a77a5aa0f8ac70ebb1f250f6fdaa2007ed3d","37e82fceaba98ef3038072809e67d0b8ed4b37c3a4aa82ed7dbf48676bf2750e","3fa0235c0ee6318d87108b06d6f922f525dcf039a32231d1667b96e202a8b009","5b7c7e06d9f383a1ee8d3b700c4d1419331f4166aa340c7788a35bec98331f34","2df3bf27c69b2c5d47b17649447817b802ad9166d31bfb7c33806195c03a8d83","ee235306953241273af6e40d709d4097476ecb599229473fb55b461288ed1993","2bef48831eaf4bf89166732f51f741488205c30f5184adc03a34a63a6c9a70bd","5fb0a11bc0cb66afc528b180067199bc542c46f6fd95649c3137f3a94bf8412b","6b6814ee731c1e6ee609b98086b273d1aa13333182edd24be8be569c7b7d07df","18cce8e15d2846c71faa2543b08b70b1c04bac9a26427eb98a4e0bad24976a90","ab3a5590e693ad5fb0a1a19c17e2b01258c88fe4617a4cae9d4058cc18946d08","8b4025f2c3f2aed06120f2d20f55d5bc10a06c7a40e058eafe13af9240f85c7c","698972a628b6dbbc1d4d917d422b56e429501ec8758270e527c70401227d094a","212e0c8f420a4c1866546cb7d50ba94537c25aaa715e84685d8995798125b9b9","39b74fe9bd08e3154f281117a5fe5bfa6b1afdfe8556eda1fc82428828329fd4","8b80893422089fff8f07496f4f66f1207847f6a9645c88d75c2877fabd453f11","cf41eb0cb37e385c1d777bdfefc05f0617857fd72d3a455d6d4f81e5e31a397f","583b9e0633074c66e97445426ac0b07bdb388f87e92449baae08cd5ab9cbf846","07646330c0cf3e5429bf2fce8647b0369a9cef8dc9b7a327e2ff47c4d1b916e3","eb277e8bb50c4fbc16ac5e8238b88880626f3ad672d7af92f2d29eaa522a9399","bfdff632c328e37b1946e1b6d7120933c145fac5a6eed6c8adaba5f5e56e64e3","b04f1498e13102326e1968fac4c2d37ca0c2b7abd76812892d9496151083aa91","c413aa82126a73c6280ce1177d151c01640790b5913e6ac80b62b0cce0ebaed3","93436c1aebb65cf409cf9879764d584439bbccc2f87e05763c30b70ead288013","2bbe03e00b2dd6db70bee6237f166c7fbc2b6e301918b3e9a6b62cf0df6eb370","522b79a823b5d466fbfe86cd25473045a8ad45f2a9b9df00e19fe5f3d00ab635","db17b27cc4514d286387592824d7bd39dea6737b799787d72acaa6556d40092e","0d6d484d91ba60f459fc8fcb35d08f6791711f05c8156bb6fc17b0a6fca81541","7bfc9cdd904b12b8f14d2160a092c90afd13cedffe96b8b50a71806431a01873","4981a6995ea12a015408f795188b03a7476c5148b051ea55126a82b62e06708f","843b27075f3ed5a868bad8c9f29b9d275f8a61b3e3c4e760ff6d64e1bf9a6f9c","3c54e9f8641d69914fbda6cac089757a412fb904f0a075dbc65bce568f4a90b7","472d9a32c8571cbfbddbe80686e464464ab008caa48c65677b0d35a0e506d06c","9daca9b36125be1487105a71756caff00669c1871a01209f63b3f9285c5503ec","9567454f4649cdcd899ec3328e8ddf843e0cfd59b832b3e23879d56ca4fadb35","2687e7d974ad531a64538810770312b81193fb7f143cd09fa89e05aad414cb55","c00565777871b6d76d065c51af1d2fbc414f8804498f8692861f0ef3759d8812","12a3233962e3103fd3e4f4de0c26e0f17cd7c3d37b0aaa0743b8dcc7038d0e33","4da29c03d43f81993290813ab4d7b3d29812ce0cc1ccfce9784d076f726fe753","fb58a4485f54c463027b36c4843098de5fdb536594f49ed81f783252561f77f6","6c09333a0c899f83c1444a379ebdcebeea8fd6b25fc6bec2e0e1e5724bcdecc5","ec85cf13bd5d52a3b29672c8d5509e0d6478721d814d933578fc769e82ac7f2d","939c575afa1e1720c9cafcf09d5ad218f7ffcc36743b7cf33581dff722fde7fc","315000295ec26a0a60741a2021d3b84b8f2cc2b8f636de5851436f7464f7ab98","b7956653d6f5d55877326e67cedd538243d9953819e019242502c432381fcee5","d655eefdb3a03cdab08a7d48ff49f42feef1974b3702a1b3010888d51e2428f5","8bd215328a9fd468ffa6f0c1bec8727e9081eadcc4659f3ea56b2e54412a4cc9","d3cfde44f8089768ebb08098c96d01ca260b88bccf238d55eee93f1c620ff5a5","293eadad9dead44c6fd1db6de552663c33f215c55a1bfa2802a1bceed88ff0ec","833e92c058d033cde3f29a6c7603f517001d1ddd8020bc94d2067a3bc69b2a8e","08b2fae7b0f553ad9f79faec864b179fc58bc172e295a70943e8585dd85f600c","f12edf1672a94c578eca32216839604f1e1c16b40a1896198deabf99c882b340","e3498cf5e428e6c6b9e97bd88736f26d6cf147dedbfa5a8ad3ed8e05e059af8a","dba3f34531fd9b1b6e072928b6f885aa4d28dd6789cbd0e93563d43f4b62da53","f672c876c1a04a223cf2023b3d91e8a52bb1544c576b81bf64a8fec82be9969c","e4b03ddcf8563b1c0aee782a185286ed85a255ce8a30df8453aade2188bbc904","2329d90062487e1eaca87b5e06abcbbeeecf80a82f65f949fd332cfcf824b87b","25b3f581e12ede11e5739f57a86e8668fbc0124f6649506def306cad2c59d262","4fdb529707247a1a917a4626bfb6a293d52cd8ee57ccf03830ec91d39d606d6d","a9ebb67d6bbead6044b43714b50dcb77b8f7541ffe803046fdec1714c1eba206","5780b706cece027f0d4444fbb4e1af62dc51e19da7c3d3719f67b22b033859b9","7253b2045ea6b599d85ef9dd7ce2bf5439a1a98a27f078ba2115bedf61d738c7","ca58ededf2c0cd0563e8d83fef922817ff2a1ed9bd750242b17146354c1c5243","9d34b57d308ce327e484887106e68e2a82beaf263fea298e4ada5b3925ccbb8d","fe1f945db9c3cb35788d028ce9338b06256cd6041f2597668b9359f2b4fd4197","641fe481fff812b6a151b7fe0996468ced591244c6682b6ba2610b0bf016a9c6","63e5f3ffc50b8c29acf5396c0468a290c927cb7a5208ffb74add35670867e476","06c3f71832c76a82329b45610793b56d0b78fb02603d90f8a7629f49cb0dec1f","ca586208341738cb5e6d144536d83f91d96856c5828307088d242d52e4d439d4","fde0e854df7095db9f8b5cbe3804845a437750ff3c9edcaf2572e66885b230a3","6a63ec446b7fda7a8f1307c1a4659d6b8d1c617400b46d6b49f3d97ddfa93905","c461e128927c8492fff179d344735023ae189c4b626af91adb7b63c6c4b7248f","6b2706a5cee62ef25fdb7a9a268f558a15de9df894984ed13a07c8318576ef51","353fe785452a3c2d6ff2a41fb0684bd2878e78f3728fc5dae98634ccfaa9beae","521bbccf0edf1f69c488c6828716bdfb04acb69ea3ee5e3b7140bfa22ed6c342","dfdb07c32025c9aac5707797e48c46c8fc1416c3c3a5cab9677a75ab78a787ae","e1e115f590a02130c539f61c20460291711dccbdaa3fe4bbad43ab770dd4306e","e4fe42173b249ff533174cfbde4510ce5345da50c2f717b3ca27eda49929dad1","0dbd184576784dbc0b0caa1f022bbb1024a4f27b77e9bf5738c73841c218f4ab","17023bb4eba80df5152e45fa10ec0fa4105fa1c59cb30a51d5724c77cf041151","05b84716272aee3042dbeb319aa5b1ff5b8e77b62ae24be00b88cf8e04cab4a2","86d850e3572c2ed8f56d73a1ce7c5c4f3ea5a62170b82db65f3055f73614099d","4ab4cb977736067eda6f2ff73e521424a818319a1a70616ad2db2ba0b9dd5322","fa790e874499cb17016556f3168948f8d751dcb35a0862a9b9c55bb2ec353d48","795692a29dca5a39f904825a4abc78f9acc3a54ecc6858d8a268c52679f21751",{"version":"6876211ece0832abdfe13c43c65a555549bb4ca8c6bb4078d68cf923aeb6009e","affectsGlobalScope":true},{"version":"394fda71d5d6bd00a372437dff510feab37b92f345861e592f956d6995e9c1ce","affectsGlobalScope":true},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true},{"version":"c564fc7c6f57b43ebe0b69bc6719d38ff753f6afe55dadf2dba36fb3558f39b6","affectsGlobalScope":true},{"version":"109b9c280e8848c08bf4a78fff1fed0750a6ca1735671b5cf08b71bae5448c03","affectsGlobalScope":true},"cdcf9ea426ad970f96ac930cd176d5c69c6c24eebd9fc580e1572d6c6a88f62c","23cd712e2ce083d68afe69224587438e5914b457b8acf87073c22494d706a3d0","487b694c3de27ddf4ad107d4007ad304d29effccf9800c8ae23c2093638d906a","e525f9e67f5ddba7b5548430211cae2479070b70ef1fd93550c96c10529457bd","ccf4552357ce3c159ef75f0f0114e80401702228f1898bdc9402214c9499e8c0","c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","17fe9131bec653b07b0a1a8b99a830216e3e43fe0ea2605be318dc31777c8bbf","3c8e93af4d6ce21eb4c8d005ad6dc02e7b5e6781f429d52a35290210f495a674","2c9875466123715464539bfd69bcaccb8ff6f3e217809428e0d7bd6323416d01","ea6bc8de8b59f90a7a3960005fd01988f98fd0784e14bc6922dde2e93305ec7d","36107995674b29284a115e21a0618c4c2751b32a8766dd4cb3ba740308b16d59","914a0ae30d96d71915fc519ccb4efbf2b62c0ddfb3a3fc6129151076bc01dc60","2472ef4c28971272a897fdb85d4155df022e1f5d9a474a526b8fc2ef598af94e","6c8e442ba33b07892169a14f7757321e49ab0f1032d676d321a1fdab8a67d40c","b41767d372275c154c7ea6c9d5449d9a741b8ce080f640155cc88ba1763e35b3","1cd673d367293fc5cb31cd7bf03d598eb368e4f31f39cf2b908abbaf120ab85a","19851a6596401ca52d42117108d35e87230fc21593df5c4d3da7108526b6111c","3825bf209f1662dfd039010a27747b73d0ef379f79970b1d05601ec8e8a4249f","0b6e25234b4eec6ed96ab138d96eb70b135690d7dd01f3dd8a8ab291c35a683a","40bfc70953be2617dc71979c14e9e99c5e65c940a4f1c9759ddb90b0f8ff6b1a","da52342062e70c77213e45107921100ba9f9b3a30dd019444cf349e5fb3470c4","e9ace91946385d29192766bf783b8460c7dbcbfc63284aa3c9cae6de5155c8bc","40b463c6766ca1b689bfcc46d26b5e295954f32ad43e37ee6953c0a677e4ae2b","561c60d8bfe0fec2c08827d09ff039eca0c1f9b50ef231025e5a549655ed0298","1e30c045732e7db8f7a82cf90b516ebe693d2f499ce2250a977ec0d12e44a529","84b736594d8760f43400202859cda55607663090a43445a078963031d47e25e7","499e5b055a5aba1e1998f7311a6c441a369831c70905cc565ceac93c28083d53","54c3e2371e3d016469ad959697fd257e5621e16296fa67082c2575d0bf8eced0","beb8233b2c220cfa0feea31fbe9218d89fa02faa81ef744be8dce5acb89bb1fd","78b29846349d4dfdd88bd6650cc5d2baaa67f2e89dc8a80c8e26ef7995386583","5d0375ca7310efb77e3ef18d068d53784faf62705e0ad04569597ae0e755c401","59af37caec41ecf7b2e76059c9672a49e682c1a2aa6f9d7dc78878f53aa284d6","addf417b9eb3f938fddf8d81e96393a165e4be0d4a8b6402292f9c634b1cb00d","e38d4fdf79e1eadd92ed7844c331dbaa40f29f21541cfee4e1acff4db09cda33","8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","7c10a32ae6f3962672e6869ee2c794e8055d8225ef35c91c0228e354b4e5d2d3","2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","99f569b42ea7e7c5fe404b2848c0893f3e1a56e0547c1cd0f74d5dbb9a9de27e",{"version":"f4b4faedc57701ae727d78ba4a83e466a6e3bdcbe40efbf913b17e860642897c","affectsGlobalScope":true},"bbcfd9cd76d92c3ee70475270156755346c9086391e1b9cb643d072e0cf576b8","7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","72c1f5e0a28e473026074817561d1bc9647909cf253c8d56c41d1df8d95b85f7",{"version":"003ec918ec442c3a4db2c36dc0c9c766977ea1c8bcc1ca7c2085868727c3d3f6","affectsGlobalScope":true},"938f94db8400d0b479626b9006245a833d50ce8337f391085fad4af540279567","c4e8e8031808b158cfb5ac5c4b38d4a26659aec4b57b6a7e2ba0a141439c208c",{"version":"2c91d8366ff2506296191c26fd97cc1990bab3ee22576275d28b654a21261a44","affectsGlobalScope":true},"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a",{"version":"12fb9c13f24845000d7bd9660d11587e27ef967cbd64bd9df19ae3e6aa9b52d4","affectsGlobalScope":true},"289e9894a4668c61b5ffed09e196c1f0c2f87ca81efcaebdf6357cfb198dac14","25a1105595236f09f5bce42398be9f9ededc8d538c258579ab662d509aa3b98e","5078cd62dbdf91ae8b1dc90b1384dec71a9c0932d62bdafb1a811d2a8e26bef2","a2e2bbde231b65c53c764c12313897ffdfb6c49183dd31823ee2405f2f7b5378","ad1cc0ed328f3f708771272021be61ab146b32ecf2b78f3224959ff1e2cd2a5c",{"version":"71450bbc2d82821d24ca05699a533e72758964e9852062c53b30f31c36978ab8","affectsGlobalScope":true},{"version":"62f572306e0b173cc5dfc4c583471151f16ef3779cf27ab96922c92ec82a3bc8","affectsGlobalScope":true},"2f32444438ecb1fa4519f6ec3977d69ce0e3acfa18b803e5cd725c204501f350","0ab3c844f1eb5a1d94c90edc346a25eb9d3943af7a7812f061bf2d627d8afac0","b0a84d9348601dbc217017c0721d6064c3b1af9b392663348ba146fdae0c7afd","161f09445a8b4ba07f62ae54b27054e4234e7957062e34c6362300726dabd315","77fced47f495f4ff29bb49c52c605c5e73cd9b47d50080133783032769a9d8a6","e6057f9e7b0c64d4527afeeada89f313f96a53291705f069a9193c18880578cb",{"version":"34ecb9596317c44dab586118fb62c1565d3dad98d201cd77f3e6b0dde453339c","affectsGlobalScope":true},"0f5cda0282e1d18198e2887387eb2f026372ebc4e11c4e4516fef8a19ee4d514","e99b0e71f07128fc32583e88ccd509a1aaa9524c290efb2f48c22f9bf8ba83b1","76957a6d92b94b9e2852cf527fea32ad2dc0ef50f67fe2b14bd027c9ceef2d86",{"version":"237581f5ec4620a17e791d3bb79bad3af01e27a274dbee875ac9b0721a4fe97d","affectsGlobalScope":true},{"version":"a8a99a5e6ed33c4a951b67cc1fd5b64fd6ad719f5747845c165ca12f6c21ba16","affectsGlobalScope":true},"a58a15da4c5ba3df60c910a043281256fa52d36a0fcdef9b9100c646282e88dd","b36beffbf8acdc3ebc58c8bb4b75574b31a2169869c70fc03f82895b93950a12","de263f0089aefbfd73c89562fb7254a7468b1f33b61839aafc3f035d60766cb4","70b57b5529051497e9f6482b76d91c0dcbb103d9ead8a0549f5bab8f65e5d031","e6d81b1f7ab11dc1b1ad7ad29fcfad6904419b36baf55ed5e80df48d56ac3aff","1013eb2e2547ad8c100aca52ef9df8c3f209edee32bb387121bb3227f7c00088","b6b8e3736383a1d27e2592c484a940eeb37ec4808ba9e74dd57679b2453b5865","d6f36b683c59ac0d68a1d5ee906e578e2f5e9a285bca80ff95ce61cdc9ddcdeb","37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093",{"version":"12aad38de6f0594dc21efa78a2c1f67bf6a7ef5a389e05417fe9945284450908","affectsGlobalScope":true},"ea713aa14a670b1ea0fbaaca4fd204e645f71ca7653a834a8ec07ee889c45de6","b338a6e6c1d456e65a6ea78da283e3077fe8edf7202ae10490abbba5b952b05e",{"version":"2918b7c516051c30186a1055ebcdb3580522be7190f8a2fff4100ea714c7c366","affectsGlobalScope":true},"ae86f30d5d10e4f75ce8dcb6e1bd3a12ecec3d071a21e8f462c5c85c678efb41","982efeb2573605d4e6d5df4dc7e40846bda8b9e678e058fc99522ab6165c479e","e03460fe72b259f6d25ad029f085e4bedc3f90477da4401d8fbc1efa9793230e","4286a3a6619514fca656089aee160bb6f2e77f4dd53dc5a96b26a0b4fc778055",{"version":"d67fc92a91171632fc74f413ce42ff1aa7fbcc5a85b127101f7ec446d2039a1f","affectsGlobalScope":true},{"version":"d40e4631100dbc067268bce96b07d7aff7f28a541b1bfb7ef791c64a696b3d33","affectsGlobalScope":true},"784490137935e1e38c49b9289110e74a1622baf8a8907888dcbe9e476d7c5e44","42180b657831d1b8fead051698618b31da623fb71ff37f002cb9d932cfa775f1","4f98d6fb4fe7cbeaa04635c6eaa119d966285d4d39f0eb55b2654187b0b27446",{"version":"e4c653466d0497d87fa9ffd00e59a95f33bc1c1722c3f5c84dab2e950c18da70","affectsGlobalScope":true},"e6dcc3b933e864e91d4bea94274ad69854d5d2a1311a4b0e20408a57af19e95d","2119ab23f794e7b563cc1a005b964e2f59b8ebcb3dfe2ce61d0c782bfd5e02a2","0fd641a3b3e3ec89058051a284135a3f30b94a325fb809c4e4159ec5495b5cdc","035a5df183489c2e22f3cf59fc1ed2b043d27f357eecc0eb8d8e840059d44245","e66eb237e7629bdc09f5f99fd69b73a0511fafb799783496a37432dde5ce0bf0","fdec06934bf00cb7c1187b7f2f1ac6bf2f327ab5af71a543c48d919baa194f1a","9c8f99dfcd80875222e3a4923525595503174088a6eedce78ae3ea81fd650323","652c8e676e1b94c7829671c0eb237528f76a0ba67ac846c065bceb4088ebddd7","caac4c00061a947d2b1010bb6464f06197f2671bdf948fa1aa40bf1e244ee2a0","95b6c669e7ed7c5358c03f8aa24986640f6125ee81bb99e70e9155974f7fd253","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","a4809f4d92317535e6b22b01019437030077a76fec1d93b9881c9ed4738fcc54","5f53fa0bd22096d2a78533f94e02c899143b8f0f9891a46965294ee8b91a9434","bae8d023ef6b23df7da26f51cea44321f95817c190342a36882e93b80d07a960","c3e5b75e1af87b8e67e12e21332e708f7eccee6aac6261cfe98ca36652cdcb53","f7dd7280ee4f0420865e6423fe199aeac63d1d66203a8b631077cdc15501ef1f","ef62b4aa372f77458d84c26614b44129f929e263c81b5cd1034f5828a5530412","8610558ae88a43ad794c4ab1da4f0e8e174e0357c88f6cbb21f523e67414e9a9","0b0feb9837c561c0a67b61024328045bb16bac6e4b10f7b0b217d3b8b43b0b12","ab82804a14454734010dcdcd43f564ff7b0389bee4c5692eec76ff5b30d4cf66","d1c6c35d174dbe63a76ed8ac6621cca8dbe8794961a2121feb5f0239747d1b7e","051c1bc0efd3690031a97ac49133c9486c22bd07852e75a11ed4b40ceb722569","a22270cba4f004f64a61cec3e39574416e3ca72e848f53a36ba3add746243217","447b9b631351b40faa0e961e6cbb5e269bc1fa61f7a615b8077b31a94aaefae3","afe73051ff6a03a9565cbd8ebb0e956ee3df5e913ad5c1ded64218aabfa3dcb5","e641fd321ca5fe17b532bd3b5a6e85a8741bbde7a9d7110d8ed272605c1c4a25","9d63720cd09e8b0ae76e0ade1993b7ec600e6729e453f459d4039d6914914c1a","8b324c8813c2bee210a7a79eede7abc4b5c60132fd497e140ce312a856af22a4","ff2d2f19561cd3a594d7cfeeb29797e62c8d9ef62df65916e6be9bdcfbaf8f7d","d59191f0bb663800c0856116d69ae11125eeae891d0a46c0be52f3c78ed4890e","d8360fe15a60f549584a9ff7d0e6129ed77abdbcf062b4da1a10a78175d34f71","a57b37eae916e680e5e15b36d17b22bb05834115041fe940f11d9e714501ff84","e53086c8f861bee1717e3e001498d2a493f786c6fcbb0027fc4352f00fcaa3cd","446242adee16900500f9d9dba2678258641f7e8f692f43c18dde8872167107bb","6ef7ba3b3d2514336c59d1af84e2d7550a886a5be193d9cb980cc6d16698236f","185e38aa301aaaaf3870183acd48f9b4da7baa5282cb9ed102a10004b0751cc2","1f0c7b51e98442f125414c1d43c6a04abc8ee800066834d742eb99b0e542d327","131c58b9b527fa99139dabaaf585ed52e9f5c450c1347c87bcb9af9b884e63ea","2642f053f18152ed5ba6403217f932e4fa0be0077f38734b168ab92da948b3c4","5718fb71731197c4e623120e93c5ece9061f569aa4dc28ffcbb8b4fb5ffe2ba6","9bc5d8cd23570760dc417cb10b01079bdb919b4dfeaab9c4341cf11d37d7a29e","0671e90198a35ffd8e5dd35c5ce0fd4839305f6fe9878ca9851a25c097a7874a","a3d9df9d57f7e47f70e013a46cf1c38177579dbb2c5b567bde24c7a67ed1303d","b4ac0ae1e7ed09d2ab8496d65c04643742a1811c6c5f34d9f9504a3868bc02e8","b63b8dfe391e40354edfb991062b8e8e28ef36a28644a7904f6a38f51a8a2386","375ecb9cebdd43c6fd230cfc02c6640344aadf920319b73a3c8514f45f23167c","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73","67c51fa68aadbb50e4ffc650b704620e0393bddb3d3eac3a6195bf1956562fe4","8187d9966b8fa5a2d0e53c71903adb5aa71ebc2a23410ab2d37eb764db800829","d851073758ff1ce39bb428d8a3b3385ca26da1745ca742789e876d67dc0aae43","0cee5b30f4300e628927dde7e7ae7b5bc32250a685242474d069b9346da8a2b1","6fdc7cbbbc0601f9bb153c30c0e8063321cd1c9211ad512b9fde1d1f785b35dd","6ae7157666262b5c0402463531996601150583cb1f4f9421f184a0eec9049f10","fbd0ac5a6097c20307587444815092eb1825d831991363423ef0ce70ef053e82","ec0b2f8ed3cc053fdb004ab4979c32625179a746717504e08fc30cef9ec9d7a3","2887592574fcdfd087647c539dcb0fbe5af2521270dad4a37f9d17c16190d579","ed434fd49cf57789f99d3d2f4fb4d5f4930825280ceaae21200d840609345161","3ea3b60de13285b50d9752812d3a6d2cae078d89031713613f58cd2f5565589a","4b0465994a4b18dd63a9af850c74024e6184deac2477ab87135f7d1b11a07178","3031ed6baeacbaf771576f64094d8a977e5be37b04d4dbb335fff9cc1d95a147","5f02cf0f7cc845c12b09607f97e57f942c313ebee6c33a3efbc346f19b499c7f","8e1eb67ef6924cd14793af526f9a4e3195b5734920a75ec29900731b1997f2ce","07fa4bb359f3cacde0e0b6d75cd9a53b88168088be58e01b385cd12e12a6d5d4","52d5d4a344ea0781bf00874c4829e3cfb0c12e1fa28c17740e773bc247fa663c","89ebb5291da50663149fc01245eeca4f8bf1a2bd8a3fe84ea62d926d53a6460f","792128daaa6209b5d52148b1952b56aad02fcf72435283a2d5ac1fb22113cd91","c474689555d4e49d5210e6c6d95f939e31f49158af350cbc403e4fdda5d32386","d4c5aebfd4d5468e03fee82920222d861737cc6ec5c9829474a36e379753fc52","f8fd01e7967e335266c6113c5d9bf15113768c5747265420dae0fdf1868eb05c","7a89d77bf137521a06ff5b3ce7297c663f3c27912b09320fa520c1b2d6bab9e5","7647ed4e66d98048478e6245f50b794a916ffa456fb362672e52c01e1b09a644","9a22045cb43de6fab0b5e524e4cef807e5a2c6e0a49044de56b65448e1572a14","4441e06cf8e7ffff0519950e34df3608ca1016f09f83fdfb7f71ab7376ac5a47","45d0cb97f71ad1fd0688b8a95c2a2b3cce347cd458ec365af4079c0273b49dc6","6c86a8ced863164acfbe7753660a7ba4aa97cdaa1e3b8d193a18316f906d4bbf","2dd10019ccc6f059b703db2f58f6f385625d235869fe562978b5a913e5db4c69","e4c66039756093e60d857430f451ffff1ca3fa5a951367b67dcc8f29b47b2d72","48433ed0754c860ebfeeec213f9c5943cc6b8aa7b70ce1bd9c5c6a490ed91229","c2708a205c4afa73bfeebaf0e939390b3b3fe9cd1788b09389ee0d736cd75a72","8f6d44ee7619da14f50cf051a243c41793ff1dccda8d8a3bb2255989df114c30","2aca83fda179d79a68a259bc47999615976b935d2eeb391304db8a095af721e6","26b3b07bb0229b36ba87ec2b0ca1a42a927c2e8a8bd5ae9339d5a82d950eb3ce","8767c93beffebe9eda0c03e4893ab2fe9b62ff65bf767a003cbba50cfe810a28","d7f211b5ba9e9fc21ba0fbf12b3ceda8680f672da595068dbb4d2d1f9a0c83b1","e613a48817a40243523fa26bb5e3396e6d60c79a1c0c59274889560f34cfdde7","ae77d81a5541a8abb938a0efedf9ac4bea36fb3a24cc28cfa11c598863aba571","80b232969d72e6f08081a4a0b558537db2671a1a60bb44559d5e3b5f1fc89cd6",{"version":"841784cfa9046a2b3e453d638ea5c3e53680eb8225a45db1c13813f6ea4095e5","affectsGlobalScope":true},"646ef1cff0ec3cf8e96adb1848357788f244b217345944c2be2942a62764b771","0ab7506c71d3467c8db4fdc2512e5960afcfeb0a4f51467d79c9b51af5ec9e63","d45bd3d7c328e85331b3deb75be0f5bef5746ff9efa27900c769ad0e3461acb4","0eb2ed1c1c8d87ba91ae080e95a5f4891e3bdd31626b894655985760a2e56afd","3cfb7c0c642b19fb75132154040bb7cd840f0002f9955b14154e69611b9b3f81","8387ec1601cf6b8948672537cf8d430431ba0d87b1f9537b4597c1ab8d3ade5b","d16f1c460b1ca9158e030fdf3641e1de11135e0c7169d3e8cf17cc4cc35d5e64","a934063af84f8117b8ce51851c1af2b76efe960aa4c7b48d0343a1b15c01aedf","e3c5ad476eb2fca8505aee5bdfdf9bf11760df5d0f9545db23f12a5c4d72a718","d0570ce419fb38287e7b39c910b468becb5b2278cf33b1000a3d3e82a46ecae2","3aca7f4260dad9dcc0a0333654cb3cde6664d34a553ec06c953bce11151764d7","a0a6f0095f25f08a7129bc4d7cb8438039ec422dc341218d274e1e5131115988","b58f396fe4cfe5a0e4d594996bc8c1bfe25496fbc66cf169d41ac3c139418c77","45785e608b3d380c79e21957a6d1467e1206ac0281644e43e8ed6498808ace72","bece27602416508ba946868ad34d09997911016dbd6893fb884633017f74e2c5","2a90177ebaef25de89351de964c2c601ab54d6e3a157cba60d9cd3eaf5a5ee1a","82200e963d3c767976a5a9f41ecf8c65eca14a6b33dcbe00214fcbe959698c46","b4966c503c08bbd9e834037a8ab60e5f53c5fd1092e8873c4a1c344806acdab2","480c20eddc2ee5f57954609b2f7a3368f6e0dda4037aa09ccf0d37e0b20d4e5c","40a9e5673448badb43d693daf20698c452782ae1682887b9d1ccbf207589781a","f2834e7008d641386a0d313ef33e974effb5815755254506341a0f3ba846a506","2e44250d356340733b1f210ad994bf11a0ae802186d5ad6b602661030f811db2","d01f869e0aa82d99b590ac59b6906d0f4ccae1d903d1dd1e622d944f4741b829","8d5a0a154fda1d5422fc0a0432821d5485ef88588ceb267651bf0ac786addcfa","b25d24260ac27016213b336707cb6bd279e12b946304118837ca0bd93831bb0b","81b8cf069b2fad8ff8112f832db6a32b7735b3291855ae71876e8dd07687a438","da0f84fcd93700b4a5fbf9c6f166a6cc19fc798231bff56dd1e3875bfc6966eb","634ff08e0143bec98401c737de7bfc6883bfec09200bd3806d2a4cfc79c62aaa","90a86863e3a57143c50fec5129d844ec12cef8fe44d120e56650ed51a6ce9867","472c0a98c5de98b8f5206132c941b052f5cc1ae78860cb8712ac4f1ebf4550ca","538c4903ef9f8df7d84c6cf2e065d589a2532d152fa44105c7093a606393b814","cfcb6acbb793a78b20899e6537c010bfbbf939c77471abcdc2a41faf9682ca1a","a7798e86de8e76844f774f8e0e338149893789cdc08970381f0ae78c86e8667f","eebc21bb922816f92302a1f9dcefc938e74d4af8c0a111b2a52519d7e25d4868","6b359d3c3138a9f4d3a9c9a8fda24be6fd15bd789e692252b53e68ce99db8edc","9488b648a6a4146b26c0fd4e85984f617056293092a89861f5259a69be16ca5c","e156513655462b5811a8f980e32ccd204c19042f8c9756430fe4e8d6f7c1326e","5679b694d138b8c4b3d56c9b1210f903c6b0ca2b5e7f1682a2dd41a6c955f094","ca8da035b76fb0136d2c1390dda650b7979202dbe0f5dc7eaefcde1c76dee4f4","4b1022a607444684abeee6537e4cace97263d1ef047c31b012c41fdc15838a79",{"version":"dd0271250f1e4314e52d7e0da9f3b25a708827f8a43ceff847a2a5e3fd3283e8","affectsGlobalScope":true},{"version":"47971d8a8639a2a2dd684091c6e7660ec5909fed540c4479ca24e22ac237194e","affectsGlobalScope":true},"e1075312b07671ef1cbf46409a0fa2eb2b90bb59c6215c94f0e530113013eeda","1bfd63c3f3749c5dc925bb0c05f229f9a376b8d3f8173d0e01901c08202caf6f","da850b4fdbabdd528f8b9c2784c5ba3b3bedc4e2e1e34dcd08b6407f9ec61a25","e61c918bb5f4a39b795a06e22bc4d44befcefd22f6a5c8a732c9ed0b565a6128","ee56351989b0e6f31fd35c9048e222146ced0aac68c64ce2e034f7c881327d6d","f58b2f1c8f4bcf519377d39f9555631b6507977ad2f4d8b73ac04622716dc925","4c805d3d1228c73877e7550afd8b881d89d9bc0c6b73c88940cffcdd2931b1f6","4aa74b4bc57c535815ae004550c59a953c8f8c3c61418ac47a7dcfefba76d1ba","78b17ceb133d95df989a1e073891259b54c968f71f416cd76185308af4f9a185","d76e5d04d111581b97e0aa35de3063022d20d572f22f388d3846a73f6ce0b788","0a53bb48eba6e9f5a56e3b85529fbbe786d96e84871579d10593d4f3ae0f9dba","d34fb8b0a66f0a406c7ce63a36f16dda7ff4500b11b0bd30a491aa0d59336d1f","282b31893b18a06114e5173f775dd085597ca220d183b8bd474d21846c048334","ed27d5ce258f069acf0036471d1fbb56b4cb3c16d7401b52a51297eca651db62","ec203a515afd88589bf1d384535024f5b90ebe6b5c416fb3dcca0abd428a8ba4","32a2a1374b57f0744d284ca93b477bd97825922513a24dfe262cbf3497377d96","a8b60d24dc1eb26c0e987f9461c893744339a7f48e4496f8077f258a644cffab",{"version":"3f9df27a77a23d69088e369b42af5f95bcb3e605e6b5c2395f0bfcd82045e051","affectsGlobalScope":true},"9fd080a9458c6d6f3eb6d4e2b12a3ec498d7d219863e9dca0646bdee9acce875",{"version":"e5d31928bee2ba0e72aeb858881891f8948326e4f91823028d0aea5c6f9e7564","affectsGlobalScope":true},"9a9ba9f6fd097bb2f57d68da8a39403bbe4dc818b8ccd155a780e4e23fa556f2","e50c4cd1f5cbce3e74c19a5bbf503c460e6ae86597e6d648a98c7f6c90b596dd",{"version":"fa140f881e20591ce163039a7968b54c5e51c11228708b4f9147473d06471cf5","affectsGlobalScope":true},"295eca0c47be1191690fd2fe588195fff9d4dc43852aceb8b4cab2aa634579f0","59ee7346e19b0050508a592702871dc943083c6dcb69a47d52e888115d840781","067712491fb2094c212c733dd8e2d56e74c309a9ce9dac9e919286b7245a1eb4","a5eae58ac55bd30c42359e4b01fb2be5eddac336869d3f04ffb4daa54b58f009","d12d691ef8933e8db39f2ca81d6973940ff5e37bb421752f5b6e7bc15dea3abf","4c5f8bd9b3a1aae4e4fddfee41667e495a045f73ed603993038fa6a8ba92fa14","dfb274ab0f319cf18ce7152067c25f984c7fd1924fc72b3f66734588444c934a","108c8c05cbc3fbbbd4ff4fc0779c9bef55655c28528eb0f77829795dc9f0b484","a7e5444d24cdec45f113f4fb8a687e1c83a5d30c55d2da19a04be71108ad77bd","41ec17e218b7358fcff25c719bc419fec8ec98f13e561b9a33b07392d4fec24c","23c204326746e981e02d7f0a15ab6f8015f9035998cb3766c9ddbf8ea247aea2","25f994b5d76ce6a3186a3319555bbba79706dac2174019915c39ac6080e98c7e","dfa4e2c6a612d43851ccbc499598cb006a3a78bc8c7f972c52078f862fa84e47","02c1705fa902f172be6e9020d74bcd92ce5db8d2ef3e1b03aabc2ac8eb46c3db","99d2d8a0c7bb3dd77459552269a7b5865fa912cedab69db686d40d2586b551f7","b47abe58626d76d258472b1d5f76752dd29efe681545f32698db84e7f83517df","3a99bbbbbf42e45c3d203e7c74f1319b79f9821c5e5f3cdd03249184d3e003ce","aaacc0e12ab4de27bdf131f666e315d8e60abec26c7f87501e0a7806fc824ae6","3b4195afd41a9215afc7be0820f8083f6bd2e85e5e0b45bb0061fb041944711e","108df8095f5e25d7189dd0d1433ac2df75ec40c779d8faf7d2670f1485beb643","ddd3c1d3c9ff67140191a3cf49b09875e20f28f2fc5535ae5ea16e14293a989b","7b496e53d5f7e1737adcb5610516476ee055bf547918797348f245c68e7418fe","577f44389d7faedd7fc9c0330caf73140e5d0d5f6c968210bff78be569f398a7","3046c57724587a59bceefadd30040d418e9df81b9f3cfd680618a3511302ed7a","15ccc911ed15397e838471bfe6d476c28deffe976c05cb057e6b1ea7491242c2","64b5a5ebdaead77a9a564aa938f4fb7a45e27cda7441d3bee8c9de8a4df5a04f","a48037f7af5f80df8973db5e562e17566407541de284b8dadf1879ea3aed8a2f","dab97d96ce986857150db03f0d435b44c060d126b4a387c7807f4e9f6c92e531","85f39366ea7bc5e34b596fc97de18a7e377856755e789d8e931054f2191d9b8b","daf3ea3d49f6e8a2fa70b7ca1f21bd97f1b65021b31fbfccb73dd55f86abb792","b15bd260805f9dd06cd4b2b741057209994823942c5696fd835e8a04fb4aab6b","6635a824edf99ed52dbd3502d5bce35990c3ed5e2ec5cef88229df8ac0c52b06","d6577effa37aae713c34363b7cc4c84851cbabe399882c60e2b70bcbb02bfa01","8eaf80ad438890fe5880c39a7bbf2c998ce7d29d4c14dd56d82db63bd871eefb","9b3e7f776f312c76ac67e1060e5398d7ac2c69d6a3a928a9daaae2eb05b15f56","202042eccb4789b7dee51ba9ecab0b854834ea5c1d6a3946504bfc733d4468c3","2b2ef76a9f36094b07ee6f76a5ac6903f2f65c0a20283201814a8d1e752cb592","8882e4e087d0bc8cc713cb3d8090c45d33e373e6f5c83e0f8d00fe6a950ef875","42979c197a22211d72c9cf1de8559f0a39de0b0687eea63c6407a69d9d73c13f","cc36098e27200f5daceffff4a4694148746aaa1b369536186fa1caa43d8b4bde","07133796953f82127aebef603392f1430690fe6cfd5d3d4c2bd3b277c6566d79","9079300efc80cdcb5a5cd153bdc354ac3439619e661e5f35413f81f94d4aa897","3655e77b67da6b52b34f7abd79890cdbc9ce2e2a3579fc2568f07d77d1d60ec9","95a1ff30ceba2b8c185a76002e2a4578cca9a593d8b642b7d5b13275ece952b9","2a43ea656e1e3ae2ec876766d9d4576a53b079a1cd352367db12fc721033c08b","e8835cfaf67d1730e430a800d447ea79d33c59fc990455965ca85dcc16c6ec64","98631e5438157a2bc50970527c20d9a0d02def63700cb8f21ee19520a982fbc0","93a5f2ecf21f69045a129ef7821396276c117b34eb39d0b5510ff90c34839f56","4d054866f6bed47338a905264c4cc16108dfb55353a97d67b5beb0393f78fbc4","cc611eddaabd228585429f406dc5b2ef53db92e954f3fab97f8cc67b84b0a67b","51d3abc39997f19e1e0e13fe545c786465259a3f6625b27828e47847a00acc27","982c00b942df3ad3aa49500b7f253bad1f2624d4c5e0e0eea1ee20529d90296f","a9f610a8bd1aa513ca9ee39a05566e7439b45ef24670858f4b0a3b1b33a17923","a7b268ed0284472916b39062cea1ec8ca946b048b7f8992b14221d4318cb7f5b","7748692e43d33e0f58fd69f9e84f568430d147be8a5fec55aea68c73f63908a1","cee3e7bec863f019aa744e00dd7a8470f2f6ff951c498c501ad6e296aca9f418","98e5bfadb80d850109194eb7cbdae761564cf0aa4cdd39e70eb73fe628af6bf8","5da731f0b18d358e4e0ca682928298de26c6eabee5990d03333e0e8aef335ea2","5ed1241d2008dfabf2145443b9fb285b7bdcd8211266187ed9dfb2ae5b80f869","f60e1afcef13dcd11edafbd3f7720a5a50c3d2d90b4cb27cea58adb16efd12ed","e6a1fc7243e8a4f92cbafa2bac261e3540968403f082df44ae521b8e2658efbd","b745f5b14ad0407d94b3b3e764ceb6e6c1c0873528461421046751f7a3c84b17","554028fd3b11a78660ed0cb98b5fd343bc9b8a9b8495114e6ae5d13aed49f242","e4125c670944f6369be310c830b37391a82b4f8f500399a17b041962e1fe1dd2","60cded932be8d4f5de5c3a7f56c5e01438ce8ec7f110d4c87fdf2bfdb910dbd0","06e0622d8d29254863de52ca0da62329d78c5e02086481fbcef6c9cd74796d84","ad5346fa860e1577699a7a1e6543f7e811dd209164ed4e226566595c50ad3dd4","749ad4dbb8d1d33ab4283f8ffa875669e067f917cf1d17162e149b571c689f9a","dc278a8129f50ef9555060cf12ba10a11c2a816bad01c2f1abd2f87f6ac3796c","ee94a249d6f6c94e2656e1abc6820a25a88ec1351c21929d1365d60a4381d797","bc5a1ad94db45ea72a8632a18d57efe131671c54c51347c8c9a266f5ca059d8f","1ecb3bf08e05193e81b052ca5180d2a2cfcf64602d57312dd7a5686755938b88","ee2a7977e7cc78906b894656baaf8d4080962056ee12b2024fa2f42bf8e447bf","88124457c6ce628eb357aefa18c0e23a58d92997bed3e28a5e53217a9d8ec590","bda82ce02ca6b44902394fd57e57b1b41e4de290727d92cef3cb537b21cbc5af","c288bf4485ccf06ac2da23408bbdd47c987b1ea7db59f7d3caf736d115323e42","c0007fbf0456531d2c2ac6243689559d4ea2b5a5bba9ddb28c006db5a15fe32d","c7d9afa4d252d9dee7c7c0c3752db5efcbaa39dda3df9a1e193aea3a0d056ac1","475709fda88e76c7b3bcf00a2ffa16eb2d91088caa6d9f4abdf9a6592664f676","ec1bc8ff1a835119253f23d674c3e13ba983744620a0655f73dc61f6aaeea004","4f9b48c8b5098f29ddf9041e81676fb06b078e1dfe76e1b160f93ca214d05ff3","94c5a9b9991dc4e164779653c1f2af90ad961fd23d9164c0b6e570be7456ce31","13ed3c245e4a6a8b90d3f0909198c01fd7cb48e41364c1ece3c11edecb9dc9c7","81212195a5a76330d166ecfd85eb7119e93d3b814177643fa8a10f4b40055fbf","b6d03c9cfe2cf0ba4c673c209fcd7c46c815b2619fd2aad59fc4229aaef2ed43","82e5a50e17833a10eb091923b7e429dc846d42f1c6161eb6beeb964288d98a15","670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","104c67f0da1bdf0d94865419247e20eded83ce7f9911a1aa75fc675c077ca66e","cc0d0b339f31ce0ab3b7a5b714d8e578ce698f1e13d7f8c60bfb766baeb1d35c","f9e22729fa06ed20f8b1fe60670b7c74933fdfd44d869ddfb1919c15a5cf12fb","d3f2d715f57df3f04bf7b16dde01dec10366f64fce44503c92b8f78f614c1769","b78cd10245a90e27e62d0558564f5d9a16576294eee724a59ae21b91f9269e4a","baac9896d29bcc55391d769e408ff400d61273d832dd500f21de766205255acb","2f5747b1508ccf83fad0c251ba1e5da2f5a30b78b09ffa1cfaf633045160afed",{"version":"a8932b7a5ef936687cc5b2492b525e2ad5e7ed321becfea4a17d5a6c80f49e92","affectsGlobalScope":true},"689be50b735f145624c6f391042155ae2ff6b90a93bac11ca5712bc866f6010c",{"version":"64d4b35c5456adf258d2cf56c341e203a073253f229ef3208fc0d5020253b241","affectsGlobalScope":true},"151ff381ef9ff8da2da9b9663ebf657eac35c4c9a19183420c05728f31a6761d","f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","dd0c1b380ba3437adedef134b2e48869449b1db0b07b2a229069309ce7b9dd39","1f68ab0e055994eb337b67aa87d2a15e0200951e9664959b3866ee6f6b11a0fe","b71c603a539078a5e3a039b20f2b0a0d1708967530cf97dec8850a9ca45baa2b","0e13570a7e86c6d83dd92e81758a930f63747483e2cd34ef36fcdb47d1f9726a",{"version":"a45c25e77c911c1f2a04cade78f6f42b4d7d896a3882d4e226efd3a3fcd5f2c4","affectsGlobalScope":true},"5c45abf1e13e4463eacfd5dedda06855da8748a6a6cb3334f582b52e219acc04","ee65fe452abe1309389c5f50710f24114e08a302d40708101c4aa950a2a7d044","63786b6f821dee19eb898afb385bd58f1846e6cba593a35edcf9631ace09ba25","c5a14bdeb170e0e67fb4200c54e0e02fd0ec94aca894c212c9d43c2916891542","a39f2a304ccc39e70914e9db08f971d23b862b6f0e34753fad86b895fe566533","916be7d770b0ae0406be9486ac12eb9825f21514961dd050594c4b250617d5a8","d88a5e779faf033be3d52142a04fbe1cb96009868e3bbdd296b2bc6c59e06c0e","8b677e0b88f3c4501c6f3ec44d3ccad1c2ba08efd8faf714b9b631b5dba1421b","8a19491eba2108d5c333c249699f40aff05ad312c04a17504573b27d91f0aede","199f9ead0daf25ae4c5632e3d1f42570af59685294a38123eef457407e13f365","cf3d384d082b933d987c4e2fe7bfb8710adfd9dc8155190056ed6695a25a559e","9871b7ee672bc16c78833bdab3052615834b08375cb144e4d2cba74473f4a589","c863198dae89420f3c552b5a03da6ed6d0acfa3807a64772b895db624b0de707","8b03a5e327d7db67112ebbc93b4f744133eda2c1743dbb0a990c61a8007823ef","86c73f2ee1752bac8eeeece234fd05dfcf0637a4fbd8032e4f5f43102faa8eec","42fad1f540271e35ca37cecda12c4ce2eef27f0f5cf0f8dd761d723c744d3159","ff3743a5de32bee10906aff63d1de726f6a7fd6ee2da4b8229054dfa69de2c34","83acd370f7f84f203e71ebba33ba61b7f1291ca027d7f9a662c6307d74e4ac22","1445cec898f90bdd18b2949b9590b3c012f5b7e1804e6e329fb0fe053946d5ec","0e5318ec2275d8da858b541920d9306650ae6ac8012f0e872fe66eb50321a669","cf530297c3fb3a92ec9591dd4fa229d58b5981e45fe6702a0bd2bea53a5e59be","c1f6f7d08d42148ddfe164d36d7aba91f467dbcb3caa715966ff95f55048b3a4","f4e9bf9103191ef3b3612d3ec0044ca4044ca5be27711fe648ada06fad4bcc85","0c1ee27b8f6a00097c2d6d91a21ee4d096ab52c1e28350f6362542b55380059a","7677d5b0db9e020d3017720f853ba18f415219fb3a9597343b1b1012cfd699f7","bc1c6bc119c1784b1a2be6d9c47addec0d83ef0d52c8fbe1f14a51b4dfffc675","52cf2ce99c2a23de70225e252e9822a22b4e0adb82643ab0b710858810e00bf1","770625067bb27a20b9826255a8d47b6b5b0a2d3dfcbd21f89904c731f671ba77","d1ed6765f4d7906a05968fb5cd6d1db8afa14dbe512a4884e8ea5c0f5e142c80","799c0f1b07c092626cf1efd71d459997635911bb5f7fc1196efe449bba87e965","2a184e4462b9914a30b1b5c41cf80c6d3428f17b20d3afb711fff3f0644001fd","9eabde32a3aa5d80de34af2c2206cdc3ee094c6504a8d0c2d6d20c7c179503cc","397c8051b6cfcb48aa22656f0faca2553c5f56187262135162ee79d2b2f6c966","a8ead142e0c87dcd5dc130eba1f8eeed506b08952d905c47621dc2f583b1bff9","a02f10ea5f73130efca046429254a4e3c06b5475baecc8f7b99a0014731be8b3","c2576a4083232b0e2d9bd06875dd43d371dee2e090325a9eac0133fd5650c1cb","4c9a0564bb317349de6a24eb4efea8bb79898fa72ad63a1809165f5bd42970dd","f40ac11d8859092d20f953aae14ba967282c3bb056431a37fced1866ec7a2681","cc11e9e79d4746cc59e0e17473a59d6f104692fd0eeea1bdb2e206eabed83b03","b444a410d34fb5e98aa5ee2b381362044f4884652e8bc8a11c8fe14bbd85518e","c35808c1f5e16d2c571aa65067e3cb95afeff843b259ecfa2fc107a9519b5392","14d5dc055143e941c8743c6a21fa459f961cbc3deedf1bfe47b11587ca4b3ef5","a3ad4e1fc542751005267d50a6298e6765928c0c3a8dce1572f2ba6ca518661c","f237e7c97a3a89f4591afd49ecb3bd8d14f51a1c4adc8fcae3430febedff5eb6","3ffdfbec93b7aed71082af62b8c3e0cc71261cc68d796665faa1e91604fbae8f","662201f943ed45b1ad600d03a90dffe20841e725203ced8b708c91fcd7f9379a","c9ef74c64ed051ea5b958621e7fb853fe3b56e8787c1587aefc6ea988b3c7e79","2462ccfac5f3375794b861abaa81da380f1bbd9401de59ffa43119a0b644253d","34baf65cfee92f110d6653322e2120c2d368ee64b3c7981dff08ed105c4f19b0","844ab83672160ca57a2a2ea46da4c64200d8c18d4ebb2087819649cad099ff0e","ddef25f825320de051dcb0e62ffce621b41c67712b5b4105740c32fd83f4c449","1b3dffaa4ca8e38ac434856843505af767a614d187fb3a5ef4fcebb023c355aa","15fe687c59d62741b4494d5e623d497d55eb38966ecf5bea7f36e48fc3fbe15e",{"version":"2c3b8be03577c98530ef9cb1a76e2c812636a871f367e9edf4c5f3ce702b77f8","affectsGlobalScope":true},"1ba59c8bbeed2cb75b239bb12041582fa3e8ef32f8d0bd0ec802e38442d3f317"],"options":{"allowSyntheticDefaultImports":true,"declarationMap":false,"esModuleInterop":true,"inlineSourceMap":false,"jsx":4,"module":99,"skipLibCheck":true,"sourceMap":true,"strict":false,"target":99,"tsBuildInfoFile":"./tsconfig.tsbuildinfo"},"fileIdsList":[[73,201,245],[73,74,76,201,245],[73,75,201,245],[201,245],[73,75,76,77,78,79,80,201,245],[75,201,245],[69,70,201,245],[63,201,245],[63,66,201,245],[63,64,65,67,201,245],[69,201,245],[68,201,245],[68,69,71,72,201,245],[201,245,537],[201,245,248,289,295,298],[201,245,300],[201,245,298,312,315],[201,245,298,299,300,301,316],[201,245,312,332,334,363,364],[201,245,312,332,376,378],[201,245,377],[201,245,312,332],[201,245,365,378,379,380,381],[201,245,312,332,363],[201,245,291,295,312,335,338],[201,245,336,337],[201,245,315,335],[201,245,315],[201,245,312,339,350],[201,245,332,369],[201,245,312,332,369,370],[201,245,312,367,369],[201,245,295,312,332,369,370],[201,245,295,312,332,369,372],[201,245,296,297,312],[201,245,309,312,332,366,369,370,371,372,373,374,375],[201,245,312,322,328,332,368],[201,245,352,353],[201,245,353,354],[201,245,329],[201,245,312,329],[201,245,329,330,331],[201,245,296,297,312,317,322,328],[201,245,312,357],[201,245,357,358,359,360],[201,245,312,356],[201,245,295,302],[201,245,304,306,308],[201,245,297],[201,245,302,303,309,310,311],[201,245,396],[201,245,393,394,395,396,397,398,399,400,401,402,403,404,405],[201,245,386],[201,245,342],[201,245,393,394,395],[201,245,393,394],[201,245,342,396,397],[201,245,394],[201,245,388],[201,245,385,387],[201,245,406],[201,245,490],[201,245,477,478,479],[201,245,472,473,474],[201,245,450,451,452,453],[201,245,416,490],[201,245,416],[201,245,416,417,418,419,464],[201,245,454],[201,245,449,455,456,457,458,459,460,461,462,463],[201,245,464],[201,245,415],[201,245,468,470,471,489,490],[201,245,468,470],[201,245,465,468,490],[201,245,475,476,480,481,486],[201,245,469,471,481,489],[201,245,488,489],[201,245,465,469,471,487,488],[201,245,469,490],[201,245,467],[201,245,467,469,490],[201,245,465,466],[201,245,482,483,484,485],[201,245,471,490],[201,245,426],[201,245,420,427],[201,245,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448],[201,245,446,490],[201,245,537,538,539,540,541],[201,245,537,539],[201,245,260,295,543],[201,245,251,295],[201,245,288,295,550],[201,245,260,295],[201,245,553,555],[201,245,552,553,554],[201,245,257,260,295,547,548,549],[201,245,544,548,550,558,559],[201,245,258,295],[201,245,257,260,262,265,277,288,295],[201,245,305],[201,245,295],[201,242,245],[201,244,245],[201,245,250,280],[201,245,246,251,257,258,265,277,288],[201,245,246,247,257,265],[201,245,248,289],[201,245,249,250,258,266],[201,245,250,277,285],[201,245,251,253,257,265],[201,244,245,252],[201,245,253,254],[201,245,255,257],[201,244,245,257],[201,245,257,258,259,277,288],[201,245,257,258,259,272,277,280],[201,240,245],[201,240,245,253,257,260,265,277,288],[201,245,257,258,260,261,265,277,285,288],[201,245,260,262,277,285,288],[201,245,257,263],[201,245,264,288],[201,245,253,257,265,277],[201,245,266],[201,245,267],[201,244,245,268],[201,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[201,245,270],[201,245,271],[201,245,257,272,273],[201,245,272,274,289,291],[201,245,257,277,278,280],[201,245,279,280],[201,245,277,278],[201,245,280],[201,245,281],[201,242,245,277,282],[201,245,257,283,284],[201,245,283,284],[201,245,250,265,277,285],[201,245,286],[197,198,199,200,201,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],[245],[201,245,265,287],[201,245,260,271,288],[201,245,250,289],[201,245,277,290],[201,245,264,291],[201,245,292],[201,245,257,259,268,277,280,288,290,291,293],[201,245,277,294],[201,245,570,609],[201,245,570,594,609],[201,245,609],[201,245,570],[201,245,570,595,609],[201,245,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608],[201,245,595,609],[201,245,258,277,295,546],[201,245,258,560],[201,245,260,295,547,557],[201,245,612],[201,245,257,260,262,265,277,285,288,294,295],[201,245,307],[201,245,263,295],[201,245,349],[201,245,312,347,348],[172,201,245],[201,245,312,333],[201,245,312],[201,245,383],[201,245,340,343],[201,245,340,343,344,345],[201,245,312,320],[201,245,257,295,312,319,320,321],[201,245,295,312,318,319,321],[201,245,304,346],[201,245,312,314],[201,245,313],[201,245,326,327],[201,245,312,322,323,324,325],[201,245,312,322,328,332,339,351,355,361,362],[201,245,312,322,328],[201,245,382,384],[201,245,341],[61,201,245],[57,201,245],[57,58,59,60,201,245],[201,210,214,245,288],[201,210,245,277,288],[201,245,277],[201,205,245],[201,207,210,245,288],[201,245,265,285],[201,205,245,295],[201,207,210,245,265,288],[201,202,203,204,206,209,245,257,277,288],[201,210,218,245],[201,203,208,245],[201,210,234,235,245],[201,203,206,210,245,280,288,295],[201,210,245],[201,202,245],[201,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,245],[201,210,227,230,245,253],[201,210,218,219,220,245],[201,208,210,219,221,245],[201,209,245],[201,203,205,210,245],[201,210,214,219,221,245],[201,214,245],[201,208,210,213,245,288],[201,203,207,210,218,245],[201,210,227,245],[201,205,210,234,245,280,293,295],[171,201,245],[159,160,161,201,245],[162,163,201,245],[159,160,162,164,165,170,201,245],[160,162,201,245],[170,201,245],[162,201,245],[159,160,162,165,166,167,168,169,201,245],[62,81,83,85,87,123,133,134,135,138,143,144,145,158,175,176,177,178,179,183,190,191,192,193,194,201,245],[83,84,145,201,245,407],[92,96,97,201,245],[83,201,245],[101,102,201,245],[83,92,201,245],[201,245,411],[87,92,201,245],[62,81,83,201,245],[92,201,245],[83,87,92,106,201,245],[174,201,245],[141,201,245],[83,84,98,201,245,407,491],[83,84,145,201,245,407,491],[194,201,245,407],[83,103,104,105,201,245,407],[201,245,407,413],[83,84,126,201,245,407,491],[83,87,106,107,201,245,407],[83,108,201,245,407],[83,87,128,201,245,407],[62,175,201,245,407],[89,201,245],[81,83,201,245],[81,201,245],[81,83,135,201,245],[135,136,137,138,139,201,245],[124,201,245],[125,126,201,245],[83,87,92,93,94,95,98,99,100,101,102,103,104,105,107,108,109,123,127,201,245],[83,87,141,201,245],[128,201,245,407,491],[124,125,127,128,142,201,245],[94,95,99,100,101,103,104,105,129,130,131,132,133,134,140,201,245],[187,201,245,407],[188,201,245,407],[81,186,201,245,407],[83,110,120,123,201,245],[83,92,110,201,245],[87,112,114,115,123,201,245],[113,201,245],[111,201,245,407],[201,245,407,510],[116,201,245,407],[84,116,201,245,407],[110,111,115,116,117,118,119,121,122,201,245],[83,145,201,245],[83,145,146,201,245],[83,145,146,147,148,151,152,153,154,155,156,157,201,245],[201,245,407,491],[83,145,146,201,245,407,491],[83,145,146,158,201,245,407,491],[93,146,201,245,407,411],[147,148,149,150,151,152,153,154,155,156,157,158,201,245],[83,145,149,150,201,245],[83,149,150,201,245],[88,201,245,407,491],[88,89,90,91,201,245],[84,201,245,407],[84,201,245,407,491],[84,85,86,201,245],[201,245,407,411],[145,201,245],[62,195,201,245],[62,201,245],[62,92,175,176,201,245],[62,83,201,245],[62,81,140,201,245],[62,143,201,245],[62,81,184,185,186,187,188,189,201,245],[62,83,191,201,245,407],[62,83,85,193,201,245,407],[62,83,84,85,182,201,245,407],[62,83,85,180,201,245,407],[62,83,192,201,245,407],[62,83,84,181,201,245,407],[62,190,201,245,407],[180,181,182,201,245],[173,201,245],[82,201,245]],"referencedMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"exportedModulesMap":[[74,1],[75,2],[76,3],[80,4],[81,5],[77,3],[78,3],[79,6],[71,7],[70,4],[64,8],[67,9],[65,8],[68,10],[66,8],[63,11],[72,4],[69,12],[73,13],[539,14],[537,4],[299,15],[300,15],[301,16],[316,17],[317,18],[298,4],[365,19],[379,20],[378,21],[380,22],[382,23],[364,24],[381,4],[339,25],[338,26],[336,27],[337,28],[351,29],[370,30],[371,31],[368,32],[372,33],[373,31],[374,31],[375,34],[367,35],[366,22],[376,36],[369,37],[354,38],[355,39],[353,4],[330,40],[331,41],[332,42],[329,43],[358,44],[360,4],[361,45],[359,44],[357,46],[356,4],[303,47],[309,48],[302,49],[310,4],[311,4],[312,50],[404,4],[401,4],[400,4],[397,51],[406,52],[393,53],[402,54],[396,55],[395,56],[403,4],[398,57],[405,4],[399,58],[394,4],[389,59],[388,60],[387,53],[407,61],[477,62],[478,62],[480,63],[479,62],[472,62],[473,62],[475,64],[474,62],[450,4],[452,4],[451,4],[454,65],[453,4],[417,66],[415,67],[418,4],[465,68],[419,62],[455,69],[464,70],[456,4],[459,71],[457,4],[460,4],[462,4],[458,71],[461,4],[463,4],[416,72],[491,73],[476,62],[471,74],[481,75],[487,76],[488,77],[490,78],[489,79],[469,74],[470,80],[466,81],[468,82],[467,83],[482,62],[486,84],[483,62],[484,85],[485,62],[420,4],[421,4],[424,4],[422,4],[423,4],[426,4],[427,86],[428,4],[429,4],[425,4],[430,4],[431,4],[432,4],[433,4],[434,87],[435,4],[449,88],[436,4],[437,4],[438,4],[439,4],[440,4],[441,4],[442,4],[445,4],[443,4],[444,4],[446,62],[447,62],[448,89],[386,4],[542,90],[538,14],[540,91],[541,14],[544,92],[545,93],[551,94],[543,95],[556,96],[552,4],[555,97],[553,4],[550,98],[560,99],[559,98],[318,100],[561,4],[557,4],[562,101],[297,4],[305,49],[306,102],[554,4],[563,4],[546,4],[564,103],[242,104],[243,104],[244,105],[245,106],[246,107],[247,108],[199,4],[248,109],[249,110],[250,111],[251,112],[252,113],[253,114],[254,114],[256,4],[255,115],[257,116],[258,117],[259,118],[241,119],[260,120],[261,121],[262,122],[263,123],[264,124],[265,125],[266,126],[267,127],[268,128],[269,129],[270,130],[271,131],[272,132],[273,132],[274,133],[275,4],[276,4],[277,134],[279,135],[278,136],[280,137],[281,138],[282,139],[283,140],[284,141],[285,142],[286,143],[197,4],[295,144],[201,145],[198,4],[200,4],[287,146],[288,147],[289,148],[290,149],[291,150],[292,151],[293,152],[294,153],[565,4],[566,4],[567,4],[548,4],[549,4],[568,103],[569,4],[594,154],[595,155],[570,156],[573,156],[592,154],[593,154],[583,154],[582,157],[580,154],[575,154],[588,154],[586,154],[590,154],[574,154],[587,154],[591,154],[576,154],[577,154],[589,154],[571,154],[578,154],[579,154],[581,154],[585,154],[596,158],[584,154],[572,154],[609,159],[608,4],[603,158],[605,160],[604,158],[597,158],[598,158],[600,158],[602,158],[606,160],[607,160],[599,160],[601,160],[547,161],[610,162],[558,163],[611,95],[313,4],[613,164],[612,4],[614,165],[307,4],[308,166],[352,4],[304,4],[296,167],[377,4],[350,168],[348,168],[349,169],[173,170],[334,171],[333,172],[383,172],[384,173],[340,4],[344,174],[346,175],[345,174],[343,54],[319,176],[321,176],[322,177],[320,178],[347,179],[315,180],[314,181],[335,4],[323,172],[328,182],[326,183],[324,172],[325,172],[327,172],[363,184],[362,185],[385,186],[342,187],[341,4],[62,188],[58,189],[61,190],[60,4],[57,4],[59,4],[11,4],[12,4],[14,4],[13,4],[2,4],[15,4],[16,4],[17,4],[18,4],[19,4],[20,4],[21,4],[22,4],[3,4],[4,4],[26,4],[23,4],[24,4],[25,4],[27,4],[28,4],[29,4],[5,4],[30,4],[31,4],[32,4],[33,4],[6,4],[37,4],[34,4],[35,4],[36,4],[38,4],[7,4],[39,4],[44,4],[45,4],[40,4],[41,4],[42,4],[43,4],[8,4],[49,4],[46,4],[47,4],[48,4],[50,4],[9,4],[51,4],[52,4],[53,4],[54,4],[55,4],[1,4],[10,4],[56,4],[218,191],[229,192],[216,191],[230,193],[239,194],[208,195],[207,196],[238,103],[233,197],[237,198],[210,199],[226,200],[209,201],[236,202],[205,203],[206,197],[211,204],[212,4],[217,195],[215,204],[203,205],[240,206],[231,207],[221,208],[220,204],[222,209],[224,210],[219,211],[223,212],[234,103],[213,213],[214,214],[225,215],[204,193],[228,216],[227,204],[232,4],[202,4],[235,217],[172,218],[162,219],[164,220],[171,221],[166,4],[167,4],[165,222],[168,223],[159,4],[160,4],[161,218],[163,224],[169,4],[170,225],[195,226],[391,4],[392,4],[408,227],[101,4],[98,228],[95,4],[134,229],[97,4],[409,4],[103,229],[104,229],[132,230],[410,229],[129,231],[109,231],[99,4],[412,232],[177,233],[102,4],[131,4],[105,229],[178,233],[194,234],[413,235],[126,235],[414,235],[96,4],[176,235],[107,236],[133,231],[94,4],[108,229],[100,4],[175,237],[130,238],[492,239],[493,240],[494,241],[495,242],[496,243],[497,244],[498,245],[499,246],[500,247],[501,248],[502,249],[139,250],[135,250],[136,250],[137,251],[138,252],[140,253],[503,235],[124,4],[125,254],[127,255],[504,229],[128,256],[142,257],[505,258],[143,259],[141,260],[506,249],[187,4],[185,251],[189,251],[188,4],[186,251],[184,251],[507,261],[508,262],[509,263],[121,264],[144,4],[111,265],[510,231],[122,229],[117,4],[119,231],[110,231],[116,266],[118,231],[115,231],[114,267],[113,4],[511,268],[512,269],[513,270],[514,271],[123,272],[120,4],[150,273],[147,274],[149,273],[148,273],[158,275],[516,276],[517,277],[518,278],[519,279],[515,280],[155,281],[156,282],[154,281],[152,281],[151,281],[157,281],[153,281],[88,229],[89,229],[90,229],[91,229],[520,283],[521,276],[92,284],[112,4],[85,251],[84,4],[179,4],[86,4],[145,4],[522,285],[523,286],[87,287],[528,288],[524,251],[525,4],[93,4],[411,4],[526,4],[527,4],[146,289],[196,290],[191,291],[193,292],[182,293],[180,294],[192,291],[181,295],[190,296],[529,297],[530,298],[531,299],[532,300],[533,301],[534,302],[535,303],[183,304],[174,305],[390,4],[83,306],[82,4],[536,4],[106,4]],"semanticDiagnosticsPerFile":[74,75,76,80,81,77,78,79,71,70,64,67,65,68,66,63,72,69,73,539,537,299,300,301,316,317,298,365,379,378,380,382,364,381,339,338,336,337,351,370,371,368,372,373,374,375,367,366,376,369,354,355,353,330,331,332,329,358,360,361,359,357,356,303,309,302,310,311,312,404,401,400,397,406,393,402,396,395,403,398,405,399,394,389,388,387,407,477,478,480,479,472,473,475,474,450,452,451,454,453,417,415,418,465,419,455,464,456,459,457,460,462,458,461,463,416,491,476,471,481,487,488,490,489,469,470,466,468,467,482,486,483,484,485,420,421,424,422,423,426,427,428,429,425,430,431,432,433,434,435,449,436,437,438,439,440,441,442,445,443,444,446,447,448,386,542,538,540,541,544,545,551,543,556,552,555,553,550,560,559,318,561,557,562,297,305,306,554,563,546,564,242,243,244,245,246,247,199,248,249,250,251,252,253,254,256,255,257,258,259,241,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,278,280,281,282,283,284,285,286,197,295,201,198,200,287,288,289,290,291,292,293,294,565,566,567,548,549,568,569,594,595,570,573,592,593,583,582,580,575,588,586,590,574,587,591,576,577,589,571,578,579,581,585,596,584,572,609,608,603,605,604,597,598,600,602,606,607,599,601,547,610,558,611,313,613,612,614,307,308,352,304,296,377,350,348,349,173,334,333,383,384,340,344,346,345,343,319,321,322,320,347,315,314,335,323,328,326,324,325,327,363,362,385,342,341,62,58,61,60,57,59,11,12,14,13,2,15,16,17,18,19,20,21,22,3,4,26,23,24,25,27,28,29,5,30,31,32,33,6,37,34,35,36,38,7,39,44,45,40,41,42,43,8,49,46,47,48,50,9,51,52,53,54,55,1,10,56,218,229,216,230,239,208,207,238,233,237,210,226,209,236,205,206,211,212,217,215,203,240,231,221,220,222,224,219,223,234,213,214,225,204,228,227,232,202,235,172,162,164,171,166,167,165,168,159,160,161,163,169,170,195,391,392,408,101,98,95,134,97,409,103,104,132,410,129,109,99,412,177,102,131,105,178,194,413,126,414,96,176,107,133,94,108,100,175,130,492,493,494,495,496,497,498,499,500,501,502,139,135,136,137,138,140,503,124,125,127,504,128,142,505,143,141,506,187,185,189,188,186,184,507,508,509,121,144,111,510,122,117,119,110,116,118,115,114,113,511,512,513,514,123,120,150,147,149,148,158,516,517,518,519,515,155,156,154,152,151,157,153,88,89,90,91,520,521,92,112,85,84,179,86,145,522,523,87,528,524,525,93,411,526,527,146,196,191,193,182,180,192,181,190,529,530,531,532,533,534,535,183,174,390,83,82,536,106],"affectedFilesPendingEmit":[[74,1],[75,1],[76,1],[80,1],[81,1],[77,1],[78,1],[79,1],[71,1],[70,1],[64,1],[67,1],[65,1],[68,1],[66,1],[63,1],[72,1],[69,1],[73,1],[539,1],[537,1],[299,1],[300,1],[301,1],[316,1],[317,1],[298,1],[365,1],[379,1],[378,1],[380,1],[382,1],[364,1],[381,1],[339,1],[338,1],[336,1],[337,1],[351,1],[370,1],[371,1],[368,1],[372,1],[373,1],[374,1],[375,1],[367,1],[366,1],[376,1],[369,1],[354,1],[355,1],[353,1],[330,1],[331,1],[332,1],[329,1],[358,1],[360,1],[361,1],[359,1],[357,1],[356,1],[303,1],[309,1],[302,1],[310,1],[311,1],[312,1],[404,1],[401,1],[400,1],[397,1],[406,1],[393,1],[402,1],[396,1],[395,1],[403,1],[398,1],[405,1],[399,1],[394,1],[389,1],[388,1],[387,1],[407,1],[477,1],[478,1],[480,1],[479,1],[472,1],[473,1],[475,1],[474,1],[450,1],[452,1],[451,1],[454,1],[453,1],[417,1],[415,1],[418,1],[465,1],[419,1],[455,1],[464,1],[456,1],[459,1],[457,1],[460,1],[462,1],[458,1],[461,1],[463,1],[416,1],[491,1],[476,1],[471,1],[481,1],[487,1],[488,1],[490,1],[489,1],[469,1],[470,1],[466,1],[468,1],[467,1],[482,1],[486,1],[483,1],[484,1],[485,1],[420,1],[421,1],[424,1],[422,1],[423,1],[426,1],[427,1],[428,1],[429,1],[425,1],[430,1],[431,1],[432,1],[433,1],[434,1],[435,1],[449,1],[436,1],[437,1],[438,1],[439,1],[440,1],[441,1],[442,1],[445,1],[443,1],[444,1],[446,1],[447,1],[448,1],[386,1],[542,1],[538,1],[540,1],[541,1],[544,1],[545,1],[551,1],[543,1],[556,1],[552,1],[555,1],[553,1],[550,1],[560,1],[559,1],[318,1],[561,1],[557,1],[562,1],[297,1],[305,1],[306,1],[554,1],[563,1],[546,1],[564,1],[242,1],[243,1],[244,1],[245,1],[246,1],[247,1],[199,1],[248,1],[249,1],[250,1],[251,1],[252,1],[253,1],[254,1],[256,1],[255,1],[257,1],[258,1],[259,1],[241,1],[260,1],[261,1],[262,1],[263,1],[264,1],[265,1],[266,1],[267,1],[268,1],[269,1],[270,1],[271,1],[272,1],[273,1],[274,1],[275,1],[276,1],[277,1],[279,1],[278,1],[280,1],[281,1],[282,1],[283,1],[284,1],[285,1],[286,1],[197,1],[295,1],[201,1],[198,1],[200,1],[287,1],[288,1],[289,1],[290,1],[291,1],[292,1],[293,1],[294,1],[565,1],[566,1],[567,1],[548,1],[549,1],[568,1],[569,1],[594,1],[595,1],[570,1],[573,1],[592,1],[593,1],[583,1],[582,1],[580,1],[575,1],[588,1],[586,1],[590,1],[574,1],[587,1],[591,1],[576,1],[577,1],[589,1],[571,1],[578,1],[579,1],[581,1],[585,1],[596,1],[584,1],[572,1],[609,1],[608,1],[603,1],[605,1],[604,1],[597,1],[598,1],[600,1],[602,1],[606,1],[607,1],[599,1],[601,1],[547,1],[610,1],[558,1],[611,1],[313,1],[613,1],[612,1],[614,1],[307,1],[308,1],[352,1],[304,1],[296,1],[377,1],[350,1],[348,1],[349,1],[173,1],[334,1],[333,1],[383,1],[384,1],[340,1],[344,1],[346,1],[345,1],[343,1],[319,1],[321,1],[322,1],[320,1],[347,1],[315,1],[314,1],[335,1],[323,1],[328,1],[326,1],[324,1],[325,1],[327,1],[363,1],[362,1],[385,1],[342,1],[341,1],[62,1],[58,1],[61,1],[60,1],[57,1],[59,1],[2,1],[3,1],[4,1],[5,1],[6,1],[7,1],[8,1],[9,1],[10,1],[218,1],[229,1],[216,1],[230,1],[239,1],[208,1],[207,1],[238,1],[233,1],[237,1],[210,1],[226,1],[209,1],[236,1],[205,1],[206,1],[211,1],[212,1],[217,1],[215,1],[203,1],[240,1],[231,1],[221,1],[220,1],[222,1],[224,1],[219,1],[223,1],[234,1],[213,1],[214,1],[225,1],[204,1],[228,1],[227,1],[232,1],[202,1],[235,1],[172,1],[162,1],[164,1],[171,1],[166,1],[167,1],[165,1],[168,1],[159,1],[160,1],[161,1],[163,1],[169,1],[170,1],[195,1],[391,1],[392,1],[408,1],[101,1],[98,1],[95,1],[134,1],[97,1],[409,1],[103,1],[104,1],[132,1],[410,1],[129,1],[109,1],[99,1],[412,1],[177,1],[102,1],[131,1],[105,1],[178,1],[194,1],[413,1],[126,1],[414,1],[96,1],[176,1],[107,1],[133,1],[94,1],[108,1],[100,1],[175,1],[130,1],[492,1],[493,1],[494,1],[495,1],[496,1],[497,1],[498,1],[499,1],[500,1],[501,1],[502,1],[139,1],[135,1],[136,1],[137,1],[138,1],[140,1],[503,1],[124,1],[125,1],[127,1],[504,1],[128,1],[142,1],[505,1],[143,1],[141,1],[506,1],[187,1],[185,1],[189,1],[188,1],[186,1],[184,1],[507,1],[508,1],[509,1],[121,1],[144,1],[111,1],[510,1],[122,1],[117,1],[119,1],[110,1],[116,1],[118,1],[115,1],[114,1],[113,1],[511,1],[512,1],[513,1],[514,1],[123,1],[120,1],[150,1],[147,1],[149,1],[148,1],[158,1],[516,1],[517,1],[518,1],[519,1],[515,1],[155,1],[156,1],[154,1],[152,1],[151,1],[157,1],[153,1],[88,1],[89,1],[90,1],[91,1],[520,1],[521,1],[92,1],[112,1],[85,1],[84,1],[179,1],[86,1],[145,1],[522,1],[523,1],[87,1],[528,1],[524,1],[525,1],[93,1],[411,1],[526,1],[527,1],[146,1],[196,1],[191,1],[193,1],[182,1],[180,1],[192,1],[181,1],[190,1],[529,1],[530,1],[531,1],[532,1],[533,1],[534,1],[535,1],[183,1],[174,1],[390,1],[83,1],[82,1],[536,1],[106,1]]},"version":"4.9.5"}
./frontend/node_modules/.cache/babel-loader/fc68d6464bbee6f23baec9014b2736bedc39a16a7118df924adf90ecb249a716.json:1:{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import CourseManager from\"./CourseManager\";import PlayerProfileManager from\"../PlayerProfileManager\";// import usePlayerProfile from \"../../hooks/usePlayerProfile\"; // Temporarily disabled\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||\"\";// Helper function to safely serialize error details\nconst formatErrorDetail=detail=>{if(typeof detail==='object'&&detail!==null){return JSON.stringify(detail);}return detail;};const COLORS={primary:\"#1976d2\",accent:\"#00bcd4\",warning:\"#ff9800\",error:\"#d32f2f\",success:\"#388e3c\",bg:\"#f9fafe\",card:\"#fff\",border:\"#e0e0e0\",text:\"#222\",muted:\"#888\"};const cardStyle={background:COLORS.card,borderRadius:12,boxShadow:\"0 2px 8px rgba(0,0,0,0.04)\",padding:16,marginBottom:18,border:`1px solid ${COLORS.border}`};const buttonStyle={background:COLORS.primary,color:\"#fff\",border:\"none\",borderRadius:8,padding:\"14px 24px\",fontWeight:600,fontSize:18,minHeight:44,margin:\"8px 0\",boxShadow:\"0 1px 4px rgba(25, 118, 210, 0.08)\",cursor:\"pointer\",transition:\"background 0.2s\"};const inputStyle={border:`1px solid ${COLORS.border}`,borderRadius:6,padding:\"12px 16px\",fontSize:18,minHeight:44,width:60,margin:\"4px 0\"};function GameSetupForm(_ref){let{onSetup}=_ref;// Temporarily simplified profile handling\nconst selectedProfile=null;const profiles=[];const hasProfiles=false;const selectProfile=()=>{};const[players,setPlayers]=useState([{id:'p1',name:'',handicap:'',strength:'',is_human:true,profile_id:null},{id:'p2',name:'',handicap:'',strength:'',is_human:true,profile_id:null},{id:'p3',name:'',handicap:'',strength:'',is_human:true,profile_id:null},{id:'p4',name:'',handicap:'',strength:'',is_human:true,profile_id:null}]);const[courses,setCourses]=useState([]);const[courseName,setCourseName]=useState('');const[error,setError]=useState('');const[showCourseManager,setShowCourseManager]=useState(false);const[showProfileManager,setShowProfileManager]=useState(false);const[setupMode,setSetupMode]=useState('quick');// 'quick' or 'profile'\n// GHIN lookup state\nconst[ghinSearch,setGhinSearch]=useState({});// {p1: {first_name, last_name}, ...}\nconst[ghinResults,setGhinResults]=useState({});// {p1: [], ...}\nconst[ghinLoading,setGhinLoading]=useState({});const[ghinError,setGhinError]=useState({});useEffect(()=>{fetch(`${API_URL}/courses`).then(res=>{if(!res.ok){throw new Error(`HTTP ${res.status}: ${res.statusText}`);}return res.json();}).then(data=>{if(!data||typeof data!=='object'){throw new Error('Invalid courses data format');}const courseNames=Object.keys(data);setCourses(courseNames);if(courseNames.length>0){setCourseName(courseNames[0]);}else{throw new Error('No courses available');}}).catch(error=>{console.error('Failed to load courses:',error);// Provide fallback courses so game can still start\nconst fallbackCourses=[\"Default Course\"];setCourses(fallbackCourses);setCourseName(\"Default Course\");// Set error to show user-friendly message\nsetError('Unable to load courses from server. Using default course. The game can still be played.');// Clear error after 5 seconds to not permanently block the UI\nsetTimeout(()=>{setError('');},5000);});},[]);// Auto-populate first player with selected profile\nuseEffect(()=>{if(selectedProfile&&setupMode==='profile'){setPlayers(prevPlayers=>prevPlayers.map((p,i)=>i===0?{...p,name:selectedProfile.name,handicap:selectedProfile.handicap.toString(),strength:getStrengthFromHandicap(selectedProfile.handicap),profile_id:selectedProfile.id}:p));}},[selectedProfile,setupMode]);const getStrengthFromHandicap=handicap=>{const h=parseFloat(handicap);if(h<=5)return'Expert';if(h<=10)return'Strong';if(h<=15)return'Average';return'Beginner';};const handleChange=(idx,field,value)=>{setPlayers(players=>players.map((p,i)=>i===idx?{...p,[field]:value}:p));};const handleProfileSelect=(idx,profile)=>{if(profile){setPlayers(prevPlayers=>prevPlayers.map((p,i)=>i===idx?{...p,name:profile.name,handicap:profile.handicap.toString(),strength:getStrengthFromHandicap(profile.handicap),profile_id:profile.id}:p));}else{setPlayers(prevPlayers=>prevPlayers.map((p,i)=>i===idx?{...p,name:'',handicap:'',strength:'',profile_id:null}:p));}};// GHIN lookup handlers\nconst handleGhinSearchChange=(pid,field,value)=>{setGhinSearch(s=>({...s,[pid]:{...s[pid],[field]:value}}));};const handleGhinLookup=async pid=>{const search=ghinSearch[pid]||{};if(!search.last_name||!search.last_name.trim())return;setGhinLoading(l=>({...l,[pid]:true}));setGhinError(e=>({...e,[pid]:''}));setGhinResults(r=>({...r,[pid]:[]}));try{const params=new URLSearchParams({last_name:search.last_name,...(search.first_name?{first_name:search.first_name}:{})});const res=await fetch(`${API_URL}/ghin/lookup?${params.toString()}`);if(!res.ok)throw new Error('Lookup failed');const data=await res.json();setGhinResults(r=>({...r,[pid]:data}));}catch(err){setGhinError(e=>({...e,[pid]:err.message}));}finally{setGhinLoading(l=>({...l,[pid]:false}));}};const handleGhinSelect=(pid,golfer)=>{setPlayers(players=>players.map(p=>p.id===pid?{...p,name:golfer.name,handicap:golfer.handicap||'',is_human:true// All players in GameSetupForm are human\n}:p));setGhinResults(r=>({...r,[pid]:[]}));setGhinSearch(s=>({...s,[pid]:''}));};const handleSubmit=async e=>{e.preventDefault();if(players.some(p=>!p.name||p.handicap===''||!p.strength)){setError('All names, handicaps, and strengths are required.');return;}setError('');const res=await fetch(`${API_URL}/game/setup`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({players,course_name:courseName})});const data=await res.json();if(data.status==='ok'){onSetup(data.game_state);}else{setError(formatErrorDetail(data.detail)||'Setup failed');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[showCourseManager&&/*#__PURE__*/_jsx(CourseManager,{onClose:()=>setShowCourseManager(false),onCoursesChanged:()=>{fetch(`${API_URL}/courses`).then(res=>{if(!res.ok){throw new Error(`HTTP ${res.status}: ${res.statusText}`);}return res.json();}).then(data=>{if(data&&typeof data==='object'){setCourses(Object.keys(data));}}).catch(error=>{console.error('Failed to refresh courses:',error);setError('Failed to refresh courses from server.');setTimeout(()=>setError(''),3000);});}}),showProfileManager&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0,0,0,0.5)',zIndex:1000,display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',borderRadius:12,maxWidth:'90vw',maxHeight:'90vh',overflow:'auto',padding:20},children:[/*#__PURE__*/_jsx(PlayerProfileManager,{onProfileSelect:profile=>{selectProfile(profile);setShowProfileManager(false);},selectedProfile:selectedProfile,showSelector:false}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowProfileManager(false),style:{...buttonStyle,background:COLORS.muted,marginTop:16},children:\"Close\"})]})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,style:{...cardStyle,maxWidth:480,margin:'40px auto',background:COLORS.bg},children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:COLORS.primary,marginBottom:12},children:\"Setup Players & Course\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:16,display:'flex',gap:8,alignItems:'center'},children:[/*#__PURE__*/_jsx(\"label\",{style:{fontWeight:600},children:\"Setup Mode:\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setSetupMode('quick'),style:{...buttonStyle,padding:'8px 16px',fontSize:14,background:setupMode==='quick'?COLORS.primary:COLORS.muted},children:\"Quick Setup\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setSetupMode('profile'),style:{...buttonStyle,padding:'8px 16px',fontSize:14,background:setupMode==='profile'?COLORS.primary:COLORS.muted},children:\"Use Profiles\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowProfileManager(true),style:{...buttonStyle,padding:'8px 16px',fontSize:14,background:COLORS.accent},children:\"Manage Profiles\"})]}),setupMode==='profile'&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:16,padding:12,backgroundColor:'#f8f9fa',borderRadius:8,border:'1px solid #e9ecef'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{margin:'0 0 8px 0',color:COLORS.primary},children:\"Your Profile\"}),selectedProfile?/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:selectedProfile.name}),\" (Handicap: \",selectedProfile.handicap,\")\"]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>selectProfile(null),style:{...buttonStyle,padding:'4px 8px',fontSize:12,background:COLORS.warning},children:\"Change\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{style:{margin:'0 0 8px 0',color:COLORS.muted},children:\"No profile selected\"}),hasProfiles?/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexWrap:'wrap',gap:8},children:profiles.slice(0,3).map(profile=>/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>selectProfile(profile),style:{...buttonStyle,padding:'6px 12px',fontSize:12,background:COLORS.accent},children:profile.name},profile.id))}):/*#__PURE__*/_jsx(\"p\",{style:{margin:0,color:COLORS.muted,fontSize:14},children:\"Create a profile to track your statistics across games.\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:12,display:'flex',flexWrap:'wrap',gap:8,flexDirection:window.innerWidth<600?'column':'row'},children:[/*#__PURE__*/_jsx(\"label\",{style:{fontWeight:600,marginRight:8},children:\"Course:\"}),/*#__PURE__*/_jsx(\"select\",{style:{...inputStyle,width:180},value:courseName,onChange:e=>setCourseName(e.target.value),children:courses.map(c=>/*#__PURE__*/_jsx(\"option\",{value:c,children:c},c))}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",style:{...buttonStyle,background:COLORS.accent,marginLeft:10,fontSize:16,padding:\"10px 18px\"},onClick:()=>setShowCourseManager(true),children:\"Manage Courses\"})]}),players.map((player,idx)=>{var _ghinSearch$player$id,_ghinSearch$player$id2,_ghinSearch$player$id3,_ghinResults$player$i;return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:18,border:'1px solid #eee',borderRadius:8,padding:12},children:[setupMode==='profile'&&idx>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:12},children:[/*#__PURE__*/_jsxs(\"label\",{style:{display:'block',fontSize:12,fontWeight:600,marginBottom:4},children:[\"Player \",idx+1,\" Profile (Optional):\"]}),/*#__PURE__*/_jsxs(\"select\",{value:player.profile_id||'',onChange:e=>{const profileId=e.target.value;const selectedProfile=profiles.find(p=>p.id===parseInt(profileId));handleProfileSelect(idx,selectedProfile);},style:{width:'100%',marginBottom:8},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Manual Entry\"}),profiles.map(profile=>/*#__PURE__*/_jsxs(\"option\",{value:profile.id,children:[profile.name,\" (Handicap: \",profile.handicap,\")\"]},profile.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:8,flexWrap:'wrap'},children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:`player-${idx}-name`,style:{fontSize:12,fontWeight:600},children:[\"Player \",idx+1,\" Name\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",value:player.name,onChange:e=>handleChange(idx,'name',e.target.value),style:{width:120,marginRight:8},id:`player-${idx}-name`,disabled:setupMode==='profile'&&idx===0&&selectedProfile}),/*#__PURE__*/_jsx(\"label\",{htmlFor:`player-${idx}-handicap`,style:{fontSize:12,fontWeight:600},children:\"Handicap\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Handicap\",value:player.handicap,onChange:e=>handleChange(idx,'handicap',e.target.value),style:{width:70,marginRight:8},id:`player-${idx}-handicap`,disabled:setupMode==='profile'&&idx===0&&selectedProfile}),/*#__PURE__*/_jsxs(\"select\",{value:player.strength,onChange:e=>handleChange(idx,'strength',e.target.value),style:{width:110,marginRight:8},disabled:setupMode==='profile'&&(idx===0&&selectedProfile||player.profile_id),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Strength\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Beginner\",children:\"Beginner\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Average\",children:\"Average\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Strong\",children:\"Strong\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Expert\",children:\"Expert\"})]}),player.profile_id&&/*#__PURE__*/_jsx(\"span\",{style:{fontSize:12,color:COLORS.success,fontWeight:600},children:\"\\uD83D\\uDCCA Profile\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"First Name (optional)\",value:((_ghinSearch$player$id=ghinSearch[player.id])===null||_ghinSearch$player$id===void 0?void 0:_ghinSearch$player$id.first_name)||'',onChange:e=>handleGhinSearchChange(player.id,'first_name',e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Last Name (required)\",value:((_ghinSearch$player$id2=ghinSearch[player.id])===null||_ghinSearch$player$id2===void 0?void 0:_ghinSearch$player$id2.last_name)||'',onChange:e=>handleGhinSearchChange(player.id,'last_name',e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>handleGhinLookup(player.id),disabled:(ghinLoading===null||ghinLoading===void 0?void 0:ghinLoading[player.id])||!((_ghinSearch$player$id3=ghinSearch[player.id])!==null&&_ghinSearch$player$id3!==void 0&&_ghinSearch$player$id3.last_name),style:{marginRight:4},children:ghinLoading!==null&&ghinLoading!==void 0&&ghinLoading[player.id]?'Searching...':'GHIN Lookup'})]}),(ghinError===null||ghinError===void 0?void 0:ghinError[player.id])&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red',fontSize:13},children:ghinError[player.id]}),(ghinResults===null||ghinResults===void 0?void 0:(_ghinResults$player$i=ghinResults[player.id])===null||_ghinResults$player$i===void 0?void 0:_ghinResults$player$i.length)>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:6,background:'#f9f9f9',border:'1px solid #ddd',borderRadius:6,padding:8},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:13,marginBottom:4},children:\"Select a golfer:\"}),ghinResults[player.id].map(golfer=>{var _golfer$handicap;return/*#__PURE__*/_jsxs(\"div\",{style:{padding:4,cursor:'pointer',borderBottom:'1px solid #eee'},onClick:()=>handleGhinSelect(player.id,golfer),children:[/*#__PURE__*/_jsx(\"strong\",{children:golfer.name}),\" (GHIN: \",golfer.ghin,\")\",/*#__PURE__*/_jsx(\"br\",{}),\"Club: \",golfer.club,\" | Handicap: \",(_golfer$handicap=golfer.handicap)!==null&&_golfer$handicap!==void 0?_golfer$handicap:'N/A']},golfer.ghin);})]})]},player.id);}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:COLORS.error,marginBottom:8},children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:{...buttonStyle,width:'100%'},children:\"Start Game\"})]})]});}export default GameSetupForm;","map":{"version":3,"names":["React","useState","useEffect","CourseManager","PlayerProfileManager","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","formatErrorDetail","detail","JSON","stringify","COLORS","primary","accent","warning","error","success","bg","card","border","text","muted","cardStyle","background","borderRadius","boxShadow","padding","marginBottom","buttonStyle","color","fontWeight","fontSize","minHeight","margin","cursor","transition","inputStyle","width","GameSetupForm","_ref","onSetup","selectedProfile","profiles","hasProfiles","selectProfile","players","setPlayers","id","name","handicap","strength","is_human","profile_id","courses","setCourses","courseName","setCourseName","setError","showCourseManager","setShowCourseManager","showProfileManager","setShowProfileManager","setupMode","setSetupMode","ghinSearch","setGhinSearch","ghinResults","setGhinResults","ghinLoading","setGhinLoading","ghinError","setGhinError","fetch","then","res","ok","Error","status","statusText","json","data","courseNames","Object","keys","length","catch","console","fallbackCourses","setTimeout","prevPlayers","map","p","i","toString","getStrengthFromHandicap","h","parseFloat","handleChange","idx","field","value","handleProfileSelect","profile","handleGhinSearchChange","pid","s","handleGhinLookup","search","last_name","trim","l","e","r","params","URLSearchParams","first_name","err","message","handleGhinSelect","golfer","handleSubmit","preventDefault","some","method","headers","body","course_name","game_state","children","onClose","onCoursesChanged","style","position","top","left","right","bottom","backgroundColor","zIndex","display","alignItems","justifyContent","maxWidth","maxHeight","overflow","onProfileSelect","showSelector","onClick","marginTop","onSubmit","gap","type","flexWrap","slice","flexDirection","window","innerWidth","marginRight","onChange","target","c","marginLeft","player","_ghinSearch$player$id","_ghinSearch$player$id2","_ghinSearch$player$id3","_ghinResults$player$i","profileId","find","parseInt","htmlFor","placeholder","disabled","required","_golfer$handicap","borderBottom","ghin","club"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/game/GameSetupForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CourseManager from \"./CourseManager\";\nimport PlayerProfileManager from \"../PlayerProfileManager\";\n// import usePlayerProfile from \"../../hooks/usePlayerProfile\"; // Temporarily disabled\n\nconst API_URL = process.env.REACT_APP_API_URL || \"\";\n\n// Helper function to safely serialize error details\nconst formatErrorDetail = (detail) => {\n  if (typeof detail === 'object' && detail !== null) {\n    return JSON.stringify(detail);\n  }\n  return detail;\n};\nconst COLORS = {\n  primary: \"#1976d2\",\n  accent: \"#00bcd4\",\n  warning: \"#ff9800\",\n  error: \"#d32f2f\",\n  success: \"#388e3c\",\n  bg: \"#f9fafe\",\n  card: \"#fff\",\n  border: \"#e0e0e0\",\n  text: \"#222\",\n  muted: \"#888\",\n};\nconst cardStyle = {\n  background: COLORS.card,\n  borderRadius: 12,\n  boxShadow: \"0 2px 8px rgba(0,0,0,0.04)\",\n  padding: 16,\n  marginBottom: 18,\n  border: `1px solid ${COLORS.border}`,\n};\nconst buttonStyle = {\n  background: COLORS.primary,\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: 8,\n  padding: \"14px 24px\",\n  fontWeight: 600,\n  fontSize: 18,\n  minHeight: 44,\n  margin: \"8px 0\",\n  boxShadow: \"0 1px 4px rgba(25, 118, 210, 0.08)\",\n  cursor: \"pointer\",\n  transition: \"background 0.2s\",\n};\nconst inputStyle = {\n  border: `1px solid ${COLORS.border}`,\n  borderRadius: 6,\n  padding: \"12px 16px\",\n  fontSize: 18,\n  minHeight: 44,\n  width: 60,\n  margin: \"4px 0\",\n};\n\nfunction GameSetupForm({ onSetup }) {\n  // Temporarily simplified profile handling\n  const selectedProfile = null;\n  const profiles = [];\n  const hasProfiles = false;\n  const selectProfile = () => {};\n\n  const [players, setPlayers] = useState([\n    { id: 'p1', name: '', handicap: '', strength: '', is_human: true, profile_id: null },\n    { id: 'p2', name: '', handicap: '', strength: '', is_human: true, profile_id: null },\n    { id: 'p3', name: '', handicap: '', strength: '', is_human: true, profile_id: null },\n    { id: 'p4', name: '', handicap: '', strength: '', is_human: true, profile_id: null },\n  ]);\n  const [courses, setCourses] = useState([]);\n  const [courseName, setCourseName] = useState('');\n  const [error, setError] = useState('');\n  const [showCourseManager, setShowCourseManager] = useState(false);\n  const [showProfileManager, setShowProfileManager] = useState(false);\n  const [setupMode, setSetupMode] = useState('quick'); // 'quick' or 'profile'\n  // GHIN lookup state\n  const [ghinSearch, setGhinSearch] = useState({}); // {p1: {first_name, last_name}, ...}\n  const [ghinResults, setGhinResults] = useState({}); // {p1: [], ...}\n  const [ghinLoading, setGhinLoading] = useState({});\n  const [ghinError, setGhinError] = useState({});\n\n  useEffect(() => {\n    fetch(`${API_URL}/courses`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then(data => {\n        if (!data || typeof data !== 'object') {\n          throw new Error('Invalid courses data format');\n        }\n        \n        const courseNames = Object.keys(data);\n        setCourses(courseNames);\n        \n        if (courseNames.length > 0) {\n          setCourseName(courseNames[0]);\n        } else {\n          throw new Error('No courses available');\n        }\n      })\n      .catch(error => {\n        console.error('Failed to load courses:', error);\n        \n        // Provide fallback courses so game can still start\n        const fallbackCourses = [\"Default Course\"];\n        setCourses(fallbackCourses);\n        setCourseName(\"Default Course\");\n        \n        // Set error to show user-friendly message\n        setError('Unable to load courses from server. Using default course. The game can still be played.');\n        \n        // Clear error after 5 seconds to not permanently block the UI\n        setTimeout(() => {\n          setError('');\n        }, 5000);\n      });\n  }, []);\n\n  // Auto-populate first player with selected profile\n  useEffect(() => {\n    if (selectedProfile && setupMode === 'profile') {\n      setPlayers(prevPlayers => prevPlayers.map((p, i) => \n        i === 0 ? {\n          ...p,\n          name: selectedProfile.name,\n          handicap: selectedProfile.handicap.toString(),\n          strength: getStrengthFromHandicap(selectedProfile.handicap),\n          profile_id: selectedProfile.id\n        } : p\n      ));\n    }\n  }, [selectedProfile, setupMode]);\n\n  const getStrengthFromHandicap = (handicap) => {\n    const h = parseFloat(handicap);\n    if (h <= 5) return 'Expert';\n    if (h <= 10) return 'Strong';\n    if (h <= 15) return 'Average';\n    return 'Beginner';\n  };\n\n  const handleChange = (idx, field, value) => {\n    setPlayers(players => players.map((p, i) => i === idx ? { ...p, [field]: value } : p));\n  };\n\n  const handleProfileSelect = (idx, profile) => {\n    if (profile) {\n      setPlayers(prevPlayers => prevPlayers.map((p, i) => \n        i === idx ? {\n          ...p,\n          name: profile.name,\n          handicap: profile.handicap.toString(),\n          strength: getStrengthFromHandicap(profile.handicap),\n          profile_id: profile.id\n        } : p\n      ));\n    } else {\n      setPlayers(prevPlayers => prevPlayers.map((p, i) => \n        i === idx ? {\n          ...p,\n          name: '',\n          handicap: '',\n          strength: '',\n          profile_id: null\n        } : p\n      ));\n    }\n  };\n\n  // GHIN lookup handlers\n  const handleGhinSearchChange = (pid, field, value) => {\n    setGhinSearch(s => ({ ...s, [pid]: { ...s[pid], [field]: value } }));\n  };\n  const handleGhinLookup = async (pid) => {\n    const search = ghinSearch[pid] || {};\n    if (!search.last_name || !search.last_name.trim()) return;\n    setGhinLoading(l => ({ ...l, [pid]: true }));\n    setGhinError(e => ({ ...e, [pid]: '' }));\n    setGhinResults(r => ({ ...r, [pid]: [] }));\n    try {\n      const params = new URLSearchParams({\n        last_name: search.last_name,\n        ...(search.first_name ? { first_name: search.first_name } : {})\n      });\n      const res = await fetch(`${API_URL}/ghin/lookup?${params.toString()}`);\n      if (!res.ok) throw new Error('Lookup failed');\n      const data = await res.json();\n      setGhinResults(r => ({ ...r, [pid]: data }));\n    } catch (err) {\n      setGhinError(e => ({ ...e, [pid]: err.message }));\n    } finally {\n      setGhinLoading(l => ({ ...l, [pid]: false }));\n    }\n  };\n  const handleGhinSelect = (pid, golfer) => {\n    setPlayers(players => players.map(p => p.id === pid ? {\n      ...p,\n      name: golfer.name,\n      handicap: golfer.handicap || '',\n      is_human: true  // All players in GameSetupForm are human\n    } : p));\n    setGhinResults(r => ({ ...r, [pid]: [] }));\n    setGhinSearch(s => ({ ...s, [pid]: '' }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (players.some(p => !p.name || p.handicap === '' || !p.strength)) {\n      setError('All names, handicaps, and strengths are required.');\n      return;\n    }\n    setError('');\n    const res = await fetch(`${API_URL}/game/setup`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ players, course_name: courseName }),\n    });\n    const data = await res.json();\n    if (data.status === 'ok') {\n      onSetup(data.game_state);\n    } else {\n      setError(formatErrorDetail(data.detail) || 'Setup failed');\n    }\n  };\n\n  return (\n    <>\n      {showCourseManager && <CourseManager onClose={() => setShowCourseManager(false)} onCoursesChanged={() => {\n        fetch(`${API_URL}/courses`)\n          .then(res => {\n            if (!res.ok) {\n              throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n            }\n            return res.json();\n          })\n          .then(data => {\n            if (data && typeof data === 'object') {\n              setCourses(Object.keys(data));\n            }\n          })\n          .catch(error => {\n            console.error('Failed to refresh courses:', error);\n            setError('Failed to refresh courses from server.');\n            setTimeout(() => setError(''), 3000);\n          });\n      }} />}\n      {showProfileManager && (\n        <div style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: 'rgba(0,0,0,0.5)', zIndex: 1000, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <div style={{ backgroundColor: 'white', borderRadius: 12, maxWidth: '90vw', maxHeight: '90vh', overflow: 'auto', padding: 20 }}>\n            <PlayerProfileManager \n              onProfileSelect={(profile) => {\n                selectProfile(profile);\n                setShowProfileManager(false);\n              }}\n              selectedProfile={selectedProfile}\n              showSelector={false}\n            />\n            <button \n              onClick={() => setShowProfileManager(false)}\n              style={{ ...buttonStyle, background: COLORS.muted, marginTop: 16 }}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n      <form onSubmit={handleSubmit} style={{ ...cardStyle, maxWidth: 480, margin: '40px auto', background: COLORS.bg }}>\n        <h2 style={{ color: COLORS.primary, marginBottom: 12 }}>Setup Players & Course</h2>\n        \n        {/* Setup Mode Toggle */}\n        <div style={{ marginBottom: 16, display: 'flex', gap: 8, alignItems: 'center' }}>\n          <label style={{ fontWeight: 600 }}>Setup Mode:</label>\n          <button\n            type=\"button\"\n            onClick={() => setSetupMode('quick')}\n            style={{\n              ...buttonStyle,\n              padding: '8px 16px',\n              fontSize: 14,\n              background: setupMode === 'quick' ? COLORS.primary : COLORS.muted\n            }}\n          >\n            Quick Setup\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setSetupMode('profile')}\n            style={{\n              ...buttonStyle,\n              padding: '8px 16px',\n              fontSize: 14,\n              background: setupMode === 'profile' ? COLORS.primary : COLORS.muted\n            }}\n          >\n            Use Profiles\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setShowProfileManager(true)}\n            style={{\n              ...buttonStyle,\n              padding: '8px 16px',\n              fontSize: 14,\n              background: COLORS.accent\n            }}\n          >\n            Manage Profiles\n          </button>\n        </div>\n\n        {/* Profile Selection for Profile Mode */}\n        {setupMode === 'profile' && (\n          <div style={{ marginBottom: 16, padding: 12, backgroundColor: '#f8f9fa', borderRadius: 8, border: '1px solid #e9ecef' }}>\n            <h4 style={{ margin: '0 0 8px 0', color: COLORS.primary }}>Your Profile</h4>\n            {selectedProfile ? (\n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                <div>\n                  <strong>{selectedProfile.name}</strong> (Handicap: {selectedProfile.handicap})\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => selectProfile(null)}\n                  style={{ ...buttonStyle, padding: '4px 8px', fontSize: 12, background: COLORS.warning }}\n                >\n                  Change\n                </button>\n              </div>\n            ) : (\n              <div>\n                <p style={{ margin: '0 0 8px 0', color: COLORS.muted }}>No profile selected</p>\n                {hasProfiles ? (\n                  <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\n                    {profiles.slice(0, 3).map(profile => (\n                      <button\n                        key={profile.id}\n                        type=\"button\"\n                        onClick={() => selectProfile(profile)}\n                        style={{ ...buttonStyle, padding: '6px 12px', fontSize: 12, background: COLORS.accent }}\n                      >\n                        {profile.name}\n                      </button>\n                    ))}\n                  </div>\n                ) : (\n                  <p style={{ margin: 0, color: COLORS.muted, fontSize: 14 }}>\n                    Create a profile to track your statistics across games.\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n        <div style={{ marginBottom: 12, display: 'flex', flexWrap: 'wrap', gap: 8, flexDirection: window.innerWidth < 600 ? 'column' : 'row' }}>\n          <label style={{ fontWeight: 600, marginRight: 8 }}>Course:</label>\n          <select style={{ ...inputStyle, width: 180 }} value={courseName} onChange={e => setCourseName(e.target.value)}>\n            {courses.map(c => <option key={c} value={c}>{c}</option>)}\n          </select>\n          <button type=\"button\" style={{ ...buttonStyle, background: COLORS.accent, marginLeft: 10, fontSize: 16, padding: \"10px 18px\" }} onClick={() => setShowCourseManager(true)}>Manage Courses</button>\n        </div>\n        {players.map((player, idx) => (\n          <div key={player.id} style={{ marginBottom: 18, border: '1px solid #eee', borderRadius: 8, padding: 12 }}>\n            {/* Profile Selection for Profile Mode */}\n            {setupMode === 'profile' && idx > 0 && (\n              <div style={{ marginBottom: 12 }}>\n                <label style={{ display: 'block', fontSize: 12, fontWeight: 600, marginBottom: 4 }}>\n                  Player {idx + 1} Profile (Optional):\n                </label>\n                <select\n                  value={player.profile_id || ''}\n                  onChange={e => {\n                    const profileId = e.target.value;\n                    const selectedProfile = profiles.find(p => p.id === parseInt(profileId));\n                    handleProfileSelect(idx, selectedProfile);\n                  }}\n                  style={{ width: '100%', marginBottom: 8 }}\n                >\n                  <option value=\"\">Manual Entry</option>\n                  {profiles.map(profile => (\n                    <option key={profile.id} value={profile.id}>\n                      {profile.name} (Handicap: {profile.handicap})\n                    </option>\n                  ))}\n                </select>\n              </div>\n            )}\n            \n            <div style={{ display: 'flex', alignItems: 'center', gap: 8, flexWrap: 'wrap' }}>\n              <label htmlFor={`player-${idx}-name`} style={{ fontSize: 12, fontWeight: 600 }}>\n                Player {idx + 1} Name\n              </label>\n              <input\n                type=\"text\"\n                placeholder=\"Name\"\n                value={player.name}\n                onChange={e => handleChange(idx, 'name', e.target.value)}\n                style={{ width: 120, marginRight: 8 }}\n                id={`player-${idx}-name`}\n                disabled={setupMode === 'profile' && idx === 0 && selectedProfile}\n              />\n              <label htmlFor={`player-${idx}-handicap`} style={{ fontSize: 12, fontWeight: 600 }}>\n                Handicap\n              </label>\n              <input\n                type=\"number\"\n                placeholder=\"Handicap\"\n                value={player.handicap}\n                onChange={e => handleChange(idx, 'handicap', e.target.value)}\n                style={{ width: 70, marginRight: 8 }}\n                id={`player-${idx}-handicap`}\n                disabled={setupMode === 'profile' && idx === 0 && selectedProfile}\n              />\n              <select\n                value={player.strength}\n                onChange={e => handleChange(idx, 'strength', e.target.value)}\n                style={{ width: 110, marginRight: 8 }}\n                disabled={setupMode === 'profile' && ((idx === 0 && selectedProfile) || player.profile_id)}\n              >\n                <option value=\"\">Strength</option>\n                <option value=\"Beginner\">Beginner</option>\n                <option value=\"Average\">Average</option>\n                <option value=\"Strong\">Strong</option>\n                <option value=\"Expert\">Expert</option>\n              </select>\n              \n              {/* Profile indicator */}\n              {player.profile_id && (\n                <span style={{ fontSize: 12, color: COLORS.success, fontWeight: 600 }}>\n                  📊 Profile\n                </span>\n              )}\n              {/* GHIN Lookup UI */}\n              <input type=\"text\" placeholder=\"First Name (optional)\" value={ghinSearch[player.id]?.first_name || ''} onChange={e => handleGhinSearchChange(player.id, 'first_name', e.target.value)} />\n              <input type=\"text\" placeholder=\"Last Name (required)\" value={ghinSearch[player.id]?.last_name || ''} onChange={e => handleGhinSearchChange(player.id, 'last_name', e.target.value)} required />\n              <button type=\"button\" onClick={() => handleGhinLookup(player.id)} disabled={ghinLoading?.[player.id] || !ghinSearch[player.id]?.last_name} style={{ marginRight: 4 }}>\n                {ghinLoading?.[player.id] ? 'Searching...' : 'GHIN Lookup'}\n              </button>\n            </div>\n            {ghinError?.[player.id] && <div style={{ color: 'red', fontSize: 13 }}>{ghinError[player.id]}</div>}\n            {ghinResults?.[player.id]?.length > 0 && (\n              <div style={{ marginTop: 6, background: '#f9f9f9', border: '1px solid #ddd', borderRadius: 6, padding: 8 }}>\n                <div style={{ fontSize: 13, marginBottom: 4 }}>Select a golfer:</div>\n                {ghinResults[player.id].map(golfer => (\n                  <div key={golfer.ghin} style={{ padding: 4, cursor: 'pointer', borderBottom: '1px solid #eee' }} onClick={() => handleGhinSelect(player.id, golfer)}>\n                    <strong>{golfer.name}</strong> (GHIN: {golfer.ghin})<br />\n                    Club: {golfer.club} | Handicap: {golfer.handicap ?? 'N/A'}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        ))}\n        {error && <div style={{ color: COLORS.error, marginBottom: 8 }}>{error}</div>}\n        <button type=\"submit\" style={{ ...buttonStyle, width: '100%' }}>Start Game</button>\n      </form>\n    </>\n  );\n}\n\nexport default GameSetupForm; \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./frontend/node_modules/.cache/babel-loader/f07bc68df7ea79886274ab616d55454b38885af63e4004141e743bcb2c19b3b9.json:1:{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import ghinService,{initializeGHIN}from'../services/ghinService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WGPAnalyticsDashboard=()=>{const[leaderboardData,setLeaderboardData]=useState([]);const[topBestScores,setTopBestScores]=useState([]);const[topWorstScores,setTopWorstScores]=useState([]);const[mostRoundsPlayed,setMostRoundsPlayed]=useState([]);const[loading,setLoading]=useState(true);const[ghinLoading,setGhinLoading]=useState(false);const[ghinData,setGhinData]=useState({});const[ghinEnabled,setGhinEnabled]=useState(false);const calculateQB=useCallback((player,rank)=>{const totalPlayers=28;return totalPlayers*10+(totalPlayers-rank)*10;},[]);const processLeaderboardData=useCallback(data=>{const sortedByQuarters=[...data].sort((a,b)=>b.total_earnings-a.total_earnings);const leaderboard=sortedByQuarters.map((player,index)=>({...player,quarters:Math.round(player.total_earnings),average:player.games_played>0?Math.round(player.total_earnings/player.games_played):0,rounds:player.games_played,qb:calculateQB(player,index)}));setLeaderboardData(leaderboard);const bestScores=[...leaderboard].filter(p=>p.quarters>0).sort((a,b)=>b.quarters-a.quarters).slice(0,5).map(p=>({member:p.player_name,topScore:p.quarters,date:'27-Jul'}));setTopBestScores(bestScores);const worstScores=[...leaderboard].filter(p=>p.quarters<0).sort((a,b)=>a.quarters-b.quarters).slice(0,5).map(p=>({member:p.player_name,score:p.quarters,date:'23-Aug'}));setTopWorstScores(worstScores);const roundsPlayed=[...leaderboard].sort((a,b)=>b.rounds-a.rounds).map(p=>({member:p.player_name,rounds:p.rounds,banquet:p.rounds>=20}));setMostRoundsPlayed(roundsPlayed);},[calculateQB]);const fetchGHINData=useCallback(async players=>{if(!ghinService.isInitialized()){return;}try{setGhinLoading(true);const ghinDataMap={};const playersWithMockGHINIds=players.map(player=>({...player,ghinId:`GHIN${player.player_name.replace(/\\s/g,'').toUpperCase()}`}));const batchResults=await ghinService.getBatchGolferInfo(playersWithMockGHINIds.map(p=>p.ghinId));batchResults.success.forEach(ghinInfo=>{const player=playersWithMockGHINIds.find(p=>p.ghinId===ghinInfo.ghinId);if(player){ghinDataMap[player.player_name]={handicapIndex:ghinInfo.handicapIndex,recentScores:ghinInfo.recentScores,lastUpdated:ghinInfo.lastUpdated,club:ghinInfo.club};}});setGhinData(ghinDataMap);if(process.env.NODE_ENV!=='production'){console.debug(`Fetched GHIN data for ${Object.keys(ghinDataMap).length} players`);}}catch(error){console.error('Error fetching GHIN data:',error);}finally{setGhinLoading(false);}},[]);const fetchAnalytics=useCallback(async()=>{try{setLoading(true);const API_URL=process.env.REACT_APP_API_URL||\"http://localhost:8000\";// Always use GHIN-enhanced leaderboard (shows stored handicap data even if GHIN API is offline)\nconst leaderboardUrl=`${API_URL}/leaderboard/ghin-enhanced`;const leaderboardResponse=await fetch(leaderboardUrl,{method:'GET',headers:{'Content-Type':'application/json'}});if(!leaderboardResponse.ok){throw new Error(`Failed to fetch leaderboard data: ${leaderboardResponse.statusText}`);}const leaderboardData=await leaderboardResponse.json();// If no data available, show empty state\nif(!leaderboardData||leaderboardData.length===0){setLeaderboardData([]);setTopBestScores([]);setTopWorstScores([]);setMostRoundsPlayed([]);return;}// Process leaderboard data from database (filter out Grand Total if it exists)\nconst leaderboard=leaderboardData.filter(player=>{const name=(player.player_name||player.name||'').toLowerCase();return name!=='grand total'&&name!=='total'&&name!=='';}).map(player=>({player_name:player.player_name||player.name,games_played:player.games_played||0,games_won:player.games_won||0,win_rate:player.win_percentage?player.win_percentage/100:0,total_earnings:player.total_earnings||0,avg_earnings_per_game:player.avg_earnings||0,best_finish:player.best_finish||99,holes_won:player.holes_won||0,partnerships:player.partnerships_formed||0,partnership_success:player.partnership_success?player.partnership_success/100:0,betting_success:player.betting_success||0,solo_attempts:player.solo_attempts||0,solo_wins:player.solo_wins||0,// GHIN data (if available from enhanced endpoint)\nhandicap:player.handicap,ghin_id:player.ghin_id,ghin_data:player.ghin_data,recent_form:player.recent_form}));// Process and format data\nprocessLeaderboardData(leaderboard);// Fetch GHIN data if available\nif(ghinEnabled&&leaderboard.length>0){fetchGHINData(leaderboard);}}catch(error){console.error('Error fetching analytics:',error);}finally{setLoading(false);}},[fetchGHINData,ghinEnabled,processLeaderboardData]);const initializeServices=useCallback(async()=>{try{const ghinInitialized=await initializeGHIN();setGhinEnabled(ghinInitialized);if(process.env.NODE_ENV!=='production'){if(ghinInitialized){console.debug('GHIN service initialized successfully');}else{console.debug('GHIN service not available - continuing without GHIN integration');}}}catch(error){console.error('Failed to initialize GHIN service:',error);setGhinEnabled(false);}},[]);useEffect(()=>{initializeServices();fetchAnalytics();},[fetchAnalytics,initializeServices]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 p-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-8 text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Loading leaderboard data...\"})]})})});}// Show empty state if no data\nif(leaderboardData.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 p-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-8 text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-6xl mb-4\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 mb-4\",children:\"No Leaderboard Data Available\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:\"To display live leaderboard data, you need to set up Google Sheets synchronization.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-6 rounded-lg mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-blue-900 mb-3\",children:\"\\uD83D\\uDD17 Setup Instructions\"}),/*#__PURE__*/_jsxs(\"ol\",{className:\"text-left space-y-2 text-sm text-blue-800\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"1.\"}),\" Go to the \",/*#__PURE__*/_jsx(\"a\",{href:\"/live-sync\",className:\"underline\",children:\"Live Sync page\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"2.\"}),\" Enter your Google Sheets URL\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"3.\"}),\" Make sure your sheet is publicly viewable\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"4.\"}),\" Click \\\"Sync Now\\\" to import your data\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"5.\"}),\" Return here to view your leaderboard\"]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.href='/live-sync',className:\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium\",children:\"Set Up Google Sheets Sync\"})]})})});}return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-full mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow mb-4 p-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold text-center\",children:\"Wolf Goat Pig Leaderboard 2025-26 Season\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-1\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Live data from Google Sheets sync\"}),ghinEnabled&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1 flex justify-center items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-blue-600\",children:\"\\uD83C\\uDFCC\\uFE0F GHIN Integration Active\"}),ghinLoading&&/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-blue-500 animate-pulse\",children:\"Syncing handicaps...\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-12 gap-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-span-7\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow overflow-hidden\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-200\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-700\",children:\"Member\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-center text-xs font-medium text-gray-700\",children:\"Quarters\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-center text-xs font-medium text-gray-700\",children:\"Average\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-center text-xs font-medium text-gray-700\",children:\"Rounds\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-center text-xs font-medium text-gray-700\",children:\"QB\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:leaderboardData.map((player,index)=>{var _ghinData$player$play,_ghinData$player$play2;return/*#__PURE__*/_jsxs(\"tr\",{className:index%2===0?'bg-white':'bg-gray-50',children:[/*#__PURE__*/_jsxs(\"td\",{className:\"px-4 py-2 text-sm font-medium text-gray-900\",children:[player.player_name,player.handicap!==undefined&&player.handicap!==null?/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 text-blue-600 font-medium\",children:[\"(\",parseFloat(player.handicap).toFixed(1),\")\"]}):((_ghinData$player$play=ghinData[player.player_name])===null||_ghinData$player$play===void 0?void 0:_ghinData$player$play.handicapIndex)!==undefined?/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 text-blue-600 font-medium\",children:[\"(\",parseFloat(ghinData[player.player_name].handicapIndex).toFixed(1),\")\"]}):null,ghinData[player.player_name]&&ghinLoading&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-xs text-blue-500\",children:\"\\uD83D\\uDD04\"}),((_ghinData$player$play2=ghinData[player.player_name])===null||_ghinData$player$play2===void 0?void 0:_ghinData$player$play2.lastUpdated)&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-xs text-green-500\",title:\"GHIN data available\",children:\"\\u26A1\"}),player.recent_form&&player.recent_form!==\"N/A\"&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[\"Form: \",player.recent_form]})]}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-center font-bold\",children:/*#__PURE__*/_jsx(\"span\",{className:player.quarters>=0?'text-green-600':'text-red-600',children:player.quarters})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-center\",children:player.average}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-center\",children:player.rounds}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-center\",children:player.qb})]},player.player_name);})})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-span-5 space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-100 px-4 py-2\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-sm\",children:\"Top 5 Best Scores\"})}),/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-pink-100\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-left text-xs\",children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-left text-xs\",children:\"Member\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-center text-xs\",children:\"Top Score\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"divide-y divide-gray-200\",children:topBestScores.map((score,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-white\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-xs\",children:score.date}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-xs\",children:score.member}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-xs text-center font-bold text-green-600\",children:score.topScore})]},index))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-100 px-4 py-2\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-sm\",children:\"Top 5 Worst Scores\"})}),/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-pink-100\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-left text-xs\",children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-left text-xs\",children:\"Member\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-center text-xs\",children:\"Score\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"divide-y divide-gray-200\",children:topWorstScores.length>0?topWorstScores.map((score,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-white\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-xs\",children:score.date}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-xs\",children:score.member}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-xs text-center font-bold text-red-600\",children:score.score})]},index)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"3\",className:\"px-2 py-1 text-xs text-center\",children:\"No negative scores\"})})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-100 px-4 py-2\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-sm\",children:\"Most Rounds Played\"})}),/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-pink-100\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-left text-xs\",children:\"Member\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-center text-xs\",children:\"Rounds\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-center text-xs\",children:\"Banquet\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"divide-y divide-gray-200\",children:mostRoundsPlayed.slice(0,20).map((player,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:index%2===0?'bg-white':'bg-gray-50',children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-xs\",children:player.member}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-xs text-center font-semibold\",children:player.rounds}),/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-xs text-center\",children:player.banquet&&/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-500\",children:\"\\uD83C\\uDFC6\"})})]},index))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-purple-100 px-2 py-1 rounded mb-2\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-sm\",children:\"Group Size\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"4 Players\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"Most\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"5 Players\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"Some\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-orange-100 px-2 py-1 rounded mb-2\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-sm\",children:\"Locations\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs\",children:\"Wing Point\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs\",children:\"Discovery Bay\"})]})]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow mt-4 p-4 text-center text-sm text-gray-600\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Data synced from Google Sheets \\u2022 Last updated: \",new Date().toLocaleString()]})})]})});};export default WGPAnalyticsDashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","ghinService","initializeGHIN","jsx","_jsx","jsxs","_jsxs","WGPAnalyticsDashboard","leaderboardData","setLeaderboardData","topBestScores","setTopBestScores","topWorstScores","setTopWorstScores","mostRoundsPlayed","setMostRoundsPlayed","loading","setLoading","ghinLoading","setGhinLoading","ghinData","setGhinData","ghinEnabled","setGhinEnabled","calculateQB","player","rank","totalPlayers","processLeaderboardData","data","sortedByQuarters","sort","a","b","total_earnings","leaderboard","map","index","quarters","Math","round","average","games_played","rounds","qb","bestScores","filter","p","slice","member","player_name","topScore","date","worstScores","score","roundsPlayed","banquet","fetchGHINData","players","isInitialized","ghinDataMap","playersWithMockGHINIds","ghinId","replace","toUpperCase","batchResults","getBatchGolferInfo","success","forEach","ghinInfo","find","handicapIndex","recentScores","lastUpdated","club","process","env","NODE_ENV","console","debug","Object","keys","length","error","fetchAnalytics","API_URL","REACT_APP_API_URL","leaderboardUrl","leaderboardResponse","fetch","method","headers","ok","Error","statusText","json","name","toLowerCase","games_won","win_rate","win_percentage","avg_earnings_per_game","avg_earnings","best_finish","holes_won","partnerships","partnerships_formed","partnership_success","betting_success","solo_attempts","solo_wins","handicap","ghin_id","ghin_data","recent_form","initializeServices","ghinInitialized","className","children","href","onClick","window","location","_ghinData$player$play","_ghinData$player$play2","undefined","parseFloat","toFixed","title","colSpan","Date","toLocaleString"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/WGPAnalyticsDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ghinService, { initializeGHIN } from '../services/ghinService';\n\nconst WGPAnalyticsDashboard = () => {\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [topBestScores, setTopBestScores] = useState([]);\n  const [topWorstScores, setTopWorstScores] = useState([]);\n  const [mostRoundsPlayed, setMostRoundsPlayed] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [ghinLoading, setGhinLoading] = useState(false);\n  const [ghinData, setGhinData] = useState({});\n  const [ghinEnabled, setGhinEnabled] = useState(false);\n\n  const calculateQB = useCallback((player, rank) => {\n    const totalPlayers = 28;\n    return totalPlayers * 10 + (totalPlayers - rank) * 10;\n  }, []);\n\n  const processLeaderboardData = useCallback((data) => {\n    const sortedByQuarters = [...data].sort((a, b) => b.total_earnings - a.total_earnings);\n\n    const leaderboard = sortedByQuarters.map((player, index) => ({\n      ...player,\n      quarters: Math.round(player.total_earnings),\n      average: player.games_played > 0 ? Math.round(player.total_earnings / player.games_played) : 0,\n      rounds: player.games_played,\n      qb: calculateQB(player, index)\n    }));\n\n    setLeaderboardData(leaderboard);\n\n    const bestScores = [...leaderboard]\n      .filter(p => p.quarters > 0)\n      .sort((a, b) => b.quarters - a.quarters)\n      .slice(0, 5)\n      .map(p => ({\n        member: p.player_name,\n        topScore: p.quarters,\n        date: '27-Jul'\n      }));\n    setTopBestScores(bestScores);\n\n    const worstScores = [...leaderboard]\n      .filter(p => p.quarters < 0)\n      .sort((a, b) => a.quarters - b.quarters)\n      .slice(0, 5)\n      .map(p => ({\n        member: p.player_name,\n        score: p.quarters,\n        date: '23-Aug'\n      }));\n    setTopWorstScores(worstScores);\n\n    const roundsPlayed = [...leaderboard]\n      .sort((a, b) => b.rounds - a.rounds)\n      .map(p => ({\n        member: p.player_name,\n        rounds: p.rounds,\n        banquet: p.rounds >= 20\n      }));\n    setMostRoundsPlayed(roundsPlayed);\n  }, [calculateQB]);\n\n  const fetchGHINData = useCallback(async (players) => {\n    if (!ghinService.isInitialized()) {\n      return;\n    }\n\n    try {\n      setGhinLoading(true);\n      const ghinDataMap = {};\n\n      const playersWithMockGHINIds = players.map(player => ({\n        ...player,\n        ghinId: `GHIN${player.player_name.replace(/\\s/g, '').toUpperCase()}`\n      }));\n\n      const batchResults = await ghinService.getBatchGolferInfo(\n        playersWithMockGHINIds.map(p => p.ghinId)\n      );\n\n      batchResults.success.forEach(ghinInfo => {\n        const player = playersWithMockGHINIds.find(p => p.ghinId === ghinInfo.ghinId);\n        if (player) {\n          ghinDataMap[player.player_name] = {\n            handicapIndex: ghinInfo.handicapIndex,\n            recentScores: ghinInfo.recentScores,\n            lastUpdated: ghinInfo.lastUpdated,\n            club: ghinInfo.club\n          };\n        }\n      });\n\n      setGhinData(ghinDataMap);\n      if (process.env.NODE_ENV !== 'production') {\n        console.debug(`Fetched GHIN data for ${Object.keys(ghinDataMap).length} players`);\n      }\n\n    } catch (error) {\n      console.error('Error fetching GHIN data:', error);\n    } finally {\n      setGhinLoading(false);\n    }\n  }, []);\n\n  const fetchAnalytics = useCallback(async () => {\n    try {\n      setLoading(true);\n      \n      const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:8000\";\n      \n      // Always use GHIN-enhanced leaderboard (shows stored handicap data even if GHIN API is offline)\n      const leaderboardUrl = `${API_URL}/leaderboard/ghin-enhanced`;\n      \n      const leaderboardResponse = await fetch(leaderboardUrl, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n      \n      if (!leaderboardResponse.ok) {\n        throw new Error(`Failed to fetch leaderboard data: ${leaderboardResponse.statusText}`);\n      }\n      \n      const leaderboardData = await leaderboardResponse.json();\n      \n      // If no data available, show empty state\n      if (!leaderboardData || leaderboardData.length === 0) {\n        setLeaderboardData([]);\n        setTopBestScores([]);\n        setTopWorstScores([]);\n        setMostRoundsPlayed([]);\n        return;\n      }\n      \n      // Process leaderboard data from database (filter out Grand Total if it exists)\n      const leaderboard = leaderboardData\n        .filter(player => {\n          const name = (player.player_name || player.name || '').toLowerCase();\n          return name !== 'grand total' && name !== 'total' && name !== '';\n        })\n        .map(player => ({\n          player_name: player.player_name || player.name,\n          games_played: player.games_played || 0,\n          games_won: player.games_won || 0,\n          win_rate: player.win_percentage ? player.win_percentage / 100 : 0,\n          total_earnings: player.total_earnings || 0,\n          avg_earnings_per_game: player.avg_earnings || 0,\n          best_finish: player.best_finish || 99,\n          holes_won: player.holes_won || 0,\n          partnerships: player.partnerships_formed || 0,\n          partnership_success: player.partnership_success ? player.partnership_success / 100 : 0,\n          betting_success: player.betting_success || 0,\n          solo_attempts: player.solo_attempts || 0,\n          solo_wins: player.solo_wins || 0,\n          // GHIN data (if available from enhanced endpoint)\n          handicap: player.handicap,\n          ghin_id: player.ghin_id,\n          ghin_data: player.ghin_data,\n          recent_form: player.recent_form\n        }));\n      \n      // Process and format data\n      processLeaderboardData(leaderboard);\n      \n      // Fetch GHIN data if available\n      if (ghinEnabled && leaderboard.length > 0) {\n        fetchGHINData(leaderboard);\n      }\n      \n    } catch (error) {\n      console.error('Error fetching analytics:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchGHINData, ghinEnabled, processLeaderboardData]);\n\n  const initializeServices = useCallback(async () => {\n    try {\n      const ghinInitialized = await initializeGHIN();\n      setGhinEnabled(ghinInitialized);\n      if (process.env.NODE_ENV !== 'production') {\n        if (ghinInitialized) {\n          console.debug('GHIN service initialized successfully');\n        } else {\n          console.debug('GHIN service not available - continuing without GHIN integration');\n        }\n      }\n    } catch (error) {\n      console.error('Failed to initialize GHIN service:', error);\n      setGhinEnabled(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    initializeServices();\n    fetchAnalytics();\n  }, [fetchAnalytics, initializeServices]);\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 p-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n            <p className=\"text-gray-600\">Loading leaderboard data...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show empty state if no data\n  if (leaderboardData.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 p-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n            <div className=\"text-6xl mb-4\">📊</div>\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">No Leaderboard Data Available</h2>\n            <p className=\"text-gray-600 mb-6\">\n              To display live leaderboard data, you need to set up Google Sheets synchronization.\n            </p>\n            <div className=\"bg-blue-50 p-6 rounded-lg mb-6\">\n              <h3 className=\"text-lg font-semibold text-blue-900 mb-3\">🔗 Setup Instructions</h3>\n              <ol className=\"text-left space-y-2 text-sm text-blue-800\">\n                <li><strong>1.</strong> Go to the <a href=\"/live-sync\" className=\"underline\">Live Sync page</a></li>\n                <li><strong>2.</strong> Enter your Google Sheets URL</li>\n                <li><strong>3.</strong> Make sure your sheet is publicly viewable</li>\n                <li><strong>4.</strong> Click \"Sync Now\" to import your data</li>\n                <li><strong>5.</strong> Return here to view your leaderboard</li>\n              </ol>\n            </div>\n            <button \n              onClick={() => window.location.href = '/live-sync'}\n              className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium\"\n            >\n              Set Up Google Sheets Sync\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4\">\n      <div className=\"max-w-full mx-auto\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow mb-4 p-4\">\n          <h1 className=\"text-2xl font-bold text-center\">Wolf Goat Pig Leaderboard 2025-26 Season</h1>\n          <div className=\"text-center mt-1\">\n            <p className=\"text-gray-600\">Live data from Google Sheets sync</p>\n            {ghinEnabled && (\n              <div className=\"mt-1 flex justify-center items-center space-x-2\">\n                <span className=\"text-xs text-blue-600\">🏌️ GHIN Integration Active</span>\n                {ghinLoading && (\n                  <span className=\"text-xs text-blue-500 animate-pulse\">Syncing handicaps...</span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Main Grid Layout */}\n        <div className=\"grid grid-cols-12 gap-4\">\n          \n          {/* Main Leaderboard - Left Side (7 columns) */}\n          <div className=\"col-span-7\">\n            <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n              <table className=\"min-w-full\">\n                <thead className=\"bg-gray-200\">\n                  <tr>\n                    <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-700\">Member</th>\n                    <th className=\"px-4 py-2 text-center text-xs font-medium text-gray-700\">Quarters</th>\n                    <th className=\"px-4 py-2 text-center text-xs font-medium text-gray-700\">Average</th>\n                    <th className=\"px-4 py-2 text-center text-xs font-medium text-gray-700\">Rounds</th>\n                    <th className=\"px-4 py-2 text-center text-xs font-medium text-gray-700\">QB</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {leaderboardData.map((player, index) => (\n                    <tr key={player.player_name} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\n                      <td className=\"px-4 py-2 text-sm font-medium text-gray-900\">\n                        {player.player_name}\n                        {(player.handicap !== undefined && player.handicap !== null) ? (\n                          <span className=\"ml-2 text-blue-600 font-medium\">\n                            ({parseFloat(player.handicap).toFixed(1)})\n                          </span>\n                        ) : ghinData[player.player_name]?.handicapIndex !== undefined ? (\n                          <span className=\"ml-2 text-blue-600 font-medium\">\n                            ({parseFloat(ghinData[player.player_name].handicapIndex).toFixed(1)})\n                          </span>\n                        ) : null}\n                        {ghinData[player.player_name] && ghinLoading && (\n                          <span className=\"ml-2 text-xs text-blue-500\">🔄</span>\n                        )}\n                        {ghinData[player.player_name]?.lastUpdated && (\n                          <span className=\"ml-2 text-xs text-green-500\" title=\"GHIN data available\">⚡</span>\n                        )}\n                        {player.recent_form && player.recent_form !== \"N/A\" && (\n                          <div className=\"text-xs text-gray-500 mt-1\">\n                            Form: {player.recent_form}\n                          </div>\n                        )}\n                      </td>\n                      <td className=\"px-4 py-2 text-sm text-center font-bold\">\n                        <span className={player.quarters >= 0 ? 'text-green-600' : 'text-red-600'}>\n                          {player.quarters}\n                        </span>\n                      </td>\n                      <td className=\"px-4 py-2 text-sm text-center\">{player.average}</td>\n                      <td className=\"px-4 py-2 text-sm text-center\">{player.rounds}</td>\n                      <td className=\"px-4 py-2 text-sm text-center\">{player.qb}</td>\n                    </tr>\n                  ))}\n                  {/* Removed Grand Total Row - not a real player */}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Right Side Stats (5 columns) */}\n          <div className=\"col-span-5 space-y-4\">\n            \n            {/* Top Row - Best and Worst Scores */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              \n              {/* Top 5 Best Scores */}\n              <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n                <div className=\"bg-green-100 px-4 py-2\">\n                  <h3 className=\"font-semibold text-sm\">Top 5 Best Scores</h3>\n                </div>\n                <table className=\"min-w-full\">\n                  <thead className=\"bg-pink-100\">\n                    <tr>\n                      <th className=\"px-2 py-1 text-left text-xs\">Date</th>\n                      <th className=\"px-2 py-1 text-left text-xs\">Member</th>\n                      <th className=\"px-2 py-1 text-center text-xs\">Top Score</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200\">\n                    {topBestScores.map((score, index) => (\n                      <tr key={index} className=\"bg-white\">\n                        <td className=\"px-2 py-1 text-xs\">{score.date}</td>\n                        <td className=\"px-2 py-1 text-xs\">{score.member}</td>\n                        <td className=\"px-2 py-1 text-xs text-center font-bold text-green-600\">\n                          {score.topScore}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n\n              {/* Top 5 Worst Scores */}\n              <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n                <div className=\"bg-red-100 px-4 py-2\">\n                  <h3 className=\"font-semibold text-sm\">Top 5 Worst Scores</h3>\n                </div>\n                <table className=\"min-w-full\">\n                  <thead className=\"bg-pink-100\">\n                    <tr>\n                      <th className=\"px-2 py-1 text-left text-xs\">Date</th>\n                      <th className=\"px-2 py-1 text-left text-xs\">Member</th>\n                      <th className=\"px-2 py-1 text-center text-xs\">Score</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200\">\n                    {topWorstScores.length > 0 ? topWorstScores.map((score, index) => (\n                      <tr key={index} className=\"bg-white\">\n                        <td className=\"px-2 py-1 text-xs\">{score.date}</td>\n                        <td className=\"px-2 py-1 text-xs\">{score.member}</td>\n                        <td className=\"px-2 py-1 text-xs text-center font-bold text-red-600\">\n                          {score.score}\n                        </td>\n                      </tr>\n                    )) : (\n                      <tr><td colSpan=\"3\" className=\"px-2 py-1 text-xs text-center\">No negative scores</td></tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            {/* Most Rounds Played */}\n            <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n              <div className=\"bg-blue-100 px-4 py-2\">\n                <h3 className=\"font-semibold text-sm\">Most Rounds Played</h3>\n              </div>\n              <table className=\"min-w-full\">\n                <thead className=\"bg-pink-100\">\n                  <tr>\n                    <th className=\"px-2 py-1 text-left text-xs\">Member</th>\n                    <th className=\"px-2 py-1 text-center text-xs\">Rounds</th>\n                    <th className=\"px-2 py-1 text-center text-xs\">Banquet</th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-200\">\n                  {mostRoundsPlayed.slice(0, 20).map((player, index) => (\n                    <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\n                      <td className=\"px-2 py-1 text-xs\">{player.member}</td>\n                      <td className=\"px-2 py-1 text-xs text-center font-semibold\">{player.rounds}</td>\n                      <td className=\"px-2 py-1 text-xs text-center\">\n                        {player.banquet && <span className=\"text-yellow-500\">🏆</span>}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n\n            {/* Group Size and Location Stats */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              \n              {/* Group Size */}\n              <div className=\"bg-white rounded-lg shadow p-3\">\n                <div className=\"bg-purple-100 px-2 py-1 rounded mb-2\">\n                  <h3 className=\"font-semibold text-sm\">Group Size</h3>\n                </div>\n                <div className=\"space-y-1\">\n                  <div className=\"flex justify-between text-xs\">\n                    <span>4 Players</span>\n                    <span className=\"font-bold\">Most</span>\n                  </div>\n                  <div className=\"flex justify-between text-xs\">\n                    <span>5 Players</span>\n                    <span className=\"font-bold\">Some</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Locations */}\n              <div className=\"bg-white rounded-lg shadow p-3\">\n                <div className=\"bg-orange-100 px-2 py-1 rounded mb-2\">\n                  <h3 className=\"font-semibold text-sm\">Locations</h3>\n                </div>\n                <div className=\"space-y-1\">\n                  <div className=\"text-xs\">Wing Point</div>\n                  <div className=\"text-xs\">Discovery Bay</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"bg-white rounded-lg shadow mt-4 p-4 text-center text-sm text-gray-600\">\n          <p>Data synced from Google Sheets • Last updated: {new Date().toLocaleString()}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WGPAnalyticsDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./frontend/node_modules/.cache/babel-loader/21f41cb11065df99f93c670d4587140cd8953f50c9b675fa4d5c3ca024f77708.json:1:{"ast":null,"code":"// src/client/ghin/index.ts\nimport { z as z22 } from \"zod\";\n\n// src/errors/index.ts\nvar GhinError = class extends Error {\n  code;\n  statusCode;\n  cause;\n  constructor(message, code, statusCode, cause) {\n    super(message);\n    this.name = \"GhinError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.cause = cause;\n  }\n};\nvar AuthenticationError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"AUTHENTICATION_ERROR\", statusCode, cause);\n    this.name = \"AuthenticationError\";\n  }\n};\nvar NetworkError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"NETWORK_ERROR\", statusCode, cause);\n    this.name = \"NetworkError\";\n  }\n};\nvar ValidationError = class extends GhinError {\n  field;\n  constructor(message, field, cause) {\n    super(message, \"VALIDATION_ERROR\", void 0, cause);\n    this.name = \"ValidationError\";\n    this.field = field;\n  }\n};\nvar RateLimitError = class extends GhinError {\n  retryAfter;\n  constructor(message, retryAfter, cause) {\n    super(message, \"RATE_LIMIT_ERROR\", 429, cause);\n    this.name = \"RateLimitError\";\n    this.retryAfter = retryAfter;\n  }\n};\nvar ConfigurationError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CONFIGURATION_ERROR\", void 0, cause);\n    this.name = \"ConfigurationError\";\n  }\n};\nvar CacheError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CACHE_ERROR\", void 0, cause);\n    this.name = \"CacheError\";\n  }\n};\n\n// src/models/cache-client.ts\nimport { z } from \"zod\";\nvar schemaStringOrUndefined = z.union([z.string(), z.undefined()]);\nvar schemaPromiseOrNonPromiseStringOrUndefined = z.union([z.promise(schemaStringOrUndefined), schemaStringOrUndefined]);\nvar schemaPromiseOrNonPromiseVoid = z.union([z.promise(z.void()), z.void()]);\nvar schemaCacheClient = z.object({\n  read: z.function().args().returns(schemaPromiseOrNonPromiseStringOrUndefined),\n  write: z.function().args(z.string()).returns(schemaPromiseOrNonPromiseVoid)\n});\n\n// src/models/client-config.ts\nimport { z as z3 } from \"zod\";\n\n// src/models/validation.ts\nimport { z as z2 } from \"zod\";\nvar boolean = z2.union([z2.boolean(), z2.literal(\"true\"), z2.literal(\"false\"), z2.null()]).transform(value => value === true || value === \"true\");\nvar date = z2.union([z2.date(), z2.string()]).refine(value => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform(value => value ? new Date(value) : void 0);\nvar emptyString = z2.string().trim();\nvar emptyStringToNull = emptyString.nullable().transform(value => value || null);\nvar float = z2.coerce.number();\nvar gender = z2.enum([\"M\", \"F\"]);\nvar handicap = z2.union([float, z2.string(), z2.null()]).refine(value => {\n  if (typeof value === \"number\") {\n    return true;\n  }\n  if (typeof value === \"string\" && value === \"NH\") {\n    return true;\n  }\n  return false;\n}).transform(value => {\n  if (value === \"NH\") {\n    return null;\n  }\n  return value;\n});\nvar number = float.int();\nvar string = emptyString.min(1);\nvar monthDay = string.or(emptyString).transform(value => {\n  if (!value) {\n    return null;\n  }\n  const [month, day] = value.split(\"/\");\n  return `${month?.toString().padStart(2, \"0\")}-${day?.toString().padStart(2, \"0\")}`;\n});\nvar shortDate = z2.union([z2.date(), z2.string(), z2.null()]).refine(value => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform(value => {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const [year, month, day] = value.split(\"-\");\n  return /* @__PURE__ */new Date(`${year}-${month}-${day}T00:00Z`);\n});\n\n// src/models/client-config.ts\nvar schemaClientConfig = z3.object({\n  cache: schemaCacheClient.optional(),\n  password: string,\n  username: string\n});\n\n// src/client/in-memory-cache-client/index.ts\nvar InMemoryCacheClient = class {\n  value = (() => void 0)();\n  async read() {\n    return this.value;\n  }\n  async write(value) {\n    this.value = value;\n  }\n};\n\n// src/client/request-client/index.ts\nimport { Mutex } from \"async-mutex\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { err as err2, ok as ok2 } from \"neverthrow\";\n\n// src/utils/retry.ts\nimport { err, ok } from \"neverthrow\";\nvar DEFAULT_RETRY_CONFIG = {\n  maxAttempts: 3,\n  baseDelay: 1e3,\n  // 1 second\n  maxDelay: 1e4,\n  // 10 seconds\n  backoffMultiplier: 2,\n  retryableStatusCodes: [408, 429, 500, 502, 503, 504]\n};\nfunction isRetryableError(error) {\n  if (error instanceof NetworkError) {\n    return error.statusCode ? DEFAULT_RETRY_CONFIG.retryableStatusCodes.includes(error.statusCode) : true;\n  }\n  if (error instanceof RateLimitError) {\n    return true;\n  }\n  return false;\n}\nfunction calculateDelay(attempt, config) {\n  const delay = config.baseDelay * config.backoffMultiplier ** (attempt - 1);\n  return Math.min(delay, config.maxDelay);\n}\nasync function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nasync function withRetry(operation) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const finalConfig = {\n    ...DEFAULT_RETRY_CONFIG,\n    ...config\n  };\n  for (let attempt = 1; attempt <= finalConfig.maxAttempts; attempt++) {\n    const result = await operation();\n    if (result.isOk()) {\n      return result;\n    }\n    const error = result.error;\n    if (attempt === finalConfig.maxAttempts) {\n      return result;\n    }\n    if (!isRetryableError(error)) {\n      return result;\n    }\n    const delay = calculateDelay(attempt, finalConfig);\n    const jitter = Math.random() * 0.1 * delay;\n    const totalDelay = delay + jitter;\n    await sleep(totalDelay);\n  }\n  return err(new Error(\"Retry exhausted\"));\n}\n\n// src/client/request-client/models/access-token.ts\nimport { z as z4 } from \"zod\";\nvar schemaAccessToken = z4.object({\n  expiresIn: string,\n  token: string\n}).transform(_ref => {\n  let {\n    expiresIn: tmpExpiresIn,\n    ...values\n  } = _ref;\n  const now = /* @__PURE__ */new Date();\n  const secondsUntilExpiry = Number(tmpExpiresIn.replace(/[^0-9]/g, \"\"));\n  const millisecondsUntilExpiry = secondsUntilExpiry * 1e3;\n  const expiresIn = new Date(now.getTime() + millisecondsUntilExpiry);\n  return {\n    ...values,\n    expiresIn\n  };\n});\n\n// src/client/request-client/models/client-config.ts\nimport { z as z5 } from \"zod\";\nvar schemaClientConfig2 = z5.object({\n  cache: schemaCacheClient,\n  password: string,\n  username: string\n});\n\n// src/client/request-client/models/session.ts\nimport { z as z6 } from \"zod\";\nvar schemaSession = z6.object({\n  appId: string,\n  authVersion: string,\n  fid: string,\n  sdkVersion: string\n});\nvar schemaSessionResponse = z6.object({\n  authToken: schemaAccessToken\n});\n\n// src/client/request-client/models/login.ts\nimport { z as z7 } from \"zod\";\nvar schemaLoginResponse = z7.object({\n  golfer_user: z7.object({\n    golfer_user_token: string\n  })\n});\n\n// src/client/request-client/index.ts\nvar FIREBASE_SESSION_URL = new URL(\"https://firebaseinstallations.googleapis.com/v1/projects/ghin-mobile-app/installations\");\nvar GOOGLE_API_KEY = \"AIzaSyBxgTOAWxiud0HuaE5tN-5NTlzFnrtyz-I\";\nvar DEFAULT_USER_AGENT = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36\";\nvar CLIENT_SOURCE = \"GHINcom\";\nvar SESSION_DEFAULTS = {\n  appId: \"1:884417644529:web:47fb315bc6c70242f72650\",\n  authVersion: \"FIS_v2\",\n  fid: \"fg6JfS0U01YmrelthLX9Iz\",\n  sdkVersion: \"w:0.5.7\"\n};\nvar FETCH_HEADER_DEFAULTS = {\n  \"Content-Type\": \"application/json\",\n  \"User-Agent\": DEFAULT_USER_AGENT\n};\nvar apiPathnames = {\n  course_countries: \"/get_countries_and_states.json\",\n  course_details: \"/crsCourseMethods.asmx/GetCourseDetails.json\",\n  course_handicaps: \"/playing_handicaps.json\",\n  course_search: \"/crsCourseMethods.asmx/SearchCourses.json\",\n  golfer: \"/search_golfer.json\",\n  golfers_search: \"/golfers.json\",\n  login: \"/golfer_login.json\",\n  scores: \"/scores.json\"\n};\nvar toFullApiUrl = (baseUrl, pathname) => new URL(`${baseUrl.pathname}${apiPathnames[pathname]}`, baseUrl);\nvar makeAuthHeaders = accessToken => ({\n  Authorization: `Bearer ${accessToken}`\n});\nvar RequestClient = class {\n  accessToken;\n  apiVersion = \"v1\";\n  config;\n  baseUrl = (() => new URL(`https://api2.ghin.com/api/${this.apiVersion}`))();\n  lock;\n  sessionToken;\n  constructor(config) {\n    const results = schemaClientConfig2.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid RequestClientConfig: ${results.error.message}`);\n    }\n    this.lock = new Mutex();\n    this.config = schemaClientConfig2.parse(results.data);\n  }\n  async _fetch(_ref2) {\n    let {\n      options,\n      schema,\n      url\n    } = _ref2;\n    try {\n      const response = await fetch(url.toString(), options);\n      if (!response.ok || response.status >= 400) {\n        let body;\n        try {\n          body = await response.json();\n        } catch {\n          body = await response.text();\n        }\n        if (response.status === 401 || response.status === 403) {\n          return err2(new AuthenticationError(`Authentication failed: ${response.status} ${response.statusText}`, response.status, new Error(JSON.stringify(body))));\n        }\n        if (response.status === 429) {\n          const retryAfter = response.headers.get(\"Retry-After\");\n          const retryAfterSeconds = retryAfter ? Number.parseInt(retryAfter, 10) : void 0;\n          return err2(new RateLimitError(`Rate limit exceeded: ${response.status} ${response.statusText}`, retryAfterSeconds, new Error(JSON.stringify(body))));\n        }\n        if (response.status >= 500) {\n          return err2(new NetworkError(`Server error: ${response.status} ${response.statusText}`, response.status, new Error(JSON.stringify(body))));\n        }\n        return err2(new NetworkError(`Request failed: ${response.status} ${response.statusText}`, response.status, new Error(JSON.stringify(body))));\n      }\n      const raw = await response.json();\n      const parsed = schema.safeParse(raw);\n      if (!parsed.success) {\n        return err2(new ValidationError(`Response validation failed: ${JSON.stringify(parsed.error)}`, void 0, new Error(`URL: ${url.toString()}`)));\n      }\n      return ok2(parsed.data);\n    } catch (error) {\n      if (error instanceof Error) {\n        return err2(new NetworkError(`Network request failed: ${error.message}`, void 0, error));\n      }\n      return err2(new NetworkError(`Unknown network error: ${String(error)}`));\n    }\n  }\n  async refreshSessionToken() {\n    const url = new URL(FIREBASE_SESSION_URL);\n    const body = JSON.stringify(SESSION_DEFAULTS);\n    const result = await this._fetch({\n      options: {\n        body,\n        headers: {\n          ...FETCH_HEADER_DEFAULTS,\n          \"x-goog-api-key\": GOOGLE_API_KEY\n        },\n        method: \"POST\"\n      },\n      schema: schemaSessionResponse,\n      url\n    });\n    return result.map(response => response.authToken);\n  }\n  isAccessTokenValid(accessToken) {\n    if (!accessToken) {\n      return false;\n    }\n    try {\n      const decoded = jwtDecode(accessToken);\n      const expirationDate = new Date(decoded.exp * 1e3);\n      return expirationDate > /* @__PURE__ */new Date();\n    } catch {\n      return false;\n    }\n  }\n  async getAccessToken() {\n    const isAccessTokenValid = this.isAccessTokenValid(this.accessToken);\n    if (isAccessTokenValid) {\n      return ok2(this.accessToken);\n    }\n    try {\n      const cachedAccessToken = await this.config.cache.read();\n      const isCachedTokenValid = this.isAccessTokenValid(cachedAccessToken);\n      if (isCachedTokenValid) {\n        this.accessToken = cachedAccessToken;\n        return ok2(cachedAccessToken);\n      }\n    } catch (error) {\n      return err2(new CacheError(`Failed to read from cache: ${error instanceof Error ? error.message : String(error)}`, error instanceof Error ? error : void 0));\n    }\n    const refreshResult = await this.refreshAccessToken();\n    if (refreshResult.isErr()) {\n      return refreshResult;\n    }\n    const accessToken = refreshResult.value;\n    this.accessToken = accessToken;\n    try {\n      await this.config.cache.write(accessToken);\n    } catch (error) {\n      return err2(new CacheError(`Failed to write to cache: ${error instanceof Error ? error.message : String(error)}`, error instanceof Error ? error : void 0));\n    }\n    return ok2(accessToken);\n  }\n  async refreshAccessToken() {\n    const sessionResult = await this.refreshSessionToken();\n    if (sessionResult.isErr()) {\n      return err2(sessionResult.error);\n    }\n    this.sessionToken = sessionResult.value;\n    const url = toFullApiUrl(this.baseUrl, \"login\");\n    const body = JSON.stringify({\n      token: this.sessionToken.token,\n      user: {\n        email_or_ghin: this.config.username,\n        password: this.config.password\n      }\n    });\n    const response = await this._fetch({\n      options: {\n        body,\n        headers: FETCH_HEADER_DEFAULTS,\n        method: \"POST\"\n      },\n      schema: schemaLoginResponse,\n      url\n    });\n    return response.map(resp => resp?.golfer_user?.golfer_user_token);\n  }\n  async fetch(_ref3) {\n    let {\n      entity,\n      schema,\n      options = {}\n    } = _ref3;\n    const accessTokenResult = await this.lock.runExclusive(async () => this.getAccessToken());\n    if (accessTokenResult.isErr()) {\n      return err2(accessTokenResult.error);\n    }\n    const accessToken = accessTokenResult.value;\n    const url = toFullApiUrl(this.baseUrl, entity);\n    const {\n      headers,\n      searchParams,\n      ...requestInitOptions\n    } = options;\n    const actualOptions = {\n      ...requestInitOptions,\n      headers: {\n        ...FETCH_HEADER_DEFAULTS,\n        source: CLIENT_SOURCE,\n        ...makeAuthHeaders(accessToken),\n        ...headers\n      }\n    };\n    if (searchParams) {\n      url.search = searchParams.toString();\n    }\n    return withRetry(() => this._fetch({\n      options: actualOptions,\n      schema,\n      url\n    }));\n  }\n};\n\n// src/client/ghin/models/course/country.ts\nimport { z as z8 } from \"zod\";\nvar FOREIGN_COUNTRY_CODE = \"Fo\";\nvar schemaCourseCountryCode = string.refine(value => {\n  if (value === FOREIGN_COUNTRY_CODE) {\n    return true;\n  }\n  return /^[A-Z]{3}$/.test(value);\n}, 'Invalid country code. Expected format: ISO 3166-1 alpha-3 code or \"Fo\" for foreign countries');\nvar schemaCourseCountryState = z8.object({\n  code: string,\n  //schemaCourseCountryCode,\n  course_code: string,\n  //schemaCourseCountryCode.nullable(),\n  name: string\n});\nvar schemaCourseCountry = z8.object({\n  code: string,\n  crs_code: z8.string().trim().transform(value => value || null).nullable(),\n  name: string,\n  states: z8.array(schemaCourseCountryState)\n});\n\n// src/client/ghin/models/course/request.ts\nimport { z as z9 } from \"zod\";\n\n// src/client/ghin/models/course/state.ts\nvar FOREIGN_STATE_CODE = \"*F\";\nvar courseStateCodeRegex = /^[A-Z]{1,2}-[A-Z*0-9]{1,4}$/;\nvar schemaCourseSearchState = string.refine(value => {\n  if (value === FOREIGN_STATE_CODE) {\n    return true;\n  }\n  return courseStateCodeRegex.test(value);\n}, {\n  message: \"Invalid state code format. Expected format: US-OH, LC-01, MX-*A, or *F\"\n});\n\n// src/client/ghin/models/course/request.ts\nvar schemaCourseSearchRequest = z9.object({\n  country: schemaCourseCountryCode.optional(),\n  facility_id: number.optional(),\n  name: string.optional(),\n  state: schemaCourseSearchState.optional(),\n  updated_at: date.optional()\n}).refine(_ref4 => {\n  let {\n    country,\n    state,\n    facility_id,\n    updated_at\n  } = _ref4;\n  switch (true) {\n    case Boolean(country && state):\n      return true;\n    case Boolean(facility_id):\n      return true;\n    case Boolean(updated_at):\n      return true;\n    default:\n      return false;\n  }\n}, {\n  message: \"At least one of the following are required: country + state, facility_id, or updated_at must be provided\"\n});\nvar schemaCourseDetailsRequest = z9.object({\n  course_id: number,\n  include_altered_tees: boolean.optional()\n}).transform(data => ({\n  ...data,\n  include_altered_tees: data.include_altered_tees ?? false\n}));\n\n// src/client/ghin/models/course/response.ts\nimport { z as z11 } from \"zod\";\n\n// src/client/ghin/models/course/course.ts\nimport { z as z10 } from \"zod\";\n\n// src/client/ghin/models/course/geolocation.ts\nvar schemaGeoCoordinate = float.transform(value => value ? value : null).nullable();\n\n// src/client/ghin/models/course/course.ts\nvar schemaStatus = string.transform(value => value.toUpperCase()).pipe(z10.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourse = z10.object({\n  Address1: string.nullable(),\n  Address2: string.nullable(),\n  City: string.nullable(),\n  Country: string.nullable(),\n  CourseID: number,\n  CourseName: string,\n  CourseStatus: schemaStatus,\n  Email: string.email().nullable(),\n  EntCountryCode: number.nullable(),\n  EntStateCode: number.nullable(),\n  FacilityID: number,\n  FacilityName: string,\n  FacilityStatus: schemaStatus,\n  FullName: string,\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  LegacyCRPCourseId: number.nullable(),\n  Ratings: z10.array(z10.unknown()),\n  State: string.nullable(),\n  Telephone: string.nullable(),\n  UpdatedOn: shortDate.nullable(),\n  Zip: z10.string().trim().transform(zip => zip?.trim() || null).nullable().or(z10.array(z10.unknown()))\n});\n\n// src/client/ghin/models/course/response.ts\nvar schemaStatus2 = string.transform(value => value.toUpperCase()).pipe(z11.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourseCountriesResponse = z11.object({\n  countries: z11.array(schemaCourseCountry.passthrough())\n});\nvar schemaCourseSearchResponse = z11.object({\n  courses: z11.array(schemaCourse.passthrough())\n});\nvar schemaCourseDetailsFacility = z11.object({\n  FacilityId: number,\n  FacilityName: string,\n  FacilityNumber: number.nullable(),\n  FacilityStatus: string,\n  GeoLocationFormattedAddress: string.nullable(),\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  GolfAssociationId: number.nullable()\n});\nvar schemaCourseDetailsSeason = z11.object({\n  IsAllYear: boolean,\n  SeasonEndDate: monthDay.nullable(),\n  SeasonName: string,\n  SeasonStartDate: monthDay.nullable()\n});\nvar schemaCourseDetailsTeeSetRatings = z11.object({\n  BogeyRating: float,\n  CourseRating: float,\n  RatingType: z11.enum([\"Front\", \"Back\", \"Total\"]),\n  SlopeRating: float\n});\nvar schemaCourseDetailsTeeSetHole = z11.object({\n  Allocation: number,\n  HoleId: number,\n  Length: number,\n  Number: number,\n  Par: number\n});\nvar schemaCourseDetailsTeeSet = z11.object({\n  EligibleSides: z11.unknown(),\n  Gender: z11.enum([\"Male\", \"Female\", \"Mixed\"]).nullable(),\n  Holes: z11.array(schemaCourseDetailsTeeSetHole),\n  HolesNumber: number,\n  IsShorter: boolean.nullable(),\n  LegacyCRPTeeId: number,\n  Ratings: z11.array(schemaCourseDetailsTeeSetRatings),\n  StrokeAllocation: boolean,\n  TeeSetRatingId: number,\n  TeeSetRatingName: string,\n  TotalMeters: number,\n  TotalPar: number,\n  TotalYardage: number\n});\nvar schemaCourseDetailsResponse = z11.object({\n  CourseCity: string,\n  CourseId: number,\n  CourseName: string,\n  CourseNumber: number.nullable(),\n  CourseState: schemaCourseSearchState,\n  CourseStatus: schemaStatus2,\n  Facility: schemaCourseDetailsFacility,\n  Season: schemaCourseDetailsSeason,\n  TeeSets: z11.array(schemaCourseDetailsTeeSet)\n});\n\n// src/client/ghin/models/golfers/search.ts\nimport { z as z12 } from \"zod\";\nvar schemaGolferStatus = z12.enum([\"Active\", \"Inactive\"]).transform(value => value.toUpperCase());\nvar schemaGolferSearchRequest = z12.object({\n  country: string.transform(value => value?.toUpperCase()),\n  first_name: string,\n  from_ghin: boolean,\n  ghin: number,\n  last_name: string.optional(),\n  order: z12.enum([\"asc\", \"desc\"]),\n  page: number,\n  per_page: number.max(100),\n  sorting_criteria: z12.enum([\"country\", \"full_name\", \"handicap_index\", \"state\", \"status\"]),\n  state: string.transform(value => value?.toUpperCase()),\n  status: schemaGolferStatus\n}).partial();\nvar schemaGolfer = z12.object({\n  ghin: number,\n  first_name: string,\n  last_name: string,\n  association_id: number,\n  association_name: string,\n  handicap_index: handicap,\n  club_affiliation_id: number,\n  club_id: number,\n  club_name: emptyStringToNull,\n  country: emptyStringToNull,\n  entitlement: boolean,\n  gender,\n  hard_cap: boolean,\n  has_digital_profile: boolean,\n  hi_display: string,\n  hi_value: handicap,\n  is_home_club: boolean,\n  low_hi_date: date.nullable(),\n  low_hi_display: string,\n  low_hi_value: handicap,\n  low_hi: handicap,\n  message_club_authorized: string.nullable(),\n  middle_name: emptyStringToNull.nullable().optional(),\n  phone_number: emptyStringToNull.nullable().optional(),\n  prefix: emptyStringToNull.optional(),\n  rev_date: date.nullable(),\n  soft_cap: boolean,\n  state: emptyStringToNull,\n  status: z12.enum([\"Active\", \"Inactive\"]),\n  suffix: emptyStringToNull.optional()\n});\nvar schemaGolferSearchResponse = z12.object({\n  golfers: z12.array(schemaGolfer)\n});\n\n// src/client/ghin/models/handicaps/course-player-handicap.ts\nimport { z as z13 } from \"zod\";\nvar schemaPlayerCourseHandicap = z13.object({\n  playing_handicap: number,\n  playing_handicap_display: string,\n  shots_off: number\n});\nvar schemaCoursePercentPlayerHandicap = z13.record(string, schemaPlayerCourseHandicap);\n\n// src/client/ghin/models/handicaps/request.ts\nimport { z as z14 } from \"zod\";\nvar schemaTeeSetSide = z14.enum([\"All 18\", \"F9\", \"B9\"]);\nvar schemaGolferCourseHandicapBaseRequest = z14.object({\n  ghin: number.optional(),\n  handicap_index: number.optional(),\n  tee_set_id: number,\n  tee_set_side: schemaTeeSetSide\n});\nvar schemaGolferCourseHandicapRequest = schemaGolferCourseHandicapBaseRequest.refine(_ref5 => {\n  let {\n    ghin,\n    handicap_index\n  } = _ref5;\n  if (ghin && handicap_index) {\n    throw new Error(\"Cannot provide both ghin and handicap_index\");\n  }\n  if (!Number.isSafeInteger(ghin) && !Number.isSafeInteger(handicap_index)) {\n    throw new Error(\"Must provide either ghin or handicap_index\");\n  }\n  return true;\n});\nvar schemaCourseHandicapsRequest = z14.object({\n  golfers: z14.array(schemaGolferCourseHandicapBaseRequest.omit({\n    ghin: true\n  }).extend({\n    golfer_id: number.optional()\n  })),\n  source: z14.literal(CLIENT_SOURCE).default(CLIENT_SOURCE).optional()\n});\n\n// src/client/ghin/models/handicaps/response.ts\nimport { z as z15 } from \"zod\";\nvar schemaGolferHandicapClub = z15.object({\n  active: boolean,\n  association_id: number,\n  club_name: string,\n  id: number\n});\nvar schemaGolferHandicapResponse = z15.object({\n  golfer: z15.object({\n    clubs: z15.array(schemaGolferHandicapClub),\n    handicap_index: handicap\n  })\n}).passthrough();\nvar schemaCoursePlayerHandicapsResponse = z15.object({\n  100: schemaCoursePercentPlayerHandicap,\n  95: schemaCoursePercentPlayerHandicap,\n  90: schemaCoursePercentPlayerHandicap,\n  85: schemaCoursePercentPlayerHandicap,\n  80: schemaCoursePercentPlayerHandicap,\n  75: schemaCoursePercentPlayerHandicap,\n  70: schemaCoursePercentPlayerHandicap,\n  65: schemaCoursePercentPlayerHandicap,\n  60: schemaCoursePercentPlayerHandicap,\n  55: schemaCoursePercentPlayerHandicap,\n  50: schemaCoursePercentPlayerHandicap,\n  45: schemaCoursePercentPlayerHandicap,\n  40: schemaCoursePercentPlayerHandicap,\n  35: schemaCoursePercentPlayerHandicap,\n  30: schemaCoursePercentPlayerHandicap,\n  25: schemaCoursePercentPlayerHandicap,\n  20: schemaCoursePercentPlayerHandicap,\n  15: schemaCoursePercentPlayerHandicap,\n  10: schemaCoursePercentPlayerHandicap,\n  5: schemaCoursePercentPlayerHandicap\n});\n\n// src/client/ghin/models/scores/adjustment.ts\nimport { z as z16 } from \"zod\";\nvar schemaScoringAdjustment = z16.object({\n  display: string,\n  type: string,\n  value: float\n});\n\n// src/client/ghin/models/scores/hole-detail.ts\nimport { z as z17 } from \"zod\";\nvar schemaHoleDetail = z17.object({\n  adjusted_gross_score: number,\n  approach_shot_accuracy: float.nullable().default(0),\n  drive_accuracy: float.nullable(),\n  fairway_hit: boolean.nullable(),\n  gir_flag: z17.any(),\n  hole_number: number,\n  id: number,\n  most_likely_score: number.nullable(),\n  par: number,\n  putts: number.nullable(),\n  raw_score: number,\n  stroke_allocation: number,\n  x_hole: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nimport { z as z20 } from \"zod\";\n\n// src/client/ghin/models/scores/score.ts\nimport { z as z19 } from \"zod\";\n\n// src/client/ghin/models/scores/statistics.ts\nimport { z as z18 } from \"zod\";\nvar schemaStatistics = z18.object({\n  birdies_or_better_percent: float,\n  bogeys_percent: float,\n  double_bogeys_percent: float,\n  fairway_hits_percent: float,\n  gir_percent: float,\n  last_stats_update_date: date,\n  last_stats_update_type: emptyStringToNull,\n  missed_general_approach_shot_accuracy_percent: float,\n  missed_left_approach_shot_accuracy_percent: float,\n  missed_left_percent: float,\n  missed_long_approach_shot_accuracy_percent: float,\n  missed_long_percent: float,\n  missed_right_approach_shot_accuracy_percent: float,\n  missed_right_percent: float,\n  missed_short_approach_shot_accuracy_percent: float,\n  missed_short_percent: float,\n  one_putt_or_better_percent: float,\n  par3s_average: float,\n  par4s_average: float,\n  par5s_average: float,\n  pars_percent: float,\n  putts_total: number,\n  three_putt_or_worse_percent: float,\n  triple_bogeys_or_worse_percent: float,\n  two_putt_or_better_percent: float,\n  two_putt_percent: float,\n  up_and_downs_total: number\n});\n\n// src/client/ghin/models/scores/score.ts\nvar rawScoreTypes = [\"A\", \"C\", \"E\", \"H\", \"N\", \"P\", \"T\"];\nvar schemaRawScoreTypes = z19.enum(rawScoreTypes);\nvar scoreTypes = [\"AWAY\", \"COMPETITION\", \"EXCEPTIONAL\", \"HOME\", \"9_HOLE_ROUNDS\", \"PENALTY\", \"TOURNAMENT\"];\nvar schemaScoreType = z19.enum(scoreTypes);\nvar scoreTypesMap = {\n  A: \"AWAY\",\n  C: \"COMPETITION\",\n  E: \"EXCEPTIONAL\",\n  H: \"HOME\",\n  N: \"9_HOLE_ROUNDS\",\n  P: \"PENALTY\",\n  T: \"TOURNAMENT\"\n};\nvar schemaScoreTypeWithTransform = schemaRawScoreTypes.transform(value => scoreTypesMap[value]);\nvar scoreStatuses = [\"VALIDATED\", \"UNDER_REVIEW\"];\nvar schemaScoreStatus = z19.enum(scoreStatuses);\nvar rawScoreStatuses = [\"Validated\", \"UnderReview\"];\nvar schemaRawScoreStatus = z19.enum(rawScoreStatuses);\nvar scoreStatusesMap = {\n  Validated: \"VALIDATED\",\n  UnderReview: \"UNDER_REVIEW\"\n};\nvar schemaScoreStatusWithTransform = schemaRawScoreStatus.transform(value => scoreStatusesMap[value]);\nvar schemaScore = z19.object({\n  adjusted_gross_score: number,\n  adjustments: z19.array(schemaScoringAdjustment),\n  back9_adjusted: number.nullable(),\n  back9_course_rating: float.nullable(),\n  back9_slope_rating: float.nullable(),\n  course_rating: float,\n  differential: float,\n  edited: boolean,\n  exceptional: boolean,\n  front9_adjusted: number.nullable(),\n  front9_course_rating: float.nullable(),\n  front9_slope_rating: float.nullable(),\n  gender,\n  golfer_id: number,\n  hole_details: z19.array(schemaHoleDetail),\n  id: number,\n  is_manual: boolean,\n  is_recent: boolean,\n  message_club_authorized: string.nullable(),\n  net_score_differential: float.nullable(),\n  number_of_holes: number,\n  number_of_played_holes: number,\n  order_number: number,\n  parent_id: number.nullable(),\n  pcc: float,\n  penalty_method: string.nullable(),\n  penalty_type: string.nullable(),\n  penalty: boolean.optional(),\n  played_at: date,\n  posted_at: date,\n  revision: boolean,\n  score_day_order: number,\n  score_type_display_full: string,\n  score_type_display_short: string,\n  score_type: schemaScoreTypeWithTransform,\n  season_end_date_at: monthDay,\n  season_start_date_at: monthDay,\n  slope_rating: float,\n  statistics: schemaStatistics.nullable().optional(),\n  status: schemaScoreStatusWithTransform,\n  unadjusted_differential: float,\n  used: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nvar schemaScoresRequest = z20.object({\n  course_id: number,\n  from_date_played: date,\n  limit: number.default(100),\n  offset: number.default(0),\n  score_types: z20.array(z20.enum(rawScoreTypes)),\n  statuses: z20.array(string),\n  tee_set_id: number,\n  to_date_played: date\n}).partial().default({}).optional();\n\n// src/client/ghin/models/scores/response.ts\nimport { z as z21 } from \"zod\";\nvar schemaNumberOrDash = z21.union([number, z21.literal(\"-\")]).transform(value => value === \"-\" ? null : Number(value));\nvar schemaFloatOrDash = z21.union([float, z21.literal(\"-\")]).transform(value => value === \"-\" ? null : Number.parseFloat(value.toString()));\nvar schemaScoresResponse = z21.object({\n  average: schemaFloatOrDash.default(0),\n  highest_score: schemaNumberOrDash,\n  lowest_score: schemaNumberOrDash,\n  scores: z21.array(schemaScore),\n  total_count: schemaNumberOrDash.default(0)\n});\n\n// src/client/ghin/index.ts\nvar searchParameters = {\n  GOLFER_ID: \"golfer_id\",\n  SOURCE: \"source\"\n};\nvar GhinClient = class {\n  httpClient;\n  courses;\n  golfers;\n  handicaps;\n  constructor(config) {\n    const results = schemaClientConfig.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid GhinClientConfig: ${results.error.message}`);\n    }\n    this.httpClient = new RequestClient({\n      ...results.data,\n      cache: results.data.cache ?? new InMemoryCacheClient()\n    });\n    this.courses = {\n      getCountries: this.coursesGetCountries.bind(this),\n      getDetails: this.courseGetDetails.bind(this),\n      search: this.courseSearch.bind(this)\n    };\n    this.handicaps = {\n      getOne: this.handicapsGetOne.bind(this),\n      getCoursePlayerHandicaps: this.handicapsGetCoursePlayerHandicaps.bind(this)\n    };\n    this.golfers = {\n      getOne: this.golfersGetOne.bind(this),\n      getScores: this.golfersGetScores.bind(this),\n      search: this.golfersSearch.bind(this)\n    };\n  }\n  async coursesGetCountries() {\n    try {\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_countries\",\n        options,\n        schema: schemaCourseCountriesResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.countries;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseGetDetails(request) {\n    try {\n      const validRequest = schemaCourseDetailsRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_details\",\n        options,\n        schema: schemaCourseDetailsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course details request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseSearch(request) {\n    try {\n      const validRequest = schemaCourseSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_search\",\n        options,\n        schema: schemaCourseSearchResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.courses;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetOne(ghin) {\n    try {\n      const ghinNumber = number.parse(ghin);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE], [\"ghin\", ghinNumber.toString()]]);\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfer\",\n        options,\n        schema: schemaGolferHandicapResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfer;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetCoursePlayerHandicaps(request) {\n    try {\n      const golfers = z22.array(schemaGolferCourseHandicapRequest).parse(request).map(_ref6 => {\n        let {\n          ghin,\n          ...golfer\n        } = _ref6;\n        return {\n          ...golfer,\n          [searchParameters.GOLFER_ID]: ghin\n        };\n      });\n      const searchParams = new URLSearchParams();\n      const courseHandicapRequest = {\n        golfers,\n        source: CLIENT_SOURCE\n      };\n      const options = {\n        body: JSON.stringify(courseHandicapRequest),\n        method: \"POST\",\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_handicaps\",\n        options,\n        schema: schemaCoursePlayerHandicapsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course handicap request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersSearch(request) {\n    try {\n      const {\n        ghin,\n        ...params\n      } = schemaGolferSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const searchDefaults = {\n        from_ghin: true,\n        per_page: 25,\n        sorting_criteria: \"full_name\",\n        order: \"asc\",\n        page: 1\n      };\n      for (const [key, value] of Object.entries(searchDefaults)) {\n        searchParams.set(key, value.toString());\n      }\n      if (ghin) {\n        searchParams.set(searchParameters.GOLFER_ID, ghin.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfers_search\",\n        schema: schemaGolferSearchResponse,\n        options\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfers;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid golfer search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetOne(ghinNumber) {\n    try {\n      const ghin = number.parse(ghinNumber);\n      const results = await this.golfersSearch({\n        ghin,\n        status: \"Active\"\n      });\n      return results.find(golfer => golfer.status === \"Active\");\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetScores(ghinNumber, request) {\n    try {\n      const validRequest = schemaScoresRequest.parse(request) ?? {};\n      const ghin = number.parse(ghinNumber);\n      const searchParams = new URLSearchParams([[searchParameters.GOLFER_ID, ghin.toString()], [\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        if (value === null) {\n          continue;\n        }\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            searchParams.append(key, v.toString());\n          }\n          continue;\n        }\n        if (typeof value === \"object\" && value instanceof Date) {\n          searchParams.set(key, value.toISOString().split(\"T\")[0]);\n          continue;\n        }\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"scores\",\n        options,\n        schema: schemaScoresResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid scores request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n};\nexport { GhinClient };","map":{"version":3,"names":["z","z22","GhinError","Error","code","statusCode","cause","constructor","message","name","AuthenticationError","NetworkError","ValidationError","field","RateLimitError","retryAfter","ConfigurationError","CacheError","schemaStringOrUndefined","union","string","undefined","schemaPromiseOrNonPromiseStringOrUndefined","promise","schemaPromiseOrNonPromiseVoid","void","schemaCacheClient","object","read","function","args","returns","write","z3","z2","boolean","literal","null","transform","value","date","refine","Number","isNaN","Date","parse","toString","emptyString","trim","emptyStringToNull","nullable","float","coerce","number","gender","enum","handicap","int","min","monthDay","or","month","day","split","padStart","shortDate","year","schemaClientConfig","cache","optional","password","username","InMemoryCacheClient","Mutex","jwtDecode","err","err2","ok","ok2","DEFAULT_RETRY_CONFIG","maxAttempts","baseDelay","maxDelay","backoffMultiplier","retryableStatusCodes","isRetryableError","error","includes","calculateDelay","attempt","config","delay","Math","sleep","ms","Promise","resolve","setTimeout","withRetry","operation","arguments","length","finalConfig","result","isOk","jitter","random","totalDelay","z4","schemaAccessToken","expiresIn","token","_ref","tmpExpiresIn","values","now","secondsUntilExpiry","replace","millisecondsUntilExpiry","getTime","z5","schemaClientConfig2","z6","schemaSession","appId","authVersion","fid","sdkVersion","schemaSessionResponse","authToken","z7","schemaLoginResponse","golfer_user","golfer_user_token","FIREBASE_SESSION_URL","URL","GOOGLE_API_KEY","DEFAULT_USER_AGENT","CLIENT_SOURCE","SESSION_DEFAULTS","FETCH_HEADER_DEFAULTS","apiPathnames","course_countries","course_details","course_handicaps","course_search","golfer","golfers_search","login","scores","toFullApiUrl","baseUrl","pathname","makeAuthHeaders","accessToken","Authorization","RequestClient","apiVersion","lock","sessionToken","results","safeParse","success","data","_fetch","_ref2","options","schema","url","response","fetch","status","body","json","text","statusText","JSON","stringify","headers","get","retryAfterSeconds","parseInt","raw","parsed","String","refreshSessionToken","method","map","isAccessTokenValid","decoded","expirationDate","exp","getAccessToken","cachedAccessToken","isCachedTokenValid","refreshResult","refreshAccessToken","isErr","sessionResult","user","email_or_ghin","resp","_ref3","entity","accessTokenResult","runExclusive","searchParams","requestInitOptions","actualOptions","source","search","z8","FOREIGN_COUNTRY_CODE","schemaCourseCountryCode","test","schemaCourseCountryState","course_code","schemaCourseCountry","crs_code","states","array","z9","FOREIGN_STATE_CODE","courseStateCodeRegex","schemaCourseSearchState","schemaCourseSearchRequest","country","facility_id","state","updated_at","_ref4","Boolean","schemaCourseDetailsRequest","course_id","include_altered_tees","z11","z10","schemaGeoCoordinate","schemaStatus","toUpperCase","pipe","schemaCourse","Address1","Address2","City","Country","CourseID","CourseName","CourseStatus","Email","email","EntCountryCode","EntStateCode","FacilityID","FacilityName","FacilityStatus","FullName","GeoLocationLatitude","GeoLocationLongitude","LegacyCRPCourseId","Ratings","unknown","State","Telephone","UpdatedOn","Zip","zip","schemaStatus2","schemaCourseCountriesResponse","countries","passthrough","schemaCourseSearchResponse","courses","schemaCourseDetailsFacility","FacilityId","FacilityNumber","GeoLocationFormattedAddress","GolfAssociationId","schemaCourseDetailsSeason","IsAllYear","SeasonEndDate","SeasonName","SeasonStartDate","schemaCourseDetailsTeeSetRatings","BogeyRating","CourseRating","RatingType","SlopeRating","schemaCourseDetailsTeeSetHole","Allocation","HoleId","Length","Par","schemaCourseDetailsTeeSet","EligibleSides","Gender","Holes","HolesNumber","IsShorter","LegacyCRPTeeId","StrokeAllocation","TeeSetRatingId","TeeSetRatingName","TotalMeters","TotalPar","TotalYardage","schemaCourseDetailsResponse","CourseCity","CourseId","CourseNumber","CourseState","Facility","Season","TeeSets","z12","schemaGolferStatus","schemaGolferSearchRequest","first_name","from_ghin","ghin","last_name","order","page","per_page","max","sorting_criteria","partial","schemaGolfer","association_id","association_name","handicap_index","club_affiliation_id","club_id","club_name","entitlement","hard_cap","has_digital_profile","hi_display","hi_value","is_home_club","low_hi_date","low_hi_display","low_hi_value","low_hi","message_club_authorized","middle_name","phone_number","prefix","rev_date","soft_cap","suffix","schemaGolferSearchResponse","golfers","z13","schemaPlayerCourseHandicap","playing_handicap","playing_handicap_display","shots_off","schemaCoursePercentPlayerHandicap","record","z14","schemaTeeSetSide","schemaGolferCourseHandicapBaseRequest","tee_set_id","tee_set_side","schemaGolferCourseHandicapRequest","_ref5","isSafeInteger","schemaCourseHandicapsRequest","omit","extend","golfer_id","default","z15","schemaGolferHandicapClub","active","id","schemaGolferHandicapResponse","clubs","schemaCoursePlayerHandicapsResponse","z16","schemaScoringAdjustment","display","type","z17","schemaHoleDetail","adjusted_gross_score","approach_shot_accuracy","drive_accuracy","fairway_hit","gir_flag","any","hole_number","most_likely_score","par","putts","raw_score","stroke_allocation","x_hole","z20","z19","z18","schemaStatistics","birdies_or_better_percent","bogeys_percent","double_bogeys_percent","fairway_hits_percent","gir_percent","last_stats_update_date","last_stats_update_type","missed_general_approach_shot_accuracy_percent","missed_left_approach_shot_accuracy_percent","missed_left_percent","missed_long_approach_shot_accuracy_percent","missed_long_percent","missed_right_approach_shot_accuracy_percent","missed_right_percent","missed_short_approach_shot_accuracy_percent","missed_short_percent","one_putt_or_better_percent","par3s_average","par4s_average","par5s_average","pars_percent","putts_total","three_putt_or_worse_percent","triple_bogeys_or_worse_percent","two_putt_or_better_percent","two_putt_percent","up_and_downs_total","rawScoreTypes","schemaRawScoreTypes","scoreTypes","schemaScoreType","scoreTypesMap","A","C","E","H","N","P","T","schemaScoreTypeWithTransform","scoreStatuses","schemaScoreStatus","rawScoreStatuses","schemaRawScoreStatus","scoreStatusesMap","Validated","UnderReview","schemaScoreStatusWithTransform","schemaScore","adjustments","back9_adjusted","back9_course_rating","back9_slope_rating","course_rating","differential","edited","exceptional","front9_adjusted","front9_course_rating","front9_slope_rating","hole_details","is_manual","is_recent","net_score_differential","number_of_holes","number_of_played_holes","order_number","parent_id","pcc","penalty_method","penalty_type","penalty","played_at","posted_at","revision","score_day_order","score_type_display_full","score_type_display_short","score_type","season_end_date_at","season_start_date_at","slope_rating","statistics","unadjusted_differential","used","schemaScoresRequest","from_date_played","limit","offset","score_types","statuses","to_date_played","z21","schemaNumberOrDash","schemaFloatOrDash","parseFloat","schemaScoresResponse","average","highest_score","lowest_score","total_count","searchParameters","GOLFER_ID","SOURCE","GhinClient","httpClient","handicaps","getCountries","coursesGetCountries","bind","getDetails","courseGetDetails","courseSearch","getOne","handicapsGetOne","getCoursePlayerHandicaps","handicapsGetCoursePlayerHandicaps","golfersGetOne","getScores","golfersGetScores","golfersSearch","URLSearchParams","request","validRequest","key","Object","entries","set","ZodError","ghinNumber","_ref6","courseHandicapRequest","params","searchDefaults","find","Array","isArray","v","append","toISOString"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/ghin/dist/index.js"],"sourcesContent":["// src/client/ghin/index.ts\nimport { z as z22 } from \"zod\";\n\n// src/errors/index.ts\nvar GhinError = class extends Error {\n  code;\n  statusCode;\n  cause;\n  constructor(message, code, statusCode, cause) {\n    super(message);\n    this.name = \"GhinError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.cause = cause;\n  }\n};\nvar AuthenticationError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"AUTHENTICATION_ERROR\", statusCode, cause);\n    this.name = \"AuthenticationError\";\n  }\n};\nvar NetworkError = class extends GhinError {\n  constructor(message, statusCode, cause) {\n    super(message, \"NETWORK_ERROR\", statusCode, cause);\n    this.name = \"NetworkError\";\n  }\n};\nvar ValidationError = class extends GhinError {\n  field;\n  constructor(message, field, cause) {\n    super(message, \"VALIDATION_ERROR\", void 0, cause);\n    this.name = \"ValidationError\";\n    this.field = field;\n  }\n};\nvar RateLimitError = class extends GhinError {\n  retryAfter;\n  constructor(message, retryAfter, cause) {\n    super(message, \"RATE_LIMIT_ERROR\", 429, cause);\n    this.name = \"RateLimitError\";\n    this.retryAfter = retryAfter;\n  }\n};\nvar ConfigurationError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CONFIGURATION_ERROR\", void 0, cause);\n    this.name = \"ConfigurationError\";\n  }\n};\nvar CacheError = class extends GhinError {\n  constructor(message, cause) {\n    super(message, \"CACHE_ERROR\", void 0, cause);\n    this.name = \"CacheError\";\n  }\n};\n\n// src/models/cache-client.ts\nimport { z } from \"zod\";\nvar schemaStringOrUndefined = z.union([z.string(), z.undefined()]);\nvar schemaPromiseOrNonPromiseStringOrUndefined = z.union([\n  z.promise(schemaStringOrUndefined),\n  schemaStringOrUndefined\n]);\nvar schemaPromiseOrNonPromiseVoid = z.union([z.promise(z.void()), z.void()]);\nvar schemaCacheClient = z.object({\n  read: z.function().args().returns(schemaPromiseOrNonPromiseStringOrUndefined),\n  write: z.function().args(z.string()).returns(schemaPromiseOrNonPromiseVoid)\n});\n\n// src/models/client-config.ts\nimport { z as z3 } from \"zod\";\n\n// src/models/validation.ts\nimport { z as z2 } from \"zod\";\nvar boolean = z2.union([z2.boolean(), z2.literal(\"true\"), z2.literal(\"false\"), z2.null()]).transform((value) => value === true || value === \"true\");\nvar date = z2.union([z2.date(), z2.string()]).refine((value) => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform((value) => value ? new Date(value) : void 0);\nvar emptyString = z2.string().trim();\nvar emptyStringToNull = emptyString.nullable().transform((value) => value || null);\nvar float = z2.coerce.number();\nvar gender = z2.enum([\"M\", \"F\"]);\nvar handicap = z2.union([float, z2.string(), z2.null()]).refine((value) => {\n  if (typeof value === \"number\") {\n    return true;\n  }\n  if (typeof value === \"string\" && value === \"NH\") {\n    return true;\n  }\n  return false;\n}).transform((value) => {\n  if (value === \"NH\") {\n    return null;\n  }\n  return value;\n});\nvar number = float.int();\nvar string = emptyString.min(1);\nvar monthDay = string.or(emptyString).transform((value) => {\n  if (!value) {\n    return null;\n  }\n  const [month, day] = value.split(\"/\");\n  return `${month?.toString().padStart(2, \"0\")}-${day?.toString().padStart(2, \"0\")}`;\n});\nvar shortDate = z2.union([z2.date(), z2.string(), z2.null()]).refine((value) => value ? !Number.isNaN(Date.parse(value.toString())) : true, {\n  message: \"Invalid date\"\n}).transform((value) => {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const [year, month, day] = value.split(\"-\");\n  return /* @__PURE__ */ new Date(`${year}-${month}-${day}T00:00Z`);\n});\n\n// src/models/client-config.ts\nvar schemaClientConfig = z3.object({\n  cache: schemaCacheClient.optional(),\n  password: string,\n  username: string\n});\n\n// src/client/in-memory-cache-client/index.ts\nvar InMemoryCacheClient = class {\n  value = void 0;\n  async read() {\n    return this.value;\n  }\n  async write(value) {\n    this.value = value;\n  }\n};\n\n// src/client/request-client/index.ts\nimport { Mutex } from \"async-mutex\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { err as err2, ok as ok2 } from \"neverthrow\";\n\n// src/utils/retry.ts\nimport { err, ok } from \"neverthrow\";\nvar DEFAULT_RETRY_CONFIG = {\n  maxAttempts: 3,\n  baseDelay: 1e3,\n  // 1 second\n  maxDelay: 1e4,\n  // 10 seconds\n  backoffMultiplier: 2,\n  retryableStatusCodes: [408, 429, 500, 502, 503, 504]\n};\nfunction isRetryableError(error) {\n  if (error instanceof NetworkError) {\n    return error.statusCode ? DEFAULT_RETRY_CONFIG.retryableStatusCodes.includes(error.statusCode) : true;\n  }\n  if (error instanceof RateLimitError) {\n    return true;\n  }\n  return false;\n}\nfunction calculateDelay(attempt, config) {\n  const delay = config.baseDelay * config.backoffMultiplier ** (attempt - 1);\n  return Math.min(delay, config.maxDelay);\n}\nasync function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\nasync function withRetry(operation, config = {}) {\n  const finalConfig = { ...DEFAULT_RETRY_CONFIG, ...config };\n  for (let attempt = 1; attempt <= finalConfig.maxAttempts; attempt++) {\n    const result = await operation();\n    if (result.isOk()) {\n      return result;\n    }\n    const error = result.error;\n    if (attempt === finalConfig.maxAttempts) {\n      return result;\n    }\n    if (!isRetryableError(error)) {\n      return result;\n    }\n    const delay = calculateDelay(attempt, finalConfig);\n    const jitter = Math.random() * 0.1 * delay;\n    const totalDelay = delay + jitter;\n    await sleep(totalDelay);\n  }\n  return err(new Error(\"Retry exhausted\"));\n}\n\n// src/client/request-client/models/access-token.ts\nimport { z as z4 } from \"zod\";\nvar schemaAccessToken = z4.object({\n  expiresIn: string,\n  token: string\n}).transform(({ expiresIn: tmpExpiresIn, ...values }) => {\n  const now = /* @__PURE__ */ new Date();\n  const secondsUntilExpiry = Number(tmpExpiresIn.replace(/[^0-9]/g, \"\"));\n  const millisecondsUntilExpiry = secondsUntilExpiry * 1e3;\n  const expiresIn = new Date(now.getTime() + millisecondsUntilExpiry);\n  return {\n    ...values,\n    expiresIn\n  };\n});\n\n// src/client/request-client/models/client-config.ts\nimport { z as z5 } from \"zod\";\nvar schemaClientConfig2 = z5.object({\n  cache: schemaCacheClient,\n  password: string,\n  username: string\n});\n\n// src/client/request-client/models/session.ts\nimport { z as z6 } from \"zod\";\nvar schemaSession = z6.object({\n  appId: string,\n  authVersion: string,\n  fid: string,\n  sdkVersion: string\n});\nvar schemaSessionResponse = z6.object({\n  authToken: schemaAccessToken\n});\n\n// src/client/request-client/models/login.ts\nimport { z as z7 } from \"zod\";\nvar schemaLoginResponse = z7.object({\n  golfer_user: z7.object({\n    golfer_user_token: string\n  })\n});\n\n// src/client/request-client/index.ts\nvar FIREBASE_SESSION_URL = new URL(\n  \"https://firebaseinstallations.googleapis.com/v1/projects/ghin-mobile-app/installations\"\n);\nvar GOOGLE_API_KEY = \"AIzaSyBxgTOAWxiud0HuaE5tN-5NTlzFnrtyz-I\";\nvar DEFAULT_USER_AGENT = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36\";\nvar CLIENT_SOURCE = \"GHINcom\";\nvar SESSION_DEFAULTS = {\n  appId: \"1:884417644529:web:47fb315bc6c70242f72650\",\n  authVersion: \"FIS_v2\",\n  fid: \"fg6JfS0U01YmrelthLX9Iz\",\n  sdkVersion: \"w:0.5.7\"\n};\nvar FETCH_HEADER_DEFAULTS = {\n  \"Content-Type\": \"application/json\",\n  \"User-Agent\": DEFAULT_USER_AGENT\n};\nvar apiPathnames = {\n  course_countries: \"/get_countries_and_states.json\",\n  course_details: \"/crsCourseMethods.asmx/GetCourseDetails.json\",\n  course_handicaps: \"/playing_handicaps.json\",\n  course_search: \"/crsCourseMethods.asmx/SearchCourses.json\",\n  golfer: \"/search_golfer.json\",\n  golfers_search: \"/golfers.json\",\n  login: \"/golfer_login.json\",\n  scores: \"/scores.json\"\n};\nvar toFullApiUrl = (baseUrl, pathname) => new URL(`${baseUrl.pathname}${apiPathnames[pathname]}`, baseUrl);\nvar makeAuthHeaders = (accessToken) => ({\n  Authorization: `Bearer ${accessToken}`\n});\nvar RequestClient = class {\n  accessToken;\n  apiVersion = \"v1\";\n  config;\n  baseUrl = new URL(`https://api2.ghin.com/api/${this.apiVersion}`);\n  lock;\n  sessionToken;\n  constructor(config) {\n    const results = schemaClientConfig2.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid RequestClientConfig: ${results.error.message}`);\n    }\n    this.lock = new Mutex();\n    this.config = schemaClientConfig2.parse(results.data);\n  }\n  async _fetch({\n    options,\n    schema,\n    url\n  }) {\n    try {\n      const response = await fetch(url.toString(), options);\n      if (!response.ok || response.status >= 400) {\n        let body;\n        try {\n          body = await response.json();\n        } catch {\n          body = await response.text();\n        }\n        if (response.status === 401 || response.status === 403) {\n          return err2(\n            new AuthenticationError(\n              `Authentication failed: ${response.status} ${response.statusText}`,\n              response.status,\n              new Error(JSON.stringify(body))\n            )\n          );\n        }\n        if (response.status === 429) {\n          const retryAfter = response.headers.get(\"Retry-After\");\n          const retryAfterSeconds = retryAfter ? Number.parseInt(retryAfter, 10) : void 0;\n          return err2(\n            new RateLimitError(\n              `Rate limit exceeded: ${response.status} ${response.statusText}`,\n              retryAfterSeconds,\n              new Error(JSON.stringify(body))\n            )\n          );\n        }\n        if (response.status >= 500) {\n          return err2(\n            new NetworkError(\n              `Server error: ${response.status} ${response.statusText}`,\n              response.status,\n              new Error(JSON.stringify(body))\n            )\n          );\n        }\n        return err2(\n          new NetworkError(\n            `Request failed: ${response.status} ${response.statusText}`,\n            response.status,\n            new Error(JSON.stringify(body))\n          )\n        );\n      }\n      const raw = await response.json();\n      const parsed = schema.safeParse(raw);\n      if (!parsed.success) {\n        return err2(\n          new ValidationError(\n            `Response validation failed: ${JSON.stringify(parsed.error)}`,\n            void 0,\n            new Error(`URL: ${url.toString()}`)\n          )\n        );\n      }\n      return ok2(parsed.data);\n    } catch (error) {\n      if (error instanceof Error) {\n        return err2(new NetworkError(`Network request failed: ${error.message}`, void 0, error));\n      }\n      return err2(new NetworkError(`Unknown network error: ${String(error)}`));\n    }\n  }\n  async refreshSessionToken() {\n    const url = new URL(FIREBASE_SESSION_URL);\n    const body = JSON.stringify(SESSION_DEFAULTS);\n    const result = await this._fetch({\n      options: {\n        body,\n        headers: {\n          ...FETCH_HEADER_DEFAULTS,\n          \"x-goog-api-key\": GOOGLE_API_KEY\n        },\n        method: \"POST\"\n      },\n      schema: schemaSessionResponse,\n      url\n    });\n    return result.map((response) => response.authToken);\n  }\n  isAccessTokenValid(accessToken) {\n    if (!accessToken) {\n      return false;\n    }\n    try {\n      const decoded = jwtDecode(accessToken);\n      const expirationDate = new Date(decoded.exp * 1e3);\n      return expirationDate > /* @__PURE__ */ new Date();\n    } catch {\n      return false;\n    }\n  }\n  async getAccessToken() {\n    const isAccessTokenValid = this.isAccessTokenValid(this.accessToken);\n    if (isAccessTokenValid) {\n      return ok2(this.accessToken);\n    }\n    try {\n      const cachedAccessToken = await this.config.cache.read();\n      const isCachedTokenValid = this.isAccessTokenValid(cachedAccessToken);\n      if (isCachedTokenValid) {\n        this.accessToken = cachedAccessToken;\n        return ok2(cachedAccessToken);\n      }\n    } catch (error) {\n      return err2(\n        new CacheError(\n          `Failed to read from cache: ${error instanceof Error ? error.message : String(error)}`,\n          error instanceof Error ? error : void 0\n        )\n      );\n    }\n    const refreshResult = await this.refreshAccessToken();\n    if (refreshResult.isErr()) {\n      return refreshResult;\n    }\n    const accessToken = refreshResult.value;\n    this.accessToken = accessToken;\n    try {\n      await this.config.cache.write(accessToken);\n    } catch (error) {\n      return err2(\n        new CacheError(\n          `Failed to write to cache: ${error instanceof Error ? error.message : String(error)}`,\n          error instanceof Error ? error : void 0\n        )\n      );\n    }\n    return ok2(accessToken);\n  }\n  async refreshAccessToken() {\n    const sessionResult = await this.refreshSessionToken();\n    if (sessionResult.isErr()) {\n      return err2(sessionResult.error);\n    }\n    this.sessionToken = sessionResult.value;\n    const url = toFullApiUrl(this.baseUrl, \"login\");\n    const body = JSON.stringify({\n      token: this.sessionToken.token,\n      user: {\n        email_or_ghin: this.config.username,\n        password: this.config.password\n      }\n    });\n    const response = await this._fetch({\n      options: {\n        body,\n        headers: FETCH_HEADER_DEFAULTS,\n        method: \"POST\"\n      },\n      schema: schemaLoginResponse,\n      url\n    });\n    return response.map((resp) => resp?.golfer_user?.golfer_user_token);\n  }\n  async fetch({\n    entity,\n    schema,\n    options = {}\n  }) {\n    const accessTokenResult = await this.lock.runExclusive(async () => this.getAccessToken());\n    if (accessTokenResult.isErr()) {\n      return err2(accessTokenResult.error);\n    }\n    const accessToken = accessTokenResult.value;\n    const url = toFullApiUrl(this.baseUrl, entity);\n    const { headers, searchParams, ...requestInitOptions } = options;\n    const actualOptions = {\n      ...requestInitOptions,\n      headers: { ...FETCH_HEADER_DEFAULTS, source: CLIENT_SOURCE, ...makeAuthHeaders(accessToken), ...headers }\n    };\n    if (searchParams) {\n      url.search = searchParams.toString();\n    }\n    return withRetry(() => this._fetch({ options: actualOptions, schema, url }));\n  }\n};\n\n// src/client/ghin/models/course/country.ts\nimport { z as z8 } from \"zod\";\nvar FOREIGN_COUNTRY_CODE = \"Fo\";\nvar schemaCourseCountryCode = string.refine((value) => {\n  if (value === FOREIGN_COUNTRY_CODE) {\n    return true;\n  }\n  return /^[A-Z]{3}$/.test(value);\n}, 'Invalid country code. Expected format: ISO 3166-1 alpha-3 code or \"Fo\" for foreign countries');\nvar schemaCourseCountryState = z8.object({\n  code: string,\n  //schemaCourseCountryCode,\n  course_code: string,\n  //schemaCourseCountryCode.nullable(),\n  name: string\n});\nvar schemaCourseCountry = z8.object({\n  code: string,\n  crs_code: z8.string().trim().transform((value) => value || null).nullable(),\n  name: string,\n  states: z8.array(schemaCourseCountryState)\n});\n\n// src/client/ghin/models/course/request.ts\nimport { z as z9 } from \"zod\";\n\n// src/client/ghin/models/course/state.ts\nvar FOREIGN_STATE_CODE = \"*F\";\nvar courseStateCodeRegex = /^[A-Z]{1,2}-[A-Z*0-9]{1,4}$/;\nvar schemaCourseSearchState = string.refine(\n  (value) => {\n    if (value === FOREIGN_STATE_CODE) {\n      return true;\n    }\n    return courseStateCodeRegex.test(value);\n  },\n  {\n    message: \"Invalid state code format. Expected format: US-OH, LC-01, MX-*A, or *F\"\n  }\n);\n\n// src/client/ghin/models/course/request.ts\nvar schemaCourseSearchRequest = z9.object({\n  country: schemaCourseCountryCode.optional(),\n  facility_id: number.optional(),\n  name: string.optional(),\n  state: schemaCourseSearchState.optional(),\n  updated_at: date.optional()\n}).refine(\n  ({ country, state, facility_id, updated_at }) => {\n    switch (true) {\n      case Boolean(country && state):\n        return true;\n      case Boolean(facility_id):\n        return true;\n      case Boolean(updated_at):\n        return true;\n      default:\n        return false;\n    }\n  },\n  {\n    message: \"At least one of the following are required: country + state, facility_id, or updated_at must be provided\"\n  }\n);\nvar schemaCourseDetailsRequest = z9.object({\n  course_id: number,\n  include_altered_tees: boolean.optional()\n}).transform((data) => ({\n  ...data,\n  include_altered_tees: data.include_altered_tees ?? false\n}));\n\n// src/client/ghin/models/course/response.ts\nimport { z as z11 } from \"zod\";\n\n// src/client/ghin/models/course/course.ts\nimport { z as z10 } from \"zod\";\n\n// src/client/ghin/models/course/geolocation.ts\nvar schemaGeoCoordinate = float.transform((value) => value ? value : null).nullable();\n\n// src/client/ghin/models/course/course.ts\nvar schemaStatus = string.transform((value) => value.toUpperCase()).pipe(z10.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourse = z10.object({\n  Address1: string.nullable(),\n  Address2: string.nullable(),\n  City: string.nullable(),\n  Country: string.nullable(),\n  CourseID: number,\n  CourseName: string,\n  CourseStatus: schemaStatus,\n  Email: string.email().nullable(),\n  EntCountryCode: number.nullable(),\n  EntStateCode: number.nullable(),\n  FacilityID: number,\n  FacilityName: string,\n  FacilityStatus: schemaStatus,\n  FullName: string,\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  LegacyCRPCourseId: number.nullable(),\n  Ratings: z10.array(z10.unknown()),\n  State: string.nullable(),\n  Telephone: string.nullable(),\n  UpdatedOn: shortDate.nullable(),\n  Zip: z10.string().trim().transform((zip) => zip?.trim() || null).nullable().or(z10.array(z10.unknown()))\n});\n\n// src/client/ghin/models/course/response.ts\nvar schemaStatus2 = string.transform((value) => value.toUpperCase()).pipe(z11.enum([\"ACTIVE\", \"INACTIVE\"]));\nvar schemaCourseCountriesResponse = z11.object({\n  countries: z11.array(schemaCourseCountry.passthrough())\n});\nvar schemaCourseSearchResponse = z11.object({\n  courses: z11.array(schemaCourse.passthrough())\n});\nvar schemaCourseDetailsFacility = z11.object({\n  FacilityId: number,\n  FacilityName: string,\n  FacilityNumber: number.nullable(),\n  FacilityStatus: string,\n  GeoLocationFormattedAddress: string.nullable(),\n  GeoLocationLatitude: schemaGeoCoordinate.nullable(),\n  GeoLocationLongitude: schemaGeoCoordinate.nullable(),\n  GolfAssociationId: number.nullable()\n});\nvar schemaCourseDetailsSeason = z11.object({\n  IsAllYear: boolean,\n  SeasonEndDate: monthDay.nullable(),\n  SeasonName: string,\n  SeasonStartDate: monthDay.nullable()\n});\nvar schemaCourseDetailsTeeSetRatings = z11.object({\n  BogeyRating: float,\n  CourseRating: float,\n  RatingType: z11.enum([\"Front\", \"Back\", \"Total\"]),\n  SlopeRating: float\n});\nvar schemaCourseDetailsTeeSetHole = z11.object({\n  Allocation: number,\n  HoleId: number,\n  Length: number,\n  Number: number,\n  Par: number\n});\nvar schemaCourseDetailsTeeSet = z11.object({\n  EligibleSides: z11.unknown(),\n  Gender: z11.enum([\"Male\", \"Female\", \"Mixed\"]).nullable(),\n  Holes: z11.array(schemaCourseDetailsTeeSetHole),\n  HolesNumber: number,\n  IsShorter: boolean.nullable(),\n  LegacyCRPTeeId: number,\n  Ratings: z11.array(schemaCourseDetailsTeeSetRatings),\n  StrokeAllocation: boolean,\n  TeeSetRatingId: number,\n  TeeSetRatingName: string,\n  TotalMeters: number,\n  TotalPar: number,\n  TotalYardage: number\n});\nvar schemaCourseDetailsResponse = z11.object({\n  CourseCity: string,\n  CourseId: number,\n  CourseName: string,\n  CourseNumber: number.nullable(),\n  CourseState: schemaCourseSearchState,\n  CourseStatus: schemaStatus2,\n  Facility: schemaCourseDetailsFacility,\n  Season: schemaCourseDetailsSeason,\n  TeeSets: z11.array(schemaCourseDetailsTeeSet)\n});\n\n// src/client/ghin/models/golfers/search.ts\nimport { z as z12 } from \"zod\";\nvar schemaGolferStatus = z12.enum([\"Active\", \"Inactive\"]).transform((value) => value.toUpperCase());\nvar schemaGolferSearchRequest = z12.object({\n  country: string.transform((value) => value?.toUpperCase()),\n  first_name: string,\n  from_ghin: boolean,\n  ghin: number,\n  last_name: string.optional(),\n  order: z12.enum([\"asc\", \"desc\"]),\n  page: number,\n  per_page: number.max(100),\n  sorting_criteria: z12.enum([\"country\", \"full_name\", \"handicap_index\", \"state\", \"status\"]),\n  state: string.transform((value) => value?.toUpperCase()),\n  status: schemaGolferStatus\n}).partial();\nvar schemaGolfer = z12.object({\n  ghin: number,\n  first_name: string,\n  last_name: string,\n  association_id: number,\n  association_name: string,\n  handicap_index: handicap,\n  club_affiliation_id: number,\n  club_id: number,\n  club_name: emptyStringToNull,\n  country: emptyStringToNull,\n  entitlement: boolean,\n  gender,\n  hard_cap: boolean,\n  has_digital_profile: boolean,\n  hi_display: string,\n  hi_value: handicap,\n  is_home_club: boolean,\n  low_hi_date: date.nullable(),\n  low_hi_display: string,\n  low_hi_value: handicap,\n  low_hi: handicap,\n  message_club_authorized: string.nullable(),\n  middle_name: emptyStringToNull.nullable().optional(),\n  phone_number: emptyStringToNull.nullable().optional(),\n  prefix: emptyStringToNull.optional(),\n  rev_date: date.nullable(),\n  soft_cap: boolean,\n  state: emptyStringToNull,\n  status: z12.enum([\"Active\", \"Inactive\"]),\n  suffix: emptyStringToNull.optional()\n});\nvar schemaGolferSearchResponse = z12.object({\n  golfers: z12.array(schemaGolfer)\n});\n\n// src/client/ghin/models/handicaps/course-player-handicap.ts\nimport { z as z13 } from \"zod\";\nvar schemaPlayerCourseHandicap = z13.object({\n  playing_handicap: number,\n  playing_handicap_display: string,\n  shots_off: number\n});\nvar schemaCoursePercentPlayerHandicap = z13.record(string, schemaPlayerCourseHandicap);\n\n// src/client/ghin/models/handicaps/request.ts\nimport { z as z14 } from \"zod\";\nvar schemaTeeSetSide = z14.enum([\"All 18\", \"F9\", \"B9\"]);\nvar schemaGolferCourseHandicapBaseRequest = z14.object({\n  ghin: number.optional(),\n  handicap_index: number.optional(),\n  tee_set_id: number,\n  tee_set_side: schemaTeeSetSide\n});\nvar schemaGolferCourseHandicapRequest = schemaGolferCourseHandicapBaseRequest.refine(({ ghin, handicap_index }) => {\n  if (ghin && handicap_index) {\n    throw new Error(\"Cannot provide both ghin and handicap_index\");\n  }\n  if (!Number.isSafeInteger(ghin) && !Number.isSafeInteger(handicap_index)) {\n    throw new Error(\"Must provide either ghin or handicap_index\");\n  }\n  return true;\n});\nvar schemaCourseHandicapsRequest = z14.object({\n  golfers: z14.array(\n    schemaGolferCourseHandicapBaseRequest.omit({\n      ghin: true\n    }).extend({\n      golfer_id: number.optional()\n    })\n  ),\n  source: z14.literal(CLIENT_SOURCE).default(CLIENT_SOURCE).optional()\n});\n\n// src/client/ghin/models/handicaps/response.ts\nimport { z as z15 } from \"zod\";\nvar schemaGolferHandicapClub = z15.object({\n  active: boolean,\n  association_id: number,\n  club_name: string,\n  id: number\n});\nvar schemaGolferHandicapResponse = z15.object({\n  golfer: z15.object({\n    clubs: z15.array(schemaGolferHandicapClub),\n    handicap_index: handicap\n  })\n}).passthrough();\nvar schemaCoursePlayerHandicapsResponse = z15.object({\n  100: schemaCoursePercentPlayerHandicap,\n  95: schemaCoursePercentPlayerHandicap,\n  90: schemaCoursePercentPlayerHandicap,\n  85: schemaCoursePercentPlayerHandicap,\n  80: schemaCoursePercentPlayerHandicap,\n  75: schemaCoursePercentPlayerHandicap,\n  70: schemaCoursePercentPlayerHandicap,\n  65: schemaCoursePercentPlayerHandicap,\n  60: schemaCoursePercentPlayerHandicap,\n  55: schemaCoursePercentPlayerHandicap,\n  50: schemaCoursePercentPlayerHandicap,\n  45: schemaCoursePercentPlayerHandicap,\n  40: schemaCoursePercentPlayerHandicap,\n  35: schemaCoursePercentPlayerHandicap,\n  30: schemaCoursePercentPlayerHandicap,\n  25: schemaCoursePercentPlayerHandicap,\n  20: schemaCoursePercentPlayerHandicap,\n  15: schemaCoursePercentPlayerHandicap,\n  10: schemaCoursePercentPlayerHandicap,\n  5: schemaCoursePercentPlayerHandicap\n});\n\n// src/client/ghin/models/scores/adjustment.ts\nimport { z as z16 } from \"zod\";\nvar schemaScoringAdjustment = z16.object({\n  display: string,\n  type: string,\n  value: float\n});\n\n// src/client/ghin/models/scores/hole-detail.ts\nimport { z as z17 } from \"zod\";\nvar schemaHoleDetail = z17.object({\n  adjusted_gross_score: number,\n  approach_shot_accuracy: float.nullable().default(0),\n  drive_accuracy: float.nullable(),\n  fairway_hit: boolean.nullable(),\n  gir_flag: z17.any(),\n  hole_number: number,\n  id: number,\n  most_likely_score: number.nullable(),\n  par: number,\n  putts: number.nullable(),\n  raw_score: number,\n  stroke_allocation: number,\n  x_hole: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nimport { z as z20 } from \"zod\";\n\n// src/client/ghin/models/scores/score.ts\nimport { z as z19 } from \"zod\";\n\n// src/client/ghin/models/scores/statistics.ts\nimport { z as z18 } from \"zod\";\nvar schemaStatistics = z18.object({\n  birdies_or_better_percent: float,\n  bogeys_percent: float,\n  double_bogeys_percent: float,\n  fairway_hits_percent: float,\n  gir_percent: float,\n  last_stats_update_date: date,\n  last_stats_update_type: emptyStringToNull,\n  missed_general_approach_shot_accuracy_percent: float,\n  missed_left_approach_shot_accuracy_percent: float,\n  missed_left_percent: float,\n  missed_long_approach_shot_accuracy_percent: float,\n  missed_long_percent: float,\n  missed_right_approach_shot_accuracy_percent: float,\n  missed_right_percent: float,\n  missed_short_approach_shot_accuracy_percent: float,\n  missed_short_percent: float,\n  one_putt_or_better_percent: float,\n  par3s_average: float,\n  par4s_average: float,\n  par5s_average: float,\n  pars_percent: float,\n  putts_total: number,\n  three_putt_or_worse_percent: float,\n  triple_bogeys_or_worse_percent: float,\n  two_putt_or_better_percent: float,\n  two_putt_percent: float,\n  up_and_downs_total: number\n});\n\n// src/client/ghin/models/scores/score.ts\nvar rawScoreTypes = [\"A\", \"C\", \"E\", \"H\", \"N\", \"P\", \"T\"];\nvar schemaRawScoreTypes = z19.enum(rawScoreTypes);\nvar scoreTypes = [\"AWAY\", \"COMPETITION\", \"EXCEPTIONAL\", \"HOME\", \"9_HOLE_ROUNDS\", \"PENALTY\", \"TOURNAMENT\"];\nvar schemaScoreType = z19.enum(scoreTypes);\nvar scoreTypesMap = {\n  A: \"AWAY\",\n  C: \"COMPETITION\",\n  E: \"EXCEPTIONAL\",\n  H: \"HOME\",\n  N: \"9_HOLE_ROUNDS\",\n  P: \"PENALTY\",\n  T: \"TOURNAMENT\"\n};\nvar schemaScoreTypeWithTransform = schemaRawScoreTypes.transform(\n  (value) => scoreTypesMap[value]\n);\nvar scoreStatuses = [\"VALIDATED\", \"UNDER_REVIEW\"];\nvar schemaScoreStatus = z19.enum(scoreStatuses);\nvar rawScoreStatuses = [\"Validated\", \"UnderReview\"];\nvar schemaRawScoreStatus = z19.enum(rawScoreStatuses);\nvar scoreStatusesMap = {\n  Validated: \"VALIDATED\",\n  UnderReview: \"UNDER_REVIEW\"\n};\nvar schemaScoreStatusWithTransform = schemaRawScoreStatus.transform(\n  (value) => scoreStatusesMap[value]\n);\nvar schemaScore = z19.object({\n  adjusted_gross_score: number,\n  adjustments: z19.array(schemaScoringAdjustment),\n  back9_adjusted: number.nullable(),\n  back9_course_rating: float.nullable(),\n  back9_slope_rating: float.nullable(),\n  course_rating: float,\n  differential: float,\n  edited: boolean,\n  exceptional: boolean,\n  front9_adjusted: number.nullable(),\n  front9_course_rating: float.nullable(),\n  front9_slope_rating: float.nullable(),\n  gender,\n  golfer_id: number,\n  hole_details: z19.array(schemaHoleDetail),\n  id: number,\n  is_manual: boolean,\n  is_recent: boolean,\n  message_club_authorized: string.nullable(),\n  net_score_differential: float.nullable(),\n  number_of_holes: number,\n  number_of_played_holes: number,\n  order_number: number,\n  parent_id: number.nullable(),\n  pcc: float,\n  penalty_method: string.nullable(),\n  penalty_type: string.nullable(),\n  penalty: boolean.optional(),\n  played_at: date,\n  posted_at: date,\n  revision: boolean,\n  score_day_order: number,\n  score_type_display_full: string,\n  score_type_display_short: string,\n  score_type: schemaScoreTypeWithTransform,\n  season_end_date_at: monthDay,\n  season_start_date_at: monthDay,\n  slope_rating: float,\n  statistics: schemaStatistics.nullable().optional(),\n  status: schemaScoreStatusWithTransform,\n  unadjusted_differential: float,\n  used: boolean\n});\n\n// src/client/ghin/models/scores/request.ts\nvar schemaScoresRequest = z20.object({\n  course_id: number,\n  from_date_played: date,\n  limit: number.default(100),\n  offset: number.default(0),\n  score_types: z20.array(z20.enum(rawScoreTypes)),\n  statuses: z20.array(string),\n  tee_set_id: number,\n  to_date_played: date\n}).partial().default({}).optional();\n\n// src/client/ghin/models/scores/response.ts\nimport { z as z21 } from \"zod\";\nvar schemaNumberOrDash = z21.union([number, z21.literal(\"-\")]).transform((value) => value === \"-\" ? null : Number(value));\nvar schemaFloatOrDash = z21.union([float, z21.literal(\"-\")]).transform((value) => value === \"-\" ? null : Number.parseFloat(value.toString()));\nvar schemaScoresResponse = z21.object({\n  average: schemaFloatOrDash.default(0),\n  highest_score: schemaNumberOrDash,\n  lowest_score: schemaNumberOrDash,\n  scores: z21.array(schemaScore),\n  total_count: schemaNumberOrDash.default(0)\n});\n\n// src/client/ghin/index.ts\nvar searchParameters = {\n  GOLFER_ID: \"golfer_id\",\n  SOURCE: \"source\"\n};\nvar GhinClient = class {\n  httpClient;\n  courses;\n  golfers;\n  handicaps;\n  constructor(config) {\n    const results = schemaClientConfig.safeParse(config);\n    if (!results.success) {\n      throw new ConfigurationError(`Invalid GhinClientConfig: ${results.error.message}`);\n    }\n    this.httpClient = new RequestClient({\n      ...results.data,\n      cache: results.data.cache ?? new InMemoryCacheClient()\n    });\n    this.courses = {\n      getCountries: this.coursesGetCountries.bind(this),\n      getDetails: this.courseGetDetails.bind(this),\n      search: this.courseSearch.bind(this)\n    };\n    this.handicaps = {\n      getOne: this.handicapsGetOne.bind(this),\n      getCoursePlayerHandicaps: this.handicapsGetCoursePlayerHandicaps.bind(this)\n    };\n    this.golfers = {\n      getOne: this.golfersGetOne.bind(this),\n      getScores: this.golfersGetScores.bind(this),\n      search: this.golfersSearch.bind(this)\n    };\n  }\n  async coursesGetCountries() {\n    try {\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const options = { searchParams };\n      const result = await this.httpClient.fetch({\n        entity: \"course_countries\",\n        options,\n        schema: schemaCourseCountriesResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.countries;\n    } catch (error) {\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseGetDetails(request) {\n    try {\n      const validRequest = schemaCourseDetailsRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = { searchParams };\n      const result = await this.httpClient.fetch({\n        entity: \"course_details\",\n        options,\n        schema: schemaCourseDetailsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course details request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async courseSearch(request) {\n    try {\n      const validRequest = schemaCourseSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        searchParams.set(key, value.toString());\n      }\n      const options = { searchParams };\n      const result = await this.httpClient.fetch({\n        entity: \"course_search\",\n        options,\n        schema: schemaCourseSearchResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.courses;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetOne(ghin) {\n    try {\n      const ghinNumber = number.parse(ghin);\n      const searchParams = new URLSearchParams([\n        [\"source\", CLIENT_SOURCE],\n        [\"ghin\", ghinNumber.toString()]\n      ]);\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfer\",\n        options,\n        schema: schemaGolferHandicapResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfer;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async handicapsGetCoursePlayerHandicaps(request) {\n    try {\n      const golfers = z22.array(schemaGolferCourseHandicapRequest).parse(request).map(({ ghin, ...golfer }) => ({\n        ...golfer,\n        [searchParameters.GOLFER_ID]: ghin\n      }));\n      const searchParams = new URLSearchParams();\n      const courseHandicapRequest = {\n        golfers,\n        source: CLIENT_SOURCE\n      };\n      const options = {\n        body: JSON.stringify(courseHandicapRequest),\n        method: \"POST\",\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"course_handicaps\",\n        options,\n        schema: schemaCoursePlayerHandicapsResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid course handicap request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersSearch(request) {\n    try {\n      const { ghin, ...params } = schemaGolferSearchRequest.parse(request);\n      const searchParams = new URLSearchParams([[\"source\", CLIENT_SOURCE]]);\n      const searchDefaults = {\n        from_ghin: true,\n        per_page: 25,\n        sorting_criteria: \"full_name\",\n        order: \"asc\",\n        page: 1\n      };\n      for (const [key, value] of Object.entries(searchDefaults)) {\n        searchParams.set(key, value.toString());\n      }\n      if (ghin) {\n        searchParams.set(searchParameters.GOLFER_ID, ghin.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"golfers_search\",\n        schema: schemaGolferSearchResponse,\n        options\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value.golfers;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid golfer search request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetOne(ghinNumber) {\n    try {\n      const ghin = number.parse(ghinNumber);\n      const results = await this.golfersSearch({ ghin, status: \"Active\" });\n      return results.find((golfer) => golfer.status === \"Active\");\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid GHIN number: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n  async golfersGetScores(ghinNumber, request) {\n    try {\n      const validRequest = schemaScoresRequest.parse(request) ?? {};\n      const ghin = number.parse(ghinNumber);\n      const searchParams = new URLSearchParams([\n        [searchParameters.GOLFER_ID, ghin.toString()],\n        [\"source\", CLIENT_SOURCE]\n      ]);\n      for (const [key, value] of Object.entries(validRequest)) {\n        if (value === null) {\n          continue;\n        }\n        if (Array.isArray(value)) {\n          for (const v of value) {\n            searchParams.append(key, v.toString());\n          }\n          continue;\n        }\n        if (typeof value === \"object\" && value instanceof Date) {\n          searchParams.set(key, value.toISOString().split(\"T\")[0]);\n          continue;\n        }\n        searchParams.set(key, value.toString());\n      }\n      const options = {\n        searchParams\n      };\n      const result = await this.httpClient.fetch({\n        entity: \"scores\",\n        options,\n        schema: schemaScoresResponse\n      });\n      if (result.isErr()) {\n        throw result.error;\n      }\n      return result.value;\n    } catch (error) {\n      if (error instanceof z22.ZodError) {\n        throw new ValidationError(`Invalid scores request: ${error.message}`);\n      }\n      throw error instanceof Error ? error : new Error(String(error));\n    }\n  }\n};\nexport {\n  GhinClient\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./frontend/node_modules/.cache/babel-loader/c94fb4e30421399b08397851d996084ad731b8cb61a5f9e68df1f16395257a7c.json:1:{"ast":null,"code":"// @ts-nocheck\nimport React,{useState,useEffect}from'react';import{useTheme}from'../../theme/Provider';import{Button,Card,Input,Select}from'../ui';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||\"\";const GameSetup=_ref=>{let{humanPlayer,setHumanPlayer,computerPlayers,setComputerPlayers,selectedCourse,setSelectedCourse,courses,setCourses,personalities=[],setPersonalities,suggestedOpponents=[],setSuggestedOpponents,onStartGame}=_ref;const theme=useTheme();// GHIN lookup modal state\nconst[ghinLookupSlot,setGhinLookupSlot]=useState(null);const[ghinLookupFirstName,setGhinLookupFirstName]=useState(\"\");const[ghinLookupLastName,setGhinLookupLastName]=useState(\"\");const[ghinLookupResults,setGhinLookupResults]=useState([]);const[ghinLookupLoading,setGhinLookupLoading]=useState(false);const[ghinLookupError,setGhinLookupError]=useState(\"\");useEffect(()=>{// Fetch courses with error handling\nfetch(`${API_URL}/courses`).then(res=>{if(!res.ok){throw new Error(`HTTP ${res.status}: ${res.statusText}`);}return res.json();}).then(data=>{if(!data||typeof data!=='object'){throw new Error('Invalid courses data format');}setCourses(data);// Auto-select first course if none selected\nif(!selectedCourse&&Object.keys(data).length>0){setSelectedCourse(Object.keys(data));}}).catch(error=>{console.error('Failed to load courses:',error);// Provide fallback courses so game can still start\nconst fallbackCourses={\"Default Course\":{name:\"Default Course\",holes:Array.from({length:18},(_,i)=>({hole_number:i+1,par:4,yards:400,stroke_index:i+1,description:`Hole ${i+1}`})),total_par:72,total_yards:7200,hole_count:18}};setCourses(fallbackCourses);setSelectedCourse(\"Default Course\");// Show user-friendly error message but don't block the game\nalert('Unable to load courses from server. Using default course to continue the game.');});// Fetch personalities with error handling\nfetch(`${API_URL}/personalities`).then(res=>{if(!res.ok){throw new Error(`HTTP ${res.status}: ${res.statusText}`);}return res.json();}).then(data=>{if(Array.isArray(data)){setPersonalities(data);}else{throw new Error('Invalid personalities data format');}}).catch(error=>{console.error('Failed to load personalities:',error);// Provide fallback personalities\nconst fallbackPersonalities=[{id:'aggressive',name:'Aggressive'},{id:'conservative',name:'Conservative'},{id:'balanced',name:'Balanced'}];setPersonalities(fallbackPersonalities);});// Fetch suggested opponents with error handling\nfetch(`${API_URL}/suggested_opponents`).then(res=>{if(!res.ok){throw new Error(`HTTP ${res.status}: ${res.statusText}`);}return res.json();}).then(data=>{if(Array.isArray(data)){setSuggestedOpponents(data);}else{throw new Error('Invalid suggested opponents data format');}}).catch(error=>{console.error('Failed to load suggested opponents:',error);// Provide fallback suggested opponents\nconst fallbackOpponents=[{name:'Bob',handicap:'12',personality:'aggressive'},{name:'Alice',handicap:'8',personality:'conservative'},{name:'Charlie',handicap:'16',personality:'balanced'}];setSuggestedOpponents(fallbackOpponents);});},[setCourses,setPersonalities,setSuggestedOpponents,selectedCourse,setSelectedCourse]);// Initialize computer players if empty\nuseEffect(()=>{if(computerPlayers.length===0){setComputerPlayers([{id:\"comp1\",name:\"\",handicap:\"\",personality:\"\",is_human:false},{id:\"comp2\",name:\"\",handicap:\"\",personality:\"\",is_human:false},{id:\"comp3\",name:\"\",handicap:\"\",personality:\"\",is_human:false}]);}},[computerPlayers,setComputerPlayers]);const openGhinLookup=slot=>{setGhinLookupSlot(slot);setGhinLookupFirstName(\"\");setGhinLookupLastName(\"\");setGhinLookupResults([]);setGhinLookupLoading(false);setGhinLookupError(\"\");};const closeGhinLookup=()=>{setGhinLookupSlot(null);};const doGhinLookup=async()=>{if(!ghinLookupLastName.trim()){setGhinLookupError(\"Last name required\");return;}setGhinLookupLoading(true);setGhinLookupError(\"\");setGhinLookupResults([]);try{const params=new URLSearchParams({last_name:ghinLookupLastName,first_name:ghinLookupFirstName});const res=await fetch(`${API_URL}/ghin/lookup?${params.toString()}`);if(!res.ok)throw new Error(\"Lookup failed\");const data=await res.json();setGhinLookupResults(data);if(data.length===0)setGhinLookupError(\"No golfers found\");}catch(err){setGhinLookupError(\"Lookup failed\");}finally{setGhinLookupLoading(false);}};const selectGhinGolfer=golfer=>{if(ghinLookupSlot===\"human\"){setHumanPlayer(h=>({...h,name:golfer.name,handicap:golfer.handicap||\"\",is_human:true}));}else{setComputerPlayers(players=>players.map((p,i)=>{const slotId=`comp${i+1}`;return slotId===ghinLookupSlot?{...p,name:golfer.name,handicap:golfer.handicap||\"\",is_human:false}:p;}));}closeGhinLookup();};const loadSuggestedOpponent=(opponentData,index)=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,...opponentData,id:p.id}:p));};const validateAndStartGame=()=>{if(!humanPlayer.name.trim()){alert(\"Please enter your name\");return;}const invalidComputers=computerPlayers.filter(p=>!p.name.trim()||!p.handicap);if(invalidComputers.length>0){alert(\"Please fill in all computer player details\");return;}if(!selectedCourse){alert(\"Please select a course\");return;}onStartGame();};return/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:800,margin:\"0 auto\",padding:20},children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:theme.colors.primary,marginBottom:theme.spacing},children:\"\\uD83C\\uDFAE Wolf Goat Pig Simulation Mode\"}),/*#__PURE__*/_jsx(\"p\",{style:{marginBottom:20},children:\"Practice Wolf Goat Pig against computer opponents! This mode helps you learn the betting strategies and get comfortable with the game mechanics. After each hole, you'll receive educational feedback about your decisions.\"}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Details\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"1fr 1fr\",gap:16},children:[/*#__PURE__*/_jsx(Input,{label:\"Your Name:\",value:humanPlayer.name,onChange:e=>setHumanPlayer({...humanPlayer,name:e.target.value})}),/*#__PURE__*/_jsx(Input,{label:\"Your Handicap:\",type:\"number\",value:humanPlayer.handicap,onChange:e=>setHumanPlayer({...humanPlayer,handicap:e.target.value})})]}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",size:\"small\",onClick:()=>openGhinLookup(\"human\"),style:{marginTop:theme.spacing},children:\"Lookup GHIN Handicap\"}),ghinLookupSlot===\"human\"&&/*#__PURE__*/_jsxs(Card,{variant:\"info\",style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"GHIN Handicap Lookup\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"First Name (optional)\",value:ghinLookupFirstName,onChange:e=>setGhinLookupFirstName(e.target.value)}),/*#__PURE__*/_jsx(Input,{placeholder:\"Last Name (required)\",value:ghinLookupLastName,onChange:e=>setGhinLookupLastName(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:theme.spacing,marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:doGhinLookup,disabled:ghinLookupLoading,children:\"Search\"}),/*#__PURE__*/_jsx(Button,{variant:\"error\",size:\"small\",onClick:closeGhinLookup,children:\"Cancel\"})]}),ghinLookupLoading&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.textSecondary,marginTop:8},children:\"Searching...\"}),ghinLookupError&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.error,marginTop:8},children:ghinLookupError}),ghinLookupResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Results:\"}),ghinLookupResults.map((g,idx)=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:8,border:`1px solid ${theme.colors.border}`,borderRadius:6,marginBottom:4,cursor:\"pointer\",background:theme.colors.paper},onClick:()=>selectGhinGolfer(g),children:[/*#__PURE__*/_jsx(\"strong\",{children:g.name}),\" (H: \",g.handicap,\")\",g.club&&/*#__PURE__*/_jsxs(\"span\",{style:{color:theme.colors.textSecondary},children:[\"@ \",g.club]})]},idx))]})]})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Computer Opponents\"}),computerPlayers.map((player,index)=>/*#__PURE__*/_jsxs(Card,{variant:\"default\",style:{marginBottom:16},children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Computer Player \",index+1]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"1fr 1fr\",gap:16},children:[/*#__PURE__*/_jsx(Input,{label:\"Name:\",value:player.name,onChange:e=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,name:e.target.value}:p));}}),/*#__PURE__*/_jsx(Input,{label:\"Handicap:\",type:\"number\",value:player.handicap,onChange:e=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,handicap:e.target.value}:p));}})]}),/*#__PURE__*/_jsx(Select,{label:\"Personality:\",value:player.personality,onChange:e=>{setComputerPlayers(players=>players.map((p,i)=>i===index?{...p,personality:e.target.value}:p));},options:personalities.map(p=>({value:p.id,label:p.name})),placeholder:\"Select personality...\"}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",size:\"small\",onClick:()=>openGhinLookup(`comp${index+1}`),style:{marginTop:theme.spacing},children:\"Lookup GHIN Handicap\"}),ghinLookupSlot===`comp${index+1}`&&/*#__PURE__*/_jsxs(Card,{variant:\"info\",style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"GHIN Handicap Lookup\"}),/*#__PURE__*/_jsx(Input,{placeholder:\"First Name (optional)\",value:ghinLookupFirstName,onChange:e=>setGhinLookupFirstName(e.target.value)}),/*#__PURE__*/_jsx(Input,{placeholder:\"Last Name (required)\",value:ghinLookupLastName,onChange:e=>setGhinLookupLastName(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:theme.spacing,marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:doGhinLookup,disabled:ghinLookupLoading,children:\"Search\"}),/*#__PURE__*/_jsx(Button,{variant:\"error\",size:\"small\",onClick:closeGhinLookup,children:\"Cancel\"})]}),ghinLookupLoading&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.textSecondary,marginTop:8},children:\"Searching...\"}),ghinLookupError&&/*#__PURE__*/_jsx(\"div\",{style:{color:theme.colors.error,marginTop:8},children:ghinLookupError}),ghinLookupResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Results:\"}),ghinLookupResults.map((g,idx)=>/*#__PURE__*/_jsxs(\"div\",{style:{padding:8,border:`1px solid ${theme.colors.border}`,borderRadius:6,marginBottom:4,cursor:\"pointer\",background:theme.colors.paper},onClick:()=>selectGhinGolfer(g),children:[/*#__PURE__*/_jsx(\"strong\",{children:g.name}),\" (H: \",g.handicap,\")\",g.club&&/*#__PURE__*/_jsxs(\"span\",{style:{color:theme.colors.textSecondary},children:[\"@ \",g.club]})]},idx))]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:theme.spacing},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:14,color:theme.colors.textSecondary},children:\"Quick select:\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:theme.spacing,marginTop:theme.spacing,flexWrap:'wrap'},children:suggestedOpponents.map((opponent,oppIdx)=>/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"small\",onClick:()=>loadSuggestedOpponent(opponent,index),children:opponent.name},oppIdx))})]})]},index))]}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Select,{label:\"Select Course:\",value:selectedCourse||'',onChange:e=>setSelectedCourse(e.target.value),options:Object.keys(courses).map(courseId=>{var _courses$courseId;return{value:courseId,label:((_courses$courseId=courses[courseId])===null||_courses$courseId===void 0?void 0:_courses$courseId.name)||courseId};}),placeholder:\"Choose a course...\"})}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginTop:theme.spacing},children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"large\",onClick:validateAndStartGame,children:\"\\uD83D\\uDE80 Start Simulation\"})})]})});};export default GameSetup;","map":{"version":3,"names":["React","useState","useEffect","useTheme","Button","Card","Input","Select","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_API_URL","GameSetup","_ref","humanPlayer","setHumanPlayer","computerPlayers","setComputerPlayers","selectedCourse","setSelectedCourse","courses","setCourses","personalities","setPersonalities","suggestedOpponents","setSuggestedOpponents","onStartGame","theme","ghinLookupSlot","setGhinLookupSlot","ghinLookupFirstName","setGhinLookupFirstName","ghinLookupLastName","setGhinLookupLastName","ghinLookupResults","setGhinLookupResults","ghinLookupLoading","setGhinLookupLoading","ghinLookupError","setGhinLookupError","fetch","then","res","ok","Error","status","statusText","json","data","Object","keys","length","catch","error","console","fallbackCourses","name","holes","Array","from","_","i","hole_number","par","yards","stroke_index","description","total_par","total_yards","hole_count","alert","isArray","fallbackPersonalities","id","fallbackOpponents","handicap","personality","is_human","openGhinLookup","slot","closeGhinLookup","doGhinLookup","trim","params","URLSearchParams","last_name","first_name","toString","err","selectGhinGolfer","golfer","h","players","map","p","slotId","loadSuggestedOpponent","opponentData","index","validateAndStartGame","invalidComputers","filter","style","maxWidth","margin","padding","children","color","colors","primary","marginBottom","spacing","display","gridTemplateColumns","gap","label","value","onChange","e","target","type","variant","size","onClick","marginTop","placeholder","disabled","textSecondary","g","idx","border","borderRadius","cursor","background","paper","club","player","options","fontSize","flexWrap","opponent","oppIdx","courseId","_courses$courseId","textAlign"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/simulation/GameSetup.tsx"],"sourcesContent":["// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { useTheme } from '../../theme/Provider';\nimport { Button, Card, Input, Select } from '../ui';\n\nconst API_URL = process.env.REACT_APP_API_URL || \"\";\n\ninterface Player {\n  id?: string;\n  name: string;\n  handicap: string;\n  personality?: string;\n  is_human: boolean;\n}\n\ninterface Course {\n  name: string;\n  holes: Array<{\n    hole_number: number;\n    par: number;\n    yards: number;\n    stroke_index: number;\n    description: string;\n  }>;\n  total_par: number;\n  total_yards: number;\n  hole_count: number;\n}\n\ninterface Personality {\n  id: string;\n  name: string;\n}\n\ninterface SuggestedOpponent {\n  name: string;\n  handicap: string;\n  personality: string;\n}\n\ninterface GhinGolfer {\n  name: string;\n  handicap: string;\n  club?: string;\n}\n\ninterface GameSetupProps {\n  humanPlayer: Player;\n  setHumanPlayer: React.Dispatch<React.SetStateAction<Player>>;\n  computerPlayers: Player[];\n  setComputerPlayers: React.Dispatch<React.SetStateAction<Player[]>>;\n  selectedCourse: string | null;\n  setSelectedCourse: React.Dispatch<React.SetStateAction<string | null>>;\n  courses: { [key: string]: Course };\n  setCourses: React.Dispatch<React.SetStateAction<{ [key: string]: Course }>>;\n  personalities?: Personality[];\n  setPersonalities: React.Dispatch<React.SetStateAction<Personality[]>>;\n  suggestedOpponents?: SuggestedOpponent[];\n  setSuggestedOpponents: React.Dispatch<React.SetStateAction<SuggestedOpponent[]>>;\n  onStartGame: () => void;\n}\n\nconst GameSetup: React.FC<GameSetupProps> = ({\n  humanPlayer,\n  setHumanPlayer,\n  computerPlayers,\n  setComputerPlayers,\n  selectedCourse,\n  setSelectedCourse,\n  courses,\n  setCourses,\n  personalities = [],\n  setPersonalities,\n  suggestedOpponents = [],\n  setSuggestedOpponents,\n  onStartGame\n}) => {\n  const theme = useTheme();\n  \n  // GHIN lookup modal state\n  const [ghinLookupSlot, setGhinLookupSlot] = useState<string | null>(null);\n  const [ghinLookupFirstName, setGhinLookupFirstName] = useState(\"\");\n  const [ghinLookupLastName, setGhinLookupLastName] = useState(\"\");\n  const [ghinLookupResults, setGhinLookupResults] = useState<GhinGolfer[]>([]);\n  const [ghinLookupLoading, setGhinLookupLoading] = useState(false);\n  const [ghinLookupError, setGhinLookupError] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch courses with error handling\n    fetch(`${API_URL}/courses`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((data: { [key: string]: Course }) => {\n        if (!data || typeof data !== 'object') {\n          throw new Error('Invalid courses data format');\n        }\n        setCourses(data);\n        \n        // Auto-select first course if none selected\n        if (!selectedCourse && Object.keys(data).length > 0) {\n          setSelectedCourse(Object.keys(data));\n        }\n      })\n      .catch(error => {\n        console.error('Failed to load courses:', error);\n        \n        // Provide fallback courses so game can still start\n        const fallbackCourses: { [key: string]: Course } = {\n          \"Default Course\": {\n            name: \"Default Course\",\n            holes: Array.from({length: 18}, (_, i) => ({\n              hole_number: i + 1,\n              par: 4,\n              yards: 400,\n              stroke_index: i + 1,\n              description: `Hole ${i + 1}`\n            })),\n            total_par: 72,\n            total_yards: 7200,\n            hole_count: 18\n          }\n        };\n        \n        setCourses(fallbackCourses);\n        setSelectedCourse(\"Default Course\");\n        \n        // Show user-friendly error message but don't block the game\n        alert('Unable to load courses from server. Using default course to continue the game.');\n      });\n    \n    // Fetch personalities with error handling\n    fetch(`${API_URL}/personalities`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((data: Personality[]) => {\n        if (Array.isArray(data)) {\n          setPersonalities(data);\n        } else {\n          throw new Error('Invalid personalities data format');\n        }\n      })\n      .catch(error => {\n        console.error('Failed to load personalities:', error);\n        // Provide fallback personalities\n        const fallbackPersonalities: Personality[] = [\n          { id: 'aggressive', name: 'Aggressive' },\n          { id: 'conservative', name: 'Conservative' },\n          { id: 'balanced', name: 'Balanced' }\n        ];\n        setPersonalities(fallbackPersonalities);\n      });\n    \n    // Fetch suggested opponents with error handling\n    fetch(`${API_URL}/suggested_opponents`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP ${res.status}: ${res.statusText}`);\n        }\n        return res.json();\n      })\n      .then((data: SuggestedOpponent[]) => {\n        if (Array.isArray(data)) {\n          setSuggestedOpponents(data);\n        } else {\n          throw new Error('Invalid suggested opponents data format');\n        }\n      })\n      .catch(error => {\n        console.error('Failed to load suggested opponents:', error);\n        // Provide fallback suggested opponents\n        const fallbackOpponents: SuggestedOpponent[] = [\n          { name: 'Bob', handicap: '12', personality: 'aggressive' },\n          { name: 'Alice', handicap: '8', personality: 'conservative' },\n          { name: 'Charlie', handicap: '16', personality: 'balanced' }\n        ];\n        setSuggestedOpponents(fallbackOpponents);\n      });\n  }, [setCourses, setPersonalities, setSuggestedOpponents, selectedCourse, setSelectedCourse]);\n\n  // Initialize computer players if empty\n  useEffect(() => {\n    if (computerPlayers.length === 0) {\n      setComputerPlayers([\n        { id: \"comp1\", name: \"\", handicap: \"\", personality: \"\", is_human: false },\n        { id: \"comp2\", name: \"\", handicap: \"\", personality: \"\", is_human: false },\n        { id: \"comp3\", name: \"\", handicap: \"\", personality: \"\", is_human: false }\n      ]);\n    }\n  }, [computerPlayers, setComputerPlayers]);\n\n  const openGhinLookup = (slot: string) => {\n    setGhinLookupSlot(slot);\n    setGhinLookupFirstName(\"\");\n    setGhinLookupLastName(\"\");\n    setGhinLookupResults([]);\n    setGhinLookupLoading(false);\n    setGhinLookupError(\"\");\n  };\n\n  const closeGhinLookup = () => {\n    setGhinLookupSlot(null);\n  };\n\n  const doGhinLookup = async () => {\n    if (!ghinLookupLastName.trim()) {\n      setGhinLookupError(\"Last name required\");\n      return;\n    }\n    setGhinLookupLoading(true);\n    setGhinLookupError(\"\");\n    setGhinLookupResults([]);\n    try {\n      const params = new URLSearchParams({ \n        last_name: ghinLookupLastName, \n        first_name: ghinLookupFirstName \n      });\n      const res = await fetch(`${API_URL}/ghin/lookup?${params.toString()}`);\n      if (!res.ok) throw new Error(\"Lookup failed\");\n      const data: GhinGolfer[] = await res.json();\n      setGhinLookupResults(data);\n      if (data.length === 0) setGhinLookupError(\"No golfers found\");\n    } catch (err: any) {\n      setGhinLookupError(\"Lookup failed\");\n    } finally {\n      setGhinLookupLoading(false);\n    }\n  };\n\n  const selectGhinGolfer = (golfer: GhinGolfer) => {\n    if (ghinLookupSlot === \"human\") {\n      setHumanPlayer(h => ({ ...h, name: golfer.name, handicap: golfer.handicap || \"\", is_human: true }));\n    } else {\n      setComputerPlayers(players => players.map((p, i) => {\n        const slotId = `comp${i+1}`;\n        return slotId === ghinLookupSlot ? { ...p, name: golfer.name, handicap: golfer.handicap || \"\", is_human: false } : p;\n      }));\n    }\n    closeGhinLookup();\n  };\n\n  const loadSuggestedOpponent = (opponentData: SuggestedOpponent, index: number) => {\n    setComputerPlayers(players => players.map((p, i) => \n      i === index ? { ...p, ...opponentData, id: p.id } : p\n    ));\n  };\n\n  const validateAndStartGame = () => {\n    if (!humanPlayer.name.trim()) {\n      alert(\"Please enter your name\");\n      return;\n    }\n    \n    const invalidComputers = computerPlayers.filter(p => !p.name.trim() || !p.handicap);\n    if (invalidComputers.length > 0) {\n      alert(\"Please fill in all computer player details\");\n      return;\n    }\n    \n    if (!selectedCourse) {\n      alert(\"Please select a course\");\n      return;\n    }\n    \n    onStartGame();\n  };\n\n  return (\n    <div style={{ maxWidth: 800, margin: \"0 auto\", padding: 20 }}>\n      <Card>\n        <h2 style={{ color: theme.colors.primary, marginBottom: theme.spacing }}>\n          🎮 Wolf Goat Pig Simulation Mode\n        </h2>\n        <p style={{ marginBottom: 20 }}>\n          Practice Wolf Goat Pig against computer opponents! This mode helps you learn the betting strategies\n          and get comfortable with the game mechanics. After each hole, you'll receive educational feedback\n          about your decisions.\n        </p>\n        \n        {/* Human Player Setup */}\n        <Card>\n          <h3>Your Details</h3>\n          <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 16 }}>\n            <Input\n              label=\"Your Name:\"\n              value={humanPlayer.name}\n              onChange={(e) => setHumanPlayer({...humanPlayer, name: e.target.value})}\n            />\n            <Input\n              label=\"Your Handicap:\"\n              type=\"number\"\n              value={humanPlayer.handicap}\n              onChange={(e) => setHumanPlayer({...humanPlayer, handicap: e.target.value})}\n            />\n          </div>\n          \n          <Button \n            variant=\"secondary\"\n            size=\"small\"\n            onClick={() => openGhinLookup(\"human\")}\n            style={{ marginTop: theme.spacing }}\n          >\n            Lookup GHIN Handicap\n          </Button>\n          \n          {ghinLookupSlot === \"human\" && (\n            <Card variant=\"info\" style={{ marginTop: theme.spacing }}>\n              <h4>GHIN Handicap Lookup</h4>\n              <Input\n                placeholder=\"First Name (optional)\"\n                value={ghinLookupFirstName}\n                onChange={e => setGhinLookupFirstName(e.target.value)}\n              />\n              <Input\n                placeholder=\"Last Name (required)\"\n                value={ghinLookupLastName}\n                onChange={e => setGhinLookupLastName(e.target.value)}\n              />\n              <div style={{ display: 'flex', gap: theme.spacing, marginTop: theme.spacing }}>\n                <Button \n                  size=\"small\"\n                  onClick={doGhinLookup} \n                  disabled={ghinLookupLoading}\n                >\n                  Search\n                </Button>\n                <Button \n                  variant=\"error\"\n                  size=\"small\"\n                  onClick={closeGhinLookup}\n                >\n                  Cancel\n                </Button>\n              </div>\n              \n              {ghinLookupLoading && <div style={{ color: theme.colors.textSecondary, marginTop: 8 }}>Searching...</div>}\n              {ghinLookupError && <div style={{ color: theme.colors.error, marginTop: 8 }}>{ghinLookupError}</div>}\n              \n              {ghinLookupResults.length > 0 && (\n                <div style={{ marginTop: theme.spacing }}>\n                  <h5>Results:</h5>\n                  {ghinLookupResults.map((g, idx) => (\n                    <div \n                      key={idx} \n                      style={{ \n                        padding: 8, \n                        border: `1px solid ${theme.colors.border}`, \n                        borderRadius: 6, \n                        marginBottom: 4, \n                        cursor: \"pointer\", \n                        background: theme.colors.paper \n                      }} \n                      onClick={() => selectGhinGolfer(g)}\n                    >\n                      <strong>{g.name}</strong> (H: {g.handicap}) \n                      {g.club && <span style={{ color: theme.colors.textSecondary }}>@ {g.club}</span>}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </Card>\n          )}\n        </Card>\n\n        {/* Computer Players Setup */}\n        <Card>\n          <h3>Computer Opponents</h3>\n          {computerPlayers.map((player, index) => (\n            <Card key={index} variant=\"default\" style={{ marginBottom: 16 }}>\n              <h4>Computer Player {index + 1}</h4>\n              <div style={{ display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: 16 }}>\n                <Input\n                  label=\"Name:\"\n                  value={player.name}\n                  onChange={(e) => {\n                    setComputerPlayers(players => players.map((p, i) => \n                      i === index ? { ...p, name: e.target.value } : p\n                    ));\n                  }}\n                />\n                <Input\n                  label=\"Handicap:\"\n                  type=\"number\"\n                  value={player.handicap}\n                  onChange={(e) => {\n                    setComputerPlayers(players => players.map((p, i) => \n                      i === index ? { ...p, handicap: e.target.value } : p\n                    ));\n                  }}\n                />\n              </div>\n              \n              <Select\n                label=\"Personality:\"\n                value={player.personality}\n                onChange={(e) => {\n                  setComputerPlayers(players => players.map((p, i) => \n                    i === index ? { ...p, personality: e.target.value } : p\n                  ));\n                }}\n                options={personalities.map(p => ({ value: p.id, label: p.name }))}\n                placeholder=\"Select personality...\"\n              />\n              \n              <Button \n                variant=\"secondary\"\n                size=\"small\"\n                onClick={() => openGhinLookup(`comp${index+1}`)}\n                style={{ marginTop: theme.spacing }}\n              >\n                Lookup GHIN Handicap\n              </Button>\n              \n              {ghinLookupSlot === `comp${index+1}` && (\n                <Card variant=\"info\" style={{ marginTop: theme.spacing }}>\n                  <h4>GHIN Handicap Lookup</h4>\n                  <Input\n                    placeholder=\"First Name (optional)\"\n                    value={ghinLookupFirstName}\n                    onChange={e => setGhinLookupFirstName(e.target.value)}\n                  />\n                  <Input\n                    placeholder=\"Last Name (required)\"\n                    value={ghinLookupLastName}\n                    onChange={e => setGhinLookupLastName(e.target.value)}\n                  />\n                  <div style={{ display: 'flex', gap: theme.spacing, marginTop: theme.spacing }}>\n                    <Button \n                      size=\"small\"\n                      onClick={doGhinLookup} \n                      disabled={ghinLookupLoading}\n                    >\n                      Search\n                    </Button>\n                    <Button \n                      variant=\"error\"\n                      size=\"small\"\n                      onClick={closeGhinLookup}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                  \n                  {ghinLookupLoading && <div style={{ color: theme.colors.textSecondary, marginTop: 8 }}>Searching...</div>}\n                  {ghinLookupError && <div style={{ color: theme.colors.error, marginTop: 8 }}>{ghinLookupError}</div>}\n                  \n                  {ghinLookupResults.length > 0 && (\n                    <div style={{ marginTop: theme.spacing }}>\n                      <h5>Results:</h5>\n                      {ghinLookupResults.map((g, idx) => (\n                        <div \n                          key={idx} \n                          style={{ \n                            padding: 8, \n                            border: `1px solid ${theme.colors.border}`, \n                            borderRadius: 6, \n                            marginBottom: 4, \n                            cursor: \"pointer\", \n                            background: theme.colors.paper \n                          }} \n                          onClick={() => selectGhinGolfer(g)}\n                        >\n                          <strong>{g.name}</strong> (H: {g.handicap}) \n                          {g.club && <span style={{ color: theme.colors.textSecondary }}>@ {g.club}</span>}\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </Card>\n              )}\n              \n              <div style={{ marginTop: theme.spacing }}>\n                <span style={{ fontSize: 14, color: theme.colors.textSecondary }}>Quick select:</span>\n                <div style={{ display: 'flex', gap: theme.spacing, marginTop: theme.spacing, flexWrap: 'wrap' }}>\n                  {suggestedOpponents.map((opponent, oppIdx) => (\n                    <Button\n                      key={oppIdx}\n                      variant=\"ghost\"\n                      size=\"small\"\n                      onClick={() => loadSuggestedOpponent(opponent, index)}\n                    >\n                      {opponent.name}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            </Card>\n          ))}\n        </Card>\n\n        {/* Course Selection */}\n        <Card>\n          <Select\n            label=\"Select Course:\"\n            value={selectedCourse || ''}\n            onChange={(e) => setSelectedCourse(e.target.value)}\n            options={Object.keys(courses).map(courseId => ({ \n              value: courseId, \n              label: courses[courseId]?.name || courseId \n            }))}\n            placeholder=\"Choose a course...\"\n          />\n        </Card>\n\n        {/* Start Game Button */}\n        <div style={{ textAlign: 'center', marginTop: theme.spacing }}>\n          <Button\n            variant=\"primary\"\n            size=\"large\"\n            onClick={validateAndStartGame}\n          >\n            🚀 Start Simulation\n          </Button>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default GameSetup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./frontend/node_modules/.cache/babel-loader/509bcee8005537cb1312fbb75bb40d9470a8f53b5f9ab58fc6fa6edb04bed0fa.json:1:{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import{useGame}from\"../../context\";import{simulationConfig}from\"../../config/environment\";import{getSimulationMock}from\"./__fixtures__\";import{GameSetup,GamePlay,EnhancedSimulationLayout}from\"./\";import TurnBasedInterface from\"./TurnBasedInterface\";// import { Timeline, PokerBettingPanel } from \"./\"; // Removed - not currently used\n// import TVPokerLayout from \"../game/TVPokerLayout\"; // Removed - not currently used\nimport{jsx as _jsx}from\"react/jsx-runtime\";const{apiUrl:SIMULATION_API_URL,useMocks:USE_SIMULATION_MOCKS,mockPreset:SIMULATION_MOCK_PRESET}=simulationConfig;// Helper function to safely serialize error details\nconst formatErrorDetail=detail=>{if(typeof detail==='object'&&detail!==null){return JSON.stringify(detail);}return detail;};function SimulationMode(){var _gameState$hole_state;// const theme = useTheme(); // Unused for now\nconst{gameState,setGameState,isGameActive,startGame,endGame,loading,setLoading,feedback,addFeedback,clearFeedback,shotState,setShotState,interactionNeeded,setInteractionNeeded,pendingDecision,setPendingDecision,shotProbabilities,setShotProbabilities,hasNextShot,setHasNextShot}=useGame();// Timeline and Poker state\nconst[timelineEvents,setTimelineEvents]=useState([]);const[pokerState,setPokerState]=useState({});const[bettingOptions,setBettingOptions]=useState([]);const[timelineLoading,setTimelineLoading]=useState(false);const[mockStep,setMockStep]=useState(0);// Turn-based mode state\nconst useTurnBasedMode=true;const[turnBasedState,setTurnBasedState]=useState(null);// Setup state\nconst[humanPlayer,setHumanPlayer]=useState({id:\"human\",name:\"\",handicap:18,strength:\"Average\",is_human:true});const[computerPlayers,setComputerPlayers]=useState([]);const[suggestedOpponents,setSuggestedOpponents]=useState([]);const[personalities,setPersonalities]=useState([]);const[selectedCourse,setSelectedCourse]=useState(\"\");const[courses,setCourses]=useState({});// Hole decisions - setHoleDecisions used for resetting state between simulations\nconst[,setHoleDecisions]=useState({action:null,requested_partner:null,offer_double:false,accept_double:false});// Note: interactionNeeded and setInteractionNeeded come from useGame() context above\n// const [pendingDecision, setPendingDecision] = useState({}); // Also from context\n// New state for shot-by-shot simulation\n// Note: All simulation state (shotProbabilities, shotState, hasNextShot, etc.) comes from useGame() context above\n// GHIN lookup functionality removed - was not being used in current UI\n// GHIN lookup functions removed - functionality not currently exposed in UI\nconst isMockSessionEnabled=USE_SIMULATION_MOCKS;const resolveMockPreset=useCallback(()=>getSimulationMock(SIMULATION_MOCK_PRESET),[]);const pushMockTimelineEvent=partialEvent=>{setTimelineEvents(previous=>[{id:partialEvent.id||`mock-event-${Date.now()}`,timestamp:partialEvent.timestamp||new Date().toISOString(),...partialEvent},...previous]);};const hydrateMockSetup=useCallback(()=>{if(!isMockSessionEnabled){return;}const preset=resolveMockPreset();if(!preset){return;}const{setup,gameState:presetGameState}=preset;if(setup){setPersonalities(setup.personalities||[]);setSuggestedOpponents(setup.opponents||[]);setCourses(setup.courses||{});if(Array.isArray(setup.opponents)&&setup.opponents.length>0){setComputerPlayers(setup.opponents.slice(0,3).map((opponent,index)=>({id:opponent.id||`mock-opponent-${index+1}`,name:opponent.name,handicap:opponent.handicap,personality:opponent.personality,is_human:false})));}}if(presetGameState!==null&&presetGameState!==void 0&&presetGameState.players){const humanPlayerFromPreset=presetGameState.players.find(player=>(player===null||player===void 0?void 0:player.is_human)||(player===null||player===void 0?void 0:player.id)===\"human\");if(humanPlayerFromPreset){setHumanPlayer(prev=>({...prev,...humanPlayerFromPreset}));}}},[isMockSessionEnabled,resolveMockPreset,setPersonalities,setSuggestedOpponents,setCourses,setComputerPlayers,setHumanPlayer]);const runMockSimulation=()=>{const preset=resolveMockPreset();if(!preset){return;}setGameState(preset.gameState);startGame(preset.gameState);setShotState(preset.shotState||null);setShotProbabilities(preset.shotProbabilities||null);setHasNextShot(preset.hasNextShot!==undefined?Boolean(preset.hasNextShot):true);setInteractionNeeded(preset.interactionNeeded||null);clearFeedback();(preset.feedback||[]).forEach(entry=>addFeedback(entry));setTimelineEvents(preset.timelineEvents||[]);setPokerState(preset.pokerState||{});setBettingOptions(preset.bettingOptions||[]);setMockStep(0);};const handleMockDecision=decision=>{if(!isMockSessionEnabled){return;}if(decision.offer_double!==undefined){handleBettingAction(decision.offer_double?'offer_double':'decline_double',{label:decision.offer_double?'Offer Double':'Decline Double'});setInteractionNeeded(null);setPendingDecision({});return;}if(decision.accept_double!==undefined){handleBettingAction(decision.accept_double?'accept_double':'decline_double',{label:decision.accept_double?'Accept Double':'Decline Double'});setInteractionNeeded(null);setPendingDecision({});return;}if(decision.accept_partnership!==undefined){const accepted=Boolean(decision.accept_partnership);pushMockTimelineEvent({type:accepted?'partnership':'solo',description:accepted?'Mock: Partnership accepted. Robots brace for teamwork.':'Mock: Partnership declined. Captain must go solo.'});addFeedback(accepted?'✅ Mock confirmation: partnership locked in.':'⚠️ Mock decline: prepare for solo play.');if(!accepted){handleBettingAction('offer_double',{label:'Forced Solo Double'});}setInteractionNeeded(null);setPendingDecision({});return;}if(decision.action==='request_partner'){var _gameState$players,_gameState$players$fi;const partnerId=decision.requested_partner;const partnerName=(gameState===null||gameState===void 0?void 0:(_gameState$players=gameState.players)===null||_gameState$players===void 0?void 0:(_gameState$players$fi=_gameState$players.find(player=>player.id===partnerId))===null||_gameState$players$fi===void 0?void 0:_gameState$players$fi.name)||partnerId||'selected partner';pushMockTimelineEvent({type:'partnership',description:`Mock: You selected ${partnerName} as your partner.`});addFeedback(`🤝 Mock partner secured: ${partnerName}`);const pressurePreset=getSimulationMock('pressureDouble');setInteractionNeeded(pressurePreset.interactionNeeded||null);setShotState(pressurePreset.shotState||shotState);setShotProbabilities(pressurePreset.shotProbabilities||shotProbabilities);setBettingOptions(pressurePreset.bettingOptions||bettingOptions);setPokerState(previous=>({...previous,...pressurePreset.pokerState}));setMockStep(previous=>previous+1);setPendingDecision({});return;}if(decision.action==='go_solo'){pushMockTimelineEvent({type:'solo',description:'Mock: Captain elects to go solo and press the wager.'});addFeedback('🚀 Mock solo play engaged. The wager has been doubled.');handleBettingAction('offer_double',{label:'Mock Solo Double'});setInteractionNeeded(null);setPendingDecision({});return;}if(decision.action==='keep_watching'){pushMockTimelineEvent({type:'captain',description:'Mock: Captain keeps observing robot tee shots.'});addFeedback('👀 Mock mode: continuing to observe tee shots.');setInteractionNeeded(null);setPendingDecision({});return;}pushMockTimelineEvent({type:'info',description:`Mock decision recorded: ${JSON.stringify(decision)}`});addFeedback('ℹ️ Mock decision logged. No backend action triggered.');setInteractionNeeded(null);setPendingDecision({});};const fetchInitialData=useCallback(async()=>{if(isMockSessionEnabled){return;}try{const[personalitiesRes,opponentsRes,coursesRes]=await Promise.all([fetch(`${SIMULATION_API_URL}/simulation/available-personalities`),fetch(`${SIMULATION_API_URL}/simulation/suggested-opponents`),fetch(`${SIMULATION_API_URL}/courses`)]);const personalitiesData=await personalitiesRes.json();const opponentsData=await opponentsRes.json();const coursesData=await coursesRes.json();setPersonalities(personalitiesData.personalities||[]);setSuggestedOpponents(opponentsData.opponents||[]);setCourses(coursesData||{});if(opponentsData.opponents&&opponentsData.opponents.length>=3){setComputerPlayers([{id:\"comp1\",...opponentsData.opponents[0],is_human:false},{id:\"comp2\",...opponentsData.opponents[1],is_human:false},{id:\"comp3\",...opponentsData.opponents[2],is_human:false}]);}}catch(error){console.error(\"Error fetching initial data:\",error);}},[isMockSessionEnabled,setComputerPlayers,setCourses,setPersonalities,setSuggestedOpponents]);const fetchTurnBasedState=useCallback(async()=>{if(isMockSessionEnabled){return;}try{const response=await fetch(`${SIMULATION_API_URL}/simulation/turn-based-state`);const data=await response.json();if(data.success){setTurnBasedState(data.turn_based_state);}}catch(error){console.error('Error fetching turn-based state:',error);}},[isMockSessionEnabled,setTurnBasedState]);useEffect(()=>{if(isMockSessionEnabled){hydrateMockSetup();return;}fetchInitialData();},[fetchInitialData,hydrateMockSetup,isMockSessionEnabled]);// Fetch turn-based state when game is active\nuseEffect(()=>{if(isGameActive&&useTurnBasedMode&&!isMockSessionEnabled){fetchTurnBasedState();const interval=setInterval(fetchTurnBasedState,2000);return()=>clearInterval(interval);}return undefined;},[fetchTurnBasedState,isGameActive,isMockSessionEnabled,useTurnBasedMode]);const startSimulation=async()=>{if(!isMockSessionEnabled&&!humanPlayer.name.trim()){alert(\"Please enter your name\");return;}setLoading(true);try{// Reset all local state for new simulation\nsetGameState(null);endGame();// Use endGame directly instead of setIsGameActive\nclearFeedback();setShotProbabilities(null);setShotState(null);setHasNextShot(true);setInteractionNeeded(null);setPendingDecision({});setHoleDecisions({action:null,requested_partner:null,offer_double:false,accept_double:false});// GHIN lookup state reset removed - functionality not currently used\nsetMockStep(0);if(isMockSessionEnabled){runMockSimulation();setLoading(false);return;}const response=await fetch(`${SIMULATION_API_URL}/simulation/setup`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({human_player:humanPlayer,computer_players:computerPlayers,course_name:selectedCourse||null})});const data=await response.json();if(data.status===\"ok\"){// First set the game state\nsetGameState(data.game_state);// Then start the game with the new state\nstartGame(data.game_state);// Set initial feedback\nclearFeedback();if(data.feedback&&Array.isArray(data.feedback)){data.feedback.forEach(msg=>addFeedback(msg));}else{addFeedback(data.message||\"Simulation started!\");}// Set next shot availability from the response\nif(data.next_shot_available!==undefined){setHasNextShot(data.next_shot_available);}else{setHasNextShot(true);// Default to true after setup\n}// Don't immediately play next shot - let the user initiate\n// This prevents race conditions and gives user control\n}else{alert(\"Error starting simulation: \"+(formatErrorDetail(data.detail)||\"Unknown error\"));}}catch(error){console.error(\"Error starting simulation:\",error);alert(\"Error starting simulation\");}finally{if(!isMockSessionEnabled){setLoading(false);}}};// Fetch timeline events from backend\nconst fetchTimelineEvents=async()=>{if(!isGameActive||isMockSessionEnabled)return;try{setTimelineLoading(true);const response=await fetch(`${SIMULATION_API_URL}/simulation/timeline`);if(response.ok){const data=await response.json();setTimelineEvents(data.events||[]);}}catch(error){console.error(\"Error fetching timeline:\",error);}finally{setTimelineLoading(false);}};// Fetch poker-style betting state\nconst fetchPokerState=async()=>{if(!isGameActive||isMockSessionEnabled)return;try{const response=await fetch(`${SIMULATION_API_URL}/simulation/poker-state`);if(response.ok){const data=await response.json();setPokerState({pot_size:data.pot_size,base_bet:data.base_bet,current_bet:data.current_bet,betting_phase:data.betting_phase,doubled:data.doubled,players_in:data.players_in,wagering_closed:data.wagering_closed});setBettingOptions(data.betting_options||[]);}}catch(error){console.error(\"Error fetching poker state:\",error);}};// Handle poker-style betting actions\nconst handleBettingAction=async(action,option)=>{if(isMockSessionEnabled){var _ref,_gameState$betting$cu,_gameState$betting;const label=(option===null||option===void 0?void 0:option.label)||action;const currentWager=(_ref=(_gameState$betting$cu=gameState===null||gameState===void 0?void 0:(_gameState$betting=gameState.betting)===null||_gameState$betting===void 0?void 0:_gameState$betting.current_wager)!==null&&_gameState$betting$cu!==void 0?_gameState$betting$cu:gameState===null||gameState===void 0?void 0:gameState.base_wager)!==null&&_ref!==void 0?_ref:1;const updatedWager=action==='offer_double'?currentWager*2:currentWager;setGameState(previous=>{if(!previous){return previous;}return{...previous,betting:{...(previous.betting||{}),current_wager:updatedWager}};});setPokerState(previous=>{var _previous$current_wag,_previous$current_wag2;return{...previous,current_wager:action==='offer_double'?((_previous$current_wag=previous===null||previous===void 0?void 0:previous.current_wager)!==null&&_previous$current_wag!==void 0?_previous$current_wag:currentWager)*2:(_previous$current_wag2=previous===null||previous===void 0?void 0:previous.current_wager)!==null&&_previous$current_wag2!==void 0?_previous$current_wag2:updatedWager,pending_actions:[],last_mock_action:action};});pushMockTimelineEvent({type:action!==null&&action!==void 0&&action.includes('double')?'double':'bet',description:`Mock: ${label}`});addFeedback(`🃏 Mock betting action captured: ${label}`);return;}try{setLoading(true);const decision={decision_type:action,player_id:'human',amount:option.amount||0,...option};const response=await fetch(`${SIMULATION_API_URL}/simulation/betting-decision`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(decision)});if(response.ok){const result=await response.json();if(result.success){// Update game state if provided\nif(result.game_state){setGameState(result.game_state);}// Refresh timeline and poker state\nawait Promise.all([fetchTimelineEvents(),fetchPokerState()]);}}}catch(error){console.error(\"Error handling betting action:\",error);}finally{setLoading(false);}};// Auto-refresh timeline and poker state when game is active\nuseEffect(()=>{if(isGameActive&&!isMockSessionEnabled){// Initial fetch\nfetchTimelineEvents();fetchPokerState();// Set up polling for real-time updates\nconst interval=setInterval(()=>{fetchTimelineEvents();fetchPokerState();},3000);// Update every 3 seconds\nreturn()=>clearInterval(interval);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[isGameActive,gameState===null||gameState===void 0?void 0:gameState.current_hole,gameState===null||gameState===void 0?void 0:(_gameState$hole_state=gameState.hole_state)===null||_gameState$hole_state===void 0?void 0:_gameState$hole_state.current_shot_number]);// fetchTimelineEvents and fetchPokerState are stable\n// Removed unused testNewEndpoints function\n// Add the missing makeDecision function and improve interactive flow\nconst makeDecision=async decision=>{if(isMockSessionEnabled){handleMockDecision(decision);return;}setLoading(true);try{// Determine which endpoint to use based on decision type\nlet endpoint='/simulation/play-hole';let payload={...decision};// Handle different decision types\nif(decision.action==='request_partner'||decision.action==='go_solo'||decision.action==='keep_watching'){// Captain decisions during tee shots\nendpoint='/simulation/play-hole';payload={action:decision.action,requested_partner:decision.requested_partner||decision.partner_id};}else if(decision.accept_partnership!==undefined){// Partnership response\nendpoint='/simulation/play-hole';payload={accept_partnership:decision.accept_partnership};}else if(decision.offer_double!==undefined){// Doubling decisions\nendpoint='/simulation/betting-decision';payload={action:decision.offer_double?'offer_double':'decline_double'};}else if(decision.accept_double!==undefined){// Double response\nendpoint='/simulation/betting-decision';payload={action:decision.accept_double?'accept_double':'decline_double'};}const response=await fetch(`${SIMULATION_API_URL}${endpoint}`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});if(!response.ok){const errorText=await response.text();throw new Error(`Backend error: ${response.status} - ${errorText}`);}const data=await response.json();if(data.status===\"ok\"){var _data$decision_result;// Update game state\nsetGameState(data.game_state);// Add feedback messages\nif(data.feedback&&Array.isArray(data.feedback)){data.feedback.forEach(msg=>addFeedback(msg));}else if((_data$decision_result=data.decision_result)!==null&&_data$decision_result!==void 0&&_data$decision_result.message){addFeedback(`💰 ${data.decision_result.message}`);}// Handle interaction needed\nif(data.interaction_needed){setInteractionNeeded(data.interaction_needed);}else{setInteractionNeeded(null);setPendingDecision({});}// Update shot state if available\nif(data.next_shot_available!==undefined){setHasNextShot(data.next_shot_available);}const baseProbabilities=data.probabilities&&typeof data.probabilities===\"object\"&&!Array.isArray(data.probabilities)?data.probabilities:null;const bettingAnalysis=data.betting_probabilities&&typeof data.betting_probabilities===\"object\"?data.betting_probabilities:null;if(baseProbabilities||bettingAnalysis){const combinedProbabilities={...(baseProbabilities||{}),...(bettingAnalysis?{betting_analysis:bettingAnalysis}:{})};setShotProbabilities(combinedProbabilities);}// Auto-continue if no interaction needed and shots available\nif(!data.interaction_needed&&data.next_shot_available){// Small delay to let user see the feedback\nsetTimeout(()=>{if(!loading&&!interactionNeeded){playNextShot();}},1500);}}else{throw new Error(data.message||'Unknown error occurred');}}catch(error){console.error(\"Error making decision:\",error);// Provide user-friendly error messages\nlet errorMessage=\"Error making decision: \";if(error.message.includes(\"Backend error: 500\")){errorMessage+=\"Server error - please try again\";}else if(error.message.includes(\"Backend error: 400\")){errorMessage+=\"Invalid decision - please check your choice\";}else if(error.message.includes(\"fetch\")){errorMessage+=\"Network error - check your connection\";}else{errorMessage+=error.message;}// Add error to feedback instead of alert\naddFeedback(`❌ ${errorMessage}`);// Clear interaction needed to prevent stuck state\nsetInteractionNeeded(null);}finally{setLoading(false);}};const playNextShot=async()=>{if(loading||interactionNeeded){if(process.env.NODE_ENV!=='production'){console.debug(\"Cannot play shot:\",{loading,interactionNeeded});}return;}if(isMockSessionEnabled){var _nextPreset$shotState;const presetName=mockStep%2===0?'pressureDouble':SIMULATION_MOCK_PRESET;const nextPreset=getSimulationMock(presetName);pushMockTimelineEvent({type:'shot',description:((_nextPreset$shotState=nextPreset.shotState)===null||_nextPreset$shotState===void 0?void 0:_nextPreset$shotState.recommended_shot)||`Mock shot progression ${mockStep+1}.`});addFeedback(`🎯 Mock shot advanced (step ${mockStep+1}).`);setGameState(previous=>{var _previous$hole_state;if(!previous){return nextPreset.gameState||previous;}const nextHoleState={...(previous.hole_state||{}),...(nextPreset.gameState&&nextPreset.gameState.hole_state||{}),current_shot_number:(((_previous$hole_state=previous.hole_state)===null||_previous$hole_state===void 0?void 0:_previous$hole_state.current_shot_number)||0)+1};return{...previous,...(nextPreset.gameState||{}),hole_state:nextHoleState};});setShotState(nextPreset.shotState||null);setShotProbabilities(nextPreset.shotProbabilities||null);setInteractionNeeded(nextPreset.interactionNeeded||null);setBettingOptions(nextPreset.bettingOptions||bettingOptions);setPokerState(previous=>({...previous,...nextPreset.pokerState}));setHasNextShot(nextPreset.hasNextShot!==undefined?Boolean(nextPreset.hasNextShot):false);setMockStep(previous=>previous+1);return;}setLoading(true);try{const response=await fetch(`${SIMULATION_API_URL}/simulation/play-next-shot`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(pendingDecision)});if(!response.ok){const errorText=await response.text();throw new Error(`Backend error: ${response.status} - ${errorText}`);}const data=await response.json();if(data.status===\"ok\"){setGameState(data.game_state);// Add feedback from the shot simulation\nif(data.feedback&&data.feedback.length>0){data.feedback.forEach(msg=>addFeedback(msg));}// Handle shot result\nif(data.shot_result){addFeedback(`🎯 Shot Result: ${JSON.stringify(data.shot_result)}`);}// Handle interaction needed\nif(data.interaction_needed){setInteractionNeeded(data.interaction_needed);setPendingDecision({});}else{setInteractionNeeded(null);setPendingDecision({});}// Update next shot availability\nsetHasNextShot(data.next_shot_available);// Refresh timeline and poker state after shot\nawait Promise.all([fetchTimelineEvents(),fetchPokerState()]);}else{throw new Error(data.message||'Unknown error occurred');}}catch(error){console.error(\"Error playing next shot:\",error);let errorMessage=\"Error playing shot: \";if(error.message.includes(\"Backend error: 500\")){errorMessage+=\"Server error - please try again\";}else if(error.message.includes(\"fetch\")){errorMessage+=\"Network error - check your connection\";}else{errorMessage+=error.message;}addFeedback(`❌ ${errorMessage}`);}finally{setLoading(false);}};const resetSimulation=()=>{setGameState(null);endGame();// Use endGame directly instead of setIsGameActive\nclearFeedback();setHoleDecisions({action:null,requested_partner:null,offer_double:false,accept_double:false});setMockStep(0);};if(!isGameActive){return/*#__PURE__*/_jsx(GameSetup,{humanPlayer:humanPlayer,setHumanPlayer:setHumanPlayer,computerPlayers:computerPlayers,setComputerPlayers:setComputerPlayers,selectedCourse:selectedCourse,setSelectedCourse:setSelectedCourse,courses:courses,setCourses:setCourses,personalities:personalities,setPersonalities:setPersonalities,suggestedOpponents:suggestedOpponents,setSuggestedOpponents:setSuggestedOpponents,onStartGame:startSimulation});}// Choose interface based on mode preference\nif(useTurnBasedMode&&turnBasedState){return/*#__PURE__*/_jsx(TurnBasedInterface,{gameState:{...gameState,...(turnBasedState.turn_based_state||turnBasedState),interactionNeeded,hasNextShot,feedback},onMakeDecision:makeDecision,interactionNeeded:interactionNeeded,feedback:feedback,shotState:shotState,onNextShot:playNextShot,hasNextShot:hasNextShot});}// Use Enhanced Simulation Layout with Timeline and Poker Betting\nconst useEnhancedLayout=true;// TODO: Make this a user preference\nif(useEnhancedLayout){return/*#__PURE__*/_jsx(EnhancedSimulationLayout,{gameState:gameState,shotState:shotState,probabilities:shotProbabilities,onDecision:makeDecision,onPlayNextShot:playNextShot,timelineEvents:timelineEvents,timelineLoading:timelineLoading,pokerState:pokerState,bettingOptions:bettingOptions,onBettingAction:handleBettingAction,currentPlayer:\"human\",interactionNeeded:interactionNeeded,hasNextShot:hasNextShot,feedback:feedback});}return/*#__PURE__*/_jsx(GamePlay,{gameState:gameState,onEndSimulation:resetSimulation,interactionNeeded:interactionNeeded,onMakeDecision:makeDecision,feedback:feedback,shotState:shotState,shotProbabilities:shotProbabilities,onNextShot:playNextShot,hasNextShot:hasNextShot});}export default SimulationMode;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useGame","simulationConfig","getSimulationMock","GameSetup","GamePlay","EnhancedSimulationLayout","TurnBasedInterface","jsx","_jsx","apiUrl","SIMULATION_API_URL","useMocks","USE_SIMULATION_MOCKS","mockPreset","SIMULATION_MOCK_PRESET","formatErrorDetail","detail","JSON","stringify","SimulationMode","_gameState$hole_state","gameState","setGameState","isGameActive","startGame","endGame","loading","setLoading","feedback","addFeedback","clearFeedback","shotState","setShotState","interactionNeeded","setInteractionNeeded","pendingDecision","setPendingDecision","shotProbabilities","setShotProbabilities","hasNextShot","setHasNextShot","timelineEvents","setTimelineEvents","pokerState","setPokerState","bettingOptions","setBettingOptions","timelineLoading","setTimelineLoading","mockStep","setMockStep","useTurnBasedMode","turnBasedState","setTurnBasedState","humanPlayer","setHumanPlayer","id","name","handicap","strength","is_human","computerPlayers","setComputerPlayers","suggestedOpponents","setSuggestedOpponents","personalities","setPersonalities","selectedCourse","setSelectedCourse","courses","setCourses","setHoleDecisions","action","requested_partner","offer_double","accept_double","isMockSessionEnabled","resolveMockPreset","pushMockTimelineEvent","partialEvent","previous","Date","now","timestamp","toISOString","hydrateMockSetup","preset","setup","presetGameState","opponents","Array","isArray","length","slice","map","opponent","index","personality","players","humanPlayerFromPreset","find","player","prev","runMockSimulation","undefined","Boolean","forEach","entry","handleMockDecision","decision","handleBettingAction","label","accept_partnership","accepted","type","description","_gameState$players","_gameState$players$fi","partnerId","partnerName","pressurePreset","fetchInitialData","personalitiesRes","opponentsRes","coursesRes","Promise","all","fetch","personalitiesData","json","opponentsData","coursesData","error","console","fetchTurnBasedState","response","data","success","turn_based_state","interval","setInterval","clearInterval","startSimulation","trim","alert","method","headers","body","human_player","computer_players","course_name","status","game_state","msg","message","next_shot_available","fetchTimelineEvents","ok","events","fetchPokerState","pot_size","base_bet","current_bet","betting_phase","doubled","players_in","wagering_closed","betting_options","option","_ref","_gameState$betting$cu","_gameState$betting","currentWager","betting","current_wager","base_wager","updatedWager","_previous$current_wag","_previous$current_wag2","pending_actions","last_mock_action","includes","decision_type","player_id","amount","result","current_hole","hole_state","current_shot_number","makeDecision","endpoint","payload","partner_id","errorText","text","Error","_data$decision_result","decision_result","interaction_needed","baseProbabilities","probabilities","bettingAnalysis","betting_probabilities","combinedProbabilities","betting_analysis","setTimeout","playNextShot","errorMessage","process","env","NODE_ENV","debug","_nextPreset$shotState","presetName","nextPreset","recommended_shot","_previous$hole_state","nextHoleState","shot_result","resetSimulation","onStartGame","onMakeDecision","onNextShot","useEnhancedLayout","onDecision","onPlayNextShot","onBettingAction","currentPlayer","onEndSimulation"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/simulation/SimulationMode.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useGame } from \"../../context\";\nimport { simulationConfig } from \"../../config/environment\";\nimport { getSimulationMock } from \"./__fixtures__\";\nimport { GameSetup, GamePlay, EnhancedSimulationLayout } from \"./\";\nimport TurnBasedInterface from \"./TurnBasedInterface\";\n// import { Timeline, PokerBettingPanel } from \"./\"; // Removed - not currently used\n// import TVPokerLayout from \"../game/TVPokerLayout\"; // Removed - not currently used\n\nconst {\n  apiUrl: SIMULATION_API_URL,\n  useMocks: USE_SIMULATION_MOCKS,\n  mockPreset: SIMULATION_MOCK_PRESET,\n} = simulationConfig;\n\n// Helper function to safely serialize error details\nconst formatErrorDetail = (detail) => {\n  if (typeof detail === 'object' && detail !== null) {\n    return JSON.stringify(detail);\n  }\n  return detail;\n};\n\nfunction SimulationMode() {\n  // const theme = useTheme(); // Unused for now\n  const { \n    gameState, \n    setGameState, \n    isGameActive, \n    startGame, \n    endGame,\n    loading, \n    setLoading,\n    feedback,\n    addFeedback,\n    clearFeedback,\n    shotState,\n    setShotState,\n    interactionNeeded,\n    setInteractionNeeded,\n    pendingDecision,\n    setPendingDecision,\n    shotProbabilities,\n    setShotProbabilities,\n    hasNextShot,\n    setHasNextShot,\n  } = useGame();\n\n  // Timeline and Poker state\n  const [timelineEvents, setTimelineEvents] = useState([]);\n  const [pokerState, setPokerState] = useState({});\n  const [bettingOptions, setBettingOptions] = useState([]);\n  const [timelineLoading, setTimelineLoading] = useState(false);\n  const [mockStep, setMockStep] = useState(0);\n  \n  // Turn-based mode state\n  const useTurnBasedMode = true;\n  const [turnBasedState, setTurnBasedState] = useState(null);\n\n  // Setup state\n  const [humanPlayer, setHumanPlayer] = useState({\n    id: \"human\",\n    name: \"\",\n    handicap: 18,\n    strength: \"Average\",\n    is_human: true\n  });\n  const [computerPlayers, setComputerPlayers] = useState([]);\n  const [suggestedOpponents, setSuggestedOpponents] = useState([]);\n  const [personalities, setPersonalities] = useState([]);\n  const [selectedCourse, setSelectedCourse] = useState(\"\");\n  const [courses, setCourses] = useState({});\n  \n  // Hole decisions - setHoleDecisions used for resetting state between simulations\n  const [, setHoleDecisions] = useState({\n    action: null,\n    requested_partner: null,\n    offer_double: false,\n    accept_double: false\n  });\n  \n  // Note: interactionNeeded and setInteractionNeeded come from useGame() context above\n  // const [pendingDecision, setPendingDecision] = useState({}); // Also from context\n\n  // New state for shot-by-shot simulation\n  // Note: All simulation state (shotProbabilities, shotState, hasNextShot, etc.) comes from useGame() context above\n\n  // GHIN lookup functionality removed - was not being used in current UI\n\n  // GHIN lookup functions removed - functionality not currently exposed in UI\n\n  const isMockSessionEnabled = USE_SIMULATION_MOCKS;\n\n  const resolveMockPreset = useCallback(\n    () => getSimulationMock(SIMULATION_MOCK_PRESET),\n    []\n  );\n\n  const pushMockTimelineEvent = (partialEvent) => {\n    setTimelineEvents((previous) => [\n      {\n        id: partialEvent.id || `mock-event-${Date.now()}`,\n        timestamp: partialEvent.timestamp || new Date().toISOString(),\n        ...partialEvent,\n      },\n      ...previous,\n    ]);\n  };\n\n  const hydrateMockSetup = useCallback(() => {\n    if (!isMockSessionEnabled) {\n      return;\n    }\n\n    const preset = resolveMockPreset();\n    if (!preset) {\n      return;\n    }\n\n    const { setup, gameState: presetGameState } = preset;\n\n    if (setup) {\n      setPersonalities(setup.personalities || []);\n      setSuggestedOpponents(setup.opponents || []);\n      setCourses(setup.courses || {});\n\n      if (Array.isArray(setup.opponents) && setup.opponents.length > 0) {\n        setComputerPlayers(\n          setup.opponents.slice(0, 3).map((opponent, index) => ({\n            id: opponent.id || `mock-opponent-${index + 1}`,\n            name: opponent.name,\n            handicap: opponent.handicap,\n            personality: opponent.personality,\n            is_human: false,\n          }))\n        );\n      }\n    }\n\n    if (presetGameState?.players) {\n      const humanPlayerFromPreset = presetGameState.players.find(\n        (player) => player?.is_human || player?.id === \"human\"\n      );\n\n      if (humanPlayerFromPreset) {\n        setHumanPlayer((prev) => ({\n          ...prev,\n          ...humanPlayerFromPreset,\n        }));\n      }\n    }\n  }, [isMockSessionEnabled, resolveMockPreset, setPersonalities, setSuggestedOpponents, setCourses, setComputerPlayers, setHumanPlayer]);\n\n  const runMockSimulation = () => {\n    const preset = resolveMockPreset();\n    if (!preset) {\n      return;\n    }\n\n    setGameState(preset.gameState);\n    startGame(preset.gameState);\n    setShotState(preset.shotState || null);\n    setShotProbabilities(preset.shotProbabilities || null);\n    setHasNextShot(\n      preset.hasNextShot !== undefined ? Boolean(preset.hasNextShot) : true\n    );\n    setInteractionNeeded(preset.interactionNeeded || null);\n\n    clearFeedback();\n    (preset.feedback || []).forEach((entry) => addFeedback(entry));\n\n    setTimelineEvents(preset.timelineEvents || []);\n    setPokerState(preset.pokerState || {});\n    setBettingOptions(preset.bettingOptions || []);\n    setMockStep(0);\n  };\n\n  const handleMockDecision = (decision) => {\n    if (!isMockSessionEnabled) {\n      return;\n    }\n\n    if (decision.offer_double !== undefined) {\n      handleBettingAction(\n        decision.offer_double ? 'offer_double' : 'decline_double',\n        {\n          label: decision.offer_double ? 'Offer Double' : 'Decline Double',\n        }\n      );\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.accept_double !== undefined) {\n      handleBettingAction(\n        decision.accept_double ? 'accept_double' : 'decline_double',\n        {\n          label: decision.accept_double ? 'Accept Double' : 'Decline Double',\n        }\n      );\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.accept_partnership !== undefined) {\n      const accepted = Boolean(decision.accept_partnership);\n      pushMockTimelineEvent({\n        type: accepted ? 'partnership' : 'solo',\n        description: accepted\n          ? 'Mock: Partnership accepted. Robots brace for teamwork.'\n          : 'Mock: Partnership declined. Captain must go solo.',\n      });\n      addFeedback(\n        accepted\n          ? '✅ Mock confirmation: partnership locked in.'\n          : '⚠️ Mock decline: prepare for solo play.'\n      );\n\n      if (!accepted) {\n        handleBettingAction('offer_double', { label: 'Forced Solo Double' });\n      }\n\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.action === 'request_partner') {\n      const partnerId = decision.requested_partner;\n      const partnerName =\n        gameState?.players?.find((player) => player.id === partnerId)?.name || partnerId || 'selected partner';\n\n      pushMockTimelineEvent({\n        type: 'partnership',\n        description: `Mock: You selected ${partnerName} as your partner.`,\n      });\n\n      addFeedback(`🤝 Mock partner secured: ${partnerName}`);\n\n      const pressurePreset = getSimulationMock('pressureDouble');\n      setInteractionNeeded(pressurePreset.interactionNeeded || null);\n      setShotState(pressurePreset.shotState || shotState);\n      setShotProbabilities(pressurePreset.shotProbabilities || shotProbabilities);\n      setBettingOptions(pressurePreset.bettingOptions || bettingOptions);\n      setPokerState((previous) => ({\n        ...previous,\n        ...pressurePreset.pokerState,\n      }));\n      setMockStep((previous) => previous + 1);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.action === 'go_solo') {\n      pushMockTimelineEvent({\n        type: 'solo',\n        description: 'Mock: Captain elects to go solo and press the wager.',\n      });\n      addFeedback('🚀 Mock solo play engaged. The wager has been doubled.');\n      handleBettingAction('offer_double', { label: 'Mock Solo Double' });\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    if (decision.action === 'keep_watching') {\n      pushMockTimelineEvent({\n        type: 'captain',\n        description: 'Mock: Captain keeps observing robot tee shots.',\n      });\n      addFeedback('👀 Mock mode: continuing to observe tee shots.');\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      return;\n    }\n\n    pushMockTimelineEvent({\n      type: 'info',\n      description: `Mock decision recorded: ${JSON.stringify(decision)}`,\n    });\n    addFeedback('ℹ️ Mock decision logged. No backend action triggered.');\n    setInteractionNeeded(null);\n    setPendingDecision({});\n  };\n\n  const fetchInitialData = useCallback(async () => {\n    if (isMockSessionEnabled) {\n      return;\n    }\n\n    try {\n      const [personalitiesRes, opponentsRes, coursesRes] = await Promise.all([\n        fetch(`${SIMULATION_API_URL}/simulation/available-personalities`),\n        fetch(`${SIMULATION_API_URL}/simulation/suggested-opponents`),\n        fetch(`${SIMULATION_API_URL}/courses`)\n      ]);\n\n      const personalitiesData = await personalitiesRes.json();\n      const opponentsData = await opponentsRes.json();\n      const coursesData = await coursesRes.json();\n\n      setPersonalities(personalitiesData.personalities || []);\n      setSuggestedOpponents(opponentsData.opponents || []);\n      setCourses(coursesData || {});\n\n      if (opponentsData.opponents && opponentsData.opponents.length >= 3) {\n        setComputerPlayers([\n          { id: \"comp1\", ...opponentsData.opponents[0], is_human: false },\n          { id: \"comp2\", ...opponentsData.opponents[1], is_human: false },\n          { id: \"comp3\", ...opponentsData.opponents[2], is_human: false }\n        ]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching initial data:\", error);\n    }\n  }, [isMockSessionEnabled, setComputerPlayers, setCourses, setPersonalities, setSuggestedOpponents]);\n\n  const fetchTurnBasedState = useCallback(async () => {\n    if (isMockSessionEnabled) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/turn-based-state`);\n      const data = await response.json();\n\n      if (data.success) {\n        setTurnBasedState(data.turn_based_state);\n      }\n    } catch (error) {\n      console.error('Error fetching turn-based state:', error);\n    }\n  }, [isMockSessionEnabled, setTurnBasedState]);\n\n  useEffect(() => {\n    if (isMockSessionEnabled) {\n      hydrateMockSetup();\n      return;\n    }\n\n    fetchInitialData();\n  }, [fetchInitialData, hydrateMockSetup, isMockSessionEnabled]);\n  \n  // Fetch turn-based state when game is active\n  useEffect(() => {\n    if (isGameActive && useTurnBasedMode && !isMockSessionEnabled) {\n      fetchTurnBasedState();\n      const interval = setInterval(fetchTurnBasedState, 2000);\n      return () => clearInterval(interval);\n    }\n    return undefined;\n  }, [fetchTurnBasedState, isGameActive, isMockSessionEnabled, useTurnBasedMode]);\n  const startSimulation = async () => {\n    if (!isMockSessionEnabled && !humanPlayer.name.trim()) {\n      alert(\"Please enter your name\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Reset all local state for new simulation\n      setGameState(null);\n      endGame();  // Use endGame directly instead of setIsGameActive\n      clearFeedback();\n      setShotProbabilities(null);\n      setShotState(null);\n      setHasNextShot(true);\n      setInteractionNeeded(null);\n      setPendingDecision({});\n      setHoleDecisions({\n        action: null,\n        requested_partner: null,\n        offer_double: false,\n        accept_double: false\n      });\n      // GHIN lookup state reset removed - functionality not currently used\n\n      setMockStep(0);\n\n      if (isMockSessionEnabled) {\n        runMockSimulation();\n        setLoading(false);\n        return;\n      }\n\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/setup`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          human_player: humanPlayer,\n          computer_players: computerPlayers,\n          course_name: selectedCourse || null\n        })\n      });\n      \n      const data = await response.json();\n      if (data.status === \"ok\") {\n        // First set the game state\n        setGameState(data.game_state);\n        \n        // Then start the game with the new state\n        startGame(data.game_state);\n        \n        // Set initial feedback\n        clearFeedback();\n        if (data.feedback && Array.isArray(data.feedback)) {\n          data.feedback.forEach((msg) => addFeedback(msg));\n        } else {\n          addFeedback(data.message || \"Simulation started!\");\n        }\n        \n        // Set next shot availability from the response\n        if (data.next_shot_available !== undefined) {\n          setHasNextShot(data.next_shot_available);\n        } else {\n          setHasNextShot(true);  // Default to true after setup\n        }\n        \n        // Don't immediately play next shot - let the user initiate\n        // This prevents race conditions and gives user control\n      } else {\n        alert(\"Error starting simulation: \" + (formatErrorDetail(data.detail) || \"Unknown error\"));\n      }\n    } catch (error) {\n      console.error(\"Error starting simulation:\", error);\n      alert(\"Error starting simulation\");\n    } finally {\n      if (!isMockSessionEnabled) {\n        setLoading(false);\n      }\n    }\n  };\n\n  // Fetch timeline events from backend\n  const fetchTimelineEvents = async () => {\n    if (!isGameActive || isMockSessionEnabled) return;\n    \n    try {\n      setTimelineLoading(true);\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/timeline`);\n      if (response.ok) {\n        const data = await response.json();\n        setTimelineEvents(data.events || []);\n      }\n    } catch (error) {\n      console.error(\"Error fetching timeline:\", error);\n    } finally {\n      setTimelineLoading(false);\n    }\n  };\n\n  // Fetch poker-style betting state\n  const fetchPokerState = async () => {\n    if (!isGameActive || isMockSessionEnabled) return;\n    \n    try {\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/poker-state`);\n      if (response.ok) {\n        const data = await response.json();\n        setPokerState({\n          pot_size: data.pot_size,\n          base_bet: data.base_bet, \n          current_bet: data.current_bet,\n          betting_phase: data.betting_phase,\n          doubled: data.doubled,\n          players_in: data.players_in,\n          wagering_closed: data.wagering_closed\n        });\n        setBettingOptions(data.betting_options || []);\n      }\n    } catch (error) {\n      console.error(\"Error fetching poker state:\", error);\n    }\n  };\n\n  // Handle poker-style betting actions\n  const handleBettingAction = async (action, option) => {\n    if (isMockSessionEnabled) {\n      const label = option?.label || action;\n      const currentWager = gameState?.betting?.current_wager ?? gameState?.base_wager ?? 1;\n      const updatedWager = action === 'offer_double' ? currentWager * 2 : currentWager;\n\n      setGameState((previous) => {\n        if (!previous) {\n          return previous;\n        }\n\n        return {\n          ...previous,\n          betting: {\n            ...(previous.betting || {}),\n            current_wager: updatedWager,\n          },\n        };\n      });\n\n      setPokerState((previous) => ({\n        ...previous,\n        current_wager:\n          action === 'offer_double'\n            ? (previous?.current_wager ?? currentWager) * 2\n            : previous?.current_wager ?? updatedWager,\n        pending_actions: [],\n        last_mock_action: action,\n      }));\n\n      pushMockTimelineEvent({\n        type: action?.includes('double') ? 'double' : 'bet',\n        description: `Mock: ${label}`,\n      });\n\n      addFeedback(`🃏 Mock betting action captured: ${label}`);\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const decision = {\n        decision_type: action,\n        player_id: 'human',\n        amount: option.amount || 0,\n        ...option\n      };\n\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/betting-decision`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(decision)\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success) {\n          // Update game state if provided\n          if (result.game_state) {\n            setGameState(result.game_state);\n          }\n\n          // Refresh timeline and poker state\n          await Promise.all([fetchTimelineEvents(), fetchPokerState()]);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error handling betting action:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Auto-refresh timeline and poker state when game is active\n  useEffect(() => {\n    if (isGameActive && !isMockSessionEnabled) {\n      // Initial fetch\n      fetchTimelineEvents();\n      fetchPokerState();\n\n      // Set up polling for real-time updates\n      const interval = setInterval(() => {\n        fetchTimelineEvents();\n        fetchPokerState();\n      }, 3000); // Update every 3 seconds\n\n      return () => clearInterval(interval);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isGameActive, gameState?.current_hole, gameState?.hole_state?.current_shot_number]); // fetchTimelineEvents and fetchPokerState are stable\n  \n  // Removed unused testNewEndpoints function\n\n  // Add the missing makeDecision function and improve interactive flow\n  const makeDecision = async (decision) => {\n    if (isMockSessionEnabled) {\n      handleMockDecision(decision);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Determine which endpoint to use based on decision type\n      let endpoint = '/simulation/play-hole';\n      let payload = { ...decision };\n      \n      // Handle different decision types\n      if (decision.action === 'request_partner' || decision.action === 'go_solo' || decision.action === 'keep_watching') {\n        // Captain decisions during tee shots\n        endpoint = '/simulation/play-hole';\n        payload = {\n          action: decision.action,\n          requested_partner: decision.requested_partner || decision.partner_id\n        };\n      } else if (decision.accept_partnership !== undefined) {\n        // Partnership response\n        endpoint = '/simulation/play-hole';\n        payload = {\n          accept_partnership: decision.accept_partnership\n        };\n      } else if (decision.offer_double !== undefined) {\n        // Doubling decisions\n        endpoint = '/simulation/betting-decision';\n        payload = {\n          action: decision.offer_double ? 'offer_double' : 'decline_double'\n        };\n      } else if (decision.accept_double !== undefined) {\n        // Double response\n        endpoint = '/simulation/betting-decision';\n        payload = {\n          action: decision.accept_double ? 'accept_double' : 'decline_double'\n        };\n      }\n\n      const response = await fetch(`${SIMULATION_API_URL}${endpoint}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Backend error: ${response.status} - ${errorText}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.status === \"ok\") {\n        // Update game state\n        setGameState(data.game_state);\n        \n        // Add feedback messages\n        if (data.feedback && Array.isArray(data.feedback)) {\n          data.feedback.forEach(msg => addFeedback(msg));\n        } else if (data.decision_result?.message) {\n          addFeedback(`💰 ${data.decision_result.message}`);\n        }\n        \n        // Handle interaction needed\n        if (data.interaction_needed) {\n          setInteractionNeeded(data.interaction_needed);\n        } else {\n          setInteractionNeeded(null);\n          setPendingDecision({});\n        }\n        \n        // Update shot state if available\n        if (data.next_shot_available !== undefined) {\n          setHasNextShot(data.next_shot_available);\n        }\n        \n        const baseProbabilities =\n          data.probabilities && typeof data.probabilities === \"object\" && !Array.isArray(data.probabilities)\n            ? data.probabilities\n            : null;\n\n        const bettingAnalysis =\n          data.betting_probabilities && typeof data.betting_probabilities === \"object\"\n            ? data.betting_probabilities\n            : null;\n\n        if (baseProbabilities || bettingAnalysis) {\n          const combinedProbabilities = {\n            ...(baseProbabilities || {}),\n            ...(bettingAnalysis ? { betting_analysis: bettingAnalysis } : {}),\n          };\n\n          setShotProbabilities(combinedProbabilities);\n        }\n        \n        // Auto-continue if no interaction needed and shots available\n        if (!data.interaction_needed && data.next_shot_available) {\n          // Small delay to let user see the feedback\n          setTimeout(() => {\n            if (!loading && !interactionNeeded) {\n              playNextShot();\n            }\n          }, 1500);\n        }\n        \n      } else {\n        throw new Error(data.message || 'Unknown error occurred');\n      }\n      \n    } catch (error) {\n      console.error(\"Error making decision:\", error);\n      \n      // Provide user-friendly error messages\n      let errorMessage = \"Error making decision: \";\n      if (error.message.includes(\"Backend error: 500\")) {\n        errorMessage += \"Server error - please try again\";\n      } else if (error.message.includes(\"Backend error: 400\")) {\n        errorMessage += \"Invalid decision - please check your choice\";\n      } else if (error.message.includes(\"fetch\")) {\n        errorMessage += \"Network error - check your connection\";\n      } else {\n        errorMessage += error.message;\n      }\n      \n      // Add error to feedback instead of alert\n      addFeedback(`❌ ${errorMessage}`);\n      \n      // Clear interaction needed to prevent stuck state\n      setInteractionNeeded(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const playNextShot = async () => {\n    if (loading || interactionNeeded) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.debug(\"Cannot play shot:\", { loading, interactionNeeded });\n      }\n      return;\n    }\n\n    if (isMockSessionEnabled) {\n      const presetName = mockStep % 2 === 0 ? 'pressureDouble' : SIMULATION_MOCK_PRESET;\n      const nextPreset = getSimulationMock(presetName);\n\n      pushMockTimelineEvent({\n        type: 'shot',\n        description:\n          nextPreset.shotState?.recommended_shot ||\n          `Mock shot progression ${mockStep + 1}.`,\n      });\n\n      addFeedback(`🎯 Mock shot advanced (step ${mockStep + 1}).`);\n\n      setGameState((previous) => {\n        if (!previous) {\n          return nextPreset.gameState || previous;\n        }\n\n        const nextHoleState = {\n          ...(previous.hole_state || {}),\n          ...((nextPreset.gameState && nextPreset.gameState.hole_state) || {}),\n          current_shot_number:\n            (previous.hole_state?.current_shot_number || 0) + 1,\n        };\n\n        return {\n          ...previous,\n          ...(nextPreset.gameState || {}),\n          hole_state: nextHoleState,\n        };\n      });\n\n      setShotState(nextPreset.shotState || null);\n      setShotProbabilities(nextPreset.shotProbabilities || null);\n      setInteractionNeeded(nextPreset.interactionNeeded || null);\n      setBettingOptions(nextPreset.bettingOptions || bettingOptions);\n      setPokerState((previous) => ({\n        ...previous,\n        ...nextPreset.pokerState,\n      }));\n      setHasNextShot(\n        nextPreset.hasNextShot !== undefined\n          ? Boolean(nextPreset.hasNextShot)\n          : false\n      );\n      setMockStep((previous) => previous + 1);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch(`${SIMULATION_API_URL}/simulation/play-next-shot`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(pendingDecision)\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Backend error: ${response.status} - ${errorText}`);\n      }\n      \n      const data = await response.json();\n      \n      if (data.status === \"ok\") {\n        setGameState(data.game_state);\n        \n        // Add feedback from the shot simulation\n        if (data.feedback && data.feedback.length > 0) {\n          data.feedback.forEach(msg => addFeedback(msg));\n        }\n        \n        // Handle shot result\n        if (data.shot_result) {\n          addFeedback(`🎯 Shot Result: ${JSON.stringify(data.shot_result)}`);\n        }\n        \n        // Handle interaction needed\n        if (data.interaction_needed) {\n          setInteractionNeeded(data.interaction_needed);\n          setPendingDecision({});\n        } else {\n          setInteractionNeeded(null);\n          setPendingDecision({});\n        }\n        \n        // Update next shot availability\n        setHasNextShot(data.next_shot_available);\n        \n        // Refresh timeline and poker state after shot\n        await Promise.all([fetchTimelineEvents(), fetchPokerState()]);\n        \n      } else {\n        throw new Error(data.message || 'Unknown error occurred');\n      }\n      \n    } catch (error) {\n      console.error(\"Error playing next shot:\", error);\n      \n      let errorMessage = \"Error playing shot: \";\n      if (error.message.includes(\"Backend error: 500\")) {\n        errorMessage += \"Server error - please try again\";\n      } else if (error.message.includes(\"fetch\")) {\n        errorMessage += \"Network error - check your connection\";\n      } else {\n        errorMessage += error.message;\n      }\n      \n      addFeedback(`❌ ${errorMessage}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const resetSimulation = () => {\n    setGameState(null);\n    endGame();  // Use endGame directly instead of setIsGameActive\n    clearFeedback();\n    setHoleDecisions({\n      action: null,\n      requested_partner: null,\n      offer_double: false,\n      accept_double: false\n    });\n    setMockStep(0);\n  };\n  \n  if (!isGameActive) {\n    return (\n      <GameSetup\n        humanPlayer={humanPlayer}\n        setHumanPlayer={setHumanPlayer}\n        computerPlayers={computerPlayers}\n        setComputerPlayers={setComputerPlayers}\n        selectedCourse={selectedCourse}\n        setSelectedCourse={setSelectedCourse}\n        courses={courses}\n        setCourses={setCourses}\n        personalities={personalities}\n        setPersonalities={setPersonalities}\n        suggestedOpponents={suggestedOpponents}\n        setSuggestedOpponents={setSuggestedOpponents}\n        onStartGame={startSimulation}\n      />\n    );\n  }\n\n  // Choose interface based on mode preference\n  if (useTurnBasedMode && turnBasedState) {\n    return (\n      <TurnBasedInterface\n        gameState={{\n          ...gameState,\n          ...(turnBasedState.turn_based_state || turnBasedState),\n          interactionNeeded,\n          hasNextShot,\n          feedback\n        }}\n        onMakeDecision={makeDecision}\n        interactionNeeded={interactionNeeded}\n        feedback={feedback}\n        shotState={shotState}\n        onNextShot={playNextShot}\n        hasNextShot={hasNextShot}\n      />\n    );\n  }\n  \n  // Use Enhanced Simulation Layout with Timeline and Poker Betting\n  const useEnhancedLayout = true; // TODO: Make this a user preference\n\n  if (useEnhancedLayout) {\n    return (\n      <EnhancedSimulationLayout\n        gameState={gameState}\n        shotState={shotState}\n        probabilities={shotProbabilities}\n        onDecision={makeDecision}\n        onPlayNextShot={playNextShot}\n        timelineEvents={timelineEvents}\n        timelineLoading={timelineLoading}\n        pokerState={pokerState}\n        bettingOptions={bettingOptions}\n        onBettingAction={handleBettingAction}\n        currentPlayer=\"human\"\n        interactionNeeded={interactionNeeded}\n        hasNextShot={hasNextShot}\n        feedback={feedback}\n      />\n    );\n  }\n\n  return (\n    <GamePlay\n      gameState={gameState}\n      onEndSimulation={resetSimulation}\n      interactionNeeded={interactionNeeded}\n      onMakeDecision={makeDecision}\n      feedback={feedback}\n      shotState={shotState}\n      shotProbabilities={shotProbabilities}\n      onNextShot={playNextShot}\n      hasNextShot={hasNextShot}\n    />\n  );\n}\n\nexport default SimulationMode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./frontend/node_modules/.cache/babel-loader/008baf6aa87224b96458de9fb6500e8e87f7671fb8e5df9c039370782ccf18c8.json:1:{"ast":null,"code":"import{GhinClient}from'ghin';class GHINService{constructor(){this.client=null;this.initialized=false;}/**\n   * Initialize GHIN client with credentials\n   * @param {string} username - GHIN username\n   * @param {string} password - GHIN password\n   */async initialize(username,password){try{this.client=new GhinClient(username,password);await this.client.login();this.initialized=true;if(process.env.NODE_ENV!=='production'){console.debug('GHIN client initialized successfully');}return true;}catch(error){console.error('Failed to initialize GHIN client:',error);this.initialized=false;return false;}}/**\n   * Check if GHIN service is initialized and authenticated\n   */isInitialized(){return this.initialized&&this.client;}/**\n   * Get golfer information by GHIN ID\n   * @param {string} ghinId - GHIN ID of the golfer\n   */async getGolferInfo(ghinId){if(!this.isInitialized()){throw new Error('GHIN service not initialized. Please login first.');}try{const golferInfo=await this.client.getGolfer(ghinId);return{ghinId:golferInfo.ghinId||ghinId,name:golferInfo.name,handicapIndex:golferInfo.handicapIndex,club:golferInfo.club,lastUpdated:golferInfo.lastUpdated,recentScores:golferInfo.recentScores||[]};}catch(error){console.error(`Failed to get golfer info for GHIN ID ${ghinId}:`,error);throw error;}}/**\n   * Get recent scores for a golfer\n   * @param {string} ghinId - GHIN ID of the golfer\n   * @param {number} limit - Number of recent scores to fetch (default: 20)\n   */async getRecentScores(ghinId){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;if(!this.isInitialized()){throw new Error('GHIN service not initialized. Please login first.');}try{const scores=await this.client.getScores(ghinId,limit);return scores.map(score=>({date:score.date,course:score.course,tees:score.tees,score:score.score,courseRating:score.courseRating,slopeRating:score.slopeRating,differential:score.differential,posted:score.posted}));}catch(error){console.error(`Failed to get recent scores for GHIN ID ${ghinId}:`,error);throw error;}}/**\n   * Get handicap index for a golfer\n   * @param {string} ghinId - GHIN ID of the golfer\n   */async getHandicapIndex(ghinId){if(!this.isInitialized()){throw new Error('GHIN service not initialized. Please login first.');}try{const golferInfo=await this.getGolferInfo(ghinId);return{ghinId:ghinId,handicapIndex:golferInfo.handicapIndex,lastUpdated:golferInfo.lastUpdated};}catch(error){console.error(`Failed to get handicap index for GHIN ID ${ghinId}:`,error);throw error;}}/**\n   * Get multiple golfers' information in batch\n   * @param {string[]} ghinIds - Array of GHIN IDs\n   */async getBatchGolferInfo(ghinIds){if(!this.isInitialized()){throw new Error('GHIN service not initialized. Please login first.');}const results=[];const errors=[];for(const ghinId of ghinIds){try{const golferInfo=await this.getGolferInfo(ghinId);results.push(golferInfo);}catch(error){errors.push({ghinId,error:error.message});console.warn(`Failed to fetch data for GHIN ID ${ghinId}:`,error.message);}}return{success:results,errors:errors,totalRequested:ghinIds.length,totalSuccess:results.length,totalErrors:errors.length};}/**\n   * Search for golfers by name (if supported by the API)\n   * @param {string} name - Name to search for\n   */async searchGolfers(name){if(!this.isInitialized()){throw new Error('GHIN service not initialized. Please login first.');}try{// Note: This method might not be available in all versions of the GHIN API\nconst results=await this.client.searchGolfers(name);return results.map(golfer=>({ghinId:golfer.ghinId,name:golfer.name,club:golfer.club,handicapIndex:golfer.handicapIndex}));}catch(error){console.error(`Failed to search for golfers named ${name}:`,error);throw error;}}/**\n   * Post a score for a golfer (if supported)\n   * @param {string} ghinId - GHIN ID of the golfer\n   * @param {Object} scoreData - Score information\n   */async postScore(ghinId,scoreData){if(!this.isInitialized()){throw new Error('GHIN service not initialized. Please login first.');}try{const result=await this.client.postScore(ghinId,{date:scoreData.date,course:scoreData.course,tees:scoreData.tees,score:scoreData.score,courseRating:scoreData.courseRating,slopeRating:scoreData.slopeRating});return result;}catch(error){console.error(`Failed to post score for GHIN ID ${ghinId}:`,error);throw error;}}/**\n   * Logout and cleanup\n   */async logout(){if(this.client){try{await this.client.logout();}catch(error){console.warn('Error during logout:',error);}this.client=null;this.initialized=false;}}}// Create singleton instance\nconst ghinService=new GHINService();// Helper function to initialize with environment variables or stored credentials\nexport const initializeGHIN=async(username,password)=>{if(!username||!password){// Try to get from environment variables\nusername=process.env.REACT_APP_GHIN_USERNAME;password=process.env.REACT_APP_GHIN_PASSWORD;}if(!username||!password){console.warn('GHIN credentials not provided. GHIN integration will be disabled.');return false;}return await ghinService.initialize(username,password);};export default ghinService;","map":{"version":3,"names":["GhinClient","GHINService","constructor","client","initialized","initialize","username","password","login","process","env","NODE_ENV","console","debug","error","isInitialized","getGolferInfo","ghinId","Error","golferInfo","getGolfer","name","handicapIndex","club","lastUpdated","recentScores","getRecentScores","limit","arguments","length","undefined","scores","getScores","map","score","date","course","tees","courseRating","slopeRating","differential","posted","getHandicapIndex","getBatchGolferInfo","ghinIds","results","errors","push","message","warn","success","totalRequested","totalSuccess","totalErrors","searchGolfers","golfer","postScore","scoreData","result","logout","ghinService","initializeGHIN","REACT_APP_GHIN_USERNAME","REACT_APP_GHIN_PASSWORD"],"sources":["/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/services/ghinService.js"],"sourcesContent":["import { GhinClient } from 'ghin';\n\nclass GHINService {\n  constructor() {\n    this.client = null;\n    this.initialized = false;\n  }\n\n  /**\n   * Initialize GHIN client with credentials\n   * @param {string} username - GHIN username\n   * @param {string} password - GHIN password\n   */\n  async initialize(username, password) {\n    try {\n      this.client = new GhinClient(username, password);\n      await this.client.login();\n      this.initialized = true;\n      if (process.env.NODE_ENV !== 'production') {\n        console.debug('GHIN client initialized successfully');\n      }\n      return true;\n    } catch (error) {\n      console.error('Failed to initialize GHIN client:', error);\n      this.initialized = false;\n      return false;\n    }\n  }\n\n  /**\n   * Check if GHIN service is initialized and authenticated\n   */\n  isInitialized() {\n    return this.initialized && this.client;\n  }\n\n  /**\n   * Get golfer information by GHIN ID\n   * @param {string} ghinId - GHIN ID of the golfer\n   */\n  async getGolferInfo(ghinId) {\n    if (!this.isInitialized()) {\n      throw new Error('GHIN service not initialized. Please login first.');\n    }\n\n    try {\n      const golferInfo = await this.client.getGolfer(ghinId);\n      return {\n        ghinId: golferInfo.ghinId || ghinId,\n        name: golferInfo.name,\n        handicapIndex: golferInfo.handicapIndex,\n        club: golferInfo.club,\n        lastUpdated: golferInfo.lastUpdated,\n        recentScores: golferInfo.recentScores || []\n      };\n    } catch (error) {\n      console.error(`Failed to get golfer info for GHIN ID ${ghinId}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get recent scores for a golfer\n   * @param {string} ghinId - GHIN ID of the golfer\n   * @param {number} limit - Number of recent scores to fetch (default: 20)\n   */\n  async getRecentScores(ghinId, limit = 20) {\n    if (!this.isInitialized()) {\n      throw new Error('GHIN service not initialized. Please login first.');\n    }\n\n    try {\n      const scores = await this.client.getScores(ghinId, limit);\n      return scores.map(score => ({\n        date: score.date,\n        course: score.course,\n        tees: score.tees,\n        score: score.score,\n        courseRating: score.courseRating,\n        slopeRating: score.slopeRating,\n        differential: score.differential,\n        posted: score.posted\n      }));\n    } catch (error) {\n      console.error(`Failed to get recent scores for GHIN ID ${ghinId}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get handicap index for a golfer\n   * @param {string} ghinId - GHIN ID of the golfer\n   */\n  async getHandicapIndex(ghinId) {\n    if (!this.isInitialized()) {\n      throw new Error('GHIN service not initialized. Please login first.');\n    }\n\n    try {\n      const golferInfo = await this.getGolferInfo(ghinId);\n      return {\n        ghinId: ghinId,\n        handicapIndex: golferInfo.handicapIndex,\n        lastUpdated: golferInfo.lastUpdated\n      };\n    } catch (error) {\n      console.error(`Failed to get handicap index for GHIN ID ${ghinId}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get multiple golfers' information in batch\n   * @param {string[]} ghinIds - Array of GHIN IDs\n   */\n  async getBatchGolferInfo(ghinIds) {\n    if (!this.isInitialized()) {\n      throw new Error('GHIN service not initialized. Please login first.');\n    }\n\n    const results = [];\n    const errors = [];\n\n    for (const ghinId of ghinIds) {\n      try {\n        const golferInfo = await this.getGolferInfo(ghinId);\n        results.push(golferInfo);\n      } catch (error) {\n        errors.push({ ghinId, error: error.message });\n        console.warn(`Failed to fetch data for GHIN ID ${ghinId}:`, error.message);\n      }\n    }\n\n    return {\n      success: results,\n      errors: errors,\n      totalRequested: ghinIds.length,\n      totalSuccess: results.length,\n      totalErrors: errors.length\n    };\n  }\n\n  /**\n   * Search for golfers by name (if supported by the API)\n   * @param {string} name - Name to search for\n   */\n  async searchGolfers(name) {\n    if (!this.isInitialized()) {\n      throw new Error('GHIN service not initialized. Please login first.');\n    }\n\n    try {\n      // Note: This method might not be available in all versions of the GHIN API\n      const results = await this.client.searchGolfers(name);\n      return results.map(golfer => ({\n        ghinId: golfer.ghinId,\n        name: golfer.name,\n        club: golfer.club,\n        handicapIndex: golfer.handicapIndex\n      }));\n    } catch (error) {\n      console.error(`Failed to search for golfers named ${name}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Post a score for a golfer (if supported)\n   * @param {string} ghinId - GHIN ID of the golfer\n   * @param {Object} scoreData - Score information\n   */\n  async postScore(ghinId, scoreData) {\n    if (!this.isInitialized()) {\n      throw new Error('GHIN service not initialized. Please login first.');\n    }\n\n    try {\n      const result = await this.client.postScore(ghinId, {\n        date: scoreData.date,\n        course: scoreData.course,\n        tees: scoreData.tees,\n        score: scoreData.score,\n        courseRating: scoreData.courseRating,\n        slopeRating: scoreData.slopeRating\n      });\n      return result;\n    } catch (error) {\n      console.error(`Failed to post score for GHIN ID ${ghinId}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Logout and cleanup\n   */\n  async logout() {\n    if (this.client) {\n      try {\n        await this.client.logout();\n      } catch (error) {\n        console.warn('Error during logout:', error);\n      }\n      this.client = null;\n      this.initialized = false;\n    }\n  }\n}\n\n// Create singleton instance\nconst ghinService = new GHINService();\n\n// Helper function to initialize with environment variables or stored credentials\nexport const initializeGHIN = async (username, password) => {\n  if (!username || !password) {\n    // Try to get from environment variables\n    username = process.env.REACT_APP_GHIN_USERNAME;\n    password = process.env.REACT_APP_GHIN_PASSWORD;\n  }\n\n  if (!username || !password) {\n    console.warn('GHIN credentials not provided. GHIN integration will be disabled.');\n    return false;\n  }\n\n  return await ghinService.initialize(username, password);\n};\n\nexport default ghinService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
./frontend/coverage/clover.xml:750:      <file name="GHINIntegration.js" path="/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/GHINIntegration.js">
./frontend/coverage/lcov.info:2075:SF:src/components/GHINIntegration.js
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:979:import ghinService, { initializeGHIN } from '../services/ghinService';
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1041:  const fetchGHINData = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (players) =&gt; {</span>
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1050:      const playersWithMockGHINIds = <span class="cstat-no" title="statement not covered" >players.map(<span class="fstat-no" title="function not covered" >pl</span>ayer =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1052:        ghinId: `GHIN${player.player_name.replace(/\s/g, '').toUpperCase()}`
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1056:        playersWithMockGHINIds.map(<span class="fstat-no" title="function not covered" >p </span>=&gt; <span class="cstat-no" title="statement not covered" >p.ghinId)</span>
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1060:        const player = <span class="cstat-no" title="statement not covered" >playersWithMockGHINIds.find(<span class="fstat-no" title="function not covered" >p </span>=&gt; <span class="cstat-no" title="statement not covered" >p.ghinId === ghinInfo.ghinId)</span>;</span>
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1073:<span class="cstat-no" title="statement not covered" >        console.debug(`Fetched GHIN data for ${Object.keys(ghinDataMap).length} players`);</span>
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1077:<span class="cstat-no" title="statement not covered" >      console.error('Error fetching GHIN data:', error);</span>
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1089:      // Always use GHIN-enhanced leaderboard (shows stored handicap data even if GHIN API is offline)
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1134:          // GHIN data (if available from enhanced endpoint)
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1144:      // Fetch GHIN data if available
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1146:<span class="cstat-no" title="statement not covered" >        fetchGHINData(leaderboard);</span>
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1154:  }, [fetchGHINData, ghinEnabled, processLeaderboardData]);
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1158:      const ghinInitialized = <span class="cstat-no" title="statement not covered" >await initializeGHIN();</span>
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1162:<span class="cstat-no" title="statement not covered" >          console.debug('GHIN service initialized successfully');</span>
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1164:<span class="cstat-no" title="statement not covered" >          console.debug('GHIN service not available - continuing without GHIN integration');</span>
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1168:<span class="cstat-no" title="statement not covered" >      console.error('Failed to initialize GHIN service:', error);</span>
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1233:                &lt;span className="text-xs text-blue-600"&gt;🏌️ GHIN Integration Active&lt;/span&gt;
./frontend/coverage/lcov-report/src/components/WGPAnalyticsDashboard.js.html:1276:                          &lt;span className="ml-2 text-xs text-green-500" title="GHIN data available"&gt;⚡&lt;/span&gt;
./frontend/coverage/lcov-report/src/components/index.html:217:	<td class="file low" data-value="GHINIntegration.js"><a href="GHINIntegration.js.html">GHINIntegration.js</a></td>
./frontend/coverage/lcov-report/src/components/simulation/GameSetup.tsx.html:1199:  // GHIN lookup modal state
./frontend/coverage/lcov-report/src/components/simulation/GameSetup.tsx.html:1429:            Lookup GHIN Handicap
./frontend/coverage/lcov-report/src/components/simulation/GameSetup.tsx.html:1434:              &lt;h4&gt;GHIN Handicap Lookup&lt;/h4&gt;
./frontend/coverage/lcov-report/src/components/simulation/GameSetup.tsx.html:1537:                Lookup GHIN Handicap
./frontend/coverage/lcov-report/src/components/simulation/GameSetup.tsx.html:1542:                  &lt;h4&gt;GHIN Handicap Lookup&lt;/h4&gt;
./frontend/coverage/lcov-report/src/components/simulation/SimulationMode.js.html:2001:  // GHIN lookup functionality removed - was not being used in current UI
./frontend/coverage/lcov-report/src/components/simulation/SimulationMode.js.html:2003:  // GHIN lookup functions removed - functionality not currently exposed in UI
./frontend/coverage/lcov-report/src/components/simulation/SimulationMode.js.html:2291:      // GHIN lookup state reset removed - functionality not currently used
./frontend/coverage/lcov-report/src/components/game/GameSetupForm.js.html:1071:  // GHIN lookup state
./frontend/coverage/lcov-report/src/components/game/GameSetupForm.js.html:1168:  // GHIN lookup handlers
./frontend/coverage/lcov-report/src/components/game/GameSetupForm.js.html:1429:              {/* GHIN Lookup UI */}
./frontend/coverage/lcov-report/src/components/game/GameSetupForm.js.html:1433:                {ghinLoading?.[player.id] ? 'Searching...' : 'GHIN Lookup'}
./frontend/coverage/lcov-report/src/components/game/GameSetupForm.js.html:1442:                    &lt;strong&gt;{golfer.name}&lt;/strong&gt; (GHIN: {golfer.ghin})&lt;br /&gt;
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:6:    <title>Code coverage report for src/components/GHINIntegration.js</title>
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:22:        <h1><a href="../../index.html">All files</a> / <a href="index.html">src/components</a> GHINIntegration.js</h1>
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:773:const GHINIntegration = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:787:<span class="cstat-no" title="statement not covered" >    checkGHINStatus();</span>
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:803:  const checkGHINStatus = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:811:<span class="cstat-no" title="statement not covered" >      console.error('Error checking GHIN status:', error);</span>
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:827:  const addGHINId = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:829:<span class="cstat-no" title="statement not covered" >      setMessage('Please select a player and enter a GHIN ID');</span>
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:850:<span class="cstat-no" title="statement not covered" >        setMessage(`✅ Added GHIN ID ${ghinId} to ${player.name}`);</span>
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:943:        🏌️ GHIN Integration
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:946:      {/* GHIN Status Card */}
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:948:        &lt;h3 style={{ color: theme.colors.primary }}&gt;GHIN Service Status&lt;/h3&gt;
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:961:          &lt;p&gt;Loading GHIN status...&lt;/p&gt;
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:965:      {/* Add GHIN ID Card */}
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:967:        &lt;h3 style={{ color: theme.colors.primary }}&gt;Add GHIN ID to Player&lt;/h3&gt;
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:981:                  {player.name} {player.ghin_id ? `(GHIN: ${player.ghin_id})` : '(No GHIN ID)'}
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:988:              GHIN ID:
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:999:            onClick={addGHINId}
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:1003:            {loading ? 'Adding...' : 'Add GHIN ID'}
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:1043:        &lt;h3 style={{ color: theme.colors.primary }}&gt;GHIN-Enhanced Leaderboard&lt;/h3&gt;
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:1051:                  &lt;th style={{ padding: '12px', textAlign: 'left' }}&gt;GHIN&lt;/th&gt;
./frontend/coverage/lcov-report/src/components/GHINIntegration.js.html:1119:export default GHINIntegration;</pre></td></tr></table></pre>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:524:class GHINService {
./frontend/coverage/lcov-report/src/services/ghinService.js.html:531:   * Initialize GHIN client with credentials
./frontend/coverage/lcov-report/src/services/ghinService.js.html:532:   * @param {string} username - GHIN username
./frontend/coverage/lcov-report/src/services/ghinService.js.html:533:   * @param {string} password - GHIN password
./frontend/coverage/lcov-report/src/services/ghinService.js.html:541:<span class="cstat-no" title="statement not covered" >        console.debug('GHIN client initialized successfully');</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:545:<span class="cstat-no" title="statement not covered" >      console.error('Failed to initialize GHIN client:', error);</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:552:   * Check if GHIN service is initialized and authenticated
./frontend/coverage/lcov-report/src/services/ghinService.js.html:559:   * Get golfer information by GHIN ID
./frontend/coverage/lcov-report/src/services/ghinService.js.html:560:   * @param {string} ghinId - GHIN ID of the golfer
./frontend/coverage/lcov-report/src/services/ghinService.js.html:564:<span class="cstat-no" title="statement not covered" >      throw new Error('GHIN service not initialized. Please login first.');</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:578:<span class="cstat-no" title="statement not covered" >      console.error(`Failed to get golfer info for GHIN ID ${ghinId}:`, error);</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:585:   * @param {string} ghinId - GHIN ID of the golfer
./frontend/coverage/lcov-report/src/services/ghinService.js.html:590:<span class="cstat-no" title="statement not covered" >      throw new Error('GHIN service not initialized. Please login first.');</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:606:<span class="cstat-no" title="statement not covered" >      console.error(`Failed to get recent scores for GHIN ID ${ghinId}:`, error);</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:613:   * @param {string} ghinId - GHIN ID of the golfer
./frontend/coverage/lcov-report/src/services/ghinService.js.html:617:<span class="cstat-no" title="statement not covered" >      throw new Error('GHIN service not initialized. Please login first.');</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:628:<span class="cstat-no" title="statement not covered" >      console.error(`Failed to get handicap index for GHIN ID ${ghinId}:`, error);</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:635:   * @param {string[]} ghinIds - Array of GHIN IDs
./frontend/coverage/lcov-report/src/services/ghinService.js.html:639:<span class="cstat-no" title="statement not covered" >      throw new Error('GHIN service not initialized. Please login first.');</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:651:<span class="cstat-no" title="statement not covered" >        console.warn(`Failed to fetch data for GHIN ID ${ghinId}:`, error.message);</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:670:<span class="cstat-no" title="statement not covered" >      throw new Error('GHIN service not initialized. Please login first.');</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:674:      // Note: This method might not be available in all versions of the GHIN API
./frontend/coverage/lcov-report/src/services/ghinService.js.html:690:   * @param {string} ghinId - GHIN ID of the golfer
./frontend/coverage/lcov-report/src/services/ghinService.js.html:695:<span class="cstat-no" title="statement not covered" >      throw new Error('GHIN service not initialized. Please login first.');</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:709:<span class="cstat-no" title="statement not covered" >      console.error(`Failed to post score for GHIN ID ${ghinId}:`, error);</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:731:const ghinService = <span class="cstat-no" title="statement not covered" >new GHINService();</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:734:export const initializeGHIN = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (username, password) =&gt; {</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:737:<span class="cstat-no" title="statement not covered" >    username = process.env.REACT_APP_GHIN_USERNAME;</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:738:<span class="cstat-no" title="statement not covered" >    password = process.env.REACT_APP_GHIN_PASSWORD;</span>
./frontend/coverage/lcov-report/src/services/ghinService.js.html:742:<span class="cstat-no" title="statement not covered" >    console.warn('GHIN credentials not provided. GHIN integration will be disabled.');</span>
./frontend/coverage/coverage-final.json:12:,"/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/GHINIntegration.js": {"path":"/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/GHINIntegration.js","statementMap":{"0":{"start":{"line":4,"column":16},"end":{"line":4,"column":51}},"1":{"start":{"line":6,"column":24},"end":{"line":350,"column":1}},"2":{"start":{"line":7,"column":16},"end":{"line":7,"column":26}},"3":{"start":{"line":8,"column":32},"end":{"line":8,"column":44}},"4":{"start":{"line":9,"column":46},"end":{"line":9,"column":58}},"5":{"start":{"line":10,"column":30},"end":{"line":10,"column":42}},"6":{"start":{"line":11,"column":32},"end":{"line":11,"column":47}},"7":{"start":{"line":12,"column":32},"end":{"line":12,"column":44}},"8":{"start":{"line":13,"column":40},"end":{"line":13,"column":52}},"9":{"start":{"line":14,"column":38},"end":{"line":14,"column":52}},"10":{"start":{"line":15,"column":40},"end":{"line":15,"column":52}},"11":{"start":{"line":18,"column":2},"end":{"line":22,"column":9}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":22}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":30}},"15":{"start":{"line":24,"column":22},"end":{"line":34,"column":3}},"16":{"start":{"line":25,"column":4},"end":{"line":33,"column":5}},"17":{"start":{"line":26,"column":23},"end":{"line":26,"column":56}},"18":{"start":{"line":27,"column":6},"end":{"line":30,"column":7}},"19":{"start":{"line":28,"column":21},"end":{"line":28,"column":42}},"20":{"start":{"line":29,"column":8},"end":{"line":29,"column":47}},"21":{"start":{"line":29,"column":36},"end":{"line":29,"column":44}},"22":{"start":{"line":32,"column":6},"end":{"line":32,"column":53}},"23":{"start":{"line":36,"column":26},"end":{"line":46,"column":3}},"24":{"start":{"line":37,"column":4},"end":{"line":45,"column":5}},"25":{"start":{"line":38,"column":23},"end":{"line":38,"column":64}},"26":{"start":{"line":39,"column":6},"end":{"line":42,"column":7}},"27":{"start":{"line":40,"column":21},"end":{"line":40,"column":42}},"28":{"start":{"line":41,"column":8},"end":{"line":41,"column":28}},"29":{"start":{"line":44,"column":6},"end":{"line":44,"column":58}},"30":{"start":{"line":48,"column":34},"end":{"line":58,"column":3}},"31":{"start":{"line":49,"column":4},"end":{"line":57,"column":5}},"32":{"start":{"line":50,"column":23},"end":{"line":50,"column":74}},"33":{"start":{"line":51,"column":6},"end":{"line":54,"column":7}},"34":{"start":{"line":52,"column":21},"end":{"line":52,"column":42}},"35":{"start":{"line":53,"column":8},"end":{"line":53,"column":42}},"36":{"start":{"line":56,"column":6},"end":{"line":56,"column":66}},"37":{"start":{"line":60,"column":20},"end":{"line":98,"column":3}},"38":{"start":{"line":61,"column":4},"end":{"line":65,"column":5}},"39":{"start":{"line":62,"column":6},"end":{"line":62,"column":63}},"40":{"start":{"line":63,"column":6},"end":{"line":63,"column":30}},"41":{"start":{"line":64,"column":6},"end":{"line":64,"column":13}},"42":{"start":{"line":67,"column":4},"end":{"line":97,"column":5}},"43":{"start":{"line":68,"column":6},"end":{"line":68,"column":23}},"44":{"start":{"line":69,"column":21},"end":{"line":69,"column":74}},"45":{"start":{"line":69,"column":39},"end":{"line":69,"column":73}},"46":{"start":{"line":71,"column":23},"end":{"line":80,"column":8}},"47":{"start":{"line":82,"column":6},"end":{"line":91,"column":7}},"48":{"start":{"line":83,"column":8},"end":{"line":83,"column":66}},"49":{"start":{"line":84,"column":8},"end":{"line":84,"column":34}},"50":{"start":{"line":85,"column":8},"end":{"line":85,"column":22}},"51":{"start":{"line":86,"column":8},"end":{"line":86,"column":30}},"52":{"start":{"line":87,"column":8},"end":{"line":87,"column":22}},"53":{"start":{"line":89,"column":26},"end":{"line":89,"column":47}},"54":{"start":{"line":90,"column":8},"end":{"line":90,"column":71}},"55":{"start":{"line":93,"column":6},"end":{"line":93,"column":46}},"56":{"start":{"line":94,"column":6},"end":{"line":94,"column":30}},"57":{"start":{"line":96,"column":6},"end":{"line":96,"column":24}},"58":{"start":{"line":100,"column":29},"end":{"line":122,"column":3}},"59":{"start":{"line":101,"column":4},"end":{"line":121,"column":5}},"60":{"start":{"line":102,"column":6},"end":{"line":102,"column":23}},"61":{"start":{"line":103,"column":23},"end":{"line":105,"column":8}},"62":{"start":{"line":107,"column":6},"end":{"line":115,"column":7}},"63":{"start":{"line":108,"column":21},"end":{"line":108,"column":42}},"64":{"start":{"line":109,"column":8},"end":{"line":109,"column":88}},"65":{"start":{"line":110,"column":8},"end":{"line":110,"column":34}},"66":{"start":{"line":111,"column":8},"end":{"line":111,"column":34}},"67":{"start":{"line":113,"column":26},"end":{"line":113,"column":47}},"68":{"start":{"line":114,"column":8},"end":{"line":114,"column":71}},"69":{"start":{"line":117,"column":6},"end":{"line":117,"column":52}},"70":{"start":{"line":118,"column":6},"end":{"line":118,"column":30}},"71":{"start":{"line":120,"column":6},"end":{"line":120,"column":24}},"72":{"start":{"line":124,"column":27},"end":{"line":146,"column":3}},"73":{"start":{"line":125,"column":4},"end":{"line":145,"column":5}},"74":{"start":{"line":126,"column":6},"end":{"line":126,"column":23}},"75":{"start":{"line":127,"column":23},"end":{"line":129,"column":8}},"76":{"start":{"line":131,"column":6},"end":{"line":139,"column":7}},"77":{"start":{"line":132,"column":21},"end":{"line":132,"column":42}},"78":{"start":{"line":133,"column":8},"end":{"line":133,"column":79}},"79":{"start":{"line":134,"column":8},"end":{"line":134,"column":34}},"80":{"start":{"line":135,"column":8},"end":{"line":135,"column":34}},"81":{"start":{"line":137,"column":26},"end":{"line":137,"column":47}},"82":{"start":{"line":138,"column":8},"end":{"line":138,"column":72}},"83":{"start":{"line":141,"column":6},"end":{"line":141,"column":57}},"84":{"start":{"line":142,"column":6},"end":{"line":142,"column":30}},"85":{"start":{"line":144,"column":6},"end":{"line":144,"column":24}},"86":{"start":{"line":148,"column":20},"end":{"line":151,"column":3}},"87":{"start":{"line":153,"column":22},"end":{"line":157,"column":3}},"88":{"start":{"line":159,"column":21},"end":{"line":166,"column":3}},"89":{"start":{"line":168,"column":22},"end":{"line":171,"column":3}},"90":{"start":{"line":173,"column":2},"end":{"line":349,"column":4}},"91":{"start":{"line":208,"column":31},"end":{"line":208,"column":64}},"92":{"start":{"line":213,"column":16},"end":{"line":215,"column":25}},"93":{"start":{"line":226,"column":31},"end":{"line":226,"column":56}},"94":{"start":{"line":294,"column":18},"end":{"line":339,"column":23}},"95":{"start":{"line":326,"column":41},"end":{"line":326,"column":90}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":24},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":30},"end":{"line":350,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":12},"end":{"line":18,"column":13}},"loc":{"start":{"line":18,"column":18},"end":{"line":22,"column":3}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":22},"end":{"line":24,"column":23}},"loc":{"start":{"line":24,"column":34},"end":{"line":34,"column":3}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":31},"end":{"line":29,"column":32}},"loc":{"start":{"line":29,"column":36},"end":{"line":29,"column":44}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":26},"end":{"line":36,"column":27}},"loc":{"start":{"line":36,"column":38},"end":{"line":46,"column":3}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":48,"column":34},"end":{"line":48,"column":35}},"loc":{"start":{"line":48,"column":46},"end":{"line":58,"column":3}},"line":48},"6":{"name":"(anonymous_6)","decl":{"start":{"line":60,"column":20},"end":{"line":60,"column":21}},"loc":{"start":{"line":60,"column":32},"end":{"line":98,"column":3}},"line":60},"7":{"name":"(anonymous_7)","decl":{"start":{"line":69,"column":34},"end":{"line":69,"column":35}},"loc":{"start":{"line":69,"column":39},"end":{"line":69,"column":73}},"line":69},"8":{"name":"(anonymous_8)","decl":{"start":{"line":100,"column":29},"end":{"line":100,"column":30}},"loc":{"start":{"line":100,"column":49},"end":{"line":122,"column":3}},"line":100},"9":{"name":"(anonymous_9)","decl":{"start":{"line":124,"column":27},"end":{"line":124,"column":28}},"loc":{"start":{"line":124,"column":39},"end":{"line":146,"column":3}},"line":124},"10":{"name":"(anonymous_10)","decl":{"start":{"line":208,"column":24},"end":{"line":208,"column":25}},"loc":{"start":{"line":208,"column":31},"end":{"line":208,"column":64}},"line":208},"11":{"name":"(anonymous_11)","decl":{"start":{"line":212,"column":27},"end":{"line":212,"column":28}},"loc":{"start":{"line":213,"column":16},"end":{"line":215,"column":25}},"line":213},"12":{"name":"(anonymous_12)","decl":{"start":{"line":226,"column":24},"end":{"line":226,"column":25}},"loc":{"start":{"line":226,"column":31},"end":{"line":226,"column":56}},"line":226},"13":{"name":"(anonymous_13)","decl":{"start":{"line":293,"column":33},"end":{"line":293,"column":34}},"loc":{"start":{"line":294,"column":18},"end":{"line":339,"column":23}},"line":294},"14":{"name":"(anonymous_14)","decl":{"start":{"line":326,"column":35},"end":{"line":326,"column":36}},"loc":{"start":{"line":326,"column":41},"end":{"line":326,"column":90}},"line":326}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":51}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":45}},{"start":{"line":4,"column":49},"end":{"line":4,"column":51}}],"line":4},"1":{"loc":{"start":{"line":27,"column":6},"end":{"line":30,"column":7}},"type":"if","locations":[{"start":{"line":27,"column":6},"end":{"line":30,"column":7}},{"start":{},"end":{}}],"line":27},"2":{"loc":{"start":{"line":39,"column":6},"end":{"line":42,"column":7}},"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":42,"column":7}},{"start":{},"end":{}}],"line":39},"3":{"loc":{"start":{"line":51,"column":6},"end":{"line":54,"column":7}},"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":54,"column":7}},{"start":{},"end":{}}],"line":51},"4":{"loc":{"start":{"line":61,"column":4},"end":{"line":65,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":65,"column":5}},{"start":{},"end":{}}],"line":61},"5":{"loc":{"start":{"line":61,"column":8},"end":{"line":61,"column":34}},"type":"binary-expr","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":23}},{"start":{"line":61,"column":27},"end":{"line":61,"column":34}}],"line":61},"6":{"loc":{"start":{"line":82,"column":6},"end":{"line":91,"column":7}},"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":91,"column":7}},{"start":{"line":88,"column":13},"end":{"line":91,"column":7}}],"line":82},"7":{"loc":{"start":{"line":90,"column":24},"end":{"line":90,"column":69}},"type":"binary-expr","locations":[{"start":{"line":90,"column":24},"end":{"line":90,"column":40}},{"start":{"line":90,"column":44},"end":{"line":90,"column":69}}],"line":90},"8":{"loc":{"start":{"line":107,"column":6},"end":{"line":115,"column":7}},"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":115,"column":7}},{"start":{"line":112,"column":13},"end":{"line":115,"column":7}}],"line":107},"9":{"loc":{"start":{"line":114,"column":24},"end":{"line":114,"column":69}},"type":"binary-expr","locations":[{"start":{"line":114,"column":24},"end":{"line":114,"column":40}},{"start":{"line":114,"column":44},"end":{"line":114,"column":69}}],"line":114},"10":{"loc":{"start":{"line":131,"column":6},"end":{"line":139,"column":7}},"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":139,"column":7}},{"start":{"line":136,"column":13},"end":{"line":139,"column":7}}],"line":131},"11":{"loc":{"start":{"line":138,"column":24},"end":{"line":138,"column":70}},"type":"binary-expr","locations":[{"start":{"line":138,"column":24},"end":{"line":138,"column":40}},{"start":{"line":138,"column":44},"end":{"line":138,"column":70}}],"line":138},"12":{"loc":{"start":{"line":182,"column":9},"end":{"line":195,"column":9}},"type":"cond-expr","locations":[{"start":{"line":183,"column":10},"end":{"line":192,"column":16}},{"start":{"line":194,"column":10},"end":{"line":194,"column":39}}],"line":182},"13":{"loc":{"start":{"line":185,"column":46},"end":{"line":185,"column":87}},"type":"cond-expr","locations":[{"start":{"line":185,"column":71},"end":{"line":185,"column":78}},{"start":{"line":185,"column":81},"end":{"line":185,"column":87}}],"line":185},"14":{"loc":{"start":{"line":187,"column":13},"end":{"line":191,"column":13}},"type":"binary-expr","locations":[{"start":{"line":187,"column":13},"end":{"line":187,"column":29}},{"start":{"line":188,"column":14},"end":{"line":190,"column":18}}],"line":187},"15":{"loc":{"start":{"line":214,"column":33},"end":{"line":214,"column":94}},"type":"cond-expr","locations":[{"start":{"line":214,"column":50},"end":{"line":214,"column":77}},{"start":{"line":214,"column":80},"end":{"line":214,"column":94}}],"line":214},"16":{"loc":{"start":{"line":233,"column":22},"end":{"line":233,"column":59}},"type":"binary-expr","locations":[{"start":{"line":233,"column":22},"end":{"line":233,"column":29}},{"start":{"line":233,"column":33},"end":{"line":233,"column":48}},{"start":{"line":233,"column":52},"end":{"line":233,"column":59}}],"line":233},"17":{"loc":{"start":{"line":236,"column":13},"end":{"line":236,"column":50}},"type":"cond-expr","locations":[{"start":{"line":236,"column":23},"end":{"line":236,"column":34}},{"start":{"line":236,"column":37},"end":{"line":236,"column":50}}],"line":236},"18":{"loc":{"start":{"line":250,"column":13},"end":{"line":250,"column":58}},"type":"cond-expr","locations":[{"start":{"line":250,"column":23},"end":{"line":250,"column":35}},{"start":{"line":250,"column":38},"end":{"line":250,"column":58}}],"line":250},"19":{"loc":{"start":{"line":263,"column":7},"end":{"line":272,"column":7}},"type":"binary-expr","locations":[{"start":{"line":263,"column":7},"end":{"line":263,"column":14}},{"start":{"line":264,"column":8},"end":{"line":271,"column":14}}],"line":263},"20":{"loc":{"start":{"line":266,"column":27},"end":{"line":266,"column":100}},"type":"cond-expr","locations":[{"start":{"line":266,"column":55},"end":{"line":266,"column":77}},{"start":{"line":266,"column":80},"end":{"line":266,"column":100}}],"line":266},"21":{"loc":{"start":{"line":267,"column":17},"end":{"line":267,"column":86}},"type":"cond-expr","locations":[{"start":{"line":267,"column":45},"end":{"line":267,"column":65}},{"start":{"line":267,"column":68},"end":{"line":267,"column":86}}],"line":267},"22":{"loc":{"start":{"line":268,"column":31},"end":{"line":268,"column":100}},"type":"cond-expr","locations":[{"start":{"line":268,"column":59},"end":{"line":268,"column":79}},{"start":{"line":268,"column":82},"end":{"line":268,"column":100}}],"line":268},"23":{"loc":{"start":{"line":277,"column":9},"end":{"line":346,"column":9}},"type":"cond-expr","locations":[{"start":{"line":278,"column":10},"end":{"line":343,"column":16}},{"start":{"line":345,"column":10},"end":{"line":345,"column":39}}],"line":277},"24":{"loc":{"start":{"line":298,"column":23},"end":{"line":298,"column":47}},"type":"binary-expr","locations":[{"start":{"line":298,"column":23},"end":{"line":298,"column":37}},{"start":{"line":298,"column":41},"end":{"line":298,"column":47}}],"line":298},"25":{"loc":{"start":{"line":301,"column":23},"end":{"line":301,"column":75}},"type":"cond-expr","locations":[{"start":{"line":301,"column":41},"end":{"line":301,"column":67}},{"start":{"line":301,"column":70},"end":{"line":301,"column":75}}],"line":301},"26":{"loc":{"start":{"line":302,"column":23},"end":{"line":306,"column":23}},"type":"binary-expr","locations":[{"start":{"line":302,"column":23},"end":{"line":302,"column":47}},{"start":{"line":303,"column":24},"end":{"line":305,"column":30}}],"line":302},"27":{"loc":{"start":{"line":308,"column":54},"end":{"line":308,"column":97}},"type":"binary-expr","locations":[{"start":{"line":308,"column":54},"end":{"line":308,"column":87}},{"start":{"line":308,"column":91},"end":{"line":308,"column":97}}],"line":308},"28":{"loc":{"start":{"line":309,"column":53},"end":{"line":309,"column":93}},"type":"binary-expr","locations":[{"start":{"line":309,"column":53},"end":{"line":309,"column":86}},{"start":{"line":309,"column":90},"end":{"line":309,"column":93}}],"line":309},"29":{"loc":{"start":{"line":315,"column":41},"end":{"line":317,"column":93}},"type":"cond-expr","locations":[{"start":{"line":315,"column":78},"end":{"line":315,"column":87}},{"start":{"line":316,"column":40},"end":{"line":317,"column":93}}],"line":315},"30":{"loc":{"start":{"line":316,"column":40},"end":{"line":317,"column":93}},"type":"cond-expr","locations":[{"start":{"line":316,"column":72},"end":{"line":316,"column":81}},{"start":{"line":317,"column":40},"end":{"line":317,"column":93}}],"line":316},"31":{"loc":{"start":{"line":317,"column":40},"end":{"line":317,"column":93}},"type":"cond-expr","locations":[{"start":{"line":317,"column":72},"end":{"line":317,"column":81}},{"start":{"line":317,"column":84},"end":{"line":317,"column":93}}],"line":317},"32":{"loc":{"start":{"line":318,"column":31},"end":{"line":318,"column":84}},"type":"cond-expr","locations":[{"start":{"line":318,"column":63},"end":{"line":318,"column":72}},{"start":{"line":318,"column":75},"end":{"line":318,"column":84}}],"line":318},"33":{"loc":{"start":{"line":320,"column":25},"end":{"line":320,"column":52}},"type":"binary-expr","locations":[{"start":{"line":320,"column":25},"end":{"line":320,"column":43}},{"start":{"line":320,"column":47},"end":{"line":320,"column":52}}],"line":320},"34":{"loc":{"start":{"line":324,"column":23},"end":{"line":337,"column":23}},"type":"binary-expr","locations":[{"start":{"line":324,"column":23},"end":{"line":324,"column":37}},{"start":{"line":325,"column":24},"end":{"line":336,"column":33}}],"line":324},"35":{"loc":{"start":{"line":326,"column":60},"end":{"line":326,"column":89}},"type":"binary-expr","locations":[{"start":{"line":326,"column":60},"end":{"line":326,"column":76}},{"start":{"line":326,"column":80},"end":{"line":326,"column":89}}],"line":326}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]}}
./frontend/src/components/GHINIntegration.js:6:const GHINIntegration = () => {
./frontend/src/components/GHINIntegration.js:20:    checkGHINStatus();
./frontend/src/components/GHINIntegration.js:36:  const checkGHINStatus = async () => {
./frontend/src/components/GHINIntegration.js:44:      console.error('Error checking GHIN status:', error);
./frontend/src/components/GHINIntegration.js:60:  const addGHINId = async () => {
./frontend/src/components/GHINIntegration.js:62:      setMessage('Please select a player and enter a GHIN ID');
./frontend/src/components/GHINIntegration.js:83:        setMessage(`✅ Added GHIN ID ${ghinId} to ${player.name}`);
./frontend/src/components/GHINIntegration.js:176:        🏌️ GHIN Integration
./frontend/src/components/GHINIntegration.js:179:      {/* GHIN Status Card */}
./frontend/src/components/GHINIntegration.js:181:        <h3 style={{ color: theme.colors.primary }}>GHIN Service Status</h3>
./frontend/src/components/GHINIntegration.js:194:          <p>Loading GHIN status...</p>
./frontend/src/components/GHINIntegration.js:198:      {/* Add GHIN ID Card */}
./frontend/src/components/GHINIntegration.js:200:        <h3 style={{ color: theme.colors.primary }}>Add GHIN ID to Player</h3>
./frontend/src/components/GHINIntegration.js:214:                  {player.name} {player.ghin_id ? `(GHIN: ${player.ghin_id})` : '(No GHIN ID)'}
./frontend/src/components/GHINIntegration.js:221:              GHIN ID:
./frontend/src/components/GHINIntegration.js:232:            onClick={addGHINId}
./frontend/src/components/GHINIntegration.js:236:            {loading ? 'Adding...' : 'Add GHIN ID'}
./frontend/src/components/GHINIntegration.js:276:        <h3 style={{ color: theme.colors.primary }}>GHIN-Enhanced Leaderboard</h3>
./frontend/src/components/GHINIntegration.js:284:                  <th style={{ padding: '12px', textAlign: 'left' }}>GHIN</th>
./frontend/src/components/GHINIntegration.js:352:export default GHINIntegration;
./frontend/src/components/simulation/GameSetup.tsx:80:  // GHIN lookup modal state
./frontend/src/components/simulation/GameSetup.tsx:310:            Lookup GHIN Handicap
./frontend/src/components/simulation/GameSetup.tsx:315:              <h4>GHIN Handicap Lookup</h4>
./frontend/src/components/simulation/GameSetup.tsx:418:                Lookup GHIN Handicap
./frontend/src/components/simulation/GameSetup.tsx:423:                  <h4>GHIN Handicap Lookup</h4>
./frontend/src/components/simulation/SimulationMode.js:88:  // GHIN lookup functionality removed - was not being used in current UI
./frontend/src/components/simulation/SimulationMode.js:90:  // GHIN lookup functions removed - functionality not currently exposed in UI
./frontend/src/components/simulation/SimulationMode.js:378:      // GHIN lookup state reset removed - functionality not currently used
./frontend/src/components/game/GameSetupForm.js:78:  // GHIN lookup state
./frontend/src/components/game/GameSetupForm.js:175:  // GHIN lookup handlers
./frontend/src/components/game/GameSetupForm.js:436:              {/* GHIN Lookup UI */}
./frontend/src/components/game/GameSetupForm.js:440:                {ghinLoading?.[player.id] ? 'Searching...' : 'GHIN Lookup'}
./frontend/src/components/game/GameSetupForm.js:449:                    <strong>{golfer.name}</strong> (GHIN: {golfer.ghin})<br />
./frontend/src/components/WGPAnalyticsDashboard.js:2:import ghinService, { initializeGHIN } from '../services/ghinService';
./frontend/src/components/WGPAnalyticsDashboard.js:64:  const fetchGHINData = useCallback(async (players) => {
./frontend/src/components/WGPAnalyticsDashboard.js:73:      const playersWithMockGHINIds = players.map(player => ({
./frontend/src/components/WGPAnalyticsDashboard.js:75:        ghinId: `GHIN${player.player_name.replace(/\s/g, '').toUpperCase()}`
./frontend/src/components/WGPAnalyticsDashboard.js:79:        playersWithMockGHINIds.map(p => p.ghinId)
./frontend/src/components/WGPAnalyticsDashboard.js:83:        const player = playersWithMockGHINIds.find(p => p.ghinId === ghinInfo.ghinId);
./frontend/src/components/WGPAnalyticsDashboard.js:96:        console.debug(`Fetched GHIN data for ${Object.keys(ghinDataMap).length} players`);
./frontend/src/components/WGPAnalyticsDashboard.js:100:      console.error('Error fetching GHIN data:', error);
./frontend/src/components/WGPAnalyticsDashboard.js:112:      // Always use GHIN-enhanced leaderboard (shows stored handicap data even if GHIN API is offline)
./frontend/src/components/WGPAnalyticsDashboard.js:157:          // GHIN data (if available from enhanced endpoint)
./frontend/src/components/WGPAnalyticsDashboard.js:167:      // Fetch GHIN data if available
./frontend/src/components/WGPAnalyticsDashboard.js:169:        fetchGHINData(leaderboard);
./frontend/src/components/WGPAnalyticsDashboard.js:177:  }, [fetchGHINData, ghinEnabled, processLeaderboardData]);
./frontend/src/components/WGPAnalyticsDashboard.js:181:      const ghinInitialized = await initializeGHIN();
./frontend/src/components/WGPAnalyticsDashboard.js:185:          console.debug('GHIN service initialized successfully');
./frontend/src/components/WGPAnalyticsDashboard.js:187:          console.debug('GHIN service not available - continuing without GHIN integration');
./frontend/src/components/WGPAnalyticsDashboard.js:191:      console.error('Failed to initialize GHIN service:', error);
./frontend/src/components/WGPAnalyticsDashboard.js:256:                <span className="text-xs text-blue-600">🏌️ GHIN Integration Active</span>
./frontend/src/components/WGPAnalyticsDashboard.js:299:                          <span className="ml-2 text-xs text-green-500" title="GHIN data available">⚡</span>
./frontend/src/services/ghinService.js:3:class GHINService {
./frontend/src/services/ghinService.js:10:   * Initialize GHIN client with credentials
./frontend/src/services/ghinService.js:11:   * @param {string} username - GHIN username
./frontend/src/services/ghinService.js:12:   * @param {string} password - GHIN password
./frontend/src/services/ghinService.js:20:        console.debug('GHIN client initialized successfully');
./frontend/src/services/ghinService.js:24:      console.error('Failed to initialize GHIN client:', error);
./frontend/src/services/ghinService.js:31:   * Check if GHIN service is initialized and authenticated
./frontend/src/services/ghinService.js:38:   * Get golfer information by GHIN ID
./frontend/src/services/ghinService.js:39:   * @param {string} ghinId - GHIN ID of the golfer
./frontend/src/services/ghinService.js:43:      throw new Error('GHIN service not initialized. Please login first.');
./frontend/src/services/ghinService.js:57:      console.error(`Failed to get golfer info for GHIN ID ${ghinId}:`, error);
./frontend/src/services/ghinService.js:64:   * @param {string} ghinId - GHIN ID of the golfer
./frontend/src/services/ghinService.js:69:      throw new Error('GHIN service not initialized. Please login first.');
./frontend/src/services/ghinService.js:85:      console.error(`Failed to get recent scores for GHIN ID ${ghinId}:`, error);
./frontend/src/services/ghinService.js:92:   * @param {string} ghinId - GHIN ID of the golfer
./frontend/src/services/ghinService.js:96:      throw new Error('GHIN service not initialized. Please login first.');
./frontend/src/services/ghinService.js:107:      console.error(`Failed to get handicap index for GHIN ID ${ghinId}:`, error);
./frontend/src/services/ghinService.js:114:   * @param {string[]} ghinIds - Array of GHIN IDs
./frontend/src/services/ghinService.js:118:      throw new Error('GHIN service not initialized. Please login first.');
./frontend/src/services/ghinService.js:130:        console.warn(`Failed to fetch data for GHIN ID ${ghinId}:`, error.message);
./frontend/src/services/ghinService.js:149:      throw new Error('GHIN service not initialized. Please login first.');
./frontend/src/services/ghinService.js:153:      // Note: This method might not be available in all versions of the GHIN API
./frontend/src/services/ghinService.js:169:   * @param {string} ghinId - GHIN ID of the golfer
./frontend/src/services/ghinService.js:174:      throw new Error('GHIN service not initialized. Please login first.');
./frontend/src/services/ghinService.js:188:      console.error(`Failed to post score for GHIN ID ${ghinId}:`, error);
./frontend/src/services/ghinService.js:210:const ghinService = new GHINService();
./frontend/src/services/ghinService.js:213:export const initializeGHIN = async (username, password) => {
./frontend/src/services/ghinService.js:216:    username = process.env.REACT_APP_GHIN_USERNAME;
./frontend/src/services/ghinService.js:217:    password = process.env.REACT_APP_GHIN_PASSWORD;
./frontend/src/services/ghinService.js:221:    console.warn('GHIN credentials not provided. GHIN integration will be disabled.');
./config/render.yaml:34:      - key: GHIN_API_USER
./config/render.yaml:36:      - key: GHIN_API_PASS
./config/render.yaml:38:      - key: GHIN_API_STATIC_TOKEN
./config/.env.production.template:19:ENABLE_GHIN_INTEGRATION=false
./tests/backend/test_ghin_local.py:3:Test script to show GHIN diagnostic results locally
./tests/backend/test_ghin_local.py:10:    """Test the GHIN diagnostic function directly"""
./tests/backend/test_ghin_local.py:11:    print("🔍 GHIN Diagnostic Test")
./tests/backend/test_ghin_local.py:36:        print("❌ GHIN credentials not set")
./tests/backend/test_ghin_local.py:37:        print("💡 To fix: Set GHIN_API_USER and GHIN_API_PASS environment variables")
./tests/backend/test_ghin_local.py:39:        print("✅ GHIN integration working!")
Binary file ./tests/backend/__pycache__/test_api_simple.cpython-313-pytest-8.4.1.pyc matches
Binary file ./tests/backend/__pycache__/test_api.cpython-313-pytest-8.4.1.pyc matches
Binary file ./tests/backend/__pycache__/test_ghin_local.cpython-313-pytest-8.4.1.pyc matches
Binary file ./tests/backend/__pycache__/test_api_working.cpython-313-pytest-8.4.1.pyc matches
./tests/backend/test_api_simple.py:54:        """Test GHIN diagnostic endpoint"""
./tests/backend/test_api_working.py:56:        """Test GHIN diagnostic endpoint"""
./tests/backend/test_api.py:19:    """Test the GHIN diagnostic endpoint"""
./tests/backend/test_api.py:22:    print(f"GHIN diagnostic status: {response.status_code}")
./tests/backend/test_api.py:23:    print(f"GHIN diagnostic response: {response.json()}")
./tests/backend/test_api.py:49:    print(f"✅ GHIN routes: {len(ghin_routes)}")
./tests/backend/test_api.py:63:        # Test GHIN diagnostic
./tests/backend/test_api.py:69:        print(f"  GHIN Diagnostic: {'✅ PASS' if ghin_ok else '❌ FAIL'}")
./.claude/deployment-instructions.md:124:GHIN_API_USER=""
./.claude/deployment-instructions.md:125:GHIN_API_PASS=""
./.claude/deployment-instructions.md:126:GHIN_API_STATIC_TOKEN=""
./backend/ghin_test.py:24:            print(f"Found player to sync: {player_to_sync['name']} (ID: {player_id}, GHIN ID: {player_to_sync['ghin_id']})")
./backend/app/models.py:59:    ghin_id = Column(String, nullable=True, unique=True, index=True)  # GHIN ID for handicap lookup
./backend/app/models.py:60:    ghin_last_updated = Column(String, nullable=True)  # When GHIN data was last synced
./backend/app/models.py:202:# GHIN Integration Models
./backend/app/models.py:203:class GHINScore(Base):
./backend/app/models.py:207:    ghin_id = Column(String, index=True)  # GHIN ID
./backend/app/models.py:217:    synced_at = Column(String)  # When this score was synced from GHIN
./backend/app/models.py:221:class GHINHandicapHistory(Base):
./backend/app/models.py:225:    ghin_id = Column(String, index=True)  # GHIN ID
./backend/app/models.py:230:    synced_at = Column(String)  # When this record was synced from GHIN
Binary file ./backend/app/__pycache__/main.cpython-313.pyc matches
Binary file ./backend/app/__pycache__/main.cpython-312.pyc matches
Binary file ./backend/app/__pycache__/models.cpython-312.pyc matches
Binary file ./backend/app/__pycache__/models.cpython-313.pyc matches
Binary file ./backend/app/__pycache__/course_import.cpython-313.pyc matches
Binary file ./backend/app/__pycache__/course_import.cpython-312.pyc matches
./backend/app/course_import.py:5:from various external sources including USGA, GHIN, and other golf course databases.
./backend/app/course_import.py:49:            "ghin_api_key": os.getenv("GHIN_API_KEY", ""),
./backend/app/course_import.py:121:        """Search GHIN course database"""
./backend/app/course_import.py:123:            # GHIN course search endpoint
./backend/app/course_import.py:143:            logger.error(f"GHIN search failed: {e}")
./backend/app/course_import.py:251:        """Parse GHIN course data format"""
./backend/app/course_import.py:276:            source="GHIN",
./backend/app/main.py:858:# GHIN Integration Endpoints
./backend/app/main.py:867:    """Look up golfers by name using GHIN API"""
./backend/app/main.py:869:        from .services.ghin_service import GHINService
./backend/app/main.py:871:        # Get GHIN credentials from environment
./backend/app/main.py:872:        email = os.getenv("GHIN_API_USER")
./backend/app/main.py:873:        password = os.getenv("GHIN_API_PASS")
./backend/app/main.py:874:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./backend/app/main.py:877:            raise HTTPException(status_code=500, detail="GHIN credentials not configured in environment variables.")
./backend/app/main.py:879:        ghin_service = GHINService(db)
./backend/app/main.py:881:            raise HTTPException(status_code=500, detail="GHIN service not available. Check credentials and logs.")
./backend/app/main.py:887:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./backend/app/main.py:888:        raise HTTPException(status_code=e.response.status_code, detail=f"GHIN API error: {e.response.status_code} - {e.response.text}")
./backend/app/main.py:890:        logger.error(f"Error in GHIN lookup: {e}")
./backend/app/main.py:898:    """Sync a specific player's handicap from GHIN."""
./backend/app/main.py:899:    from .services.ghin_service import GHINService
./backend/app/main.py:901:    logger.info(f"Attempting to sync GHIN handicap for player ID: {player_id}")
./backend/app/main.py:902:    ghin_service = GHINService(db)
./backend/app/main.py:904:        raise HTTPException(status_code=500, detail="GHIN service not available. Check credentials and logs.")
./backend/app/main.py:913:        raise HTTPException(status_code=500, detail=f"Failed to sync handicap for player {player_id}. Check if player has a GHIN ID and logs for details.")
./backend/app/main.py:916:    """Diagnostic endpoint for GHIN API configuration"""
./backend/app/main.py:917:    email = os.getenv("GHIN_API_USER")
./backend/app/main.py:918:    password = os.getenv("GHIN_API_PASS")
./backend/app/main.py:919:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./backend/app/main.py:2979:    """Get leaderboard enhanced with GHIN handicap data."""
./backend/app/main.py:2982:        from .services.ghin_service import GHINService
./backend/app/main.py:2984:        ghin_service = GHINService(db)
./backend/app/main.py:2986:        # Try to initialize GHIN service for fresh data, but continue with stored data if unavailable
./backend/app/main.py:2990:            logger.warning(f"GHIN service unavailable, using stored handicap data: {e}")
./backend/app/main.py:2992:        # Always get enhanced leaderboard with stored GHIN data (even if service is offline)
./backend/app/main.py:2998:        logger.error(f"Error getting GHIN enhanced leaderboard: {e}")
./backend/app/main.py:2999:        raise HTTPException(status_code=500, detail=f"Failed to get GHIN enhanced leaderboard: {str(e)}")
./backend/app/main.py:3005:    """Sync handicaps for all players with GHIN IDs."""
./backend/app/main.py:3008:        from .services.ghin_service import GHINService
./backend/app/main.py:3010:        ghin_service = GHINService(db)
./backend/app/main.py:3015:            raise HTTPException(status_code=503, detail="GHIN service not available. Check configuration.")
./backend/app/main.py:3021:            "message": "GHIN handicap sync completed",
./backend/app/main.py:3026:        logger.error(f"Error syncing GHIN handicaps: {e}")
./backend/app/main.py:3027:        raise HTTPException(status_code=500, detail=f"Failed to sync GHIN handicaps: {str(e)}")
./backend/app/main.py:3473:        # Track GHIN data for response payload
./backend/app/main.py:3528:                # Try to fetch GHIN data if player has GHIN ID
./backend/app/main.py:3532:                        from .services.ghin_service import GHINService
./backend/app/main.py:3533:                        ghin_service = GHINService(db)
./backend/app/main.py:3535:                        # Check if GHIN service is available
./backend/app/main.py:3539:                                # Update handicap from GHIN
./backend/app/main.py:3541:                                logger.info(f"Updated GHIN data for {player_name}: handicap={ghin_data.get('handicap_index')}")
./backend/app/main.py:3543:                            # Fall back to stored GHIN data
./backend/app/main.py:3546:                                logger.info(f"Using stored GHIN data for {player_name}")
./backend/app/main.py:3548:                        logger.warning(f"Failed to fetch GHIN data for {player_name}: {ghin_error}")
./backend/app/main.py:3550:                # Store GHIN data for response payload
./backend/app/main.py:3579:            "ghin_data": ghin_data_collection,  # GHIN scores and handicap data
./backend/app/services/ghin_service.py:2:GHIN Service for integrating with Golf Handicap Information Network
./backend/app/services/ghin_service.py:5:- Syncing player handicaps from GHIN
./backend/app/services/ghin_service.py:7:- Updating local database with GHIN data
./backend/app/services/ghin_service.py:8:- Joining GHIN data with existing player statistics
./backend/app/services/ghin_service.py:18:from ..models import PlayerProfile, PlayerStatistics, GHINScore, GHINHandicapHistory
./backend/app/services/ghin_service.py:21:# Note: The actual GHIN API integration would require proper authentication
./backend/app/services/ghin_service.py:23:# when the official GHIN API access is available
./backend/app/services/ghin_service.py:27:class GHINService:
./backend/app/services/ghin_service.py:28:    """Service class for GHIN integration operations."""
./backend/app/services/ghin_service.py:33:        self.ghin_username = os.getenv('GHIN_USERNAME')
./backend/app/services/ghin_service.py:34:        self.ghin_password = os.getenv('GHIN_PASSWORD')
./backend/app/services/ghin_service.py:36:        self.GHIN_API_BASE_URL = "https://api2.ghin.com/api/v1"
./backend/app/services/ghin_service.py:39:        """Initialize GHIN service with authentication."""
./backend/app/services/ghin_service.py:42:                logger.warning("GHIN credentials not configured. GHIN integration disabled.")
./backend/app/services/ghin_service.py:45:            GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./backend/app/services/ghin_service.py:48:                auth_response = await client.post(GHIN_AUTH_URL, json={
./backend/app/services/ghin_service.py:50:                    "source": "GHINcom"
./backend/app/services/ghin_service.py:59:                    logger.info("GHIN service initialized successfully and authenticated")
./backend/app/services/ghin_service.py:62:                    logger.error("GHIN authentication failed: No JWT token received.")
./backend/app/services/ghin_service.py:67:            logger.error(f"Failed to initialize GHIN service: {e}")
./backend/app/services/ghin_service.py:72:        """Check if GHIN service is available and initialized."""
./backend/app/services/ghin_service.py:77:        Sync a single player's handicap from GHIN.
./backend/app/services/ghin_service.py:88:                logger.warning(f"Player {player_id} has no GHIN ID configured")
./backend/app/services/ghin_service.py:92:                logger.error("GHIN service is not initialized or available.")
./backend/app/services/ghin_service.py:95:            # Use the actual GHIN API call
./backend/app/services/ghin_service.py:104:                handicap_history = GHINHandicapHistory(
./backend/app/services/ghin_service.py:129:        Sync a player's recent scores from GHIN.
./backend/app/services/ghin_service.py:141:                logger.warning(f"Player {player_id} has no GHIN ID configured")
./backend/app/services/ghin_service.py:145:                logger.error("GHIN service is not initialized or available.")
./backend/app/services/ghin_service.py:148:            # Use the actual GHIN API call
./backend/app/services/ghin_service.py:154:                existing_score = self.db.query(GHINScore).filter(
./backend/app/services/ghin_service.py:156:                        GHINScore.player_profile_id == player_id,
./backend/app/services/ghin_service.py:157:                        GHINScore.ghin_id == player.ghin_id,
./backend/app/services/ghin_service.py:158:                        GHINScore.score_date == score_data.get('date'),
./backend/app/services/ghin_service.py:159:                        GHINScore.course_name == score_data.get('course')
./backend/app/services/ghin_service.py:165:                    ghin_score = GHINScore(
./backend/app/services/ghin_service.py:198:        Sync handicaps for all players who have GHIN IDs.
./backend/app/services/ghin_service.py:212:                logger.info("No players with GHIN IDs found for sync")
./backend/app/services/ghin_service.py:244:        """Search for golfers by name using the GHIN API."""
./backend/app/services/ghin_service.py:246:            raise ConnectionError("GHIN service is not initialized or available.")
./backend/app/services/ghin_service.py:249:        url = f"{self.GHIN_API_BASE_URL}/golfer_search"
./backend/app/services/ghin_service.py:268:        Get comprehensive GHIN data for a player from local database.
./backend/app/services/ghin_service.py:274:            Dict with GHIN data or None if not found
./backend/app/services/ghin_service.py:282:            recent_scores = self.db.query(GHINScore).filter(
./backend/app/services/ghin_service.py:283:                GHINScore.player_profile_id == player_id
./backend/app/services/ghin_service.py:284:            ).order_by(desc(GHINScore.score_date)).limit(20).all()
./backend/app/services/ghin_service.py:287:            handicap_history = self.db.query(GHINHandicapHistory).filter(
./backend/app/services/ghin_service.py:288:                GHINHandicapHistory.player_profile_id == player_id
./backend/app/services/ghin_service.py:289:            ).order_by(desc(GHINHandicapHistory.effective_date)).limit(10).all()
./backend/app/services/ghin_service.py:317:            logger.error(f"Failed to get GHIN data for player {player_id}: {e}")
./backend/app/services/ghin_service.py:322:        Get leaderboard data enhanced with GHIN information.
./backend/app/services/ghin_service.py:323:        Uses stored handicap data even if GHIN API is unavailable.
./backend/app/services/ghin_service.py:329:            List of player records with GHIN data integrated
./backend/app/services/ghin_service.py:347:                # Always try to get stored GHIN data, regardless of API availability
./backend/app/services/ghin_service.py:352:                # Calculate recent form from stored GHIN scores if available
./backend/app/services/ghin_service.py:410:    # GHIN API Integration - Now supports real API calls
./backend/app/services/ghin_service.py:413:        """Fetch handicap from GHIN API."""
./backend/app/services/ghin_service.py:414:        logger.info(f"Fetching handicap for GHIN ID {ghin_id}")
./backend/app/services/ghin_service.py:417:            # Use environment-based GHIN integration
./backend/app/services/ghin_service.py:418:            if not os.getenv("ENABLE_GHIN_INTEGRATION", "false").lower() == "true":
./backend/app/services/ghin_service.py:419:                logger.info("GHIN integration disabled, using mock data")
./backend/app/services/ghin_service.py:423:                logger.error("GHIN JWT token not available")
./backend/app/services/ghin_service.py:427:            url = f"{self.GHIN_API_BASE_URL}/golfers/{ghin_id}/handicap_index"
./backend/app/services/ghin_service.py:434:                logger.info(f"Successfully fetched GHIN data for {ghin_id}")
./backend/app/services/ghin_service.py:444:            logger.warning(f"GHIN API call failed for {ghin_id}: {e}")
./backend/app/services/ghin_service.py:449:        # Generate consistent mock data based on GHIN ID
./backend/app/services/ghin_service.py:471:        """Fetch scores from GHIN API."""
./backend/app/services/ghin_service.py:472:        logger.info(f"Fetching scores for GHIN ID {ghin_id} ({days_back} days)")
./backend/app/services/ghin_service.py:475:        url = f"{self.GHIN_API_BASE_URL}/golfers/{ghin_id}/scores?days_back={days_back}"
Binary file ./backend/app/services/__pycache__/ghin_service.cpython-313.pyc matches
Binary file ./backend/app/services/__pycache__/ghin_service.cpython-312.pyc matches
Binary file ./backend/__pycache__/ghin_test.cpython-312-pytest-8.4.2.pyc matches
Binary file ./backend/__pycache__/ghin_test.cpython-313-pytest-8.4.1.pyc matches
Binary file ./backend/__pycache__/test_ghin_integration.cpython-313-pytest-8.4.1.pyc matches
Binary file ./backend/__pycache__/test_ghin_integration.cpython-312-pytest-8.4.2.pyc matches
./backend/.env:1:GHIN_USERNAME=stuagano@gmail.com
./backend/.env:2:GHIN_PASSWORD=i88$G@@7Ydpt@BD
./backend/.env:3:GHIN_API_STATIC_TOKEN=a87e6830e4128c8cf2570c30cd88e268e0bbfd1f8f96e7e2630c9e96e7ab6e14
./backend/test_ghin_integration.py:3:Test GHIN integration to verify API connection and handicap syncing
./backend/test_ghin_integration.py:14:from app.services.ghin_service import GHINService
./backend/test_ghin_integration.py:24:    """Test GHIN API connection and authentication"""
./backend/test_ghin_integration.py:27:        # Initialize GHIN service
./backend/test_ghin_integration.py:28:        ghin_service = GHINService(db)
./backend/test_ghin_integration.py:29:        logger.info("Initializing GHIN service...")
./backend/test_ghin_integration.py:35:            logger.info("✅ GHIN service initialized successfully!")
./backend/test_ghin_integration.py:47:                    logger.info(f"   First result: {first_golfer.get('first_name')} {first_golfer.get('last_name')} - GHIN: {first_golfer.get('ghin')}")
./backend/test_ghin_integration.py:51:            # Try to sync a player's handicap (if any exist with GHIN ID)
./backend/test_ghin_integration.py:52:            logger.info("\nLooking for players with GHIN IDs...")
./backend/test_ghin_integration.py:58:                logger.info(f"Found player with GHIN ID: {player_with_ghin.name} ({player_with_ghin.ghin_id})")
./backend/test_ghin_integration.py:70:                logger.info("No players with GHIN IDs found in database")
./backend/test_ghin_integration.py:72:                # Add a test GHIN ID to a player for testing
./backend/test_ghin_integration.py:78:                    logger.info(f"\nWould you like to add a GHIN ID to {test_player.name}?")
./backend/test_ghin_integration.py:79:                    logger.info("You can update the player's GHIN ID in the database for testing")
./backend/test_ghin_integration.py:82:            logger.error("❌ GHIN service initialization failed!")
./backend/test_ghin_integration.py:83:            logger.error("   Check your GHIN_USERNAME and GHIN_PASSWORD in .env file")
./backend/test_ghin_integration.py:94:    """Test looking up a specific GHIN ID"""
./backend/test_ghin_integration.py:97:        ghin_service = GHINService(db)
./backend/test_ghin_integration.py:100:            logger.info(f"Looking up GHIN ID: {ghin_id}")
./backend/test_ghin_integration.py:110:                logger.warning(f"⚠️ No handicap data found for GHIN ID: {ghin_id}")
./backend/test_ghin_integration.py:120:    logger.info("GHIN Integration Test")
./backend/test_ghin_integration.py:124:    if not os.getenv('GHIN_USERNAME'):
./backend/test_ghin_integration.py:125:        logger.error("❌ GHIN_USERNAME not set in environment")
./backend/test_ghin_integration.py:128:    if not os.getenv('GHIN_PASSWORD'):
./backend/test_ghin_integration.py:129:        logger.error("❌ GHIN_PASSWORD not set in environment")
./backend/test_ghin_integration.py:132:    logger.info(f"GHIN Username: {os.getenv('GHIN_USERNAME')}")
./backend/test_ghin_integration.py:137:    # Optionally test a specific GHIN ID
./backend/.env.example:41:# GHIN API credentials (optional - for player handicap lookup)
./backend/.env.example:42:GHIN_API_USER=
./backend/.env.example:43:GHIN_API_PASS=
./backend/.env.example:44:GHIN_API_STATIC_TOKEN=ghincom
./docs/prd.md:418:- Real GHIN handicap integration
./docs/architecture.md:192:GET /ghin/lookup               # GHIN golfer lookup
./docs/architecture.md:193:GET /ghin/diagnostic           # GHIN API diagnostic
./docs/architecture.md:457:GHIN_API_USER=<optional>
./docs/architecture.md:458:GHIN_API_PASS=<optional>
./docs/architecture.md:459:GHIN_API_STATIC_TOKEN=<optional>
./docs/status/current-state.md:21:| Third-party integrations | ⚠️ Auth0, GHIN, and email services require secrets supplied via environment variables before production use. |
./docs/DEPLOYMENT.md:57:- `GHIN_API_USER`: (Optional) Your GHIN email
./docs/DEPLOYMENT.md:58:- `GHIN_API_PASS`: (Optional) Your GHIN password  
./docs/DEPLOYMENT.md:59:- `GHIN_API_STATIC_TOKEN`: (Optional) Static token
./docs/guides/production-setup.md:49:ENABLE_GHIN_INTEGRATION=false  # Set to true if GHIN configured
./docs/guides/production-setup.md:108:| **GHIN Integration** | ✅ 90% | Mock data works, real GHIN optional |
./docs/guides/production-setup.md:120:1. **GHIN API Integration** - Optional: Use real handicap data instead of mock
./docs/UNIFIED_ACTION_API.md:350:- `GET /ghin/lookup` - GHIN golfer lookup
./docs/UNIFIED_ACTION_API.md:351:- `GET /ghin/diagnostic` - GHIN API diagnostic
./docs/DEPLOYMENT_CHECKLIST.md:20:GHIN_API_USER=<optional>
./docs/DEPLOYMENT_CHECKLIST.md:21:GHIN_API_PASS=<optional>
./docs/DEPLOYMENT_CHECKLIST.md:22:GHIN_API_STATIC_TOKEN=<optional>
./.cursorrules:11:- **Real GHIN Integration** with JWT authentication
./.cursorrules:172:## 🎯 GHIN Integration
./.cursorrules:174:### Real GHIN API Flow
./.cursorrules:177:auth_response = httpx.post(GHIN_AUTH_URL, json={
./.cursorrules:179:    "token": static_token, "source": "GHINcom"
./.cursorrules:184:search_response = httpx.get(GHIN_SEARCH_URL, 
./.cursorrules:229:GHIN_API_USER=your_email@domain.com
./.cursorrules:230:GHIN_API_PASS=your_password
./.cursorrules:231:GHIN_API_STATIC_TOKEN=optional_token
./.cursorrules:253:5. **GHIN integration** - Real golfer data for authentic experience
./.history/.cursorrules_20250721143951:11:- **Real GHIN Integration** with JWT authentication
./.history/.cursorrules_20250721143951:172:## 🎯 GHIN Integration
./.history/.cursorrules_20250721143951:174:### Real GHIN API Flow
./.history/.cursorrules_20250721143951:177:auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/.cursorrules_20250721143951:179:    "token": static_token, "source": "GHINcom"
./.history/.cursorrules_20250721143951:184:search_response = httpx.get(GHIN_SEARCH_URL, 
./.history/.cursorrules_20250721143951:229:GHIN_API_USER=your_email@domain.com
./.history/.cursorrules_20250721143951:230:GHIN_API_PASS=your_password
./.history/.cursorrules_20250721143951:231:GHIN_API_STATIC_TOKEN=optional_token
./.history/.cursorrules_20250721143951:253:5. **GHIN integration** - Real golfer data for authentic experience
./.history/.cursorrules_20250721143950:11:- **Real GHIN Integration** with JWT authentication
./.history/.cursorrules_20250721143950:172:## 🎯 GHIN Integration
./.history/.cursorrules_20250721143950:174:### Real GHIN API Flow
./.history/.cursorrules_20250721143950:177:auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/.cursorrules_20250721143950:179:    "token": static_token, "source": "GHINcom"
./.history/.cursorrules_20250721143950:184:search_response = httpx.get(GHIN_SEARCH_URL, 
./.history/.cursorrules_20250721143950:229:GHIN_API_USER=your_email@domain.com
./.history/.cursorrules_20250721143950:230:GHIN_API_PASS=your_password
./.history/.cursorrules_20250721143950:231:GHIN_API_STATIC_TOKEN=optional_token
./.history/.cursorrules_20250721143950:253:5. **GHIN integration** - Real golfer data for authentic experience
./.history/UNIFIED_ACTION_API_20250731114138.md:349:- `GET /ghin/lookup` - GHIN golfer lookup
./.history/UNIFIED_ACTION_API_20250731114138.md:350:- `GET /ghin/diagnostic` - GHIN API diagnostic
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221721.md:11:- **GHIN Network**: Golf Handicap and Information Network
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221721.md:39:# GHIN API (optional, basic search works without key)
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221721.md:40:GHIN_API_KEY=your_ghin_api_key_here
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221721.md:81:      "name": "GHIN",
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221721.md:112:  "message": "Course 'Pebble Beach Golf Links' imported successfully from GHIN",
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221721.md:121:    "source": "GHIN",
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221721.md:427:- **GHIN**: Contact GHIN support team
./.history/README_20250724170445.md:311:- **GHIN Integration**: Real golfer handicap lookup and validation
./.history/README_20250724170430.md:311:- **GHIN Integration**: Real golfer handicap lookup and validation
./.history/frontend/src/GameSetupForm_20250726113753.js:60:  // GHIN lookup state
./.history/frontend/src/GameSetupForm_20250726113753.js:77:  // GHIN lookup handlers
./.history/frontend/src/GameSetupForm_20250726113753.js:175:              {/* GHIN Lookup UI */}
./.history/frontend/src/GameSetupForm_20250726113753.js:179:                {ghinLoading?.[player.id] ? 'Searching...' : 'GHIN Lookup'}
./.history/frontend/src/GameSetupForm_20250726113753.js:188:                    <strong>{golfer.name}</strong> (GHIN: {golfer.ghin})<br />
./.history/frontend/src/SimulationMode_20250726113825.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726113825.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726113825.js:602:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113825.js:653:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250724140642.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250724140642.js:96:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250724140642.js:204:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250724140642.js:407:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250724140642.js:487:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250724140642.js:511:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724140642.js:531:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724140642.js:567:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250724140642.js:616:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724140642.js:636:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250722163920.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250722163920.js:246:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250722163920.js:328:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250722163920.js:348:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250722163920.js:411:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250722163920.js:431:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113431.js:82:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250726113431.js:97:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250726113431.js:205:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726113431.js:562:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250726113431.js:642:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113431.js:666:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113431.js:686:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113431.js:722:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113431.js:771:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113431.js:791:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/GameSetupForm_20250726113825.js:60:  // GHIN lookup state
./.history/frontend/src/GameSetupForm_20250726113825.js:77:  // GHIN lookup handlers
./.history/frontend/src/GameSetupForm_20250726113825.js:175:              {/* GHIN Lookup UI */}
./.history/frontend/src/GameSetupForm_20250726113825.js:179:                {ghinLoading?.[player.id] ? 'Searching...' : 'GHIN Lookup'}
./.history/frontend/src/GameSetupForm_20250726113825.js:188:                    <strong>{golfer.name}</strong> (GHIN: {golfer.ghin})<br />
./.history/frontend/src/SimulationMode_20250726154058.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726154058.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726154058.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726154058.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250725193557.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250725193557.js:96:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250725193557.js:204:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250725193557.js:561:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250725193557.js:641:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250725193557.js:665:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250725193557.js:685:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250725193557.js:721:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250725193557.js:770:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250725193557.js:790:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724084138.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250724084138.js:152:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250724084138.js:355:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250724084138.js:437:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724084138.js:457:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724084138.js:520:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724084138.js:540:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250725193827.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250725193827.js:96:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250725193827.js:204:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250725193827.js:561:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250725193827.js:641:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250725193827.js:665:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250725193827.js:685:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250725193827.js:721:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250725193827.js:770:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250725193827.js:790:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721143343.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250721143343.js:219:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250721143343.js:301:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143343.js:321:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721143343.js:384:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143343.js:404:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113524.js:82:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250726113524.js:97:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250726113524.js:205:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726113524.js:562:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250726113524.js:642:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113524.js:666:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113524.js:686:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113524.js:722:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113524.js:771:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113524.js:791:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250725193857.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250725193857.js:96:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250725193857.js:204:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250725193857.js:561:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250725193857.js:641:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250725193857.js:665:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250725193857.js:685:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250725193857.js:721:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250725193857.js:770:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250725193857.js:790:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113616.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726113616.js:199:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726113616.js:556:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250726113616.js:636:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113616.js:660:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113616.js:680:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113616.js:716:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113616.js:765:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113616.js:785:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214912.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723214912.js:584:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723214912.js:666:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214912.js:686:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214912.js:749:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214912.js:769:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723154754.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723154754.js:446:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723154754.js:528:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723154754.js:548:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723154754.js:611:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723154754.js:631:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723154917.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723154917.js:446:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723154917.js:528:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723154917.js:548:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723154917.js:611:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723154917.js:631:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113643.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726113643.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726113643.js:602:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113643.js:626:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113643.js:646:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113643.js:682:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113643.js:731:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113643.js:751:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721143327.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250721143327.js:210:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250721143327.js:292:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143327.js:312:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721143327.js:375:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143327.js:395:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721143342.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250721143342.js:210:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250721143342.js:292:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143342.js:312:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721143342.js:375:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143342.js:395:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214222.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723214222.js:584:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723214222.js:666:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214222.js:686:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214222.js:749:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214222.js:769:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726150354.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726150354.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726150354.js:586:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726150354.js:637:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250722164733.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250722164733.js:426:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250722164733.js:508:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250722164733.js:528:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250722164733.js:591:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250722164733.js:611:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721104720.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250721104720.js:210:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250721104720.js:292:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721104720.js:312:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721104720.js:375:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721104720.js:395:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723154829.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723154829.js:446:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723154829.js:528:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723154829.js:548:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723154829.js:611:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723154829.js:631:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214150.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723214150.js:460:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723214150.js:542:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214150.js:562:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214150.js:625:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214150.js:645:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721141837.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250721141837.js:210:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250721141837.js:292:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721141837.js:312:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721141837.js:375:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721141837.js:395:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726155854.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726155854.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726155854.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726155854.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250721144356.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250721144356.js:240:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250721144356.js:322:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721144356.js:342:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721144356.js:405:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721144356.js:425:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726155435.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726155435.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726155435.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726155435.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250723213635.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723213635.js:455:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723213635.js:537:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723213635.js:557:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723213635.js:620:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723213635.js:640:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/GameSetupForm_20250721104650.js:60:  // GHIN lookup state
./.history/frontend/src/GameSetupForm_20250721104650.js:77:  // GHIN lookup handlers
./.history/frontend/src/GameSetupForm_20250721104650.js:174:              {/* GHIN Lookup UI */}
./.history/frontend/src/GameSetupForm_20250721104650.js:178:                {ghinLoading?.[player.id] ? 'Searching...' : 'GHIN Lookup'}
./.history/frontend/src/GameSetupForm_20250721104650.js:187:                    <strong>{golfer.name}</strong> (GHIN: {golfer.ghin})<br />
./.history/frontend/src/SimulationMode_20250724081834.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250724081834.js:344:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250724081834.js:426:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724081834.js:446:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724081834.js:509:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724081834.js:529:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250722164703.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250722164703.js:246:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250722164703.js:328:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250722164703.js:348:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250722164703.js:411:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250722164703.js:431:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721143328.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250721143328.js:210:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250721143328.js:292:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143328.js:312:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721143328.js:375:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143328.js:395:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726155633.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726155633.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726155633.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726155633.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250722182511.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250722182511.js:446:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250722182511.js:528:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250722182511.js:548:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250722182511.js:611:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250722182511.js:631:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726193801.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726193801.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726193801.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726193801.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250722182500.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250722182500.js:426:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250722182500.js:508:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250722182500.js:528:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250722182500.js:591:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250722182500.js:611:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721141836.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250721141836.js:210:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250721141836.js:292:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721141836.js:312:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721141836.js:375:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721141836.js:395:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721103130.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250721103130.js:210:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250721103130.js:286:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721103130.js:289:                  placeholder="GHIN Name Search"
./.history/frontend/src/SimulationMode_20250721103130.js:298:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721103130.js:361:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721103130.js:364:                    placeholder="GHIN Name Search"
./.history/frontend/src/SimulationMode_20250721103130.js:373:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250725193838.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250725193838.js:96:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250725193838.js:204:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250725193838.js:561:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250725193838.js:641:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250725193838.js:665:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250725193838.js:685:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250725193838.js:721:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250725193838.js:770:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250725193838.js:790:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726155535.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726155535.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726155535.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726155535.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250723213802.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723213802.js:455:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723213802.js:537:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723213802.js:557:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723213802.js:620:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723213802.js:640:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726155521.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726155521.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726155521.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726155521.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250724140649.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250724140649.js:96:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250724140649.js:204:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250724140649.js:407:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250724140649.js:487:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250724140649.js:511:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724140649.js:531:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724140649.js:567:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250724140649.js:616:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724140649.js:636:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724084224.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250724084224.js:152:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250724084224.js:355:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250724084224.js:437:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724084224.js:457:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724084224.js:520:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724084224.js:540:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113251.js:82:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250726113251.js:97:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250726113251.js:205:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726113251.js:562:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250726113251.js:642:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113251.js:666:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113251.js:686:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113251.js:722:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113251.js:771:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113251.js:791:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214117.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723214117.js:455:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723214117.js:537:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214117.js:557:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214117.js:620:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214117.js:640:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214224.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723214224.js:584:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723214224.js:666:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214224.js:686:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214224.js:749:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214224.js:769:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721143617.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250721143617.js:240:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250721143617.js:322:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143617.js:342:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721143617.js:405:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143617.js:425:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726153754.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726153754.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726153754.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726153754.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250724084213.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250724084213.js:152:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250724084213.js:355:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250724084213.js:437:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724084213.js:457:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724084213.js:520:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724084213.js:540:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726155701.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726155701.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726155701.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726155701.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113352.js:82:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250726113352.js:97:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250726113352.js:205:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726113352.js:562:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250726113352.js:642:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113352.js:666:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113352.js:686:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113352.js:722:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113352.js:771:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113352.js:791:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/GameSetupForm_20250721103112.js:60:  // GHIN lookup state
./.history/frontend/src/GameSetupForm_20250721103112.js:77:  // GHIN lookup handlers
./.history/frontend/src/GameSetupForm_20250721103112.js:168:              {/* GHIN Lookup UI */}
./.history/frontend/src/GameSetupForm_20250721103112.js:171:                placeholder="GHIN Name Search"
./.history/frontend/src/GameSetupForm_20250721103112.js:177:                {ghinLoading?.[player.id] ? 'Searching...' : 'GHIN Lookup'}
./.history/frontend/src/GameSetupForm_20250721103112.js:186:                    <strong>{golfer.name}</strong> (GHIN: {golfer.ghin})<br />
./.history/frontend/src/SimulationMode_20250723213616.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723213616.js:446:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723213616.js:528:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723213616.js:548:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723213616.js:611:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723213616.js:631:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214153.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723214153.js:584:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723214153.js:666:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214153.js:686:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214153.js:749:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214153.js:769:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724081943.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250724081943.js:344:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250724081943.js:426:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724081943.js:446:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724081943.js:509:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724081943.js:529:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726153953.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726153953.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726153953.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726153953.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726155604.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726155604.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726155604.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726155604.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250721143647.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250721143647.js:240:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250721143647.js:322:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143647.js:342:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250721143647.js:405:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250721143647.js:425:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726155549.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726155549.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726155549.js:594:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726155549.js:645:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726134256.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726134256.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726134256.js:586:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726134256.js:637:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250723214119.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250723214119.js:460:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250723214119.js:542:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214119.js:562:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250723214119.js:625:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250723214119.js:645:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724140813.js:81:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250724140813.js:96:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250724140813.js:204:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250724140813.js:407:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250724140813.js:487:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250724140813.js:511:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724140813.js:531:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250724140813.js:567:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250724140813.js:616:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250724140813.js:636:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113407.js:82:  // GHIN lookup state for all slots
./.history/frontend/src/SimulationMode_20250726113407.js:97:  // Add GHIN lookup modal/inline UI state
./.history/frontend/src/SimulationMode_20250726113407.js:205:      // Optionally reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726113407.js:562:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250726113407.js:642:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113407.js:666:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113407.js:686:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113407.js:722:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113407.js:771:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113407.js:791:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726133902.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726133902.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726133902.js:586:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726133902.js:637:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113725.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726113725.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726113725.js:602:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113725.js:653:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113624.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726113624.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726113624.js:558:  // GHIN lookup handlers
./.history/frontend/src/SimulationMode_20250726113624.js:638:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113624.js:662:                <label>Your GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113624.js:682:                    <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113624.js:718:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113624.js:767:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113624.js:787:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/SimulationMode_20250726113701.js:91:  // GHIN lookup modal state
./.history/frontend/src/SimulationMode_20250726113701.js:199:      // Reset GHIN lookup state
./.history/frontend/src/SimulationMode_20250726113701.js:602:                <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup("human")}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113701.js:653:                    <button style={{ ...buttonStyle, padding: "8px 12px", fontSize: 14 }} onClick={() => openGhinLookup(`comp${index+1}`)}>Lookup GHIN Handicap</button>
./.history/frontend/src/SimulationMode_20250726113701.js:702:                  <label>Opponent GHIN Name:</label>
./.history/frontend/src/SimulationMode_20250726113701.js:722:                      <h5 style={{ margin: 0, fontSize: 14 }}>GHIN Results:</h5>
./.history/frontend/src/GameSetupForm_20250726113744.js:60:  // GHIN lookup state
./.history/frontend/src/GameSetupForm_20250726113744.js:77:  // GHIN lookup handlers
./.history/frontend/src/GameSetupForm_20250726113744.js:175:              {/* GHIN Lookup UI */}
./.history/frontend/src/GameSetupForm_20250726113744.js:179:                {ghinLoading?.[player.id] ? 'Searching...' : 'GHIN Lookup'}
./.history/frontend/src/GameSetupForm_20250726113744.js:188:                    <strong>{golfer.name}</strong> (GHIN: {golfer.ghin})<br />
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221725.md:11:- **GHIN Network**: Golf Handicap and Information Network
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221725.md:39:# GHIN API (optional, basic search works without key)
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221725.md:40:GHIN_API_KEY=your_ghin_api_key_here
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221725.md:81:      "name": "GHIN",
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221725.md:112:  "message": "Course 'Pebble Beach Golf Links' imported successfully from GHIN",
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221725.md:121:    "source": "GHIN",
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221725.md:427:- **GHIN**: Contact GHIN support team
./.history/render_20250727083743.yaml:35:      - key: GHIN_API_USER
./.history/render_20250727083743.yaml:37:      - key: GHIN_API_PASS
./.history/render_20250727083743.yaml:39:      - key: GHIN_API_STATIC_TOKEN
./.history/README_20250727083845.md:11:- **Real GHIN Integration**: Authentic golfer data and handicap lookup
./.history/README_20250727083845.md:66:# GHIN API (optional)
./.history/README_20250727083845.md:67:GHIN_API_USER=your_email@domain.com
./.history/README_20250727083845.md:68:GHIN_API_PASS=your_password
./.history/README_20250727083845.md:69:GHIN_API_STATIC_TOKEN=optional_token
./.history/README_20250727083845.md:99:   GHIN_API_USER=<your-ghin-email>
./.history/README_20250727083845.md:100:   GHIN_API_PASS=<your-ghin-password>
./.history/README_20250727083845.md:208:- **Handicap Integration**: Real GHIN handicap lookup
./.history/backend/app/main_20250727080538.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727080538.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727080538.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727080538.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080538.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080538.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080538.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727080538.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727080538.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727080538.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727080538.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727080538.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727080538.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727080538.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727080538.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727080538.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727080538.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727080538.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080538.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080538.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080538.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727080538.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726113945.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726113945.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726113945.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726113945.py:1149:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726113945.py:1150:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726113945.py:1159:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726113945.py:1161:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726113945.py:1162:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726113945.py:1163:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726113945.py:1164:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726113945.py:1169:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726113945.py:1171:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726113945.py:1174:        # Authenticate with GHIN
./.history/backend/app/main_20250726113945.py:1175:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726113945.py:1178:            "source": "GHINcom"
./.history/backend/app/main_20250726113945.py:1184:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726113945.py:1194:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726113945.py:1204:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726113945.py:1213:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726113945.py:1241:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726113945.py:1245:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726113945.py:1248:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726113945.py:1254:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726113945.py:1255:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726113945.py:1256:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726113945.py:1257:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726113945.py:1262:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726113945.py:1263:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726113945.py:1264:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726113945.py:1267:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726113945.py:1268:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726113945.py:1273:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726113945.py:1278:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726113945.py:1279:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726113945.py:1282:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726113945.py:1283:                "source": "GHINcom"
./.history/backend/app/main_20250726113945.py:1287:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726113945.py:1307:                        "source": "GHINcom"
./.history/backend/app/main_20250726113945.py:1310:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726124605.py:518:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124605.py:532:            "name": "GHIN",
./.history/backend/app/main_20250726124605.py:534:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124605.py:1186:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124605.py:1187:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124605.py:1196:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124605.py:1198:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124605.py:1199:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124605.py:1200:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124605.py:1201:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124605.py:1206:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124605.py:1208:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124605.py:1211:        # Authenticate with GHIN
./.history/backend/app/main_20250726124605.py:1212:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124605.py:1215:            "source": "GHINcom"
./.history/backend/app/main_20250726124605.py:1221:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124605.py:1231:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124605.py:1241:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124605.py:1250:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124605.py:1278:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124605.py:1282:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124605.py:1285:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124605.py:1291:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124605.py:1292:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124605.py:1293:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124605.py:1294:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124605.py:1299:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124605.py:1300:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124605.py:1301:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124605.py:1304:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124605.py:1305:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124605.py:1310:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124605.py:1315:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124605.py:1316:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124605.py:1319:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124605.py:1320:                "source": "GHINcom"
./.history/backend/app/main_20250726124605.py:1324:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124605.py:1344:                        "source": "GHINcom"
./.history/backend/app/main_20250726124605.py:1347:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726145922.py:498:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726145922.py:512:            "name": "GHIN",
./.history/backend/app/main_20250726145922.py:514:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726145922.py:1075:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726145922.py:1076:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726145922.py:1085:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726145922.py:1087:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726145922.py:1088:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726145922.py:1089:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726145922.py:1090:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726145922.py:1095:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726145922.py:1097:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726145922.py:1100:        # Authenticate with GHIN
./.history/backend/app/main_20250726145922.py:1101:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726145922.py:1104:            "source": "GHINcom"
./.history/backend/app/main_20250726145922.py:1110:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726145922.py:1120:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726145922.py:1130:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726145922.py:1139:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726145922.py:1167:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726145922.py:1171:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726145922.py:1174:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726145922.py:1180:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726145922.py:1181:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726145922.py:1182:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726145922.py:1183:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726145922.py:1188:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726145922.py:1189:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726145922.py:1190:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726145922.py:1193:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726145922.py:1194:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726145922.py:1199:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726145922.py:1204:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726145922.py:1205:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726145922.py:1208:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726145922.py:1209:                "source": "GHINcom"
./.history/backend/app/main_20250726145922.py:1213:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726145922.py:1233:                        "source": "GHINcom"
./.history/backend/app/main_20250726145922.py:1236:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151105.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151105.py:249:    """Look up golfers by name using GHIN API"""
./.history/backend/app/main_20250728151105.py:251:        # Get GHIN credentials from environment
./.history/backend/app/main_20250728151105.py:252:        email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151105.py:253:        password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151105.py:254:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151105.py:257:            return {"error": "GHIN credentials not configured"}
./.history/backend/app/main_20250728151105.py:259:        # GHIN API endpoints
./.history/backend/app/main_20250728151105.py:260:        GHIN_AUTH_URL = "https://www.ghin.com/api/v1/authenticate"
./.history/backend/app/main_20250728151105.py:261:        GHIN_SEARCH_URL = "https://www.ghin.com/api/v1/golfer_search"
./.history/backend/app/main_20250728151105.py:263:        # Authenticate with GHIN
./.history/backend/app/main_20250728151105.py:270:            "source": "GHINcom"
./.history/backend/app/main_20250728151105.py:274:            auth_response = client.post(GHIN_AUTH_URL, json=auth_data)
./.history/backend/app/main_20250728151105.py:289:                GHIN_SEARCH_URL,
./.history/backend/app/main_20250728151105.py:298:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./.history/backend/app/main_20250728151105.py:299:        return {"error": f"GHIN API error: {e.response.status_code}"}
./.history/backend/app/main_20250728151105.py:301:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151105.py:306:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151105.py:307:    email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151105.py:308:    password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151105.py:309:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724160424.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724160424.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724160424.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724160424.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724160424.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160424.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160424.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724160424.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724160424.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724160424.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724160424.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724160424.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724160424.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724160424.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724160424.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724160424.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724160424.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724160424.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724160424.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724160424.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724160424.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160424.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160424.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724160424.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724160424.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724160424.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724160424.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724160424.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724160424.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724160424.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724160424.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724160424.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724160424.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724160424.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724160424.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724160424.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726101343.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726101343.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726101343.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726101343.py:1126:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726101343.py:1127:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726101343.py:1136:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726101343.py:1138:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726101343.py:1139:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726101343.py:1140:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726101343.py:1141:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726101343.py:1146:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726101343.py:1148:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726101343.py:1151:        # Authenticate with GHIN
./.history/backend/app/main_20250726101343.py:1152:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726101343.py:1155:            "source": "GHINcom"
./.history/backend/app/main_20250726101343.py:1161:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726101343.py:1171:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726101343.py:1181:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726101343.py:1190:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726101343.py:1218:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726101343.py:1222:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726101343.py:1225:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726101343.py:1231:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726101343.py:1232:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726101343.py:1233:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726101343.py:1234:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726101343.py:1239:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726101343.py:1240:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726101343.py:1241:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726101343.py:1244:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726101343.py:1245:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726101343.py:1250:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726101343.py:1255:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726101343.py:1256:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726101343.py:1259:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726101343.py:1260:                "source": "GHINcom"
./.history/backend/app/main_20250726101343.py:1264:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726101343.py:1284:                        "source": "GHINcom"
./.history/backend/app/main_20250726101343.py:1287:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726101015.py:491:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726101015.py:505:            "name": "GHIN",
./.history/backend/app/main_20250726101015.py:507:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726101015.py:1110:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726101015.py:1111:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726101015.py:1120:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726101015.py:1122:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726101015.py:1123:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726101015.py:1124:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726101015.py:1125:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726101015.py:1130:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726101015.py:1132:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726101015.py:1135:        # Authenticate with GHIN
./.history/backend/app/main_20250726101015.py:1136:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726101015.py:1139:            "source": "GHINcom"
./.history/backend/app/main_20250726101015.py:1145:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726101015.py:1155:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726101015.py:1165:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726101015.py:1174:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726101015.py:1202:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726101015.py:1206:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726101015.py:1209:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726101015.py:1215:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726101015.py:1216:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726101015.py:1217:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726101015.py:1218:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726101015.py:1223:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726101015.py:1224:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726101015.py:1225:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726101015.py:1228:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726101015.py:1229:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726101015.py:1234:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726101015.py:1239:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726101015.py:1240:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726101015.py:1243:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726101015.py:1244:                "source": "GHINcom"
./.history/backend/app/main_20250726101015.py:1248:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726101015.py:1268:                        "source": "GHINcom"
./.history/backend/app/main_20250726101015.py:1271:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727075639.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727075639.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727075639.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727075639.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075639.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075639.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075639.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727075639.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727075639.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727075639.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727075639.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727075639.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727075639.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727075639.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727075639.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727075639.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727075639.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727075639.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075639.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075639.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075639.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727075639.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726200237.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200237.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200237.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200237.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200237.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200237.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200237.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200237.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200237.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200237.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200237.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200237.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200237.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200237.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200237.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200237.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200237.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200237.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200237.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200237.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200237.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200237.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200237.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200237.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200237.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200237.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200237.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200237.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200237.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200237.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200237.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200237.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200237.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200237.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200237.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200237.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200237.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200237.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200237.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724160400.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724160400.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724160400.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724160400.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724160400.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160400.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160400.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724160400.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724160400.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724160400.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724160400.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724160400.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724160400.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724160400.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724160400.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724160400.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724160400.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724160400.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724160400.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724160400.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724160400.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160400.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160400.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724160400.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724160400.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724160400.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724160400.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724160400.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724160400.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724160400.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724160400.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724160400.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724160400.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724160400.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724160400.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724160400.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726202100.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726202100.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726202100.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726202100.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726202100.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726202100.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726202100.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726202100.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726202100.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726202100.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726202100.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726202100.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726202100.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726202100.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726202100.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726202100.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726202100.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726202100.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726202100.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726202100.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726202100.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726202100.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726202100.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726202100.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726202100.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726202100.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726202100.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726202100.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726202100.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726202100.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726202100.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726202100.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726202100.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726202100.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726202100.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726202100.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726202100.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726202100.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726202100.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727081730.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727081730.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727081730.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727081730.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081730.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081730.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081730.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727081730.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727081730.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727081730.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727081730.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727081730.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727081730.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727081730.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727081730.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727081730.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727081730.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727081730.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081730.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081730.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081730.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727081730.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250721143559.py:478:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250721143559.py:479:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250721143559.py:488:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250721143559.py:489:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250721143559.py:490:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250721143559.py:491:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250721143559.py:496:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250721143559.py:497:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250721143559.py:500:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250721143559.py:501:        "source": "GHINcom"
./.history/backend/app/main_20250721143559.py:505:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250721143559.py:510:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250721143559.py:523:        "source": "GHINcom"
./.history/backend/app/main_20250721143559.py:527:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721143559.py:541:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724164454.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724164454.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724164454.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724164454.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724164454.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724164454.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724164454.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724164454.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724164454.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724164454.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724164454.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724164454.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724164454.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724164454.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724164454.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724164454.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724164454.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724164454.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724164454.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724164454.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724164454.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724164454.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724164454.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724164454.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724164454.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724164454.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724164454.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724164454.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724164454.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724164454.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724164454.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724164454.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724164454.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724164454.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724164454.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724164454.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727075147.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727075147.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727075147.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727075147.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727075147.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727075147.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727075147.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727075147.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727075147.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727075147.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727075147.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727075147.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727075147.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727075147.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727075147.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727075147.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727075147.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727075147.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727075147.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727075147.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727075147.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727075147.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727075147.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727075147.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727075147.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727075147.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727075147.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727075147.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727075147.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727075147.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727075147.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727075147.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727075147.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727075147.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727075147.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727075147.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727075147.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727075147.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727075147.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726124532.py:531:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124532.py:545:            "name": "GHIN",
./.history/backend/app/main_20250726124532.py:547:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124532.py:1199:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124532.py:1200:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124532.py:1209:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124532.py:1211:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124532.py:1212:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124532.py:1213:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124532.py:1214:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124532.py:1219:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124532.py:1221:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124532.py:1224:        # Authenticate with GHIN
./.history/backend/app/main_20250726124532.py:1225:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124532.py:1228:            "source": "GHINcom"
./.history/backend/app/main_20250726124532.py:1234:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124532.py:1244:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124532.py:1254:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124532.py:1263:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124532.py:1291:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124532.py:1295:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124532.py:1298:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124532.py:1304:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124532.py:1305:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124532.py:1306:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124532.py:1307:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124532.py:1312:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124532.py:1313:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124532.py:1314:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124532.py:1317:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124532.py:1318:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124532.py:1323:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124532.py:1328:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124532.py:1329:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124532.py:1332:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124532.py:1333:                "source": "GHINcom"
./.history/backend/app/main_20250726124532.py:1337:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124532.py:1357:                        "source": "GHINcom"
./.history/backend/app/main_20250726124532.py:1360:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726154058.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726154058.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726154058.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726154058.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726154058.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726154058.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726154058.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726154058.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726154058.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726154058.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726154058.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726154058.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726154058.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726154058.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726154058.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726154058.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726154058.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726154058.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726154058.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726154058.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726154058.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726154058.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726154058.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726154058.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726154058.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726154058.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726154058.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726154058.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726154058.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726154058.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726154058.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726154058.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726154058.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726154058.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726154058.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726154058.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726154058.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726154058.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726154058.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726124308.py:554:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124308.py:568:            "name": "GHIN",
./.history/backend/app/main_20250726124308.py:570:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124308.py:1222:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124308.py:1223:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124308.py:1232:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124308.py:1234:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124308.py:1235:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124308.py:1236:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124308.py:1237:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124308.py:1242:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124308.py:1244:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124308.py:1247:        # Authenticate with GHIN
./.history/backend/app/main_20250726124308.py:1248:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124308.py:1251:            "source": "GHINcom"
./.history/backend/app/main_20250726124308.py:1257:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124308.py:1267:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124308.py:1277:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124308.py:1286:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124308.py:1314:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124308.py:1318:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124308.py:1321:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124308.py:1327:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124308.py:1328:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124308.py:1329:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124308.py:1330:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124308.py:1335:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124308.py:1336:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124308.py:1337:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124308.py:1340:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124308.py:1341:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124308.py:1346:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124308.py:1351:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124308.py:1352:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124308.py:1355:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124308.py:1356:                "source": "GHINcom"
./.history/backend/app/main_20250726124308.py:1360:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124308.py:1380:                        "source": "GHINcom"
./.history/backend/app/main_20250726124308.py:1383:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151041.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151041.py:249:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250728151041.py:251:        # GHIN API credentials from environment
./.history/backend/app/main_20250728151041.py:252:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151041.py:253:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151041.py:254:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151041.py:258:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250728151041.py:259:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250728151041.py:262:        # GHIN API endpoints
./.history/backend/app/main_20250728151041.py:266:        # Authenticate with GHIN
./.history/backend/app/main_20250728151041.py:273:            "source": "GHINcom"
./.history/backend/app/main_20250728151041.py:280:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250728151041.py:289:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250728151041.py:306:                    "error": "GHIN search failed",
./.history/backend/app/main_20250728151041.py:318:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151041.py:320:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250728151041.py:326:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151041.py:328:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151041.py:329:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151041.py:330:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151041.py:340:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250728151041.py:342:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726214756.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726214756.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726214756.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726214756.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726214756.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726214756.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726214756.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726214756.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726214756.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726214756.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726214756.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726214756.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726214756.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726214756.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726214756.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726214756.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726214756.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726214756.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726214756.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726214756.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726214756.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726214756.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726214756.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726214756.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726214756.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726214756.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726214756.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726214756.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726214756.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726214756.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726214756.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726214756.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726214756.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726214756.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726214756.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726214756.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726214756.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726214756.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726214756.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724160430.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724160430.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724160430.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724160430.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724160430.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160430.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160430.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724160430.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724160430.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724160430.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724160430.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724160430.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724160430.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724160430.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724160430.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724160430.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724160430.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724160430.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724160430.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724160430.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724160430.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160430.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160430.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724160430.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724160430.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724160430.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724160430.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724160430.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724160430.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724160430.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724160430.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724160430.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724160430.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724160430.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724160430.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724160430.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727082336.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250727082336.py:249:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727082336.py:251:        # GHIN API credentials from environment
./.history/backend/app/main_20250727082336.py:252:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727082336.py:253:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727082336.py:254:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727082336.py:258:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727082336.py:259:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727082336.py:262:        # GHIN API endpoints
./.history/backend/app/main_20250727082336.py:266:        # Authenticate with GHIN
./.history/backend/app/main_20250727082336.py:273:            "source": "GHINcom"
./.history/backend/app/main_20250727082336.py:280:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727082336.py:289:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727082336.py:306:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727082336.py:318:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727082336.py:320:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727082336.py:326:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727082336.py:328:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727082336.py:329:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727082336.py:330:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727082336.py:340:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727082336.py:342:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726124547.py:518:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124547.py:532:            "name": "GHIN",
./.history/backend/app/main_20250726124547.py:534:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124547.py:1186:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124547.py:1187:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124547.py:1196:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124547.py:1198:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124547.py:1199:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124547.py:1200:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124547.py:1201:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124547.py:1206:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124547.py:1208:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124547.py:1211:        # Authenticate with GHIN
./.history/backend/app/main_20250726124547.py:1212:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124547.py:1215:            "source": "GHINcom"
./.history/backend/app/main_20250726124547.py:1221:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124547.py:1231:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124547.py:1241:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124547.py:1250:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124547.py:1278:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124547.py:1282:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124547.py:1285:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124547.py:1291:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124547.py:1292:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124547.py:1293:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124547.py:1294:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124547.py:1299:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124547.py:1300:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124547.py:1301:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124547.py:1304:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124547.py:1305:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124547.py:1310:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124547.py:1315:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124547.py:1316:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124547.py:1319:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124547.py:1320:                "source": "GHINcom"
./.history/backend/app/main_20250726124547.py:1324:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124547.py:1344:                        "source": "GHINcom"
./.history/backend/app/main_20250726124547.py:1347:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726082908.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726082908.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726082908.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726082908.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726082908.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726082908.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726082908.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726082908.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082908.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082908.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726082908.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726082908.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726082908.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726082908.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726082908.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726082908.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726082908.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726082908.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726082908.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726082908.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726082908.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726082908.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726082908.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726082908.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082908.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082908.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726082908.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726082908.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726082908.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726082908.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726082908.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726082908.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726082908.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726082908.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726082908.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726082908.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726082908.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726082908.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726082908.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727075046.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727075046.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727075046.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727075046.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727075046.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727075046.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727075046.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727075046.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727075046.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727075046.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727075046.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727075046.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727075046.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727075046.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727075046.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727075046.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727075046.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727075046.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727075046.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727075046.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727075046.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727075046.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727075046.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727075046.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727075046.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727075046.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727075046.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727075046.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727075046.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727075046.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727075046.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727075046.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727075046.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727075046.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727075046.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727075046.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727075046.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727075046.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727075046.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726114146.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726114146.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726114146.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726114146.py:1149:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726114146.py:1150:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726114146.py:1159:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726114146.py:1161:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726114146.py:1162:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726114146.py:1163:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726114146.py:1164:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726114146.py:1169:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726114146.py:1171:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726114146.py:1174:        # Authenticate with GHIN
./.history/backend/app/main_20250726114146.py:1175:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726114146.py:1178:            "source": "GHINcom"
./.history/backend/app/main_20250726114146.py:1184:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726114146.py:1194:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726114146.py:1204:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726114146.py:1213:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726114146.py:1241:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726114146.py:1245:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726114146.py:1248:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726114146.py:1254:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726114146.py:1255:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726114146.py:1256:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726114146.py:1257:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726114146.py:1262:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726114146.py:1263:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726114146.py:1264:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726114146.py:1267:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726114146.py:1268:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726114146.py:1273:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726114146.py:1278:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726114146.py:1279:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726114146.py:1282:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726114146.py:1283:                "source": "GHINcom"
./.history/backend/app/main_20250726114146.py:1287:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726114146.py:1307:                        "source": "GHINcom"
./.history/backend/app/main_20250726114146.py:1310:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726203543.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726203543.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726203543.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726203543.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726203543.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726203543.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726203543.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726203543.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726203543.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726203543.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726203543.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726203543.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726203543.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726203543.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726203543.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726203543.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726203543.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726203543.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726203543.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726203543.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726203543.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726203543.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726203543.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726203543.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726203543.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726203543.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726203543.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726203543.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726203543.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726203543.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726203543.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726203543.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726203543.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726203543.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726203543.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726203543.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726203543.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726203543.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726203543.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726100936.py:491:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726100936.py:505:            "name": "GHIN",
./.history/backend/app/main_20250726100936.py:507:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726100936.py:1110:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726100936.py:1111:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726100936.py:1120:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726100936.py:1122:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726100936.py:1123:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100936.py:1124:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100936.py:1125:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726100936.py:1130:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726100936.py:1132:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726100936.py:1135:        # Authenticate with GHIN
./.history/backend/app/main_20250726100936.py:1136:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726100936.py:1139:            "source": "GHINcom"
./.history/backend/app/main_20250726100936.py:1145:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726100936.py:1155:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726100936.py:1165:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726100936.py:1174:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726100936.py:1202:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726100936.py:1206:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726100936.py:1209:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726100936.py:1215:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726100936.py:1216:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100936.py:1217:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100936.py:1218:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726100936.py:1223:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726100936.py:1224:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726100936.py:1225:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726100936.py:1228:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726100936.py:1229:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726100936.py:1234:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726100936.py:1239:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726100936.py:1240:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726100936.py:1243:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726100936.py:1244:                "source": "GHINcom"
./.history/backend/app/main_20250726100936.py:1248:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726100936.py:1268:                        "source": "GHINcom"
./.history/backend/app/main_20250726100936.py:1271:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727081634.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727081634.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727081634.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727081634.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081634.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081634.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081634.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727081634.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727081634.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727081634.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727081634.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727081634.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727081634.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727081634.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727081634.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727081634.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727081634.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727081634.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081634.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081634.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081634.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727081634.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726100735.py:455:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726100735.py:469:            "name": "GHIN",
./.history/backend/app/main_20250726100735.py:471:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726100735.py:1074:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726100735.py:1075:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726100735.py:1084:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726100735.py:1086:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726100735.py:1087:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100735.py:1088:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100735.py:1089:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726100735.py:1094:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726100735.py:1096:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726100735.py:1099:        # Authenticate with GHIN
./.history/backend/app/main_20250726100735.py:1100:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726100735.py:1103:            "source": "GHINcom"
./.history/backend/app/main_20250726100735.py:1109:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726100735.py:1119:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726100735.py:1129:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726100735.py:1138:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726100735.py:1166:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726100735.py:1170:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726100735.py:1173:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726100735.py:1179:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726100735.py:1180:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100735.py:1181:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100735.py:1182:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726100735.py:1187:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726100735.py:1188:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726100735.py:1189:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726100735.py:1192:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726100735.py:1193:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726100735.py:1198:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726100735.py:1203:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726100735.py:1204:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726100735.py:1207:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726100735.py:1208:                "source": "GHINcom"
./.history/backend/app/main_20250726100735.py:1212:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726100735.py:1232:                        "source": "GHINcom"
./.history/backend/app/main_20250726100735.py:1235:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727084322.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250727084322.py:249:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727084322.py:251:        # GHIN API credentials from environment
./.history/backend/app/main_20250727084322.py:252:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727084322.py:253:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727084322.py:254:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727084322.py:258:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727084322.py:259:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727084322.py:262:        # GHIN API endpoints
./.history/backend/app/main_20250727084322.py:266:        # Authenticate with GHIN
./.history/backend/app/main_20250727084322.py:273:            "source": "GHINcom"
./.history/backend/app/main_20250727084322.py:280:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727084322.py:289:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727084322.py:306:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727084322.py:318:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727084322.py:320:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727084322.py:326:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727084322.py:328:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727084322.py:329:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727084322.py:330:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727084322.py:340:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727084322.py:342:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726100802.py:472:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726100802.py:486:            "name": "GHIN",
./.history/backend/app/main_20250726100802.py:488:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726100802.py:1091:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726100802.py:1092:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726100802.py:1101:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726100802.py:1103:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726100802.py:1104:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100802.py:1105:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100802.py:1106:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726100802.py:1111:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726100802.py:1113:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726100802.py:1116:        # Authenticate with GHIN
./.history/backend/app/main_20250726100802.py:1117:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726100802.py:1120:            "source": "GHINcom"
./.history/backend/app/main_20250726100802.py:1126:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726100802.py:1136:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726100802.py:1146:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726100802.py:1155:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726100802.py:1183:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726100802.py:1187:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726100802.py:1190:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726100802.py:1196:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726100802.py:1197:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100802.py:1198:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100802.py:1199:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726100802.py:1204:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726100802.py:1205:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726100802.py:1206:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726100802.py:1209:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726100802.py:1210:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726100802.py:1215:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726100802.py:1220:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726100802.py:1221:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726100802.py:1224:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726100802.py:1225:                "source": "GHINcom"
./.history/backend/app/main_20250726100802.py:1229:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726100802.py:1249:                        "source": "GHINcom"
./.history/backend/app/main_20250726100802.py:1252:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726100913.py:483:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726100913.py:497:            "name": "GHIN",
./.history/backend/app/main_20250726100913.py:499:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726100913.py:1102:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726100913.py:1103:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726100913.py:1112:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726100913.py:1114:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726100913.py:1115:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100913.py:1116:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100913.py:1117:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726100913.py:1122:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726100913.py:1124:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726100913.py:1127:        # Authenticate with GHIN
./.history/backend/app/main_20250726100913.py:1128:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726100913.py:1131:            "source": "GHINcom"
./.history/backend/app/main_20250726100913.py:1137:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726100913.py:1147:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726100913.py:1157:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726100913.py:1166:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726100913.py:1194:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726100913.py:1198:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726100913.py:1201:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726100913.py:1207:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726100913.py:1208:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100913.py:1209:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100913.py:1210:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726100913.py:1215:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726100913.py:1216:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726100913.py:1217:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726100913.py:1220:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726100913.py:1221:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726100913.py:1226:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726100913.py:1231:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726100913.py:1232:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726100913.py:1235:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726100913.py:1236:                "source": "GHINcom"
./.history/backend/app/main_20250726100913.py:1240:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726100913.py:1260:                        "source": "GHINcom"
./.history/backend/app/main_20250726100913.py:1263:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726124218.py:539:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124218.py:553:            "name": "GHIN",
./.history/backend/app/main_20250726124218.py:555:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124218.py:1207:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124218.py:1208:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124218.py:1217:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124218.py:1219:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124218.py:1220:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124218.py:1221:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124218.py:1222:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124218.py:1227:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124218.py:1229:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124218.py:1232:        # Authenticate with GHIN
./.history/backend/app/main_20250726124218.py:1233:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124218.py:1236:            "source": "GHINcom"
./.history/backend/app/main_20250726124218.py:1242:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124218.py:1252:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124218.py:1262:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124218.py:1271:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124218.py:1299:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124218.py:1303:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124218.py:1306:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124218.py:1312:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124218.py:1313:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124218.py:1314:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124218.py:1315:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124218.py:1320:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124218.py:1321:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124218.py:1322:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124218.py:1325:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124218.py:1326:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124218.py:1331:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124218.py:1336:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124218.py:1337:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124218.py:1340:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124218.py:1341:                "source": "GHINcom"
./.history/backend/app/main_20250726124218.py:1345:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124218.py:1365:                        "source": "GHINcom"
./.history/backend/app/main_20250726124218.py:1368:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726210119.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726210119.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726210119.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726210119.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726210119.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726210119.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726210119.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726210119.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726210119.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726210119.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726210119.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726210119.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726210119.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726210119.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726210119.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726210119.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726210119.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726210119.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726210119.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726210119.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726210119.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726210119.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726210119.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726210119.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726210119.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726210119.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726210119.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726210119.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726210119.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726210119.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726210119.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726210119.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726210119.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726210119.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726210119.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726210119.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726210119.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726210119.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726210119.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726200150.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200150.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200150.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200150.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200150.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200150.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200150.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200150.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200150.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200150.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200150.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200150.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200150.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200150.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200150.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200150.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200150.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200150.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200150.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200150.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200150.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200150.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200150.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200150.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200150.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200150.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200150.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200150.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200150.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200150.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200150.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200150.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200150.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200150.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200150.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200150.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200150.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200150.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200150.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727081249.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727081249.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727081249.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727081249.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081249.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081249.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081249.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727081249.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727081249.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727081249.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727081249.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727081249.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727081249.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727081249.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727081249.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727081249.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727081249.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727081249.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081249.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081249.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081249.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727081249.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250721104216.py:470:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/authenticate.json"
./.history/backend/app/main_20250721104216.py:471:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfer_search.json"
./.history/backend/app/main_20250721104216.py:479:    Lookup a golfer by name (and optionally state) using the GHIN API (JWT flow).
./.history/backend/app/main_20250721104216.py:482:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250721104216.py:483:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250721104216.py:484:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250721104216.py:485:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250721104216.py:490:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250721104216.py:491:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250721104216.py:494:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250721104216.py:495:        "source": "GHINcom"
./.history/backend/app/main_20250721104216.py:499:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250721104216.py:504:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250721104216.py:517:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721104216.py:531:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250721104307.py:470:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250721104307.py:471:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfer_search.json"
./.history/backend/app/main_20250721104307.py:479:    Lookup a golfer by name (and optionally state) using the GHIN API (JWT flow).
./.history/backend/app/main_20250721104307.py:482:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250721104307.py:483:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250721104307.py:484:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250721104307.py:485:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250721104307.py:490:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250721104307.py:491:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250721104307.py:494:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250721104307.py:495:        "source": "GHINcom"
./.history/backend/app/main_20250721104307.py:499:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250721104307.py:504:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250721104307.py:517:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721104307.py:531:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250725193952.py:731:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725193952.py:732:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725193952.py:741:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725193952.py:743:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725193952.py:744:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725193952.py:745:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725193952.py:746:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725193952.py:751:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725193952.py:753:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725193952.py:756:        # Authenticate with GHIN
./.history/backend/app/main_20250725193952.py:757:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725193952.py:760:            "source": "GHINcom"
./.history/backend/app/main_20250725193952.py:766:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725193952.py:776:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725193952.py:786:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725193952.py:795:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725193952.py:823:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725193952.py:827:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725193952.py:830:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725193952.py:836:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725193952.py:837:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725193952.py:838:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725193952.py:839:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725193952.py:844:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725193952.py:845:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725193952.py:846:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725193952.py:849:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725193952.py:850:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725193952.py:855:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725193952.py:860:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725193952.py:861:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725193952.py:864:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725193952.py:865:                "source": "GHINcom"
./.history/backend/app/main_20250725193952.py:869:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725193952.py:889:                        "source": "GHINcom"
./.history/backend/app/main_20250725193952.py:892:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726200125.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200125.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200125.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200125.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200125.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200125.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200125.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200125.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200125.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200125.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200125.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200125.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200125.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200125.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200125.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200125.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200125.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200125.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200125.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200125.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200125.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200125.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200125.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200125.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200125.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200125.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200125.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200125.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200125.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200125.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200125.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200125.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200125.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200125.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200125.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200125.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200125.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200125.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200125.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726120506.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726120506.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726120506.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726120506.py:1149:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726120506.py:1150:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726120506.py:1159:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726120506.py:1161:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726120506.py:1162:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726120506.py:1163:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726120506.py:1164:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726120506.py:1169:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726120506.py:1171:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726120506.py:1174:        # Authenticate with GHIN
./.history/backend/app/main_20250726120506.py:1175:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726120506.py:1178:            "source": "GHINcom"
./.history/backend/app/main_20250726120506.py:1184:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726120506.py:1194:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726120506.py:1204:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726120506.py:1213:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726120506.py:1241:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726120506.py:1245:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726120506.py:1248:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726120506.py:1254:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726120506.py:1255:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726120506.py:1256:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726120506.py:1257:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726120506.py:1262:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726120506.py:1263:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726120506.py:1264:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726120506.py:1267:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726120506.py:1268:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726120506.py:1273:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726120506.py:1278:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726120506.py:1279:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726120506.py:1282:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726120506.py:1283:                "source": "GHINcom"
./.history/backend/app/main_20250726120506.py:1287:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726120506.py:1307:                        "source": "GHINcom"
./.history/backend/app/main_20250726120506.py:1310:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727074511.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727074511.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727074511.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727074511.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727074511.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727074511.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727074511.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727074511.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074511.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074511.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727074511.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727074511.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727074511.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727074511.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727074511.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727074511.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727074511.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727074511.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727074511.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727074511.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727074511.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727074511.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727074511.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727074511.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074511.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074511.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727074511.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727074511.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727074511.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727074511.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727074511.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727074511.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727074511.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727074511.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727074511.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727074511.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727074511.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727074511.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727074511.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726200222.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200222.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200222.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200222.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200222.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200222.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200222.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200222.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200222.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200222.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200222.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200222.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200222.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200222.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200222.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200222.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200222.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200222.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200222.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200222.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200222.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200222.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200222.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200222.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200222.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200222.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200222.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200222.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200222.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200222.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200222.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200222.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200222.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200222.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200222.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200222.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200222.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200222.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200222.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726124517.py:557:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124517.py:571:            "name": "GHIN",
./.history/backend/app/main_20250726124517.py:573:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124517.py:1225:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124517.py:1226:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124517.py:1235:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124517.py:1237:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124517.py:1238:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124517.py:1239:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124517.py:1240:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124517.py:1245:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124517.py:1247:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124517.py:1250:        # Authenticate with GHIN
./.history/backend/app/main_20250726124517.py:1251:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124517.py:1254:            "source": "GHINcom"
./.history/backend/app/main_20250726124517.py:1260:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124517.py:1270:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124517.py:1280:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124517.py:1289:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124517.py:1317:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124517.py:1321:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124517.py:1324:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124517.py:1330:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124517.py:1331:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124517.py:1332:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124517.py:1333:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124517.py:1338:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124517.py:1339:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124517.py:1340:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124517.py:1343:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124517.py:1344:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124517.py:1349:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124517.py:1354:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124517.py:1355:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124517.py:1358:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124517.py:1359:                "source": "GHINcom"
./.history/backend/app/main_20250726124517.py:1363:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124517.py:1383:                        "source": "GHINcom"
./.history/backend/app/main_20250726124517.py:1386:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726084809.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726084809.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726084809.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726084809.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726084809.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726084809.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726084809.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726084809.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726084809.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726084809.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726084809.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726084809.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726084809.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726084809.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726084809.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726084809.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726084809.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726084809.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726084809.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726084809.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726084809.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726084809.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726084809.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726084809.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726084809.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726084809.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726084809.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726084809.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726084809.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726084809.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726084809.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726084809.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726084809.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726084809.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726084809.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726084809.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726084809.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726084809.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726084809.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727082257.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250727082257.py:249:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727082257.py:251:        # GHIN API credentials from environment
./.history/backend/app/main_20250727082257.py:252:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727082257.py:253:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727082257.py:254:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727082257.py:258:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727082257.py:259:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727082257.py:262:        # GHIN API endpoints
./.history/backend/app/main_20250727082257.py:266:        # Authenticate with GHIN
./.history/backend/app/main_20250727082257.py:273:            "source": "GHINcom"
./.history/backend/app/main_20250727082257.py:280:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727082257.py:289:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727082257.py:306:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727082257.py:318:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727082257.py:320:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727082257.py:326:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727082257.py:328:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727082257.py:329:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727082257.py:330:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727082257.py:340:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727082257.py:342:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250723214912.py:483:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250723214912.py:484:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250723214912.py:493:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250723214912.py:494:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250723214912.py:495:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250723214912.py:496:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250723214912.py:501:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250723214912.py:502:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250723214912.py:505:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250723214912.py:506:        "source": "GHINcom"
./.history/backend/app/main_20250723214912.py:510:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250723214912.py:515:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250723214912.py:528:        "source": "GHINcom"
./.history/backend/app/main_20250723214912.py:532:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250723214912.py:546:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250726101226.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726101226.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726101226.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726101226.py:1126:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726101226.py:1127:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726101226.py:1136:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726101226.py:1138:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726101226.py:1139:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726101226.py:1140:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726101226.py:1141:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726101226.py:1146:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726101226.py:1148:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726101226.py:1151:        # Authenticate with GHIN
./.history/backend/app/main_20250726101226.py:1152:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726101226.py:1155:            "source": "GHINcom"
./.history/backend/app/main_20250726101226.py:1161:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726101226.py:1171:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726101226.py:1181:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726101226.py:1190:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726101226.py:1218:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726101226.py:1222:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726101226.py:1225:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726101226.py:1231:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726101226.py:1232:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726101226.py:1233:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726101226.py:1234:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726101226.py:1239:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726101226.py:1240:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726101226.py:1241:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726101226.py:1244:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726101226.py:1245:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726101226.py:1250:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726101226.py:1255:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726101226.py:1256:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726101226.py:1259:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726101226.py:1260:                "source": "GHINcom"
./.history/backend/app/main_20250726101226.py:1264:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726101226.py:1284:                        "source": "GHINcom"
./.history/backend/app/main_20250726101226.py:1287:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250725193731.py:731:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725193731.py:732:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725193731.py:741:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725193731.py:743:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725193731.py:744:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725193731.py:745:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725193731.py:746:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725193731.py:751:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725193731.py:753:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725193731.py:756:        # Authenticate with GHIN
./.history/backend/app/main_20250725193731.py:757:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725193731.py:760:            "source": "GHINcom"
./.history/backend/app/main_20250725193731.py:766:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725193731.py:776:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725193731.py:786:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725193731.py:795:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725193731.py:823:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725193731.py:827:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725193731.py:830:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725193731.py:836:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725193731.py:837:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725193731.py:838:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725193731.py:839:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725193731.py:844:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725193731.py:845:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725193731.py:846:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725193731.py:849:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725193731.py:850:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725193731.py:855:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725193731.py:860:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725193731.py:861:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725193731.py:864:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725193731.py:865:                "source": "GHINcom"
./.history/backend/app/main_20250725193731.py:869:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725193731.py:889:                        "source": "GHINcom"
./.history/backend/app/main_20250725193731.py:892:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726200144.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200144.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200144.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200144.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200144.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200144.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200144.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200144.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200144.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200144.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200144.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200144.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200144.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200144.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200144.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200144.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200144.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200144.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200144.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200144.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200144.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200144.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200144.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200144.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200144.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200144.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200144.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200144.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200144.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200144.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200144.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200144.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200144.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200144.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200144.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200144.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200144.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200144.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200144.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250725193857.py:731:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725193857.py:732:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725193857.py:741:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725193857.py:743:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725193857.py:744:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725193857.py:745:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725193857.py:746:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725193857.py:751:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725193857.py:753:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725193857.py:756:        # Authenticate with GHIN
./.history/backend/app/main_20250725193857.py:757:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725193857.py:760:            "source": "GHINcom"
./.history/backend/app/main_20250725193857.py:766:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725193857.py:776:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725193857.py:786:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725193857.py:795:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725193857.py:823:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725193857.py:827:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725193857.py:830:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725193857.py:836:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725193857.py:837:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725193857.py:838:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725193857.py:839:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725193857.py:844:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725193857.py:845:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725193857.py:846:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725193857.py:849:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725193857.py:850:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725193857.py:855:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725193857.py:860:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725193857.py:861:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725193857.py:864:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725193857.py:865:                "source": "GHINcom"
./.history/backend/app/main_20250725193857.py:869:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725193857.py:889:                        "source": "GHINcom"
./.history/backend/app/main_20250725193857.py:892:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726200243.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200243.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200243.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200243.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200243.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200243.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200243.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200243.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200243.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200243.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200243.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200243.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200243.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200243.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200243.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200243.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200243.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200243.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200243.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200243.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200243.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200243.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200243.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200243.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200243.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200243.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200243.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200243.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200243.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200243.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200243.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200243.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200243.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200243.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200243.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200243.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200243.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200243.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200243.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250723215246.py:483:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250723215246.py:484:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250723215246.py:493:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250723215246.py:494:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250723215246.py:495:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250723215246.py:496:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250723215246.py:501:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250723215246.py:502:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250723215246.py:505:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250723215246.py:506:        "source": "GHINcom"
./.history/backend/app/main_20250723215246.py:510:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250723215246.py:515:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250723215246.py:528:        "source": "GHINcom"
./.history/backend/app/main_20250723215246.py:532:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250723215246.py:546:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250723215246.py:551:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250723215246.py:552:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250723215246.py:553:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250723215246.py:554:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250723215246.py:559:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250723215246.py:560:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250723215246.py:561:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250723215246.py:564:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250723215246.py:565:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250723215246.py:570:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250723215246.py:575:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250723215246.py:576:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250723215246.py:579:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250723215246.py:580:                "source": "GHINcom"
./.history/backend/app/main_20250723215246.py:584:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250723215246.py:604:                        "source": "GHINcom"
./.history/backend/app/main_20250723215246.py:607:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721143558.py:478:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250721143558.py:479:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250721143558.py:488:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250721143558.py:489:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250721143558.py:490:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250721143558.py:491:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250721143558.py:496:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250721143558.py:497:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250721143558.py:500:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250721143558.py:501:        "source": "GHINcom"
./.history/backend/app/main_20250721143558.py:505:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250721143558.py:510:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250721143558.py:523:        "source": "GHINcom"
./.history/backend/app/main_20250721143558.py:527:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721143558.py:541:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250727081923.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727081923.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727081923.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727081923.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081923.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081923.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081923.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727081923.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727081923.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727081923.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727081923.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727081923.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727081923.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727081923.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727081923.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727081923.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727081923.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727081923.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081923.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081923.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081923.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727081923.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250725192236.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725192236.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725192236.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725192236.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725192236.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725192236.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725192236.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725192236.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725192236.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725192236.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250725192236.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725192236.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250725192236.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725192236.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725192236.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725192236.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725192236.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725192236.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725192236.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725192236.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725192236.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725192236.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725192236.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725192236.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725192236.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725192236.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725192236.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725192236.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725192236.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725192236.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725192236.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725192236.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725192236.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250725192236.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725192236.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250725192236.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250723215110.py:483:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250723215110.py:484:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250723215110.py:493:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250723215110.py:494:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250723215110.py:495:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250723215110.py:496:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250723215110.py:501:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250723215110.py:502:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250723215110.py:505:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250723215110.py:506:        "source": "GHINcom"
./.history/backend/app/main_20250723215110.py:510:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250723215110.py:515:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250723215110.py:528:        "source": "GHINcom"
./.history/backend/app/main_20250723215110.py:532:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250723215110.py:546:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250723215110.py:551:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250723215110.py:552:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250723215110.py:553:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250723215110.py:554:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250723215110.py:559:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250723215110.py:560:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250723215110.py:561:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250723215110.py:564:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250723215110.py:565:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250723215110.py:570:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250723215110.py:575:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250723215110.py:576:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250723215110.py:579:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250723215110.py:580:                "source": "GHINcom"
./.history/backend/app/main_20250723215110.py:584:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250723215110.py:604:                        "source": "GHINcom"
./.history/backend/app/main_20250723215110.py:607:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726081357.py:389:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726081357.py:403:            "name": "GHIN",
./.history/backend/app/main_20250726081357.py:405:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726081357.py:1008:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726081357.py:1009:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726081357.py:1018:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726081357.py:1020:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726081357.py:1021:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726081357.py:1022:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726081357.py:1023:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726081357.py:1028:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726081357.py:1030:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726081357.py:1033:        # Authenticate with GHIN
./.history/backend/app/main_20250726081357.py:1034:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726081357.py:1037:            "source": "GHINcom"
./.history/backend/app/main_20250726081357.py:1043:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726081357.py:1053:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726081357.py:1063:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726081357.py:1072:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726081357.py:1100:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726081357.py:1104:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726081357.py:1107:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726081357.py:1113:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726081357.py:1114:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726081357.py:1115:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726081357.py:1116:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726081357.py:1121:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726081357.py:1122:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726081357.py:1123:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726081357.py:1126:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726081357.py:1127:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726081357.py:1132:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726081357.py:1137:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726081357.py:1138:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726081357.py:1141:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726081357.py:1142:                "source": "GHINcom"
./.history/backend/app/main_20250726081357.py:1146:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726081357.py:1166:                        "source": "GHINcom"
./.history/backend/app/main_20250726081357.py:1169:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726200318.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200318.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200318.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200318.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200318.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200318.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200318.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200318.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200318.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200318.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200318.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200318.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200318.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200318.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200318.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200318.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200318.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200318.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200318.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200318.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200318.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200318.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200318.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200318.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200318.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200318.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200318.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200318.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200318.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200318.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200318.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200318.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200318.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200318.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200318.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200318.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200318.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200318.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200318.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727081050.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727081050.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727081050.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727081050.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081050.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081050.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081050.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727081050.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727081050.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727081050.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727081050.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727081050.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727081050.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727081050.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727081050.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727081050.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727081050.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727081050.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081050.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081050.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081050.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727081050.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726194147.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726194147.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726194147.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726194147.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726194147.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726194147.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726194147.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726194147.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726194147.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726194147.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726194147.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726194147.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726194147.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726194147.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726194147.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726194147.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726194147.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726194147.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726194147.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726194147.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726194147.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726194147.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726194147.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726194147.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726194147.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726194147.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726194147.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726194147.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726194147.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726194147.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726194147.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726194147.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726194147.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726194147.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726194147.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726194147.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726194147.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726194147.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726194147.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151802.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151802.py:249:    """Look up golfers by name using GHIN API"""
./.history/backend/app/main_20250728151802.py:251:        # Get GHIN credentials from environment
./.history/backend/app/main_20250728151802.py:252:        email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151802.py:253:        password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151802.py:254:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151802.py:257:            return {"error": "GHIN credentials not configured"}
./.history/backend/app/main_20250728151802.py:259:        # GHIN API endpoints
./.history/backend/app/main_20250728151802.py:260:        GHIN_AUTH_URL = "https://www.ghin.com/api/v1/authenticate"
./.history/backend/app/main_20250728151802.py:261:        GHIN_SEARCH_URL = "https://www.ghin.com/api/v1/golfer_search"
./.history/backend/app/main_20250728151802.py:263:        # Authenticate with GHIN
./.history/backend/app/main_20250728151802.py:270:            "source": "GHINcom"
./.history/backend/app/main_20250728151802.py:274:            auth_response = client.post(GHIN_AUTH_URL, json=auth_data)
./.history/backend/app/main_20250728151802.py:289:                GHIN_SEARCH_URL,
./.history/backend/app/main_20250728151802.py:298:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./.history/backend/app/main_20250728151802.py:299:        return {"error": f"GHIN API error: {e.response.status_code}"}
./.history/backend/app/main_20250728151802.py:301:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151802.py:306:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151802.py:307:    email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151802.py:308:    password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151802.py:309:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724165835.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724165835.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724165835.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724165835.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724165835.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724165835.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724165835.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724165835.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724165835.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724165835.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724165835.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724165835.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724165835.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724165835.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724165835.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724165835.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724165835.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724165835.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724165835.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724165835.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724165835.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724165835.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724165835.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724165835.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724165835.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724165835.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724165835.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724165835.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724165835.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724165835.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724165835.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724165835.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724165835.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724165835.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724165835.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724165835.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727082403.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250727082403.py:249:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727082403.py:251:        # GHIN API credentials from environment
./.history/backend/app/main_20250727082403.py:252:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727082403.py:253:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727082403.py:254:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727082403.py:258:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727082403.py:259:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727082403.py:262:        # GHIN API endpoints
./.history/backend/app/main_20250727082403.py:266:        # Authenticate with GHIN
./.history/backend/app/main_20250727082403.py:273:            "source": "GHINcom"
./.history/backend/app/main_20250727082403.py:280:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727082403.py:289:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727082403.py:306:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727082403.py:318:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727082403.py:320:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727082403.py:326:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727082403.py:328:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727082403.py:329:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727082403.py:330:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727082403.py:340:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727082403.py:342:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250724165840.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724165840.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724165840.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724165840.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724165840.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724165840.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724165840.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724165840.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724165840.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724165840.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724165840.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724165840.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724165840.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724165840.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724165840.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724165840.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724165840.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724165840.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724165840.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724165840.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724165840.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724165840.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724165840.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724165840.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724165840.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724165840.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724165840.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724165840.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724165840.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724165840.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724165840.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724165840.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724165840.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724165840.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724165840.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724165840.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726204457.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726204457.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726204457.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726204457.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726204457.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726204457.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726204457.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726204457.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726204457.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726204457.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726204457.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726204457.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726204457.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726204457.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726204457.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726204457.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726204457.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726204457.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726204457.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726204457.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726204457.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726204457.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726204457.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726204457.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726204457.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726204457.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726204457.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726204457.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726204457.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726204457.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726204457.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726204457.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726204457.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726204457.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726204457.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726204457.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726204457.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726204457.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726204457.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726210037.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726210037.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726210037.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726210037.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726210037.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726210037.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726210037.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726210037.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726210037.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726210037.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726210037.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726210037.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726210037.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726210037.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726210037.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726210037.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726210037.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726210037.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726210037.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726210037.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726210037.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726210037.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726210037.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726210037.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726210037.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726210037.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726210037.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726210037.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726210037.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726210037.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726210037.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726210037.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726210037.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726210037.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726210037.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726210037.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726210037.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726210037.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726210037.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727075743.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727075743.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727075743.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727075743.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075743.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075743.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075743.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727075743.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727075743.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727075743.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727075743.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727075743.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727075743.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727075743.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727075743.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727075743.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727075743.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727075743.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075743.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075743.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075743.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727075743.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726104226.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726104226.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726104226.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726104226.py:1126:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726104226.py:1127:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726104226.py:1136:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726104226.py:1138:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726104226.py:1139:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726104226.py:1140:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726104226.py:1141:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726104226.py:1146:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726104226.py:1148:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726104226.py:1151:        # Authenticate with GHIN
./.history/backend/app/main_20250726104226.py:1152:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726104226.py:1155:            "source": "GHINcom"
./.history/backend/app/main_20250726104226.py:1161:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726104226.py:1171:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726104226.py:1181:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726104226.py:1190:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726104226.py:1218:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726104226.py:1222:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726104226.py:1225:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726104226.py:1231:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726104226.py:1232:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726104226.py:1233:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726104226.py:1234:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726104226.py:1239:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726104226.py:1240:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726104226.py:1241:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726104226.py:1244:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726104226.py:1245:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726104226.py:1250:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726104226.py:1255:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726104226.py:1256:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726104226.py:1259:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726104226.py:1260:                "source": "GHINcom"
./.history/backend/app/main_20250726104226.py:1264:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726104226.py:1284:                        "source": "GHINcom"
./.history/backend/app/main_20250726104226.py:1287:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144311.py:554:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724144311.py:555:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724144311.py:564:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144311.py:565:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144311.py:566:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144311.py:567:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724144311.py:572:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144311.py:573:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144311.py:576:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144311.py:577:        "source": "GHINcom"
./.history/backend/app/main_20250724144311.py:581:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144311.py:586:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724144311.py:599:        "source": "GHINcom"
./.history/backend/app/main_20250724144311.py:603:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144311.py:617:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724144311.py:622:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724144311.py:623:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144311.py:624:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144311.py:625:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144311.py:630:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724144311.py:631:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724144311.py:632:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724144311.py:635:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724144311.py:636:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724144311.py:641:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724144311.py:646:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144311.py:647:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144311.py:650:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144311.py:651:                "source": "GHINcom"
./.history/backend/app/main_20250724144311.py:655:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144311.py:675:                        "source": "GHINcom"
./.history/backend/app/main_20250724144311.py:678:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726145949.py:498:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726145949.py:512:            "name": "GHIN",
./.history/backend/app/main_20250726145949.py:514:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726145949.py:1075:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726145949.py:1076:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726145949.py:1085:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726145949.py:1087:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726145949.py:1088:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726145949.py:1089:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726145949.py:1090:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726145949.py:1095:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726145949.py:1097:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726145949.py:1100:        # Authenticate with GHIN
./.history/backend/app/main_20250726145949.py:1101:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726145949.py:1104:            "source": "GHINcom"
./.history/backend/app/main_20250726145949.py:1110:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726145949.py:1120:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726145949.py:1130:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726145949.py:1139:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726145949.py:1167:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726145949.py:1171:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726145949.py:1174:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726145949.py:1180:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726145949.py:1181:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726145949.py:1182:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726145949.py:1183:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726145949.py:1188:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726145949.py:1189:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726145949.py:1190:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726145949.py:1193:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726145949.py:1194:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726145949.py:1199:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726145949.py:1204:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726145949.py:1205:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726145949.py:1208:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726145949.py:1209:                "source": "GHINcom"
./.history/backend/app/main_20250726145949.py:1213:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726145949.py:1233:                        "source": "GHINcom"
./.history/backend/app/main_20250726145949.py:1236:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144325.py:554:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724144325.py:555:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724144325.py:564:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144325.py:565:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144325.py:566:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144325.py:567:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724144325.py:572:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144325.py:573:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144325.py:576:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144325.py:577:        "source": "GHINcom"
./.history/backend/app/main_20250724144325.py:581:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144325.py:586:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724144325.py:599:        "source": "GHINcom"
./.history/backend/app/main_20250724144325.py:603:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144325.py:617:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724144325.py:622:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724144325.py:623:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144325.py:624:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144325.py:625:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144325.py:630:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724144325.py:631:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724144325.py:632:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724144325.py:635:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724144325.py:636:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724144325.py:641:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724144325.py:646:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144325.py:647:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144325.py:650:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144325.py:651:                "source": "GHINcom"
./.history/backend/app/main_20250724144325.py:655:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144325.py:675:                        "source": "GHINcom"
./.history/backend/app/main_20250724144325.py:678:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151412.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151412.py:249:    """Look up golfers by name using GHIN API"""
./.history/backend/app/main_20250728151412.py:251:        # Get GHIN credentials from environment
./.history/backend/app/main_20250728151412.py:252:        email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151412.py:253:        password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151412.py:254:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151412.py:257:            return {"error": "GHIN credentials not configured"}
./.history/backend/app/main_20250728151412.py:259:        # GHIN API endpoints
./.history/backend/app/main_20250728151412.py:260:        GHIN_AUTH_URL = "https://www.ghin.com/api/v1/authenticate"
./.history/backend/app/main_20250728151412.py:261:        GHIN_SEARCH_URL = "https://www.ghin.com/api/v1/golfer_search"
./.history/backend/app/main_20250728151412.py:263:        # Authenticate with GHIN
./.history/backend/app/main_20250728151412.py:270:            "source": "GHINcom"
./.history/backend/app/main_20250728151412.py:274:            auth_response = client.post(GHIN_AUTH_URL, json=auth_data)
./.history/backend/app/main_20250728151412.py:289:                GHIN_SEARCH_URL,
./.history/backend/app/main_20250728151412.py:298:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./.history/backend/app/main_20250728151412.py:299:        return {"error": f"GHIN API error: {e.response.status_code}"}
./.history/backend/app/main_20250728151412.py:301:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151412.py:306:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151412.py:307:    email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151412.py:308:    password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151412.py:309:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726122041.py:512:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726122041.py:526:            "name": "GHIN",
./.history/backend/app/main_20250726122041.py:528:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726122041.py:1154:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726122041.py:1155:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726122041.py:1164:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726122041.py:1166:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726122041.py:1167:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726122041.py:1168:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726122041.py:1169:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726122041.py:1174:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726122041.py:1176:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726122041.py:1179:        # Authenticate with GHIN
./.history/backend/app/main_20250726122041.py:1180:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726122041.py:1183:            "source": "GHINcom"
./.history/backend/app/main_20250726122041.py:1189:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726122041.py:1199:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726122041.py:1209:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726122041.py:1218:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726122041.py:1246:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726122041.py:1250:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726122041.py:1253:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726122041.py:1259:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726122041.py:1260:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726122041.py:1261:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726122041.py:1262:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726122041.py:1267:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726122041.py:1268:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726122041.py:1269:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726122041.py:1272:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726122041.py:1273:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726122041.py:1278:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726122041.py:1283:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726122041.py:1284:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726122041.py:1287:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726122041.py:1288:                "source": "GHINcom"
./.history/backend/app/main_20250726122041.py:1292:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726122041.py:1312:                        "source": "GHINcom"
./.history/backend/app/main_20250726122041.py:1315:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724165844.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724165844.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724165844.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724165844.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724165844.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724165844.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724165844.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724165844.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724165844.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724165844.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724165844.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724165844.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724165844.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724165844.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724165844.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724165844.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724165844.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724165844.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724165844.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724165844.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724165844.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724165844.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724165844.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724165844.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724165844.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724165844.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724165844.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724165844.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724165844.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724165844.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724165844.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724165844.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724165844.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724165844.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724165844.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724165844.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151721.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151721.py:249:    """Look up golfers by name using GHIN API"""
./.history/backend/app/main_20250728151721.py:251:        # Get GHIN credentials from environment
./.history/backend/app/main_20250728151721.py:252:        email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151721.py:253:        password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151721.py:254:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151721.py:257:            return {"error": "GHIN credentials not configured"}
./.history/backend/app/main_20250728151721.py:259:        # GHIN API endpoints
./.history/backend/app/main_20250728151721.py:260:        GHIN_AUTH_URL = "https://www.ghin.com/api/v1/authenticate"
./.history/backend/app/main_20250728151721.py:261:        GHIN_SEARCH_URL = "https://www.ghin.com/api/v1/golfer_search"
./.history/backend/app/main_20250728151721.py:263:        # Authenticate with GHIN
./.history/backend/app/main_20250728151721.py:270:            "source": "GHINcom"
./.history/backend/app/main_20250728151721.py:274:            auth_response = client.post(GHIN_AUTH_URL, json=auth_data)
./.history/backend/app/main_20250728151721.py:289:                GHIN_SEARCH_URL,
./.history/backend/app/main_20250728151721.py:298:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./.history/backend/app/main_20250728151721.py:299:        return {"error": f"GHIN API error: {e.response.status_code}"}
./.history/backend/app/main_20250728151721.py:301:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151721.py:306:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151721.py:307:    email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151721.py:308:    password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151721.py:309:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727080512.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727080512.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727080512.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727080512.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080512.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080512.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080512.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727080512.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727080512.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727080512.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727080512.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727080512.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727080512.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727080512.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727080512.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727080512.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727080512.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727080512.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080512.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080512.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080512.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727080512.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726210314.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726210314.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726210314.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726210314.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726210314.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726210314.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726210314.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726210314.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726210314.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726210314.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726210314.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726210314.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726210314.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726210314.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726210314.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726210314.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726210314.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726210314.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726210314.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726210314.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726210314.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726210314.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726210314.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726210314.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726210314.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726210314.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726210314.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726210314.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726210314.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726210314.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726210314.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726210314.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726210314.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726210314.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726210314.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726210314.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726210314.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726210314.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726210314.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726203322.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726203322.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726203322.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726203322.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726203322.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726203322.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726203322.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726203322.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726203322.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726203322.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726203322.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726203322.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726203322.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726203322.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726203322.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726203322.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726203322.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726203322.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726203322.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726203322.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726203322.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726203322.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726203322.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726203322.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726203322.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726203322.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726203322.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726203322.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726203322.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726203322.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726203322.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726203322.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726203322.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726203322.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726203322.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726203322.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726203322.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726203322.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726203322.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726083050.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726083050.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726083050.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726083050.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726083050.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726083050.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726083050.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726083050.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726083050.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726083050.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726083050.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726083050.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726083050.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726083050.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726083050.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726083050.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726083050.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726083050.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726083050.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726083050.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726083050.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726083050.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726083050.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726083050.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726083050.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726083050.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726083050.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726083050.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726083050.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726083050.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726083050.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726083050.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726083050.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726083050.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726083050.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726083050.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726083050.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726083050.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726083050.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726121956.py:510:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726121956.py:524:            "name": "GHIN",
./.history/backend/app/main_20250726121956.py:526:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726121956.py:1152:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726121956.py:1153:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726121956.py:1162:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726121956.py:1164:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726121956.py:1165:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726121956.py:1166:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726121956.py:1167:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726121956.py:1172:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726121956.py:1174:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726121956.py:1177:        # Authenticate with GHIN
./.history/backend/app/main_20250726121956.py:1178:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726121956.py:1181:            "source": "GHINcom"
./.history/backend/app/main_20250726121956.py:1187:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726121956.py:1197:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726121956.py:1207:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726121956.py:1216:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726121956.py:1244:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726121956.py:1248:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726121956.py:1251:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726121956.py:1257:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726121956.py:1258:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726121956.py:1259:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726121956.py:1260:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726121956.py:1265:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726121956.py:1266:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726121956.py:1267:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726121956.py:1270:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726121956.py:1271:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726121956.py:1276:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726121956.py:1281:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726121956.py:1282:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726121956.py:1285:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726121956.py:1286:                "source": "GHINcom"
./.history/backend/app/main_20250726121956.py:1290:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726121956.py:1310:                        "source": "GHINcom"
./.history/backend/app/main_20250726121956.py:1313:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726101238.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726101238.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726101238.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726101238.py:1126:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726101238.py:1127:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726101238.py:1136:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726101238.py:1138:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726101238.py:1139:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726101238.py:1140:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726101238.py:1141:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726101238.py:1146:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726101238.py:1148:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726101238.py:1151:        # Authenticate with GHIN
./.history/backend/app/main_20250726101238.py:1152:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726101238.py:1155:            "source": "GHINcom"
./.history/backend/app/main_20250726101238.py:1161:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726101238.py:1171:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726101238.py:1181:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726101238.py:1190:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726101238.py:1218:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726101238.py:1222:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726101238.py:1225:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726101238.py:1231:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726101238.py:1232:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726101238.py:1233:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726101238.py:1234:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726101238.py:1239:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726101238.py:1240:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726101238.py:1241:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726101238.py:1244:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726101238.py:1245:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726101238.py:1250:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726101238.py:1255:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726101238.py:1256:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726101238.py:1259:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726101238.py:1260:                "source": "GHINcom"
./.history/backend/app/main_20250726101238.py:1264:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726101238.py:1284:                        "source": "GHINcom"
./.history/backend/app/main_20250726101238.py:1287:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726201154.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726201154.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726201154.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726201154.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726201154.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726201154.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726201154.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726201154.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726201154.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726201154.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726201154.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726201154.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726201154.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726201154.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726201154.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726201154.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726201154.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726201154.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726201154.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726201154.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726201154.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726201154.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726201154.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726201154.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726201154.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726201154.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726201154.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726201154.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726201154.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726201154.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726201154.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726201154.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726201154.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726201154.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726201154.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726201154.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726201154.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726201154.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726201154.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250722164646.py:478:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250722164646.py:479:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250722164646.py:488:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250722164646.py:489:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250722164646.py:490:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250722164646.py:491:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250722164646.py:496:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250722164646.py:497:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250722164646.py:500:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250722164646.py:501:        "source": "GHINcom"
./.history/backend/app/main_20250722164646.py:505:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250722164646.py:510:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250722164646.py:523:        "source": "GHINcom"
./.history/backend/app/main_20250722164646.py:527:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250722164646.py:541:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250726153955.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726153955.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726153955.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726153955.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726153955.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726153955.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726153955.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726153955.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726153955.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726153955.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726153955.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726153955.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726153955.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726153955.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726153955.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726153955.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726153955.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726153955.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726153955.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726153955.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726153955.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726153955.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726153955.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726153955.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726153955.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726153955.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726153955.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726153955.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726153955.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726153955.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726153955.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726153955.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726153955.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726153955.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726153955.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726153955.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726153955.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726153955.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726153955.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726124226.py:554:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124226.py:568:            "name": "GHIN",
./.history/backend/app/main_20250726124226.py:570:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124226.py:1222:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124226.py:1223:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124226.py:1232:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124226.py:1234:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124226.py:1235:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124226.py:1236:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124226.py:1237:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124226.py:1242:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124226.py:1244:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124226.py:1247:        # Authenticate with GHIN
./.history/backend/app/main_20250726124226.py:1248:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124226.py:1251:            "source": "GHINcom"
./.history/backend/app/main_20250726124226.py:1257:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124226.py:1267:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124226.py:1277:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124226.py:1286:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124226.py:1314:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124226.py:1318:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124226.py:1321:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124226.py:1327:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124226.py:1328:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124226.py:1329:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124226.py:1330:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124226.py:1335:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124226.py:1336:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124226.py:1337:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124226.py:1340:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124226.py:1341:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124226.py:1346:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124226.py:1351:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124226.py:1352:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124226.py:1355:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124226.py:1356:                "source": "GHINcom"
./.history/backend/app/main_20250726124226.py:1360:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124226.py:1380:                        "source": "GHINcom"
./.history/backend/app/main_20250726124226.py:1383:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724165830.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724165830.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724165830.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724165830.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724165830.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724165830.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724165830.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724165830.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724165830.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724165830.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724165830.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724165830.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724165830.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724165830.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724165830.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724165830.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724165830.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724165830.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724165830.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724165830.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724165830.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724165830.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724165830.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724165830.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724165830.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724165830.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724165830.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724165830.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724165830.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724165830.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724165830.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724165830.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724165830.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724165830.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724165830.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724165830.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144310.py:536:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724144310.py:537:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724144310.py:546:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144310.py:547:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144310.py:548:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144310.py:549:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724144310.py:554:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144310.py:555:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144310.py:558:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144310.py:559:        "source": "GHINcom"
./.history/backend/app/main_20250724144310.py:563:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144310.py:568:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724144310.py:581:        "source": "GHINcom"
./.history/backend/app/main_20250724144310.py:585:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144310.py:599:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724144310.py:604:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724144310.py:605:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144310.py:606:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144310.py:607:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144310.py:612:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724144310.py:613:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724144310.py:614:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724144310.py:617:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724144310.py:618:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724144310.py:623:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724144310.py:628:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144310.py:629:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144310.py:632:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144310.py:633:                "source": "GHINcom"
./.history/backend/app/main_20250724144310.py:637:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144310.py:657:                        "source": "GHINcom"
./.history/backend/app/main_20250724144310.py:660:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726085326.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726085326.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726085326.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726085326.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726085326.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726085326.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726085326.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726085326.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726085326.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726085326.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726085326.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726085326.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726085326.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726085326.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726085326.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726085326.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726085326.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726085326.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726085326.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726085326.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726085326.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726085326.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726085326.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726085326.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726085326.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726085326.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726085326.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726085326.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726085326.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726085326.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726085326.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726085326.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726085326.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726085326.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726085326.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726085326.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726085326.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726085326.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726085326.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726091940.py:452:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726091940.py:466:            "name": "GHIN",
./.history/backend/app/main_20250726091940.py:468:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726091940.py:1071:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726091940.py:1072:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726091940.py:1081:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726091940.py:1083:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726091940.py:1084:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726091940.py:1085:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726091940.py:1086:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726091940.py:1091:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726091940.py:1093:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726091940.py:1096:        # Authenticate with GHIN
./.history/backend/app/main_20250726091940.py:1097:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726091940.py:1100:            "source": "GHINcom"
./.history/backend/app/main_20250726091940.py:1106:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726091940.py:1116:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726091940.py:1126:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726091940.py:1135:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726091940.py:1163:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726091940.py:1167:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726091940.py:1170:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726091940.py:1176:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726091940.py:1177:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726091940.py:1178:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726091940.py:1179:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726091940.py:1184:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726091940.py:1185:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726091940.py:1186:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726091940.py:1189:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726091940.py:1190:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726091940.py:1195:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726091940.py:1200:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726091940.py:1201:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726091940.py:1204:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726091940.py:1205:                "source": "GHINcom"
./.history/backend/app/main_20250726091940.py:1209:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726091940.py:1229:                        "source": "GHINcom"
./.history/backend/app/main_20250726091940.py:1232:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726104343.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726104343.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726104343.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726104343.py:1149:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726104343.py:1150:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726104343.py:1159:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726104343.py:1161:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726104343.py:1162:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726104343.py:1163:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726104343.py:1164:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726104343.py:1169:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726104343.py:1171:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726104343.py:1174:        # Authenticate with GHIN
./.history/backend/app/main_20250726104343.py:1175:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726104343.py:1178:            "source": "GHINcom"
./.history/backend/app/main_20250726104343.py:1184:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726104343.py:1194:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726104343.py:1204:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726104343.py:1213:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726104343.py:1241:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726104343.py:1245:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726104343.py:1248:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726104343.py:1254:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726104343.py:1255:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726104343.py:1256:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726104343.py:1257:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726104343.py:1262:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726104343.py:1263:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726104343.py:1264:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726104343.py:1267:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726104343.py:1268:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726104343.py:1273:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726104343.py:1278:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726104343.py:1279:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726104343.py:1282:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726104343.py:1283:                "source": "GHINcom"
./.history/backend/app/main_20250726104343.py:1287:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726104343.py:1307:                        "source": "GHINcom"
./.history/backend/app/main_20250726104343.py:1310:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724160310.py:554:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724160310.py:555:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724160310.py:564:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724160310.py:566:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724160310.py:567:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160310.py:568:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160310.py:569:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724160310.py:574:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724160310.py:576:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724160310.py:579:        # Authenticate with GHIN
./.history/backend/app/main_20250724160310.py:580:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724160310.py:583:            "source": "GHINcom"
./.history/backend/app/main_20250724160310.py:589:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724160310.py:599:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724160310.py:609:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724160310.py:618:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724160310.py:646:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724160310.py:650:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724160310.py:653:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724160310.py:659:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724160310.py:660:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160310.py:661:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160310.py:662:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724160310.py:667:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724160310.py:668:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724160310.py:669:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724160310.py:672:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724160310.py:673:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724160310.py:678:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724160310.py:683:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724160310.py:684:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724160310.py:687:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724160310.py:688:                "source": "GHINcom"
./.history/backend/app/main_20250724160310.py:692:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724160310.py:712:                        "source": "GHINcom"
./.history/backend/app/main_20250724160310.py:715:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726104252.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726104252.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726104252.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726104252.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726104252.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726104252.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726104252.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726104252.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726104252.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726104252.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726104252.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726104252.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726104252.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726104252.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726104252.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726104252.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726104252.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726104252.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726104252.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726104252.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726104252.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726104252.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726104252.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726104252.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726104252.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726104252.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726104252.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726104252.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726104252.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726104252.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726104252.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726104252.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726104252.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726104252.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726104252.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726104252.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726104252.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726104252.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726104252.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151413.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151413.py:249:    """Look up golfers by name using GHIN API"""
./.history/backend/app/main_20250728151413.py:251:        # Get GHIN credentials from environment
./.history/backend/app/main_20250728151413.py:252:        email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151413.py:253:        password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151413.py:254:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151413.py:257:            return {"error": "GHIN credentials not configured"}
./.history/backend/app/main_20250728151413.py:259:        # GHIN API endpoints
./.history/backend/app/main_20250728151413.py:260:        GHIN_AUTH_URL = "https://www.ghin.com/api/v1/authenticate"
./.history/backend/app/main_20250728151413.py:261:        GHIN_SEARCH_URL = "https://www.ghin.com/api/v1/golfer_search"
./.history/backend/app/main_20250728151413.py:263:        # Authenticate with GHIN
./.history/backend/app/main_20250728151413.py:270:            "source": "GHINcom"
./.history/backend/app/main_20250728151413.py:274:            auth_response = client.post(GHIN_AUTH_URL, json=auth_data)
./.history/backend/app/main_20250728151413.py:289:                GHIN_SEARCH_URL,
./.history/backend/app/main_20250728151413.py:298:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./.history/backend/app/main_20250728151413.py:299:        return {"error": f"GHIN API error: {e.response.status_code}"}
./.history/backend/app/main_20250728151413.py:301:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151413.py:306:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151413.py:307:    email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151413.py:308:    password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151413.py:309:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725221746.py:389:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250725221746.py:403:            "name": "GHIN",
./.history/backend/app/main_20250725221746.py:405:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250725221746.py:1008:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725221746.py:1009:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725221746.py:1018:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725221746.py:1020:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725221746.py:1021:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725221746.py:1022:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725221746.py:1023:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725221746.py:1028:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725221746.py:1030:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725221746.py:1033:        # Authenticate with GHIN
./.history/backend/app/main_20250725221746.py:1034:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725221746.py:1037:            "source": "GHINcom"
./.history/backend/app/main_20250725221746.py:1043:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725221746.py:1053:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725221746.py:1063:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725221746.py:1072:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725221746.py:1100:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725221746.py:1104:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725221746.py:1107:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725221746.py:1113:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725221746.py:1114:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725221746.py:1115:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725221746.py:1116:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725221746.py:1121:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725221746.py:1122:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725221746.py:1123:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725221746.py:1126:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725221746.py:1127:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725221746.py:1132:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725221746.py:1137:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725221746.py:1138:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725221746.py:1141:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725221746.py:1142:                "source": "GHINcom"
./.history/backend/app/main_20250725221746.py:1146:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725221746.py:1166:                        "source": "GHINcom"
./.history/backend/app/main_20250725221746.py:1169:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726150355.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726150355.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726150355.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726150355.py:1082:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726150355.py:1083:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726150355.py:1092:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726150355.py:1094:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726150355.py:1095:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726150355.py:1096:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726150355.py:1097:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726150355.py:1102:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726150355.py:1104:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726150355.py:1107:        # Authenticate with GHIN
./.history/backend/app/main_20250726150355.py:1108:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726150355.py:1111:            "source": "GHINcom"
./.history/backend/app/main_20250726150355.py:1117:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726150355.py:1127:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726150355.py:1137:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726150355.py:1146:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726150355.py:1174:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726150355.py:1178:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726150355.py:1181:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726150355.py:1187:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726150355.py:1188:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726150355.py:1189:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726150355.py:1190:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726150355.py:1195:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726150355.py:1196:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726150355.py:1197:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726150355.py:1200:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726150355.py:1201:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726150355.py:1206:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726150355.py:1211:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726150355.py:1212:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726150355.py:1215:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726150355.py:1216:                "source": "GHINcom"
./.history/backend/app/main_20250726150355.py:1220:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726150355.py:1240:                        "source": "GHINcom"
./.history/backend/app/main_20250726150355.py:1243:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727073623.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727073623.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727073623.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727073623.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727073623.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727073623.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727073623.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727073623.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727073623.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727073623.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727073623.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727073623.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727073623.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727073623.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727073623.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727073623.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727073623.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727073623.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727073623.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727073623.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727073623.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727073623.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727073623.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727073623.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727073623.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727073623.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727073623.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727073623.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727073623.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727073623.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727073623.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727073623.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727073623.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727073623.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727073623.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727073623.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727073623.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727073623.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727073623.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726144933.py:516:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726144933.py:530:            "name": "GHIN",
./.history/backend/app/main_20250726144933.py:532:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726144933.py:1093:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726144933.py:1094:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726144933.py:1103:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726144933.py:1105:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726144933.py:1106:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726144933.py:1107:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726144933.py:1108:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726144933.py:1113:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726144933.py:1115:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726144933.py:1118:        # Authenticate with GHIN
./.history/backend/app/main_20250726144933.py:1119:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726144933.py:1122:            "source": "GHINcom"
./.history/backend/app/main_20250726144933.py:1128:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726144933.py:1138:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726144933.py:1148:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726144933.py:1157:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726144933.py:1185:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726144933.py:1189:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726144933.py:1192:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726144933.py:1198:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726144933.py:1199:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726144933.py:1200:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726144933.py:1201:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726144933.py:1206:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726144933.py:1207:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726144933.py:1208:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726144933.py:1211:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726144933.py:1212:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726144933.py:1217:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726144933.py:1222:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726144933.py:1223:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726144933.py:1226:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726144933.py:1227:                "source": "GHINcom"
./.history/backend/app/main_20250726144933.py:1231:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726144933.py:1251:                        "source": "GHINcom"
./.history/backend/app/main_20250726144933.py:1254:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726082826.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726082826.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726082826.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726082826.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726082826.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726082826.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726082826.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726082826.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082826.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082826.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726082826.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726082826.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726082826.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726082826.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726082826.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726082826.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726082826.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726082826.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726082826.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726082826.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726082826.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726082826.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726082826.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726082826.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082826.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082826.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726082826.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726082826.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726082826.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726082826.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726082826.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726082826.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726082826.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726082826.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726082826.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726082826.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726082826.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726082826.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726082826.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250725221410.py:389:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250725221410.py:403:            "name": "GHIN",
./.history/backend/app/main_20250725221410.py:405:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250725221410.py:1008:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725221410.py:1009:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725221410.py:1018:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725221410.py:1020:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725221410.py:1021:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725221410.py:1022:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725221410.py:1023:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725221410.py:1028:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725221410.py:1030:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725221410.py:1033:        # Authenticate with GHIN
./.history/backend/app/main_20250725221410.py:1034:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725221410.py:1037:            "source": "GHINcom"
./.history/backend/app/main_20250725221410.py:1043:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725221410.py:1053:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725221410.py:1063:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725221410.py:1072:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725221410.py:1100:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725221410.py:1104:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725221410.py:1107:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725221410.py:1113:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725221410.py:1114:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725221410.py:1115:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725221410.py:1116:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725221410.py:1121:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725221410.py:1122:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725221410.py:1123:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725221410.py:1126:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725221410.py:1127:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725221410.py:1132:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725221410.py:1137:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725221410.py:1138:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725221410.py:1141:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725221410.py:1142:                "source": "GHINcom"
./.history/backend/app/main_20250725221410.py:1146:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725221410.py:1166:                        "source": "GHINcom"
./.history/backend/app/main_20250725221410.py:1169:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726202457.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726202457.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726202457.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726202457.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726202457.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726202457.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726202457.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726202457.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726202457.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726202457.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726202457.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726202457.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726202457.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726202457.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726202457.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726202457.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726202457.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726202457.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726202457.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726202457.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726202457.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726202457.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726202457.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726202457.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726202457.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726202457.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726202457.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726202457.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726202457.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726202457.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726202457.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726202457.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726202457.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726202457.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726202457.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726202457.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726202457.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726202457.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726202457.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727075612.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727075612.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727075612.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727075612.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075612.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075612.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075612.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727075612.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727075612.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727075612.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727075612.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727075612.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727075612.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727075612.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727075612.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727075612.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727075612.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727075612.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075612.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075612.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075612.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727075612.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726124236.py:554:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124236.py:568:            "name": "GHIN",
./.history/backend/app/main_20250726124236.py:570:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124236.py:1222:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124236.py:1223:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124236.py:1232:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124236.py:1234:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124236.py:1235:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124236.py:1236:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124236.py:1237:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124236.py:1242:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124236.py:1244:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124236.py:1247:        # Authenticate with GHIN
./.history/backend/app/main_20250726124236.py:1248:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124236.py:1251:            "source": "GHINcom"
./.history/backend/app/main_20250726124236.py:1257:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124236.py:1267:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124236.py:1277:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124236.py:1286:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124236.py:1314:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124236.py:1318:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124236.py:1321:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124236.py:1327:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124236.py:1328:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124236.py:1329:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124236.py:1330:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124236.py:1335:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124236.py:1336:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124236.py:1337:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124236.py:1340:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124236.py:1341:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124236.py:1346:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124236.py:1351:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124236.py:1352:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124236.py:1355:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124236.py:1356:                "source": "GHINcom"
./.history/backend/app/main_20250726124236.py:1360:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124236.py:1380:                        "source": "GHINcom"
./.history/backend/app/main_20250726124236.py:1383:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726153706.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726153706.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726153706.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726153706.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726153706.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726153706.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726153706.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726153706.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726153706.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726153706.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726153706.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726153706.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726153706.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726153706.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726153706.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726153706.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726153706.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726153706.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726153706.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726153706.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726153706.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726153706.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726153706.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726153706.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726153706.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726153706.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726153706.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726153706.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726153706.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726153706.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726153706.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726153706.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726153706.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726153706.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726153706.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726153706.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726153706.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726153706.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726153706.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726083222.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726083222.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726083222.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726083222.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726083222.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726083222.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726083222.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726083222.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726083222.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726083222.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726083222.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726083222.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726083222.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726083222.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726083222.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726083222.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726083222.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726083222.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726083222.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726083222.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726083222.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726083222.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726083222.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726083222.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726083222.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726083222.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726083222.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726083222.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726083222.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726083222.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726083222.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726083222.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726083222.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726083222.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726083222.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726083222.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726083222.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726083222.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726083222.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726124020.py:533:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124020.py:547:            "name": "GHIN",
./.history/backend/app/main_20250726124020.py:549:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124020.py:1201:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124020.py:1202:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124020.py:1211:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124020.py:1213:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124020.py:1214:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124020.py:1215:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124020.py:1216:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124020.py:1221:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124020.py:1223:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124020.py:1226:        # Authenticate with GHIN
./.history/backend/app/main_20250726124020.py:1227:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124020.py:1230:            "source": "GHINcom"
./.history/backend/app/main_20250726124020.py:1236:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124020.py:1246:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124020.py:1256:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124020.py:1265:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124020.py:1293:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124020.py:1297:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124020.py:1300:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124020.py:1306:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124020.py:1307:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124020.py:1308:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124020.py:1309:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124020.py:1314:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124020.py:1315:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124020.py:1316:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124020.py:1319:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124020.py:1320:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124020.py:1325:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124020.py:1330:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124020.py:1331:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124020.py:1334:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124020.py:1335:                "source": "GHINcom"
./.history/backend/app/main_20250726124020.py:1339:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124020.py:1359:                        "source": "GHINcom"
./.history/backend/app/main_20250726124020.py:1362:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726092214.py:452:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726092214.py:466:            "name": "GHIN",
./.history/backend/app/main_20250726092214.py:468:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726092214.py:1071:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726092214.py:1072:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726092214.py:1081:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726092214.py:1083:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726092214.py:1084:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726092214.py:1085:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726092214.py:1086:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726092214.py:1091:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726092214.py:1093:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726092214.py:1096:        # Authenticate with GHIN
./.history/backend/app/main_20250726092214.py:1097:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726092214.py:1100:            "source": "GHINcom"
./.history/backend/app/main_20250726092214.py:1106:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726092214.py:1116:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726092214.py:1126:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726092214.py:1135:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726092214.py:1163:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726092214.py:1167:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726092214.py:1170:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726092214.py:1176:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726092214.py:1177:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726092214.py:1178:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726092214.py:1179:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726092214.py:1184:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726092214.py:1185:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726092214.py:1186:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726092214.py:1189:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726092214.py:1190:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726092214.py:1195:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726092214.py:1200:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726092214.py:1201:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726092214.py:1204:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726092214.py:1205:                "source": "GHINcom"
./.history/backend/app/main_20250726092214.py:1209:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726092214.py:1229:                        "source": "GHINcom"
./.history/backend/app/main_20250726092214.py:1232:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727074659.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727074659.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727074659.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727074659.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727074659.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727074659.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727074659.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727074659.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074659.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074659.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727074659.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727074659.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727074659.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727074659.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727074659.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727074659.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727074659.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727074659.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727074659.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727074659.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727074659.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727074659.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727074659.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727074659.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074659.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074659.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727074659.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727074659.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727074659.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727074659.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727074659.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727074659.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727074659.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727074659.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727074659.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727074659.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727074659.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727074659.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727074659.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726201206.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726201206.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726201206.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726201206.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726201206.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726201206.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726201206.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726201206.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726201206.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726201206.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726201206.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726201206.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726201206.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726201206.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726201206.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726201206.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726201206.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726201206.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726201206.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726201206.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726201206.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726201206.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726201206.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726201206.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726201206.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726201206.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726201206.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726201206.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726201206.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726201206.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726201206.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726201206.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726201206.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726201206.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726201206.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726201206.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726201206.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726201206.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726201206.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151407.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151407.py:249:    """Look up golfers by name using GHIN API"""
./.history/backend/app/main_20250728151407.py:251:        # Get GHIN credentials from environment
./.history/backend/app/main_20250728151407.py:252:        email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151407.py:253:        password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151407.py:254:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151407.py:257:            return {"error": "GHIN credentials not configured"}
./.history/backend/app/main_20250728151407.py:259:        # GHIN API endpoints
./.history/backend/app/main_20250728151407.py:260:        GHIN_AUTH_URL = "https://www.ghin.com/api/v1/authenticate"
./.history/backend/app/main_20250728151407.py:261:        GHIN_SEARCH_URL = "https://www.ghin.com/api/v1/golfer_search"
./.history/backend/app/main_20250728151407.py:263:        # Authenticate with GHIN
./.history/backend/app/main_20250728151407.py:270:            "source": "GHINcom"
./.history/backend/app/main_20250728151407.py:274:            auth_response = client.post(GHIN_AUTH_URL, json=auth_data)
./.history/backend/app/main_20250728151407.py:289:                GHIN_SEARCH_URL,
./.history/backend/app/main_20250728151407.py:298:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./.history/backend/app/main_20250728151407.py:299:        return {"error": f"GHIN API error: {e.response.status_code}"}
./.history/backend/app/main_20250728151407.py:301:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151407.py:306:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151407.py:307:    email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151407.py:308:    password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151407.py:309:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726150235.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726150235.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726150235.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726150235.py:1082:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726150235.py:1083:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726150235.py:1092:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726150235.py:1094:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726150235.py:1095:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726150235.py:1096:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726150235.py:1097:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726150235.py:1102:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726150235.py:1104:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726150235.py:1107:        # Authenticate with GHIN
./.history/backend/app/main_20250726150235.py:1108:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726150235.py:1111:            "source": "GHINcom"
./.history/backend/app/main_20250726150235.py:1117:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726150235.py:1127:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726150235.py:1137:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726150235.py:1146:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726150235.py:1174:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726150235.py:1178:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726150235.py:1181:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726150235.py:1187:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726150235.py:1188:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726150235.py:1189:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726150235.py:1190:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726150235.py:1195:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726150235.py:1196:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726150235.py:1197:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726150235.py:1200:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726150235.py:1201:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726150235.py:1206:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726150235.py:1211:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726150235.py:1212:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726150235.py:1215:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726150235.py:1216:                "source": "GHINcom"
./.history/backend/app/main_20250726150235.py:1220:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726150235.py:1240:                        "source": "GHINcom"
./.history/backend/app/main_20250726150235.py:1243:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726082923.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726082923.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726082923.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726082923.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726082923.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726082923.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726082923.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726082923.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082923.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082923.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726082923.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726082923.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726082923.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726082923.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726082923.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726082923.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726082923.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726082923.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726082923.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726082923.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726082923.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726082923.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726082923.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726082923.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082923.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082923.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726082923.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726082923.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726082923.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726082923.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726082923.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726082923.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726082923.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726082923.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726082923.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726082923.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726082923.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726082923.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726082923.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250722182440.py:483:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250722182440.py:484:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250722182440.py:493:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250722182440.py:494:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250722182440.py:495:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250722182440.py:496:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250722182440.py:501:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250722182440.py:502:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250722182440.py:505:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250722182440.py:506:        "source": "GHINcom"
./.history/backend/app/main_20250722182440.py:510:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250722182440.py:515:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250722182440.py:528:        "source": "GHINcom"
./.history/backend/app/main_20250722182440.py:532:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250722182440.py:546:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250728151710.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151710.py:249:    """Look up golfers by name using GHIN API"""
./.history/backend/app/main_20250728151710.py:251:        # Get GHIN credentials from environment
./.history/backend/app/main_20250728151710.py:252:        email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151710.py:253:        password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151710.py:254:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151710.py:257:            return {"error": "GHIN credentials not configured"}
./.history/backend/app/main_20250728151710.py:259:        # GHIN API endpoints
./.history/backend/app/main_20250728151710.py:260:        GHIN_AUTH_URL = "https://www.ghin.com/api/v1/authenticate"
./.history/backend/app/main_20250728151710.py:261:        GHIN_SEARCH_URL = "https://www.ghin.com/api/v1/golfer_search"
./.history/backend/app/main_20250728151710.py:263:        # Authenticate with GHIN
./.history/backend/app/main_20250728151710.py:270:            "source": "GHINcom"
./.history/backend/app/main_20250728151710.py:274:            auth_response = client.post(GHIN_AUTH_URL, json=auth_data)
./.history/backend/app/main_20250728151710.py:289:                GHIN_SEARCH_URL,
./.history/backend/app/main_20250728151710.py:298:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./.history/backend/app/main_20250728151710.py:299:        return {"error": f"GHIN API error: {e.response.status_code}"}
./.history/backend/app/main_20250728151710.py:301:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151710.py:306:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151710.py:307:    email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151710.py:308:    password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151710.py:309:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724110044.py:483:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724110044.py:484:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724110044.py:493:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724110044.py:494:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724110044.py:495:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724110044.py:496:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724110044.py:501:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724110044.py:502:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724110044.py:505:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724110044.py:506:        "source": "GHINcom"
./.history/backend/app/main_20250724110044.py:510:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724110044.py:515:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724110044.py:528:        "source": "GHINcom"
./.history/backend/app/main_20250724110044.py:532:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724110044.py:546:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724110044.py:551:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724110044.py:552:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724110044.py:553:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724110044.py:554:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724110044.py:559:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724110044.py:560:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724110044.py:561:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724110044.py:564:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724110044.py:565:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724110044.py:570:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724110044.py:575:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724110044.py:576:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724110044.py:579:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724110044.py:580:                "source": "GHINcom"
./.history/backend/app/main_20250724110044.py:584:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724110044.py:604:                        "source": "GHINcom"
./.history/backend/app/main_20250724110044.py:607:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726122015.py:510:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726122015.py:524:            "name": "GHIN",
./.history/backend/app/main_20250726122015.py:526:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726122015.py:1152:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726122015.py:1153:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726122015.py:1162:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726122015.py:1164:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726122015.py:1165:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726122015.py:1166:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726122015.py:1167:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726122015.py:1172:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726122015.py:1174:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726122015.py:1177:        # Authenticate with GHIN
./.history/backend/app/main_20250726122015.py:1178:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726122015.py:1181:            "source": "GHINcom"
./.history/backend/app/main_20250726122015.py:1187:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726122015.py:1197:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726122015.py:1207:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726122015.py:1216:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726122015.py:1244:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726122015.py:1248:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726122015.py:1251:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726122015.py:1257:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726122015.py:1258:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726122015.py:1259:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726122015.py:1260:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726122015.py:1265:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726122015.py:1266:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726122015.py:1267:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726122015.py:1270:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726122015.py:1271:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726122015.py:1276:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726122015.py:1281:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726122015.py:1282:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726122015.py:1285:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726122015.py:1286:                "source": "GHINcom"
./.history/backend/app/main_20250726122015.py:1290:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726122015.py:1310:                        "source": "GHINcom"
./.history/backend/app/main_20250726122015.py:1313:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726122155.py:533:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726122155.py:547:            "name": "GHIN",
./.history/backend/app/main_20250726122155.py:549:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726122155.py:1198:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726122155.py:1199:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726122155.py:1208:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726122155.py:1210:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726122155.py:1211:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726122155.py:1212:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726122155.py:1213:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726122155.py:1218:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726122155.py:1220:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726122155.py:1223:        # Authenticate with GHIN
./.history/backend/app/main_20250726122155.py:1224:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726122155.py:1227:            "source": "GHINcom"
./.history/backend/app/main_20250726122155.py:1233:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726122155.py:1243:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726122155.py:1253:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726122155.py:1262:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726122155.py:1290:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726122155.py:1294:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726122155.py:1297:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726122155.py:1303:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726122155.py:1304:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726122155.py:1305:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726122155.py:1306:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726122155.py:1311:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726122155.py:1312:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726122155.py:1313:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726122155.py:1316:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726122155.py:1317:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726122155.py:1322:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726122155.py:1327:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726122155.py:1328:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726122155.py:1331:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726122155.py:1332:                "source": "GHINcom"
./.history/backend/app/main_20250726122155.py:1336:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726122155.py:1356:                        "source": "GHINcom"
./.history/backend/app/main_20250726122155.py:1359:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726150300.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726150300.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726150300.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726150300.py:1082:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726150300.py:1083:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726150300.py:1092:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726150300.py:1094:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726150300.py:1095:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726150300.py:1096:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726150300.py:1097:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726150300.py:1102:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726150300.py:1104:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726150300.py:1107:        # Authenticate with GHIN
./.history/backend/app/main_20250726150300.py:1108:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726150300.py:1111:            "source": "GHINcom"
./.history/backend/app/main_20250726150300.py:1117:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726150300.py:1127:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726150300.py:1137:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726150300.py:1146:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726150300.py:1174:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726150300.py:1178:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726150300.py:1181:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726150300.py:1187:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726150300.py:1188:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726150300.py:1189:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726150300.py:1190:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726150300.py:1195:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726150300.py:1196:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726150300.py:1197:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726150300.py:1200:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726150300.py:1201:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726150300.py:1206:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726150300.py:1211:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726150300.py:1212:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726150300.py:1215:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726150300.py:1216:                "source": "GHINcom"
./.history/backend/app/main_20250726150300.py:1220:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726150300.py:1240:                        "source": "GHINcom"
./.history/backend/app/main_20250726150300.py:1243:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726124206.py:534:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124206.py:548:            "name": "GHIN",
./.history/backend/app/main_20250726124206.py:550:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124206.py:1202:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124206.py:1203:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124206.py:1212:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124206.py:1214:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124206.py:1215:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124206.py:1216:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124206.py:1217:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124206.py:1222:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124206.py:1224:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124206.py:1227:        # Authenticate with GHIN
./.history/backend/app/main_20250726124206.py:1228:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124206.py:1231:            "source": "GHINcom"
./.history/backend/app/main_20250726124206.py:1237:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124206.py:1247:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124206.py:1257:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124206.py:1266:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124206.py:1294:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124206.py:1298:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124206.py:1301:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124206.py:1307:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124206.py:1308:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124206.py:1309:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124206.py:1310:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124206.py:1315:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124206.py:1316:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124206.py:1317:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124206.py:1320:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124206.py:1321:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124206.py:1326:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124206.py:1331:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124206.py:1332:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124206.py:1335:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124206.py:1336:                "source": "GHINcom"
./.history/backend/app/main_20250726124206.py:1340:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124206.py:1360:                        "source": "GHINcom"
./.history/backend/app/main_20250726124206.py:1363:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726200249.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200249.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200249.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200249.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200249.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200249.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200249.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200249.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200249.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200249.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200249.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200249.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200249.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200249.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200249.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200249.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200249.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200249.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200249.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200249.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200249.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200249.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200249.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200249.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200249.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200249.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200249.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200249.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200249.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200249.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200249.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200249.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200249.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200249.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200249.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200249.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200249.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200249.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200249.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727074758.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727074758.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727074758.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727074758.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727074758.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727074758.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727074758.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727074758.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074758.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074758.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727074758.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727074758.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727074758.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727074758.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727074758.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727074758.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727074758.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727074758.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727074758.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727074758.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727074758.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727074758.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727074758.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727074758.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074758.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074758.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727074758.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727074758.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727074758.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727074758.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727074758.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727074758.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727074758.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727074758.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727074758.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727074758.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727074758.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727074758.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727074758.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726145034.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726145034.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726145034.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726145034.py:1084:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726145034.py:1085:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726145034.py:1094:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726145034.py:1096:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726145034.py:1097:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726145034.py:1098:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726145034.py:1099:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726145034.py:1104:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726145034.py:1106:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726145034.py:1109:        # Authenticate with GHIN
./.history/backend/app/main_20250726145034.py:1110:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726145034.py:1113:            "source": "GHINcom"
./.history/backend/app/main_20250726145034.py:1119:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726145034.py:1129:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726145034.py:1139:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726145034.py:1148:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726145034.py:1176:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726145034.py:1180:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726145034.py:1183:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726145034.py:1189:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726145034.py:1190:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726145034.py:1191:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726145034.py:1192:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726145034.py:1197:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726145034.py:1198:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726145034.py:1199:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726145034.py:1202:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726145034.py:1203:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726145034.py:1208:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726145034.py:1213:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726145034.py:1214:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726145034.py:1217:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726145034.py:1218:                "source": "GHINcom"
./.history/backend/app/main_20250726145034.py:1222:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726145034.py:1242:                        "source": "GHINcom"
./.history/backend/app/main_20250726145034.py:1245:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726145017.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726145017.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726145017.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726145017.py:1084:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726145017.py:1085:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726145017.py:1094:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726145017.py:1096:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726145017.py:1097:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726145017.py:1098:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726145017.py:1099:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726145017.py:1104:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726145017.py:1106:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726145017.py:1109:        # Authenticate with GHIN
./.history/backend/app/main_20250726145017.py:1110:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726145017.py:1113:            "source": "GHINcom"
./.history/backend/app/main_20250726145017.py:1119:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726145017.py:1129:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726145017.py:1139:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726145017.py:1148:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726145017.py:1176:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726145017.py:1180:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726145017.py:1183:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726145017.py:1189:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726145017.py:1190:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726145017.py:1191:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726145017.py:1192:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726145017.py:1197:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726145017.py:1198:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726145017.py:1199:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726145017.py:1202:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726145017.py:1203:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726145017.py:1208:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726145017.py:1213:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726145017.py:1214:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726145017.py:1217:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726145017.py:1218:                "source": "GHINcom"
./.history/backend/app/main_20250726145017.py:1222:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726145017.py:1242:                        "source": "GHINcom"
./.history/backend/app/main_20250726145017.py:1245:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250725181654.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725181654.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725181654.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725181654.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725181654.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725181654.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725181654.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725181654.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725181654.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725181654.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250725181654.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725181654.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250725181654.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725181654.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725181654.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725181654.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725181654.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725181654.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725181654.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725181654.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725181654.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725181654.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725181654.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725181654.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725181654.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725181654.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725181654.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725181654.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725181654.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725181654.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725181654.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725181654.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725181654.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250725181654.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725181654.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250725181654.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726082835.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726082835.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726082835.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726082835.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726082835.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726082835.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726082835.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726082835.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082835.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082835.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726082835.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726082835.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726082835.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726082835.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726082835.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726082835.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726082835.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726082835.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726082835.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726082835.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726082835.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726082835.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726082835.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726082835.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082835.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082835.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726082835.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726082835.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726082835.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726082835.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726082835.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726082835.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726082835.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726082835.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726082835.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726082835.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726082835.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726082835.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726082835.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144327.py:554:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724144327.py:555:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724144327.py:564:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724144327.py:566:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724144327.py:567:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144327.py:568:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144327.py:569:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724144327.py:574:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724144327.py:576:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724144327.py:579:        # Authenticate with GHIN
./.history/backend/app/main_20250724144327.py:580:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724144327.py:583:            "source": "GHINcom"
./.history/backend/app/main_20250724144327.py:589:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724144327.py:599:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724144327.py:609:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724144327.py:618:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724144327.py:646:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724144327.py:650:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724144327.py:653:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724144327.py:659:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724144327.py:660:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144327.py:661:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144327.py:662:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144327.py:667:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724144327.py:668:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724144327.py:669:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724144327.py:672:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724144327.py:673:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724144327.py:678:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724144327.py:683:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144327.py:684:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144327.py:687:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144327.py:688:                "source": "GHINcom"
./.history/backend/app/main_20250724144327.py:692:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144327.py:712:                        "source": "GHINcom"
./.history/backend/app/main_20250724144327.py:715:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144236.py:501:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724144236.py:502:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724144236.py:511:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144236.py:512:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144236.py:513:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144236.py:514:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724144236.py:519:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144236.py:520:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144236.py:523:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144236.py:524:        "source": "GHINcom"
./.history/backend/app/main_20250724144236.py:528:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144236.py:533:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724144236.py:546:        "source": "GHINcom"
./.history/backend/app/main_20250724144236.py:550:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144236.py:564:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724144236.py:569:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724144236.py:570:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144236.py:571:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144236.py:572:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144236.py:577:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724144236.py:578:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724144236.py:579:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724144236.py:582:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724144236.py:583:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724144236.py:588:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724144236.py:593:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144236.py:594:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144236.py:597:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144236.py:598:                "source": "GHINcom"
./.history/backend/app/main_20250724144236.py:602:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144236.py:622:                        "source": "GHINcom"
./.history/backend/app/main_20250724144236.py:625:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726144854.py:518:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726144854.py:532:            "name": "GHIN",
./.history/backend/app/main_20250726144854.py:534:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726144854.py:1095:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726144854.py:1096:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726144854.py:1105:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726144854.py:1107:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726144854.py:1108:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726144854.py:1109:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726144854.py:1110:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726144854.py:1115:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726144854.py:1117:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726144854.py:1120:        # Authenticate with GHIN
./.history/backend/app/main_20250726144854.py:1121:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726144854.py:1124:            "source": "GHINcom"
./.history/backend/app/main_20250726144854.py:1130:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726144854.py:1140:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726144854.py:1150:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726144854.py:1159:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726144854.py:1187:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726144854.py:1191:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726144854.py:1194:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726144854.py:1200:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726144854.py:1201:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726144854.py:1202:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726144854.py:1203:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726144854.py:1208:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726144854.py:1209:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726144854.py:1210:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726144854.py:1213:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726144854.py:1214:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726144854.py:1219:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726144854.py:1224:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726144854.py:1225:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726144854.py:1228:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726144854.py:1229:                "source": "GHINcom"
./.history/backend/app/main_20250726144854.py:1233:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726144854.py:1253:                        "source": "GHINcom"
./.history/backend/app/main_20250726144854.py:1256:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726122103.py:533:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726122103.py:547:            "name": "GHIN",
./.history/backend/app/main_20250726122103.py:549:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726122103.py:1198:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726122103.py:1199:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726122103.py:1208:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726122103.py:1210:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726122103.py:1211:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726122103.py:1212:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726122103.py:1213:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726122103.py:1218:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726122103.py:1220:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726122103.py:1223:        # Authenticate with GHIN
./.history/backend/app/main_20250726122103.py:1224:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726122103.py:1227:            "source": "GHINcom"
./.history/backend/app/main_20250726122103.py:1233:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726122103.py:1243:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726122103.py:1253:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726122103.py:1262:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726122103.py:1290:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726122103.py:1294:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726122103.py:1297:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726122103.py:1303:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726122103.py:1304:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726122103.py:1305:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726122103.py:1306:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726122103.py:1311:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726122103.py:1312:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726122103.py:1313:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726122103.py:1316:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726122103.py:1317:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726122103.py:1322:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726122103.py:1327:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726122103.py:1328:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726122103.py:1331:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726122103.py:1332:                "source": "GHINcom"
./.history/backend/app/main_20250726122103.py:1336:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726122103.py:1356:                        "source": "GHINcom"
./.history/backend/app/main_20250726122103.py:1359:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727080920.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727080920.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727080920.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727080920.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080920.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080920.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080920.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727080920.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727080920.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727080920.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727080920.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727080920.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727080920.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727080920.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727080920.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727080920.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727080920.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727080920.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080920.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080920.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080920.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727080920.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250727074011.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727074011.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727074011.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727074011.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727074011.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727074011.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727074011.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727074011.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074011.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074011.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727074011.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727074011.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727074011.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727074011.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727074011.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727074011.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727074011.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727074011.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727074011.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727074011.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727074011.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727074011.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727074011.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727074011.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074011.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074011.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727074011.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727074011.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727074011.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727074011.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727074011.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727074011.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727074011.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727074011.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727074011.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727074011.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727074011.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727074011.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727074011.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727075700.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727075700.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727075700.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727075700.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075700.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075700.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075700.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727075700.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727075700.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727075700.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727075700.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727075700.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727075700.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727075700.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727075700.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727075700.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727075700.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727075700.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075700.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075700.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075700.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727075700.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250727082039.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727082039.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727082039.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727082039.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727082039.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727082039.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727082039.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727082039.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727082039.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727082039.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727082039.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727082039.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727082039.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727082039.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727082039.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727082039.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727082039.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727082039.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727082039.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727082039.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727082039.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727082039.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726200118.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200118.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726200118.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200118.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200118.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200118.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200118.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200118.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200118.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200118.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200118.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200118.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200118.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726200118.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200118.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726200118.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200118.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200118.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200118.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200118.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200118.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200118.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200118.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200118.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200118.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200118.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200118.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200118.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200118.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200118.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200118.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200118.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200118.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200118.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200118.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200118.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726200118.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200118.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726200118.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727073358.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727073358.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727073358.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727073358.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727073358.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727073358.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727073358.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727073358.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727073358.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727073358.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727073358.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727073358.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727073358.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727073358.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727073358.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727073358.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727073358.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727073358.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727073358.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727073358.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727073358.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727073358.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727073358.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727073358.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727073358.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727073358.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727073358.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727073358.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727073358.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727073358.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727073358.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727073358.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727073358.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727073358.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727073358.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727073358.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727073358.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727073358.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727073358.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727075427.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727075427.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727075427.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727075427.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075427.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075427.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075427.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727075427.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727075427.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727075427.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727075427.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727075427.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727075427.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727075427.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727075427.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727075427.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727075427.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727075427.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075427.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075427.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075427.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727075427.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726204531.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726204531.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726204531.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726204531.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726204531.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726204531.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726204531.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726204531.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726204531.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726204531.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726204531.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726204531.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726204531.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726204531.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726204531.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726204531.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726204531.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726204531.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726204531.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726204531.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726204531.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726204531.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726204531.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726204531.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726204531.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726204531.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726204531.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726204531.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726204531.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726204531.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726204531.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726204531.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726204531.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726204531.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726204531.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726204531.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726204531.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726204531.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726204531.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727075720.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727075720.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727075720.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727075720.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075720.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075720.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075720.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727075720.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727075720.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727075720.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727075720.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727075720.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727075720.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727075720.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727075720.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727075720.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727075720.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727075720.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075720.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075720.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075720.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727075720.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250725181635.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725181635.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725181635.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725181635.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725181635.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725181635.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725181635.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725181635.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725181635.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725181635.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250725181635.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725181635.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250725181635.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725181635.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725181635.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725181635.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725181635.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725181635.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725181635.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725181635.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725181635.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725181635.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725181635.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725181635.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725181635.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725181635.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725181635.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725181635.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725181635.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725181635.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725181635.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725181635.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725181635.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250725181635.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725181635.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250725181635.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726204505.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726204505.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726204505.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726204505.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726204505.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726204505.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726204505.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726204505.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726204505.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726204505.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726204505.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726204505.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726204505.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726204505.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726204505.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726204505.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726204505.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726204505.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726204505.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726204505.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726204505.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726204505.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726204505.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726204505.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726204505.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726204505.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726204505.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726204505.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726204505.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726204505.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726204505.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726204505.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726204505.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726204505.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726204505.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726204505.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726204505.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726204505.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726204505.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250725181724.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725181724.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725181724.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725181724.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725181724.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725181724.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725181724.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725181724.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725181724.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725181724.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250725181724.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725181724.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250725181724.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725181724.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725181724.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725181724.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725181724.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725181724.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725181724.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725181724.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725181724.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725181724.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725181724.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725181724.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725181724.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725181724.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725181724.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725181724.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725181724.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725181724.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725181724.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725181724.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725181724.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250725181724.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725181724.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250725181724.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724110057.py:483:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724110057.py:484:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724110057.py:493:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724110057.py:494:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724110057.py:495:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724110057.py:496:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724110057.py:501:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724110057.py:502:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724110057.py:505:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724110057.py:506:        "source": "GHINcom"
./.history/backend/app/main_20250724110057.py:510:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724110057.py:515:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724110057.py:528:        "source": "GHINcom"
./.history/backend/app/main_20250724110057.py:532:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724110057.py:546:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724110057.py:551:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724110057.py:552:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724110057.py:553:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724110057.py:554:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724110057.py:559:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724110057.py:560:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724110057.py:561:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724110057.py:564:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724110057.py:565:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724110057.py:570:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724110057.py:575:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724110057.py:576:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724110057.py:579:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724110057.py:580:                "source": "GHINcom"
./.history/backend/app/main_20250724110057.py:584:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724110057.py:604:                        "source": "GHINcom"
./.history/backend/app/main_20250724110057.py:607:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726082914.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726082914.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726082914.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726082914.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726082914.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726082914.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726082914.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726082914.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082914.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082914.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726082914.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726082914.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726082914.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726082914.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726082914.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726082914.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726082914.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726082914.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726082914.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726082914.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726082914.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726082914.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726082914.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726082914.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082914.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082914.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726082914.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726082914.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726082914.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726082914.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726082914.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726082914.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726082914.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726082914.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726082914.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726082914.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726082914.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726082914.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726082914.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726144910.py:516:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726144910.py:530:            "name": "GHIN",
./.history/backend/app/main_20250726144910.py:532:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726144910.py:1093:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726144910.py:1094:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726144910.py:1103:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726144910.py:1105:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726144910.py:1106:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726144910.py:1107:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726144910.py:1108:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726144910.py:1113:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726144910.py:1115:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726144910.py:1118:        # Authenticate with GHIN
./.history/backend/app/main_20250726144910.py:1119:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726144910.py:1122:            "source": "GHINcom"
./.history/backend/app/main_20250726144910.py:1128:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726144910.py:1138:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726144910.py:1148:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726144910.py:1157:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726144910.py:1185:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726144910.py:1189:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726144910.py:1192:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726144910.py:1198:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726144910.py:1199:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726144910.py:1200:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726144910.py:1201:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726144910.py:1206:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726144910.py:1207:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726144910.py:1208:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726144910.py:1211:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726144910.py:1212:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726144910.py:1217:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726144910.py:1222:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726144910.py:1223:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726144910.py:1226:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726144910.py:1227:                "source": "GHINcom"
./.history/backend/app/main_20250726144910.py:1231:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726144910.py:1251:                        "source": "GHINcom"
./.history/backend/app/main_20250726144910.py:1254:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250725221407.py:734:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725221407.py:735:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725221407.py:744:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725221407.py:746:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725221407.py:747:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725221407.py:748:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725221407.py:749:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725221407.py:754:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725221407.py:756:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725221407.py:759:        # Authenticate with GHIN
./.history/backend/app/main_20250725221407.py:760:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725221407.py:763:            "source": "GHINcom"
./.history/backend/app/main_20250725221407.py:769:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725221407.py:779:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725221407.py:789:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725221407.py:798:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725221407.py:826:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725221407.py:830:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725221407.py:833:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725221407.py:839:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725221407.py:840:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725221407.py:841:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725221407.py:842:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725221407.py:847:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725221407.py:848:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725221407.py:849:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725221407.py:852:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725221407.py:853:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725221407.py:858:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725221407.py:863:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725221407.py:864:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725221407.py:867:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725221407.py:868:                "source": "GHINcom"
./.history/backend/app/main_20250725221407.py:872:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725221407.py:892:                        "source": "GHINcom"
./.history/backend/app/main_20250725221407.py:895:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144247.py:501:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724144247.py:502:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724144247.py:511:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144247.py:512:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144247.py:513:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144247.py:514:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724144247.py:519:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144247.py:520:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144247.py:523:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144247.py:524:        "source": "GHINcom"
./.history/backend/app/main_20250724144247.py:528:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144247.py:533:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724144247.py:546:        "source": "GHINcom"
./.history/backend/app/main_20250724144247.py:550:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144247.py:564:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724144247.py:569:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724144247.py:570:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144247.py:571:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144247.py:572:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144247.py:577:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724144247.py:578:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724144247.py:579:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724144247.py:582:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724144247.py:583:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724144247.py:588:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724144247.py:593:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144247.py:594:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144247.py:597:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144247.py:598:                "source": "GHINcom"
./.history/backend/app/main_20250724144247.py:602:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144247.py:622:                        "source": "GHINcom"
./.history/backend/app/main_20250724144247.py:625:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724162121.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724162121.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724162121.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724162121.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724162121.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724162121.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724162121.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724162121.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724162121.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724162121.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724162121.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724162121.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724162121.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724162121.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724162121.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724162121.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724162121.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724162121.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724162121.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724162121.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724162121.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724162121.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724162121.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724162121.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724162121.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724162121.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724162121.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724162121.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724162121.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724162121.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724162121.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724162121.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724162121.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724162121.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724162121.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724162121.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724110047.py:483:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724110047.py:484:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724110047.py:493:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724110047.py:494:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724110047.py:495:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724110047.py:496:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724110047.py:501:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724110047.py:502:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724110047.py:505:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724110047.py:506:        "source": "GHINcom"
./.history/backend/app/main_20250724110047.py:510:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724110047.py:515:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724110047.py:528:        "source": "GHINcom"
./.history/backend/app/main_20250724110047.py:532:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724110047.py:546:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724110047.py:551:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724110047.py:552:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724110047.py:553:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724110047.py:554:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724110047.py:559:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724110047.py:560:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724110047.py:561:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724110047.py:564:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724110047.py:565:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724110047.py:570:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724110047.py:575:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724110047.py:576:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724110047.py:579:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724110047.py:580:                "source": "GHINcom"
./.history/backend/app/main_20250724110047.py:584:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724110047.py:604:                        "source": "GHINcom"
./.history/backend/app/main_20250724110047.py:607:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727075543.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727075543.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727075543.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727075543.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075543.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075543.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075543.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727075543.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727075543.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727075543.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727075543.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727075543.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727075543.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727075543.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727075543.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727075543.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727075543.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727075543.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075543.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075543.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075543.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727075543.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250727081102.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727081102.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727081102.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727081102.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081102.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081102.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081102.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727081102.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727081102.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727081102.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727081102.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727081102.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727081102.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727081102.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727081102.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727081102.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727081102.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727081102.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081102.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081102.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081102.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727081102.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250727081027.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727081027.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727081027.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727081027.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081027.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081027.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081027.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727081027.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727081027.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727081027.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727081027.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727081027.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727081027.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727081027.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727081027.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727081027.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727081027.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727081027.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081027.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081027.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081027.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727081027.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726203350.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726203350.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726203350.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726203350.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726203350.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726203350.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726203350.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726203350.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726203350.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726203350.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726203350.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726203350.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726203350.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726203350.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726203350.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726203350.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726203350.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726203350.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726203350.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726203350.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726203350.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726203350.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726203350.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726203350.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726203350.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726203350.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726203350.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726203350.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726203350.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726203350.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726203350.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726203350.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726203350.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726203350.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726203350.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726203350.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726203350.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726203350.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726203350.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726111115.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726111115.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726111115.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726111115.py:1149:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726111115.py:1150:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726111115.py:1159:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726111115.py:1161:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726111115.py:1162:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726111115.py:1163:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726111115.py:1164:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726111115.py:1169:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726111115.py:1171:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726111115.py:1174:        # Authenticate with GHIN
./.history/backend/app/main_20250726111115.py:1175:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726111115.py:1178:            "source": "GHINcom"
./.history/backend/app/main_20250726111115.py:1184:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726111115.py:1194:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726111115.py:1204:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726111115.py:1213:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726111115.py:1241:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726111115.py:1245:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726111115.py:1248:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726111115.py:1254:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726111115.py:1255:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726111115.py:1256:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726111115.py:1257:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726111115.py:1262:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726111115.py:1263:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726111115.py:1264:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726111115.py:1267:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726111115.py:1268:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726111115.py:1273:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726111115.py:1278:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726111115.py:1279:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726111115.py:1282:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726111115.py:1283:                "source": "GHINcom"
./.history/backend/app/main_20250726111115.py:1287:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726111115.py:1307:                        "source": "GHINcom"
./.history/backend/app/main_20250726111115.py:1310:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726082018.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726082018.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726082018.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726082018.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726082018.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726082018.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726082018.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726082018.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082018.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082018.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726082018.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726082018.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726082018.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726082018.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726082018.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726082018.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726082018.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726082018.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726082018.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726082018.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726082018.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726082018.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726082018.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726082018.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082018.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082018.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726082018.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726082018.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726082018.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726082018.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726082018.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726082018.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726082018.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726082018.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726082018.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726082018.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726082018.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726082018.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726082018.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151405.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151405.py:249:    """Look up golfers by name using GHIN API"""
./.history/backend/app/main_20250728151405.py:251:        # Get GHIN credentials from environment
./.history/backend/app/main_20250728151405.py:252:        email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151405.py:253:        password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151405.py:254:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151405.py:257:            return {"error": "GHIN credentials not configured"}
./.history/backend/app/main_20250728151405.py:259:        # GHIN API endpoints
./.history/backend/app/main_20250728151405.py:260:        GHIN_AUTH_URL = "https://www.ghin.com/api/v1/authenticate"
./.history/backend/app/main_20250728151405.py:261:        GHIN_SEARCH_URL = "https://www.ghin.com/api/v1/golfer_search"
./.history/backend/app/main_20250728151405.py:263:        # Authenticate with GHIN
./.history/backend/app/main_20250728151405.py:270:            "source": "GHINcom"
./.history/backend/app/main_20250728151405.py:274:            auth_response = client.post(GHIN_AUTH_URL, json=auth_data)
./.history/backend/app/main_20250728151405.py:289:                GHIN_SEARCH_URL,
./.history/backend/app/main_20250728151405.py:298:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./.history/backend/app/main_20250728151405.py:299:        return {"error": f"GHIN API error: {e.response.status_code}"}
./.history/backend/app/main_20250728151405.py:301:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151405.py:306:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151405.py:307:    email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151405.py:308:    password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151405.py:309:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724164459.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724164459.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724164459.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724164459.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724164459.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724164459.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724164459.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724164459.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724164459.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724164459.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724164459.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724164459.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724164459.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724164459.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724164459.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724164459.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724164459.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724164459.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724164459.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724164459.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724164459.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724164459.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724164459.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724164459.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724164459.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724164459.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724164459.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724164459.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724164459.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724164459.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724164459.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724164459.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724164459.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724164459.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724164459.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724164459.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151801.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151801.py:249:    """Look up golfers by name using GHIN API"""
./.history/backend/app/main_20250728151801.py:251:        # Get GHIN credentials from environment
./.history/backend/app/main_20250728151801.py:252:        email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151801.py:253:        password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151801.py:254:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151801.py:257:            return {"error": "GHIN credentials not configured"}
./.history/backend/app/main_20250728151801.py:259:        # GHIN API endpoints
./.history/backend/app/main_20250728151801.py:260:        GHIN_AUTH_URL = "https://www.ghin.com/api/v1/authenticate"
./.history/backend/app/main_20250728151801.py:261:        GHIN_SEARCH_URL = "https://www.ghin.com/api/v1/golfer_search"
./.history/backend/app/main_20250728151801.py:263:        # Authenticate with GHIN
./.history/backend/app/main_20250728151801.py:270:            "source": "GHINcom"
./.history/backend/app/main_20250728151801.py:274:            auth_response = client.post(GHIN_AUTH_URL, json=auth_data)
./.history/backend/app/main_20250728151801.py:289:                GHIN_SEARCH_URL,
./.history/backend/app/main_20250728151801.py:298:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./.history/backend/app/main_20250728151801.py:299:        return {"error": f"GHIN API error: {e.response.status_code}"}
./.history/backend/app/main_20250728151801.py:301:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151801.py:306:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151801.py:307:    email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151801.py:308:    password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151801.py:309:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724160322.py:554:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724160322.py:555:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724160322.py:564:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724160322.py:566:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724160322.py:567:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160322.py:568:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160322.py:569:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724160322.py:574:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724160322.py:576:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724160322.py:579:        # Authenticate with GHIN
./.history/backend/app/main_20250724160322.py:580:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724160322.py:583:            "source": "GHINcom"
./.history/backend/app/main_20250724160322.py:589:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724160322.py:599:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724160322.py:609:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724160322.py:618:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724160322.py:646:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724160322.py:650:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724160322.py:653:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724160322.py:659:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724160322.py:660:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160322.py:661:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160322.py:662:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724160322.py:667:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724160322.py:668:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724160322.py:669:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724160322.py:672:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724160322.py:673:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724160322.py:678:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724160322.py:683:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724160322.py:684:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724160322.py:687:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724160322.py:688:                "source": "GHINcom"
./.history/backend/app/main_20250724160322.py:692:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724160322.py:712:                        "source": "GHINcom"
./.history/backend/app/main_20250724160322.py:715:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250725221725.py:389:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250725221725.py:403:            "name": "GHIN",
./.history/backend/app/main_20250725221725.py:405:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250725221725.py:1008:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725221725.py:1009:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725221725.py:1018:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725221725.py:1020:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725221725.py:1021:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725221725.py:1022:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725221725.py:1023:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725221725.py:1028:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725221725.py:1030:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725221725.py:1033:        # Authenticate with GHIN
./.history/backend/app/main_20250725221725.py:1034:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725221725.py:1037:            "source": "GHINcom"
./.history/backend/app/main_20250725221725.py:1043:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725221725.py:1053:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725221725.py:1063:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725221725.py:1072:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725221725.py:1100:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725221725.py:1104:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725221725.py:1107:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725221725.py:1113:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725221725.py:1114:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725221725.py:1115:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725221725.py:1116:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725221725.py:1121:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725221725.py:1122:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725221725.py:1123:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725221725.py:1126:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725221725.py:1127:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725221725.py:1132:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725221725.py:1137:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725221725.py:1138:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725221725.py:1141:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725221725.py:1142:                "source": "GHINcom"
./.history/backend/app/main_20250725221725.py:1146:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725221725.py:1166:                        "source": "GHINcom"
./.history/backend/app/main_20250725221725.py:1169:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726210045.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726210045.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726210045.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726210045.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726210045.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726210045.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726210045.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726210045.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726210045.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726210045.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726210045.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726210045.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726210045.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726210045.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726210045.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726210045.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726210045.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726210045.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726210045.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726210045.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726210045.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726210045.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726210045.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726210045.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726210045.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726210045.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726210045.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726210045.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726210045.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726210045.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726210045.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726210045.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726210045.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726210045.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726210045.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726210045.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726210045.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726210045.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726210045.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726082008.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726082008.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726082008.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726082008.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726082008.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726082008.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726082008.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726082008.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082008.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082008.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726082008.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726082008.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726082008.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726082008.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726082008.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726082008.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726082008.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726082008.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726082008.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726082008.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726082008.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726082008.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726082008.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726082008.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726082008.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726082008.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726082008.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726082008.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726082008.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726082008.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726082008.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726082008.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726082008.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726082008.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726082008.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726082008.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726082008.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726082008.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726082008.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727075806.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727075806.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727075806.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727075806.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075806.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075806.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075806.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727075806.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727075806.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727075806.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727075806.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727075806.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727075806.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727075806.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727075806.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727075806.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727075806.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727075806.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727075806.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727075806.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727075806.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727075806.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250725221329.py:734:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250725221329.py:735:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250725221329.py:744:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250725221329.py:746:        # Check if GHIN credentials are available
./.history/backend/app/main_20250725221329.py:747:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725221329.py:748:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725221329.py:749:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250725221329.py:754:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250725221329.py:756:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250725221329.py:759:        # Authenticate with GHIN
./.history/backend/app/main_20250725221329.py:760:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250725221329.py:763:            "source": "GHINcom"
./.history/backend/app/main_20250725221329.py:769:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250725221329.py:779:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250725221329.py:789:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250725221329.py:798:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250725221329.py:826:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250725221329.py:830:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250725221329.py:833:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250725221329.py:839:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250725221329.py:840:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250725221329.py:841:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250725221329.py:842:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250725221329.py:847:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250725221329.py:848:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250725221329.py:849:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250725221329.py:852:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250725221329.py:853:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250725221329.py:858:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250725221329.py:863:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250725221329.py:864:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250725221329.py:867:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250725221329.py:868:                "source": "GHINcom"
./.history/backend/app/main_20250725221329.py:872:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250725221329.py:892:                        "source": "GHINcom"
./.history/backend/app/main_20250725221329.py:895:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727081146.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727081146.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727081146.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727081146.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081146.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081146.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081146.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727081146.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727081146.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727081146.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727081146.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727081146.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727081146.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727081146.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727081146.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727081146.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727081146.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727081146.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081146.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081146.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081146.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727081146.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726123811.py:533:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726123811.py:547:            "name": "GHIN",
./.history/backend/app/main_20250726123811.py:549:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726123811.py:1201:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726123811.py:1202:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726123811.py:1211:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726123811.py:1213:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726123811.py:1214:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726123811.py:1215:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726123811.py:1216:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726123811.py:1221:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726123811.py:1223:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726123811.py:1226:        # Authenticate with GHIN
./.history/backend/app/main_20250726123811.py:1227:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726123811.py:1230:            "source": "GHINcom"
./.history/backend/app/main_20250726123811.py:1236:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726123811.py:1246:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726123811.py:1256:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726123811.py:1265:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726123811.py:1293:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726123811.py:1297:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726123811.py:1300:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726123811.py:1306:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726123811.py:1307:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726123811.py:1308:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726123811.py:1309:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726123811.py:1314:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726123811.py:1315:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726123811.py:1316:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726123811.py:1319:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726123811.py:1320:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726123811.py:1325:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726123811.py:1330:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726123811.py:1331:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726123811.py:1334:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726123811.py:1335:                "source": "GHINcom"
./.history/backend/app/main_20250726123811.py:1339:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726123811.py:1359:                        "source": "GHINcom"
./.history/backend/app/main_20250726123811.py:1362:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726203331.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726203331.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726203331.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726203331.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726203331.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726203331.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726203331.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726203331.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726203331.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726203331.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726203331.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726203331.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726203331.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726203331.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726203331.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726203331.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726203331.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726203331.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726203331.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726203331.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726203331.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726203331.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726203331.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726203331.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726203331.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726203331.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726203331.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726203331.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726203331.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726203331.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726203331.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726203331.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726203331.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726203331.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726203331.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726203331.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726203331.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726203331.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726203331.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726081350.py:389:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726081350.py:403:            "name": "GHIN",
./.history/backend/app/main_20250726081350.py:405:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726081350.py:1008:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726081350.py:1009:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726081350.py:1018:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726081350.py:1020:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726081350.py:1021:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726081350.py:1022:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726081350.py:1023:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726081350.py:1028:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726081350.py:1030:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726081350.py:1033:        # Authenticate with GHIN
./.history/backend/app/main_20250726081350.py:1034:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726081350.py:1037:            "source": "GHINcom"
./.history/backend/app/main_20250726081350.py:1043:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726081350.py:1053:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726081350.py:1063:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726081350.py:1072:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726081350.py:1100:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726081350.py:1104:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726081350.py:1107:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726081350.py:1113:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726081350.py:1114:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726081350.py:1115:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726081350.py:1116:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726081350.py:1121:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726081350.py:1122:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726081350.py:1123:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726081350.py:1126:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726081350.py:1127:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726081350.py:1132:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726081350.py:1137:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726081350.py:1138:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726081350.py:1141:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726081350.py:1142:                "source": "GHINcom"
./.history/backend/app/main_20250726081350.py:1146:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726081350.py:1166:                        "source": "GHINcom"
./.history/backend/app/main_20250726081350.py:1169:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726124659.py:518:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124659.py:532:            "name": "GHIN",
./.history/backend/app/main_20250726124659.py:534:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124659.py:1186:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124659.py:1187:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124659.py:1196:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124659.py:1198:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124659.py:1199:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124659.py:1200:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124659.py:1201:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124659.py:1206:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124659.py:1208:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124659.py:1211:        # Authenticate with GHIN
./.history/backend/app/main_20250726124659.py:1212:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124659.py:1215:            "source": "GHINcom"
./.history/backend/app/main_20250726124659.py:1221:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124659.py:1231:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124659.py:1241:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124659.py:1250:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124659.py:1278:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124659.py:1282:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124659.py:1285:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124659.py:1291:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124659.py:1292:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124659.py:1293:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124659.py:1294:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124659.py:1299:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124659.py:1300:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124659.py:1301:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124659.py:1304:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124659.py:1305:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124659.py:1310:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124659.py:1315:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124659.py:1316:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124659.py:1319:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124659.py:1320:                "source": "GHINcom"
./.history/backend/app/main_20250726124659.py:1324:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124659.py:1344:                        "source": "GHINcom"
./.history/backend/app/main_20250726124659.py:1347:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727073536.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727073536.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727073536.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727073536.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727073536.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727073536.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727073536.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727073536.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727073536.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727073536.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727073536.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727073536.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727073536.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727073536.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727073536.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727073536.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727073536.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727073536.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727073536.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727073536.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727073536.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727073536.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727073536.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727073536.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727073536.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727073536.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727073536.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727073536.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727073536.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727073536.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727073536.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727073536.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727073536.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727073536.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727073536.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727073536.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727073536.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727073536.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727073536.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250723213830.py:483:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250723213830.py:484:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250723213830.py:493:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250723213830.py:494:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250723213830.py:495:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250723213830.py:496:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250723213830.py:501:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250723213830.py:502:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250723213830.py:505:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250723213830.py:506:        "source": "GHINcom"
./.history/backend/app/main_20250723213830.py:510:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250723213830.py:515:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250723213830.py:528:        "source": "GHINcom"
./.history/backend/app/main_20250723213830.py:532:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250723213830.py:546:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250726122052.py:533:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726122052.py:547:            "name": "GHIN",
./.history/backend/app/main_20250726122052.py:549:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726122052.py:1175:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726122052.py:1176:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726122052.py:1185:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726122052.py:1187:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726122052.py:1188:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726122052.py:1189:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726122052.py:1190:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726122052.py:1195:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726122052.py:1197:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726122052.py:1200:        # Authenticate with GHIN
./.history/backend/app/main_20250726122052.py:1201:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726122052.py:1204:            "source": "GHINcom"
./.history/backend/app/main_20250726122052.py:1210:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726122052.py:1220:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726122052.py:1230:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726122052.py:1239:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726122052.py:1267:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726122052.py:1271:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726122052.py:1274:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726122052.py:1280:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726122052.py:1281:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726122052.py:1282:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726122052.py:1283:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726122052.py:1288:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726122052.py:1289:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726122052.py:1290:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726122052.py:1293:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726122052.py:1294:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726122052.py:1299:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726122052.py:1304:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726122052.py:1305:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726122052.py:1308:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726122052.py:1309:                "source": "GHINcom"
./.history/backend/app/main_20250726122052.py:1313:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726122052.py:1333:                        "source": "GHINcom"
./.history/backend/app/main_20250726122052.py:1336:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721103027.py:476:    Lookup a golfer by name (and optionally state) using the GHIN API.
./.history/backend/app/main_20250721103027.py:477:    Returns a list of matching golfers with name, GHIN number, club, and handicap.
./.history/backend/app/main_20250721103027.py:479:    GHIN_API_KEY = os.environ.get("GHIN_API_KEY")
./.history/backend/app/main_20250721103027.py:480:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250721103027.py:481:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250721103027.py:482:    if not GHIN_API_KEY or not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250721103027.py:483:        return []  # Or raise HTTPException(status_code=500, detail="GHIN API credentials not set")
./.history/backend/app/main_20250721103027.py:485:    # GHIN API endpoint (v1 public search)
./.history/backend/app/main_20250721103027.py:493:        "Authorization": f"Basic {GHIN_API_KEY}",
./.history/backend/app/main_20250721103027.py:498:            response = client.get(url, params=params, auth=(GHIN_API_USER, GHIN_API_PASS), headers=headers)
./.history/backend/app/main_20250721103027.py:513:        print(f"GHIN lookup error: {e}")
./.history/backend/app/main_20250727080855.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727080855.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727080855.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727080855.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080855.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080855.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080855.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727080855.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727080855.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727080855.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727080855.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727080855.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727080855.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727080855.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727080855.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727080855.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727080855.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727080855.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080855.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080855.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080855.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727080855.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726104310.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726104310.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726104310.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726104310.py:1138:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726104310.py:1139:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726104310.py:1148:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726104310.py:1150:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726104310.py:1151:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726104310.py:1152:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726104310.py:1153:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726104310.py:1158:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726104310.py:1160:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726104310.py:1163:        # Authenticate with GHIN
./.history/backend/app/main_20250726104310.py:1164:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726104310.py:1167:            "source": "GHINcom"
./.history/backend/app/main_20250726104310.py:1173:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726104310.py:1183:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726104310.py:1193:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726104310.py:1202:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726104310.py:1230:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726104310.py:1234:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726104310.py:1237:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726104310.py:1243:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726104310.py:1244:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726104310.py:1245:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726104310.py:1246:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726104310.py:1251:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726104310.py:1252:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726104310.py:1253:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726104310.py:1256:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726104310.py:1257:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726104310.py:1262:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726104310.py:1267:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726104310.py:1268:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726104310.py:1271:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726104310.py:1272:                "source": "GHINcom"
./.history/backend/app/main_20250726104310.py:1276:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726104310.py:1296:                        "source": "GHINcom"
./.history/backend/app/main_20250726104310.py:1299:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726200717.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200717.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200717.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200717.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200717.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200717.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200717.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200717.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200717.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200717.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200717.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200717.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200717.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200717.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200717.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200717.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200717.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200717.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200717.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200717.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200717.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200717.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200717.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200717.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200717.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200717.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200717.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200717.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200717.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200717.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200717.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200717.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200717.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200717.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200717.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200717.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200717.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200717.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200717.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726100748.py:455:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726100748.py:469:            "name": "GHIN",
./.history/backend/app/main_20250726100748.py:471:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726100748.py:1074:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726100748.py:1075:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726100748.py:1084:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726100748.py:1086:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726100748.py:1087:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100748.py:1088:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100748.py:1089:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726100748.py:1094:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726100748.py:1096:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726100748.py:1099:        # Authenticate with GHIN
./.history/backend/app/main_20250726100748.py:1100:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726100748.py:1103:            "source": "GHINcom"
./.history/backend/app/main_20250726100748.py:1109:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726100748.py:1119:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726100748.py:1129:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726100748.py:1138:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726100748.py:1166:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726100748.py:1170:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726100748.py:1173:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726100748.py:1179:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726100748.py:1180:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100748.py:1181:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100748.py:1182:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726100748.py:1187:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726100748.py:1188:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726100748.py:1189:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726100748.py:1192:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726100748.py:1193:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726100748.py:1198:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726100748.py:1203:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726100748.py:1204:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726100748.py:1207:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726100748.py:1208:                "source": "GHINcom"
./.history/backend/app/main_20250726100748.py:1212:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726100748.py:1232:                        "source": "GHINcom"
./.history/backend/app/main_20250726100748.py:1235:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726104017.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726104017.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726104017.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726104017.py:1126:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726104017.py:1127:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726104017.py:1136:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726104017.py:1138:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726104017.py:1139:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726104017.py:1140:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726104017.py:1141:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726104017.py:1146:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726104017.py:1148:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726104017.py:1151:        # Authenticate with GHIN
./.history/backend/app/main_20250726104017.py:1152:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726104017.py:1155:            "source": "GHINcom"
./.history/backend/app/main_20250726104017.py:1161:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726104017.py:1171:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726104017.py:1181:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726104017.py:1190:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726104017.py:1218:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726104017.py:1222:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726104017.py:1225:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726104017.py:1231:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726104017.py:1232:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726104017.py:1233:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726104017.py:1234:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726104017.py:1239:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726104017.py:1240:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726104017.py:1241:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726104017.py:1244:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726104017.py:1245:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726104017.py:1250:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726104017.py:1255:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726104017.py:1256:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726104017.py:1259:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726104017.py:1260:                "source": "GHINcom"
./.history/backend/app/main_20250726104017.py:1264:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726104017.py:1284:                        "source": "GHINcom"
./.history/backend/app/main_20250726104017.py:1287:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726195348.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726195348.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726195348.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726195348.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726195348.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726195348.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726195348.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726195348.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726195348.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726195348.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726195348.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726195348.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726195348.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726195348.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726195348.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726195348.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726195348.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726195348.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726195348.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726195348.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726195348.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726195348.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726195348.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726195348.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726195348.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726195348.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726195348.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726195348.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726195348.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726195348.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726195348.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726195348.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726195348.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726195348.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726195348.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726195348.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726195348.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726195348.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726195348.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726123642.py:533:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726123642.py:547:            "name": "GHIN",
./.history/backend/app/main_20250726123642.py:549:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726123642.py:1198:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726123642.py:1199:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726123642.py:1208:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726123642.py:1210:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726123642.py:1211:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726123642.py:1212:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726123642.py:1213:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726123642.py:1218:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726123642.py:1220:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726123642.py:1223:        # Authenticate with GHIN
./.history/backend/app/main_20250726123642.py:1224:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726123642.py:1227:            "source": "GHINcom"
./.history/backend/app/main_20250726123642.py:1233:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726123642.py:1243:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726123642.py:1253:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726123642.py:1262:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726123642.py:1290:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726123642.py:1294:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726123642.py:1297:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726123642.py:1303:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726123642.py:1304:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726123642.py:1305:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726123642.py:1306:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726123642.py:1311:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726123642.py:1312:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726123642.py:1313:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726123642.py:1316:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726123642.py:1317:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726123642.py:1322:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726123642.py:1327:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726123642.py:1328:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726123642.py:1331:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726123642.py:1332:                "source": "GHINcom"
./.history/backend/app/main_20250726123642.py:1336:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726123642.py:1356:                        "source": "GHINcom"
./.history/backend/app/main_20250726123642.py:1359:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721104639.py:470:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250721104639.py:471:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250721104639.py:480:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250721104639.py:481:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250721104639.py:482:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250721104639.py:483:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250721104639.py:488:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250721104639.py:489:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250721104639.py:492:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250721104639.py:493:        "source": "GHINcom"
./.history/backend/app/main_20250721104639.py:497:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250721104639.py:502:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250721104639.py:515:        "source": "GHINcom"
./.history/backend/app/main_20250721104639.py:519:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721104639.py:533:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250726100924.py:484:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726100924.py:498:            "name": "GHIN",
./.history/backend/app/main_20250726100924.py:500:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726100924.py:1103:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726100924.py:1104:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726100924.py:1113:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726100924.py:1115:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726100924.py:1116:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100924.py:1117:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100924.py:1118:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726100924.py:1123:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726100924.py:1125:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726100924.py:1128:        # Authenticate with GHIN
./.history/backend/app/main_20250726100924.py:1129:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726100924.py:1132:            "source": "GHINcom"
./.history/backend/app/main_20250726100924.py:1138:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726100924.py:1148:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726100924.py:1158:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726100924.py:1167:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726100924.py:1195:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726100924.py:1199:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726100924.py:1202:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726100924.py:1208:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726100924.py:1209:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100924.py:1210:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100924.py:1211:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726100924.py:1216:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726100924.py:1217:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726100924.py:1218:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726100924.py:1221:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726100924.py:1222:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726100924.py:1227:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726100924.py:1232:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726100924.py:1233:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726100924.py:1236:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726100924.py:1237:                "source": "GHINcom"
./.history/backend/app/main_20250726100924.py:1241:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726100924.py:1261:                        "source": "GHINcom"
./.history/backend/app/main_20250726100924.py:1264:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724140813.py:483:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724140813.py:484:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724140813.py:493:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724140813.py:494:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724140813.py:495:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724140813.py:496:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724140813.py:501:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724140813.py:502:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724140813.py:505:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724140813.py:506:        "source": "GHINcom"
./.history/backend/app/main_20250724140813.py:510:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724140813.py:515:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724140813.py:528:        "source": "GHINcom"
./.history/backend/app/main_20250724140813.py:532:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724140813.py:546:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724140813.py:551:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724140813.py:552:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724140813.py:553:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724140813.py:554:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724140813.py:559:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724140813.py:560:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724140813.py:561:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724140813.py:564:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724140813.py:565:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724140813.py:570:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724140813.py:575:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724140813.py:576:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724140813.py:579:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724140813.py:580:                "source": "GHINcom"
./.history/backend/app/main_20250724140813.py:584:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724140813.py:604:                        "source": "GHINcom"
./.history/backend/app/main_20250724140813.py:607:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724162329.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724162329.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724162329.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724162329.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724162329.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724162329.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724162329.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724162329.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724162329.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724162329.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724162329.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724162329.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724162329.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724162329.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724162329.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724162329.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724162329.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724162329.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724162329.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724162329.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724162329.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724162329.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724162329.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724162329.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724162329.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724162329.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724162329.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724162329.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724162329.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724162329.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724162329.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724162329.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724162329.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724162329.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724162329.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724162329.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144259.py:536:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724144259.py:537:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724144259.py:546:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144259.py:547:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144259.py:548:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144259.py:549:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724144259.py:554:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144259.py:555:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144259.py:558:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144259.py:559:        "source": "GHINcom"
./.history/backend/app/main_20250724144259.py:563:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144259.py:568:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724144259.py:581:        "source": "GHINcom"
./.history/backend/app/main_20250724144259.py:585:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144259.py:599:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724144259.py:604:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724144259.py:605:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144259.py:606:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144259.py:607:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144259.py:612:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724144259.py:613:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724144259.py:614:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724144259.py:617:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724144259.py:618:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724144259.py:623:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724144259.py:628:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144259.py:629:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144259.py:632:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144259.py:633:                "source": "GHINcom"
./.history/backend/app/main_20250724144259.py:637:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144259.py:657:                        "source": "GHINcom"
./.history/backend/app/main_20250724144259.py:660:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724164611.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724164611.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724164611.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724164611.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724164611.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724164611.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724164611.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724164611.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724164611.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724164611.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724164611.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724164611.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724164611.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724164611.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724164611.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724164611.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724164611.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724164611.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724164611.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724164611.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724164611.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724164611.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724164611.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724164611.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724164611.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724164611.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724164611.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724164611.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724164611.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724164611.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724164611.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724164611.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724164611.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724164611.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724164611.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724164611.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726083757.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726083757.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726083757.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726083757.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726083757.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726083757.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726083757.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726083757.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726083757.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726083757.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726083757.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726083757.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726083757.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726083757.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726083757.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726083757.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726083757.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726083757.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726083757.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726083757.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726083757.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726083757.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726083757.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726083757.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726083757.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726083757.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726083757.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726083757.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726083757.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726083757.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726083757.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726083757.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726083757.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726083757.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726083757.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726083757.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726083757.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726083757.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726083757.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726083805.py:421:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726083805.py:435:            "name": "GHIN",
./.history/backend/app/main_20250726083805.py:437:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726083805.py:1040:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726083805.py:1041:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726083805.py:1050:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726083805.py:1052:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726083805.py:1053:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726083805.py:1054:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726083805.py:1055:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726083805.py:1060:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726083805.py:1062:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726083805.py:1065:        # Authenticate with GHIN
./.history/backend/app/main_20250726083805.py:1066:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726083805.py:1069:            "source": "GHINcom"
./.history/backend/app/main_20250726083805.py:1075:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726083805.py:1085:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726083805.py:1095:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726083805.py:1104:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726083805.py:1132:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726083805.py:1136:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726083805.py:1139:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726083805.py:1145:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726083805.py:1146:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726083805.py:1147:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726083805.py:1148:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726083805.py:1153:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726083805.py:1154:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726083805.py:1155:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726083805.py:1158:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726083805.py:1159:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726083805.py:1164:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726083805.py:1169:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726083805.py:1170:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726083805.py:1173:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726083805.py:1174:                "source": "GHINcom"
./.history/backend/app/main_20250726083805.py:1178:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726083805.py:1198:                        "source": "GHINcom"
./.history/backend/app/main_20250726083805.py:1201:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724162402.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724162402.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724162402.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724162402.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724162402.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724162402.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724162402.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724162402.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724162402.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724162402.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724162402.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724162402.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724162402.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724162402.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724162402.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724162402.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724162402.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724162402.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724162402.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724162402.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724162402.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724162402.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724162402.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724162402.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724162402.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724162402.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724162402.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724162402.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724162402.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724162402.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724162402.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724162402.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724162402.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724162402.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724162402.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724162402.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727080003.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727080003.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727080003.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727080003.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080003.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080003.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080003.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727080003.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727080003.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727080003.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727080003.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727080003.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727080003.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727080003.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727080003.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727080003.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727080003.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727080003.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080003.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080003.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080003.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727080003.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726200231.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200231.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200231.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200231.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200231.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200231.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200231.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200231.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200231.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200231.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200231.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200231.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200231.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200231.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200231.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200231.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200231.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200231.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200231.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200231.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200231.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200231.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200231.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200231.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200231.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200231.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200231.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200231.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200231.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200231.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200231.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200231.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200231.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200231.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200231.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200231.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200231.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200231.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200231.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721104304.py:470:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/authenticate.json"
./.history/backend/app/main_20250721104304.py:471:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfer_search.json"
./.history/backend/app/main_20250721104304.py:479:    Lookup a golfer by name (and optionally state) using the GHIN API (JWT flow).
./.history/backend/app/main_20250721104304.py:482:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250721104304.py:483:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250721104304.py:484:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250721104304.py:485:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250721104304.py:490:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250721104304.py:491:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250721104304.py:494:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250721104304.py:495:        "source": "GHINcom"
./.history/backend/app/main_20250721104304.py:499:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250721104304.py:504:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250721104304.py:517:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721104304.py:531:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724144406.py:554:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724144406.py:555:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724144406.py:564:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724144406.py:566:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724144406.py:567:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144406.py:568:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144406.py:569:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724144406.py:574:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724144406.py:576:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724144406.py:579:        # Authenticate with GHIN
./.history/backend/app/main_20250724144406.py:580:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724144406.py:583:            "source": "GHINcom"
./.history/backend/app/main_20250724144406.py:589:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724144406.py:599:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724144406.py:609:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724144406.py:618:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724144406.py:646:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724144406.py:650:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724144406.py:653:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724144406.py:659:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724144406.py:660:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144406.py:661:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144406.py:662:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144406.py:667:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724144406.py:668:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724144406.py:669:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724144406.py:672:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724144406.py:673:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724144406.py:678:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724144406.py:683:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144406.py:684:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144406.py:687:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144406.py:688:                "source": "GHINcom"
./.history/backend/app/main_20250724144406.py:692:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144406.py:712:                        "source": "GHINcom"
./.history/backend/app/main_20250724144406.py:715:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726200205.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200205.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200205.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200205.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200205.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200205.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200205.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200205.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200205.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200205.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200205.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200205.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200205.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200205.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200205.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200205.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200205.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200205.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200205.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200205.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200205.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200205.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200205.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200205.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200205.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200205.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200205.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200205.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200205.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200205.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200205.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200205.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200205.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200205.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200205.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200205.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200205.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200205.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200205.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151103.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151103.py:249:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250728151103.py:251:        # GHIN API credentials from environment
./.history/backend/app/main_20250728151103.py:252:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151103.py:253:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151103.py:254:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151103.py:258:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250728151103.py:259:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250728151103.py:262:        # GHIN API endpoints
./.history/backend/app/main_20250728151103.py:266:        # Authenticate with GHIN
./.history/backend/app/main_20250728151103.py:273:            "source": "GHINcom"
./.history/backend/app/main_20250728151103.py:280:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250728151103.py:289:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250728151103.py:306:                    "error": "GHIN search failed",
./.history/backend/app/main_20250728151103.py:318:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151103.py:320:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250728151103.py:326:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151103.py:328:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151103.py:329:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151103.py:330:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151103.py:340:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250728151103.py:342:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726200215.py:508:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726200215.py:522:            "name": "GHIN",
./.history/backend/app/main_20250726200215.py:524:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726200215.py:1136:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726200215.py:1137:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726200215.py:1146:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726200215.py:1148:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726200215.py:1149:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200215.py:1150:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200215.py:1151:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726200215.py:1156:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726200215.py:1158:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726200215.py:1161:        # Authenticate with GHIN
./.history/backend/app/main_20250726200215.py:1162:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726200215.py:1165:            "source": "GHINcom"
./.history/backend/app/main_20250726200215.py:1171:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726200215.py:1181:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726200215.py:1191:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726200215.py:1200:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726200215.py:1228:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726200215.py:1232:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726200215.py:1235:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726200215.py:1241:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726200215.py:1242:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726200215.py:1243:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726200215.py:1244:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726200215.py:1249:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726200215.py:1250:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726200215.py:1251:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726200215.py:1254:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726200215.py:1255:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726200215.py:1260:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726200215.py:1265:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726200215.py:1266:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726200215.py:1269:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726200215.py:1270:                "source": "GHINcom"
./.history/backend/app/main_20250726200215.py:1274:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726200215.py:1294:                        "source": "GHINcom"
./.history/backend/app/main_20250726200215.py:1297:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144416.py:554:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724144416.py:555:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724144416.py:564:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724144416.py:566:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724144416.py:567:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144416.py:568:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144416.py:569:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724144416.py:574:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724144416.py:576:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724144416.py:579:        # Authenticate with GHIN
./.history/backend/app/main_20250724144416.py:580:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724144416.py:583:            "source": "GHINcom"
./.history/backend/app/main_20250724144416.py:589:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724144416.py:599:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724144416.py:609:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724144416.py:618:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724144416.py:646:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724144416.py:650:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724144416.py:653:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724144416.py:659:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724144416.py:660:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144416.py:661:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144416.py:662:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144416.py:667:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724144416.py:668:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724144416.py:669:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724144416.py:672:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724144416.py:673:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724144416.py:678:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724144416.py:683:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144416.py:684:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144416.py:687:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144416.py:688:                "source": "GHINcom"
./.history/backend/app/main_20250724144416.py:692:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144416.py:712:                        "source": "GHINcom"
./.history/backend/app/main_20250724144416.py:715:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726100811.py:482:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726100811.py:496:            "name": "GHIN",
./.history/backend/app/main_20250726100811.py:498:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726100811.py:1101:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726100811.py:1102:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726100811.py:1111:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726100811.py:1113:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726100811.py:1114:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100811.py:1115:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100811.py:1116:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726100811.py:1121:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726100811.py:1123:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726100811.py:1126:        # Authenticate with GHIN
./.history/backend/app/main_20250726100811.py:1127:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726100811.py:1130:            "source": "GHINcom"
./.history/backend/app/main_20250726100811.py:1136:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726100811.py:1146:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726100811.py:1156:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726100811.py:1165:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726100811.py:1193:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726100811.py:1197:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726100811.py:1200:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726100811.py:1206:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726100811.py:1207:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100811.py:1208:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100811.py:1209:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726100811.py:1214:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726100811.py:1215:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726100811.py:1216:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726100811.py:1219:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726100811.py:1220:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726100811.py:1225:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726100811.py:1230:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726100811.py:1231:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726100811.py:1234:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726100811.py:1235:                "source": "GHINcom"
./.history/backend/app/main_20250726100811.py:1239:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726100811.py:1259:                        "source": "GHINcom"
./.history/backend/app/main_20250726100811.py:1262:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724164741.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724164741.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724164741.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724164741.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724164741.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724164741.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724164741.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724164741.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724164741.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724164741.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724164741.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724164741.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724164741.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724164741.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724164741.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724164741.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724164741.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724164741.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724164741.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724164741.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724164741.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724164741.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724164741.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724164741.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724164741.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724164741.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724164741.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724164741.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724164741.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724164741.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724164741.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724164741.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724164741.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724164741.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724164741.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724164741.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726102706.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726102706.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726102706.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726102706.py:1126:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726102706.py:1127:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726102706.py:1136:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726102706.py:1138:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726102706.py:1139:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726102706.py:1140:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726102706.py:1141:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726102706.py:1146:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726102706.py:1148:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726102706.py:1151:        # Authenticate with GHIN
./.history/backend/app/main_20250726102706.py:1152:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726102706.py:1155:            "source": "GHINcom"
./.history/backend/app/main_20250726102706.py:1161:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726102706.py:1171:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726102706.py:1181:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726102706.py:1190:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726102706.py:1218:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726102706.py:1222:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726102706.py:1225:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726102706.py:1231:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726102706.py:1232:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726102706.py:1233:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726102706.py:1234:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726102706.py:1239:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726102706.py:1240:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726102706.py:1241:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726102706.py:1244:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726102706.py:1245:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726102706.py:1250:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726102706.py:1255:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726102706.py:1256:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726102706.py:1259:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726102706.py:1260:                "source": "GHINcom"
./.history/backend/app/main_20250726102706.py:1264:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726102706.py:1284:                        "source": "GHINcom"
./.history/backend/app/main_20250726102706.py:1287:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250723215123.py:483:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250723215123.py:484:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250723215123.py:493:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250723215123.py:494:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250723215123.py:495:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250723215123.py:496:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250723215123.py:501:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250723215123.py:502:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250723215123.py:505:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250723215123.py:506:        "source": "GHINcom"
./.history/backend/app/main_20250723215123.py:510:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250723215123.py:515:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250723215123.py:528:        "source": "GHINcom"
./.history/backend/app/main_20250723215123.py:532:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250723215123.py:546:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250723215123.py:551:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250723215123.py:552:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250723215123.py:553:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250723215123.py:554:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250723215123.py:559:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250723215123.py:560:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250723215123.py:561:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250723215123.py:564:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250723215123.py:565:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250723215123.py:570:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250723215123.py:575:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250723215123.py:576:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250723215123.py:579:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250723215123.py:580:                "source": "GHINcom"
./.history/backend/app/main_20250723215123.py:584:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250723215123.py:604:                        "source": "GHINcom"
./.history/backend/app/main_20250723215123.py:607:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724165938.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724165938.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724165938.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724165938.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724165938.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724165938.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724165938.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724165938.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724165938.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724165938.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724165938.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724165938.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724165938.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724165938.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724165938.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724165938.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724165938.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724165938.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724165938.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724165938.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724165938.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724165938.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724165938.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724165938.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724165938.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724165938.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724165938.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724165938.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724165938.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724165938.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724165938.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724165938.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724165938.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724165938.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724165938.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724165938.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726204301.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726204301.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726204301.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726204301.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726204301.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726204301.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726204301.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726204301.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726204301.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726204301.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726204301.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726204301.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726204301.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726204301.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726204301.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726204301.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726204301.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726204301.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726204301.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726204301.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726204301.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726204301.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726204301.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726204301.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726204301.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726204301.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726204301.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726204301.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726204301.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726204301.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726204301.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726204301.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726204301.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726204301.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726204301.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726204301.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726204301.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726204301.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726204301.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726145914.py:498:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726145914.py:512:            "name": "GHIN",
./.history/backend/app/main_20250726145914.py:514:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726145914.py:1075:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726145914.py:1076:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726145914.py:1085:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726145914.py:1087:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726145914.py:1088:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726145914.py:1089:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726145914.py:1090:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726145914.py:1095:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726145914.py:1097:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726145914.py:1100:        # Authenticate with GHIN
./.history/backend/app/main_20250726145914.py:1101:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726145914.py:1104:            "source": "GHINcom"
./.history/backend/app/main_20250726145914.py:1110:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726145914.py:1120:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726145914.py:1130:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726145914.py:1139:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726145914.py:1167:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726145914.py:1171:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726145914.py:1174:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726145914.py:1180:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726145914.py:1181:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726145914.py:1182:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726145914.py:1183:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726145914.py:1188:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726145914.py:1189:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726145914.py:1190:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726145914.py:1193:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726145914.py:1194:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726145914.py:1199:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726145914.py:1204:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726145914.py:1205:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726145914.py:1208:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726145914.py:1209:                "source": "GHINcom"
./.history/backend/app/main_20250726145914.py:1213:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726145914.py:1233:                        "source": "GHINcom"
./.history/backend/app/main_20250726145914.py:1236:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726195124.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726195124.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726195124.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726195124.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726195124.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726195124.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726195124.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726195124.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726195124.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726195124.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726195124.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726195124.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726195124.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726195124.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726195124.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726195124.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726195124.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726195124.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726195124.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726195124.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726195124.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726195124.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726195124.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726195124.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726195124.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726195124.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726195124.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726195124.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726195124.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726195124.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726195124.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726195124.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726195124.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726195124.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726195124.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726195124.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726195124.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726195124.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726195124.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151709.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151709.py:249:    """Look up golfers by name using GHIN API"""
./.history/backend/app/main_20250728151709.py:251:        # Get GHIN credentials from environment
./.history/backend/app/main_20250728151709.py:252:        email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151709.py:253:        password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151709.py:254:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151709.py:257:            return {"error": "GHIN credentials not configured"}
./.history/backend/app/main_20250728151709.py:259:        # GHIN API endpoints
./.history/backend/app/main_20250728151709.py:260:        GHIN_AUTH_URL = "https://www.ghin.com/api/v1/authenticate"
./.history/backend/app/main_20250728151709.py:261:        GHIN_SEARCH_URL = "https://www.ghin.com/api/v1/golfer_search"
./.history/backend/app/main_20250728151709.py:263:        # Authenticate with GHIN
./.history/backend/app/main_20250728151709.py:270:            "source": "GHINcom"
./.history/backend/app/main_20250728151709.py:274:            auth_response = client.post(GHIN_AUTH_URL, json=auth_data)
./.history/backend/app/main_20250728151709.py:289:                GHIN_SEARCH_URL,
./.history/backend/app/main_20250728151709.py:298:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./.history/backend/app/main_20250728151709.py:299:        return {"error": f"GHIN API error: {e.response.status_code}"}
./.history/backend/app/main_20250728151709.py:301:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151709.py:306:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151709.py:307:    email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151709.py:308:    password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151709.py:309:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727082314.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250727082314.py:249:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727082314.py:251:        # GHIN API credentials from environment
./.history/backend/app/main_20250727082314.py:252:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727082314.py:253:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727082314.py:254:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727082314.py:258:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727082314.py:259:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727082314.py:262:        # GHIN API endpoints
./.history/backend/app/main_20250727082314.py:266:        # Authenticate with GHIN
./.history/backend/app/main_20250727082314.py:273:            "source": "GHINcom"
./.history/backend/app/main_20250727082314.py:280:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727082314.py:289:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727082314.py:306:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727082314.py:318:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727082314.py:320:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727082314.py:326:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727082314.py:328:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727082314.py:329:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727082314.py:330:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727082314.py:340:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727082314.py:342:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726110357.py:507:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726110357.py:521:            "name": "GHIN",
./.history/backend/app/main_20250726110357.py:523:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726110357.py:1149:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726110357.py:1150:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726110357.py:1159:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726110357.py:1161:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726110357.py:1162:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726110357.py:1163:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726110357.py:1164:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726110357.py:1169:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726110357.py:1171:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726110357.py:1174:        # Authenticate with GHIN
./.history/backend/app/main_20250726110357.py:1175:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726110357.py:1178:            "source": "GHINcom"
./.history/backend/app/main_20250726110357.py:1184:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726110357.py:1194:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726110357.py:1204:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726110357.py:1213:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726110357.py:1241:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726110357.py:1245:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726110357.py:1248:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726110357.py:1254:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726110357.py:1255:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726110357.py:1256:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726110357.py:1257:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726110357.py:1262:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726110357.py:1263:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726110357.py:1264:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726110357.py:1267:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726110357.py:1268:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726110357.py:1273:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726110357.py:1278:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726110357.py:1279:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726110357.py:1282:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726110357.py:1283:                "source": "GHINcom"
./.history/backend/app/main_20250726110357.py:1287:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726110357.py:1307:                        "source": "GHINcom"
./.history/backend/app/main_20250726110357.py:1310:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726193303.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726193303.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726193303.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726193303.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726193303.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726193303.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726193303.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726193303.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726193303.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726193303.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726193303.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726193303.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726193303.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726193303.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726193303.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726193303.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726193303.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726193303.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726193303.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726193303.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726193303.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726193303.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726193303.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726193303.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726193303.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726193303.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726193303.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726193303.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726193303.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726193303.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726193303.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726193303.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726193303.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726193303.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726193303.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726193303.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726193303.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726193303.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726193303.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726134256.py:518:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726134256.py:532:            "name": "GHIN",
./.history/backend/app/main_20250726134256.py:534:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726134256.py:1095:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726134256.py:1096:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726134256.py:1105:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726134256.py:1107:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726134256.py:1108:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726134256.py:1109:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726134256.py:1110:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726134256.py:1115:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726134256.py:1117:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726134256.py:1120:        # Authenticate with GHIN
./.history/backend/app/main_20250726134256.py:1121:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726134256.py:1124:            "source": "GHINcom"
./.history/backend/app/main_20250726134256.py:1130:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726134256.py:1140:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726134256.py:1150:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726134256.py:1159:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726134256.py:1187:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726134256.py:1191:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726134256.py:1194:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726134256.py:1200:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726134256.py:1201:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726134256.py:1202:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726134256.py:1203:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726134256.py:1208:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726134256.py:1209:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726134256.py:1210:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726134256.py:1213:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726134256.py:1214:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726134256.py:1219:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726134256.py:1224:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726134256.py:1225:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726134256.py:1228:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726134256.py:1229:                "source": "GHINcom"
./.history/backend/app/main_20250726134256.py:1233:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726134256.py:1253:                        "source": "GHINcom"
./.history/backend/app/main_20250726134256.py:1256:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727074734.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727074734.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727074734.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727074734.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727074734.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727074734.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727074734.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727074734.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074734.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074734.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727074734.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727074734.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727074734.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727074734.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727074734.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727074734.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727074734.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727074734.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727074734.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727074734.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727074734.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727074734.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727074734.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727074734.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074734.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074734.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727074734.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727074734.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727074734.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727074734.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727074734.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727074734.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727074734.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727074734.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727074734.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727074734.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727074734.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727074734.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727074734.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250728151719.py:241:# GHIN Integration Endpoints
./.history/backend/app/main_20250728151719.py:249:    """Look up golfers by name using GHIN API"""
./.history/backend/app/main_20250728151719.py:251:        # Get GHIN credentials from environment
./.history/backend/app/main_20250728151719.py:252:        email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151719.py:253:        password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151719.py:254:        static_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250728151719.py:257:            return {"error": "GHIN credentials not configured"}
./.history/backend/app/main_20250728151719.py:259:        # GHIN API endpoints
./.history/backend/app/main_20250728151719.py:260:        GHIN_AUTH_URL = "https://www.ghin.com/api/v1/authenticate"
./.history/backend/app/main_20250728151719.py:261:        GHIN_SEARCH_URL = "https://www.ghin.com/api/v1/golfer_search"
./.history/backend/app/main_20250728151719.py:263:        # Authenticate with GHIN
./.history/backend/app/main_20250728151719.py:270:            "source": "GHINcom"
./.history/backend/app/main_20250728151719.py:274:            auth_response = client.post(GHIN_AUTH_URL, json=auth_data)
./.history/backend/app/main_20250728151719.py:289:                GHIN_SEARCH_URL,
./.history/backend/app/main_20250728151719.py:298:        logger.error(f"GHIN API error: {e.response.status_code} - {e.response.text}")
./.history/backend/app/main_20250728151719.py:299:        return {"error": f"GHIN API error: {e.response.status_code}"}
./.history/backend/app/main_20250728151719.py:301:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250728151719.py:306:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250728151719.py:307:    email = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250728151719.py:308:    password = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250728151719.py:309:    static_token = os.getenv("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726095041.py:455:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726095041.py:469:            "name": "GHIN",
./.history/backend/app/main_20250726095041.py:471:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726095041.py:1074:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726095041.py:1075:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726095041.py:1084:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726095041.py:1086:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726095041.py:1087:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726095041.py:1088:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726095041.py:1089:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726095041.py:1094:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726095041.py:1096:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726095041.py:1099:        # Authenticate with GHIN
./.history/backend/app/main_20250726095041.py:1100:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726095041.py:1103:            "source": "GHINcom"
./.history/backend/app/main_20250726095041.py:1109:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726095041.py:1119:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726095041.py:1129:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726095041.py:1138:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726095041.py:1166:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726095041.py:1170:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726095041.py:1173:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726095041.py:1179:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726095041.py:1180:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726095041.py:1181:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726095041.py:1182:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726095041.py:1187:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726095041.py:1188:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726095041.py:1189:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726095041.py:1192:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726095041.py:1193:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726095041.py:1198:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726095041.py:1203:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726095041.py:1204:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726095041.py:1207:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726095041.py:1208:                "source": "GHINcom"
./.history/backend/app/main_20250726095041.py:1212:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726095041.py:1232:                        "source": "GHINcom"
./.history/backend/app/main_20250726095041.py:1235:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726195025.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726195025.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726195025.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726195025.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726195025.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726195025.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726195025.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726195025.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726195025.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726195025.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726195025.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726195025.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726195025.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726195025.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726195025.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726195025.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726195025.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726195025.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726195025.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726195025.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726195025.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726195025.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726195025.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726195025.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726195025.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726195025.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726195025.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726195025.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726195025.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726195025.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726195025.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726195025.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726195025.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726195025.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726195025.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726195025.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726195025.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726195025.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726195025.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726100904.py:482:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726100904.py:496:            "name": "GHIN",
./.history/backend/app/main_20250726100904.py:498:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726100904.py:1101:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726100904.py:1102:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726100904.py:1111:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726100904.py:1113:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726100904.py:1114:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100904.py:1115:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100904.py:1116:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726100904.py:1121:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726100904.py:1123:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726100904.py:1126:        # Authenticate with GHIN
./.history/backend/app/main_20250726100904.py:1127:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726100904.py:1130:            "source": "GHINcom"
./.history/backend/app/main_20250726100904.py:1136:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726100904.py:1146:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726100904.py:1156:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726100904.py:1165:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726100904.py:1193:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726100904.py:1197:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726100904.py:1200:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726100904.py:1206:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726100904.py:1207:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726100904.py:1208:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726100904.py:1209:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726100904.py:1214:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726100904.py:1215:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726100904.py:1216:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726100904.py:1219:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726100904.py:1220:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726100904.py:1225:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726100904.py:1230:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726100904.py:1231:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726100904.py:1234:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726100904.py:1235:                "source": "GHINcom"
./.history/backend/app/main_20250726100904.py:1239:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726100904.py:1259:                        "source": "GHINcom"
./.history/backend/app/main_20250726100904.py:1262:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721105435.py:470:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250721105435.py:471:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250721105435.py:480:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250721105435.py:481:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250721105435.py:482:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250721105435.py:483:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250721105435.py:488:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250721105435.py:489:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250721105435.py:492:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250721105435.py:493:        "source": "GHINcom"
./.history/backend/app/main_20250721105435.py:497:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250721105435.py:502:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250721105435.py:515:        "source": "GHINcom"
./.history/backend/app/main_20250721105435.py:519:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250721105435.py:533:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250726195356.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726195356.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726195356.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726195356.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726195356.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726195356.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726195356.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726195356.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726195356.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726195356.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726195356.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726195356.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726195356.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726195356.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726195356.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726195356.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726195356.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726195356.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726195356.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726195356.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726195356.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726195356.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726195356.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726195356.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726195356.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726195356.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726195356.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726195356.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726195356.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726195356.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726195356.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726195356.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726195356.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726195356.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726195356.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726195356.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726195356.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726195356.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726195356.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727074634.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727074634.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727074634.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727074634.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727074634.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727074634.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727074634.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727074634.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074634.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074634.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727074634.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727074634.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727074634.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727074634.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727074634.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727074634.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727074634.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727074634.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727074634.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727074634.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727074634.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727074634.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727074634.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727074634.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074634.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074634.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727074634.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727074634.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727074634.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727074634.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727074634.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727074634.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727074634.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727074634.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727074634.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727074634.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727074634.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727074634.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727074634.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727074523.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727074523.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727074523.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727074523.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727074523.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727074523.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727074523.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727074523.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074523.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074523.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727074523.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727074523.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727074523.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727074523.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727074523.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727074523.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727074523.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727074523.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727074523.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727074523.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727074523.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727074523.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727074523.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727074523.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074523.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074523.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727074523.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727074523.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727074523.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727074523.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727074523.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727074523.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727074523.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727074523.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727074523.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727074523.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727074523.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727074523.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727074523.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727080133.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727080133.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727080133.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727080133.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080133.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080133.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080133.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727080133.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727080133.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727080133.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727080133.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727080133.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727080133.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727080133.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727080133.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727080133.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727080133.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727080133.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080133.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080133.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080133.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727080133.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250726094803.py:455:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726094803.py:469:            "name": "GHIN",
./.history/backend/app/main_20250726094803.py:471:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726094803.py:1074:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726094803.py:1075:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726094803.py:1084:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726094803.py:1086:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726094803.py:1087:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726094803.py:1088:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726094803.py:1089:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726094803.py:1094:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726094803.py:1096:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726094803.py:1099:        # Authenticate with GHIN
./.history/backend/app/main_20250726094803.py:1100:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726094803.py:1103:            "source": "GHINcom"
./.history/backend/app/main_20250726094803.py:1109:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726094803.py:1119:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726094803.py:1129:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726094803.py:1138:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726094803.py:1166:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726094803.py:1170:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726094803.py:1173:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726094803.py:1179:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726094803.py:1180:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726094803.py:1181:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726094803.py:1182:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726094803.py:1187:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726094803.py:1188:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726094803.py:1189:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726094803.py:1192:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726094803.py:1193:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726094803.py:1198:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726094803.py:1203:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726094803.py:1204:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726094803.py:1207:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726094803.py:1208:                "source": "GHINcom"
./.history/backend/app/main_20250726094803.py:1212:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726094803.py:1232:                        "source": "GHINcom"
./.history/backend/app/main_20250726094803.py:1235:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726124540.py:518:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726124540.py:532:            "name": "GHIN",
./.history/backend/app/main_20250726124540.py:534:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726124540.py:1186:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726124540.py:1187:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726124540.py:1196:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726124540.py:1198:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726124540.py:1199:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124540.py:1200:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124540.py:1201:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726124540.py:1206:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726124540.py:1208:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726124540.py:1211:        # Authenticate with GHIN
./.history/backend/app/main_20250726124540.py:1212:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726124540.py:1215:            "source": "GHINcom"
./.history/backend/app/main_20250726124540.py:1221:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726124540.py:1231:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726124540.py:1241:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726124540.py:1250:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726124540.py:1278:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726124540.py:1282:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726124540.py:1285:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726124540.py:1291:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726124540.py:1292:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726124540.py:1293:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726124540.py:1294:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726124540.py:1299:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726124540.py:1300:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726124540.py:1301:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726124540.py:1304:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726124540.py:1305:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726124540.py:1310:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726124540.py:1315:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726124540.py:1316:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726124540.py:1319:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726124540.py:1320:                "source": "GHINcom"
./.history/backend/app/main_20250726124540.py:1324:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726124540.py:1344:                        "source": "GHINcom"
./.history/backend/app/main_20250726124540.py:1347:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727074208.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727074208.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727074208.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727074208.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727074208.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727074208.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727074208.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727074208.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074208.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074208.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727074208.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727074208.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727074208.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727074208.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727074208.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727074208.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727074208.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727074208.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727074208.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727074208.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727074208.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727074208.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727074208.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727074208.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074208.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074208.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727074208.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727074208.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727074208.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727074208.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727074208.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727074208.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727074208.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727074208.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727074208.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727074208.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727074208.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727074208.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727074208.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/course_import_20250725221317.py:5:from various external sources including USGA, GHIN, and other golf course databases.
./.history/backend/app/course_import_20250725221317.py:49:            "ghin_api_key": os.getenv("GHIN_API_KEY", ""),
./.history/backend/app/course_import_20250725221317.py:121:        """Search GHIN course database"""
./.history/backend/app/course_import_20250725221317.py:123:            # GHIN course search endpoint
./.history/backend/app/course_import_20250725221317.py:143:            logger.error(f"GHIN search failed: {e}")
./.history/backend/app/course_import_20250725221317.py:251:        """Parse GHIN course data format"""
./.history/backend/app/course_import_20250725221317.py:276:            source="GHIN",
./.history/backend/app/main_20250726150219.py:498:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726150219.py:512:            "name": "GHIN",
./.history/backend/app/main_20250726150219.py:514:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726150219.py:1075:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726150219.py:1076:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726150219.py:1085:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726150219.py:1087:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726150219.py:1088:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726150219.py:1089:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726150219.py:1090:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726150219.py:1095:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726150219.py:1097:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726150219.py:1100:        # Authenticate with GHIN
./.history/backend/app/main_20250726150219.py:1101:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726150219.py:1104:            "source": "GHINcom"
./.history/backend/app/main_20250726150219.py:1110:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726150219.py:1120:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726150219.py:1130:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726150219.py:1139:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726150219.py:1167:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726150219.py:1171:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726150219.py:1174:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726150219.py:1180:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726150219.py:1181:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726150219.py:1182:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726150219.py:1183:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726150219.py:1188:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726150219.py:1189:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726150219.py:1190:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726150219.py:1193:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726150219.py:1194:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726150219.py:1199:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726150219.py:1204:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726150219.py:1205:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726150219.py:1208:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726150219.py:1209:                "source": "GHINcom"
./.history/backend/app/main_20250726150219.py:1213:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726150219.py:1233:                        "source": "GHINcom"
./.history/backend/app/main_20250726150219.py:1236:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144258.py:528:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724144258.py:529:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724144258.py:538:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144258.py:539:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144258.py:540:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144258.py:541:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724144258.py:546:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144258.py:547:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144258.py:550:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144258.py:551:        "source": "GHINcom"
./.history/backend/app/main_20250724144258.py:555:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144258.py:560:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724144258.py:573:        "source": "GHINcom"
./.history/backend/app/main_20250724144258.py:577:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144258.py:591:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724144258.py:596:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724144258.py:597:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144258.py:598:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144258.py:599:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144258.py:604:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724144258.py:605:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724144258.py:606:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724144258.py:609:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724144258.py:610:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724144258.py:615:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724144258.py:620:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144258.py:621:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144258.py:624:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144258.py:625:                "source": "GHINcom"
./.history/backend/app/main_20250724144258.py:629:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144258.py:649:                        "source": "GHINcom"
./.history/backend/app/main_20250724144258.py:652:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726193559.py:505:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726193559.py:519:            "name": "GHIN",
./.history/backend/app/main_20250726193559.py:521:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726193559.py:1133:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726193559.py:1134:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726193559.py:1143:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726193559.py:1145:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726193559.py:1146:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726193559.py:1147:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726193559.py:1148:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726193559.py:1153:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726193559.py:1155:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726193559.py:1158:        # Authenticate with GHIN
./.history/backend/app/main_20250726193559.py:1159:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726193559.py:1162:            "source": "GHINcom"
./.history/backend/app/main_20250726193559.py:1168:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726193559.py:1178:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726193559.py:1188:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726193559.py:1197:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726193559.py:1225:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726193559.py:1229:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726193559.py:1232:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726193559.py:1238:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726193559.py:1239:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726193559.py:1240:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726193559.py:1241:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726193559.py:1246:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726193559.py:1247:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726193559.py:1248:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726193559.py:1251:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726193559.py:1252:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726193559.py:1257:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726193559.py:1262:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726193559.py:1263:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726193559.py:1266:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726193559.py:1267:                "source": "GHINcom"
./.history/backend/app/main_20250726193559.py:1271:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726193559.py:1291:                        "source": "GHINcom"
./.history/backend/app/main_20250726193559.py:1294:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727081841.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727081841.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727081841.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727081841.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081841.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081841.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081841.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727081841.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727081841.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727081841.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727081841.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727081841.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727081841.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727081841.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727081841.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727081841.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727081841.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727081841.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727081841.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727081841.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727081841.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727081841.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250727074933.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727074933.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727074933.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727074933.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727074933.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727074933.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727074933.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727074933.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074933.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074933.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727074933.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727074933.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727074933.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727074933.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727074933.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727074933.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727074933.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727074933.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727074933.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727074933.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727074933.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727074933.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727074933.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727074933.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074933.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074933.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727074933.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727074933.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727074933.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727074933.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727074933.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727074933.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727074933.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727074933.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727074933.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727074933.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727074933.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727074933.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727074933.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727074715.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727074715.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727074715.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727074715.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727074715.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727074715.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727074715.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727074715.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074715.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074715.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727074715.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727074715.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727074715.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727074715.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727074715.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727074715.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727074715.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727074715.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727074715.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727074715.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727074715.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727074715.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727074715.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727074715.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074715.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074715.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727074715.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727074715.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727074715.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727074715.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727074715.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727074715.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727074715.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727074715.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727074715.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727074715.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727074715.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727074715.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727074715.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726133926.py:518:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726133926.py:532:            "name": "GHIN",
./.history/backend/app/main_20250726133926.py:534:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726133926.py:1095:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726133926.py:1096:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726133926.py:1105:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726133926.py:1107:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726133926.py:1108:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726133926.py:1109:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726133926.py:1110:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726133926.py:1115:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726133926.py:1117:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726133926.py:1120:        # Authenticate with GHIN
./.history/backend/app/main_20250726133926.py:1121:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726133926.py:1124:            "source": "GHINcom"
./.history/backend/app/main_20250726133926.py:1130:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726133926.py:1140:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726133926.py:1150:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726133926.py:1159:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726133926.py:1187:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726133926.py:1191:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726133926.py:1194:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726133926.py:1200:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726133926.py:1201:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726133926.py:1202:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726133926.py:1203:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726133926.py:1208:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726133926.py:1209:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726133926.py:1210:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726133926.py:1213:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726133926.py:1214:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726133926.py:1219:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726133926.py:1224:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726133926.py:1225:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726133926.py:1228:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726133926.py:1229:                "source": "GHINcom"
./.history/backend/app/main_20250726133926.py:1233:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726133926.py:1253:                        "source": "GHINcom"
./.history/backend/app/main_20250726133926.py:1256:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726134045.py:518:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726134045.py:532:            "name": "GHIN",
./.history/backend/app/main_20250726134045.py:534:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726134045.py:1095:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726134045.py:1096:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726134045.py:1105:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726134045.py:1107:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726134045.py:1108:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726134045.py:1109:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726134045.py:1110:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726134045.py:1115:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726134045.py:1117:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726134045.py:1120:        # Authenticate with GHIN
./.history/backend/app/main_20250726134045.py:1121:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726134045.py:1124:            "source": "GHINcom"
./.history/backend/app/main_20250726134045.py:1130:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726134045.py:1140:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726134045.py:1150:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726134045.py:1159:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726134045.py:1187:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726134045.py:1191:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726134045.py:1194:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726134045.py:1200:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726134045.py:1201:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726134045.py:1202:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726134045.py:1203:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726134045.py:1208:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726134045.py:1209:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726134045.py:1210:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726134045.py:1213:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726134045.py:1214:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726134045.py:1219:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726134045.py:1224:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726134045.py:1225:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726134045.py:1228:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726134045.py:1229:                "source": "GHINcom"
./.history/backend/app/main_20250726134045.py:1233:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726134045.py:1253:                        "source": "GHINcom"
./.history/backend/app/main_20250726134045.py:1256:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724180533.py:561:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724180533.py:562:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724180533.py:571:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724180533.py:573:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724180533.py:574:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724180533.py:575:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724180533.py:576:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724180533.py:581:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724180533.py:583:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724180533.py:586:        # Authenticate with GHIN
./.history/backend/app/main_20250724180533.py:587:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724180533.py:590:            "source": "GHINcom"
./.history/backend/app/main_20250724180533.py:596:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724180533.py:606:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724180533.py:616:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724180533.py:625:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724180533.py:653:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724180533.py:657:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724180533.py:660:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724180533.py:666:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724180533.py:667:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724180533.py:668:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724180533.py:669:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724180533.py:674:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724180533.py:675:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724180533.py:676:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724180533.py:679:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724180533.py:680:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724180533.py:685:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724180533.py:690:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724180533.py:691:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724180533.py:694:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724180533.py:695:                "source": "GHINcom"
./.history/backend/app/main_20250724180533.py:699:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724180533.py:719:                        "source": "GHINcom"
./.history/backend/app/main_20250724180533.py:722:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727080321.py:232:# GHIN Integration Endpoints
./.history/backend/app/main_20250727080321.py:240:    """Look up golfer information from GHIN database"""
./.history/backend/app/main_20250727080321.py:242:        # GHIN API credentials from environment
./.history/backend/app/main_20250727080321.py:243:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080321.py:244:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080321.py:245:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080321.py:249:                "error": "GHIN API credentials not configured",
./.history/backend/app/main_20250727080321.py:250:                "message": "Please set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727080321.py:253:        # GHIN API endpoints
./.history/backend/app/main_20250727080321.py:257:        # Authenticate with GHIN
./.history/backend/app/main_20250727080321.py:264:            "source": "GHINcom"
./.history/backend/app/main_20250727080321.py:271:                    "error": "GHIN authentication failed",
./.history/backend/app/main_20250727080321.py:280:                    "error": "No JWT token received from GHIN"
./.history/backend/app/main_20250727080321.py:297:                    "error": "GHIN search failed",
./.history/backend/app/main_20250727080321.py:309:        logger.error(f"Error in GHIN lookup: {e}")
./.history/backend/app/main_20250727080321.py:311:            "error": "GHIN lookup failed",
./.history/backend/app/main_20250727080321.py:317:    """Diagnostic endpoint for GHIN API configuration"""
./.history/backend/app/main_20250727080321.py:319:        ghin_user = os.getenv("GHIN_API_USER")
./.history/backend/app/main_20250727080321.py:320:        ghin_pass = os.getenv("GHIN_API_PASS")
./.history/backend/app/main_20250727080321.py:321:        ghin_token = os.getenv("GHIN_API_STATIC_TOKEN", "ghincom")
./.history/backend/app/main_20250727080321.py:331:        logger.error(f"Error in GHIN diagnostic: {e}")
./.history/backend/app/main_20250727080321.py:333:            "error": "GHIN diagnostic failed",
./.history/backend/app/main_20250724160318.py:554:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724160318.py:555:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724160318.py:564:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250724160318.py:566:        # Check if GHIN credentials are available
./.history/backend/app/main_20250724160318.py:567:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160318.py:568:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160318.py:569:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250724160318.py:574:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250724160318.py:576:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250724160318.py:579:        # Authenticate with GHIN
./.history/backend/app/main_20250724160318.py:580:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250724160318.py:583:            "source": "GHINcom"
./.history/backend/app/main_20250724160318.py:589:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250724160318.py:599:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250724160318.py:609:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250724160318.py:618:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250724160318.py:646:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250724160318.py:650:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250724160318.py:653:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250724160318.py:659:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724160318.py:660:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724160318.py:661:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724160318.py:662:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724160318.py:667:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724160318.py:668:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724160318.py:669:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724160318.py:672:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724160318.py:673:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724160318.py:678:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724160318.py:683:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724160318.py:684:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724160318.py:687:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724160318.py:688:                "source": "GHINcom"
./.history/backend/app/main_20250724160318.py:692:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724160318.py:712:                        "source": "GHINcom"
./.history/backend/app/main_20250724160318.py:715:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250722182429.py:478:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250722182429.py:479:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250722182429.py:488:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250722182429.py:489:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250722182429.py:490:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250722182429.py:491:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250722182429.py:496:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250722182429.py:497:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250722182429.py:500:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250722182429.py:501:        "source": "GHINcom"
./.history/backend/app/main_20250722182429.py:505:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250722182429.py:510:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250722182429.py:523:        "source": "GHINcom"
./.history/backend/app/main_20250722182429.py:527:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250722182429.py:541:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724144248.py:528:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250724144248.py:529:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250724144248.py:538:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144248.py:539:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144248.py:540:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144248.py:541:    if not GHIN_API_USER or not GHIN_API_PASS:
./.history/backend/app/main_20250724144248.py:546:            "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144248.py:547:            "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144248.py:550:        "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144248.py:551:        "source": "GHINcom"
./.history/backend/app/main_20250724144248.py:555:        auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144248.py:560:        print(f"GHIN auth error: {e}")
./.history/backend/app/main_20250724144248.py:573:        "source": "GHINcom"
./.history/backend/app/main_20250724144248.py:577:        search_resp = httpx.get(GHIN_SEARCH_URL, params=params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250724144248.py:591:        print(f"GHIN search error: {e}")
./.history/backend/app/main_20250724144248.py:596:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250724144248.py:597:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250724144248.py:598:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250724144248.py:599:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250724144248.py:604:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250724144248.py:605:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250724144248.py:606:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250724144248.py:609:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250724144248.py:610:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250724144248.py:615:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250724144248.py:620:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250724144248.py:621:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250724144248.py:624:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250724144248.py:625:                "source": "GHINcom"
./.history/backend/app/main_20250724144248.py:629:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250724144248.py:649:                        "source": "GHINcom"
./.history/backend/app/main_20250724144248.py:652:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250726204231.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250726204231.py:523:            "name": "GHIN",
./.history/backend/app/main_20250726204231.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250726204231.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250726204231.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250726204231.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250726204231.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250726204231.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726204231.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726204231.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250726204231.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250726204231.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250726204231.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250726204231.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250726204231.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250726204231.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250726204231.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250726204231.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250726204231.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250726204231.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250726204231.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250726204231.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250726204231.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250726204231.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250726204231.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250726204231.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250726204231.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250726204231.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250726204231.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250726204231.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250726204231.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250726204231.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250726204231.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250726204231.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250726204231.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250726204231.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250726204231.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250726204231.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250726204231.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/app/main_20250727074329.py:509:        "ghin_api_key": bool(os.getenv("GHIN_API_KEY")),
./.history/backend/app/main_20250727074329.py:523:            "name": "GHIN",
./.history/backend/app/main_20250727074329.py:525:            "available": True,  # GHIN doesn't require API key for basic search
./.history/backend/app/main_20250727074329.py:1137:GHIN_AUTH_URL = "https://api2.ghin.com/api/v1/golfer_login.json"
./.history/backend/app/main_20250727074329.py:1138:GHIN_SEARCH_URL = "https://api2.ghin.com/api/v1/golfers/search.json"
./.history/backend/app/main_20250727074329.py:1147:    """Lookup golfer by name in GHIN database with defensive error handling"""
./.history/backend/app/main_20250727074329.py:1149:        # Check if GHIN credentials are available
./.history/backend/app/main_20250727074329.py:1150:        ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074329.py:1151:        ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074329.py:1152:        ghin_token = os.environ.get("GHIN_API_STATIC_TOKEN")
./.history/backend/app/main_20250727074329.py:1157:                "message": "GHIN API credentials not configured",
./.history/backend/app/main_20250727074329.py:1159:                "suggestion": "Set GHIN_API_USER and GHIN_API_PASS environment variables"
./.history/backend/app/main_20250727074329.py:1162:        # Authenticate with GHIN
./.history/backend/app/main_20250727074329.py:1163:        auth_response = httpx.post(GHIN_AUTH_URL, json={
./.history/backend/app/main_20250727074329.py:1166:            "source": "GHINcom"
./.history/backend/app/main_20250727074329.py:1172:                "message": f"GHIN authentication failed: {auth_response.status_code}",
./.history/backend/app/main_20250727074329.py:1182:                "message": "No JWT token received from GHIN",
./.history/backend/app/main_20250727074329.py:1192:            GHIN_SEARCH_URL,
./.history/backend/app/main_20250727074329.py:1201:                "message": f"GHIN search failed: {search_response.status_code}",
./.history/backend/app/main_20250727074329.py:1229:            "message": "GHIN API request timed out",
./.history/backend/app/main_20250727074329.py:1233:        print(f"⚠️ GHIN lookup error: {e}")
./.history/backend/app/main_20250727074329.py:1236:            "message": f"GHIN lookup failed: {str(e)}",
./.history/backend/app/main_20250727074329.py:1242:    """Diagnostic endpoint to check GHIN API configuration and connectivity"""
./.history/backend/app/main_20250727074329.py:1243:    GHIN_API_USER = os.environ.get("GHIN_API_USER")
./.history/backend/app/main_20250727074329.py:1244:    GHIN_API_PASS = os.environ.get("GHIN_API_PASS")
./.history/backend/app/main_20250727074329.py:1245:    GHIN_API_STATIC_TOKEN = os.environ.get("GHIN_API_STATIC_TOKEN", "")
./.history/backend/app/main_20250727074329.py:1250:            "GHIN_API_USER": "SET" if GHIN_API_USER else "MISSING",
./.history/backend/app/main_20250727074329.py:1251:            "GHIN_API_PASS": "SET" if GHIN_API_PASS else "MISSING",
./.history/backend/app/main_20250727074329.py:1252:            "GHIN_API_STATIC_TOKEN": "SET" if GHIN_API_STATIC_TOKEN else "MISSING"
./.history/backend/app/main_20250727074329.py:1255:            "auth_url": GHIN_AUTH_URL,
./.history/backend/app/main_20250727074329.py:1256:            "search_url": GHIN_SEARCH_URL
./.history/backend/app/main_20250727074329.py:1261:    if GHIN_API_USER and GHIN_API_PASS:
./.history/backend/app/main_20250727074329.py:1266:                    "password": GHIN_API_PASS,
./.history/backend/app/main_20250727074329.py:1267:                    "email_or_ghin": GHIN_API_USER,
./.history/backend/app/main_20250727074329.py:1270:                "token": GHIN_API_STATIC_TOKEN,
./.history/backend/app/main_20250727074329.py:1271:                "source": "GHINcom"
./.history/backend/app/main_20250727074329.py:1275:            auth_resp = httpx.post(GHIN_AUTH_URL, json=auth_payload, headers=headers, timeout=10)
./.history/backend/app/main_20250727074329.py:1295:                        "source": "GHINcom"
./.history/backend/app/main_20250727074329.py:1298:                    search_resp = httpx.get(GHIN_SEARCH_URL, params=search_params, headers=search_headers, timeout=10)
./.history/backend/deployment_test_20250723215450.py:69:    ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/deployment_test_20250723215450.py:70:    ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/deployment_test_20250723215450.py:72:    print(f"✅ GHIN_API_USER: {'SET' if ghin_user else 'MISSING'}")
./.history/backend/deployment_test_20250723215450.py:73:    print(f"✅ GHIN_API_PASS: {'SET' if ghin_pass else 'MISSING'}")
./.history/backend/test_ghin_local_20250723221151.py:3:Test script to show GHIN diagnostic results locally
./.history/backend/test_ghin_local_20250723221151.py:10:    """Test the GHIN diagnostic function directly"""
./.history/backend/test_ghin_local_20250723221151.py:11:    print("🔍 GHIN Diagnostic Test")
./.history/backend/test_ghin_local_20250723221151.py:36:        print("❌ GHIN credentials not set")
./.history/backend/test_ghin_local_20250723221151.py:37:        print("💡 To fix: Set GHIN_API_USER and GHIN_API_PASS environment variables")
./.history/backend/test_ghin_local_20250723221151.py:39:        print("✅ GHIN integration working!")
./.history/backend/.env_20250827110915:1:GHIN_USERNAME=stuagano@gmail.com
./.history/backend/.env_20250827110915:2:GHIN_PASSWORD=i88$G@@7Ydpt@BD
./.history/backend/.env_20250827110915:3:GHIN_API_STATIC_TOKEN=
./.history/backend/test_api_20250723215356.py:19:    """Test the GHIN diagnostic endpoint"""
./.history/backend/test_api_20250723215356.py:22:    print(f"GHIN diagnostic status: {response.status_code}")
./.history/backend/test_api_20250723215356.py:23:    print(f"GHIN diagnostic response: {response.json()}")
./.history/backend/test_api_20250723215356.py:49:    print(f"✅ GHIN routes: {len(ghin_routes)}")
./.history/backend/test_api_20250723215356.py:63:        # Test GHIN diagnostic
./.history/backend/test_api_20250723215356.py:69:        print(f"  GHIN Diagnostic: {'✅ PASS' if ghin_ok else '❌ FAIL'}")
./.history/backend/test_api_20250723215449.py:19:    """Test the GHIN diagnostic endpoint"""
./.history/backend/test_api_20250723215449.py:22:    print(f"GHIN diagnostic status: {response.status_code}")
./.history/backend/test_api_20250723215449.py:23:    print(f"GHIN diagnostic response: {response.json()}")
./.history/backend/test_api_20250723215449.py:49:    print(f"✅ GHIN routes: {len(ghin_routes)}")
./.history/backend/test_api_20250723215449.py:63:        # Test GHIN diagnostic
./.history/backend/test_api_20250723215449.py:69:        print(f"  GHIN Diagnostic: {'✅ PASS' if ghin_ok else '❌ FAIL'}")
./.history/backend/test_ghin_local_20250723221229.py:3:Test script to show GHIN diagnostic results locally
./.history/backend/test_ghin_local_20250723221229.py:10:    """Test the GHIN diagnostic function directly"""
./.history/backend/test_ghin_local_20250723221229.py:11:    print("🔍 GHIN Diagnostic Test")
./.history/backend/test_ghin_local_20250723221229.py:36:        print("❌ GHIN credentials not set")
./.history/backend/test_ghin_local_20250723221229.py:37:        print("💡 To fix: Set GHIN_API_USER and GHIN_API_PASS environment variables")
./.history/backend/test_ghin_local_20250723221229.py:39:        print("✅ GHIN integration working!")
./.history/backend/test_ghin_local_20250724071704.py:3:Test script to show GHIN diagnostic results locally
./.history/backend/test_ghin_local_20250724071704.py:10:    """Test the GHIN diagnostic function directly"""
./.history/backend/test_ghin_local_20250724071704.py:11:    print("🔍 GHIN Diagnostic Test")
./.history/backend/test_ghin_local_20250724071704.py:36:        print("❌ GHIN credentials not set")
./.history/backend/test_ghin_local_20250724071704.py:37:        print("💡 To fix: Set GHIN_API_USER and GHIN_API_PASS environment variables")
./.history/backend/test_ghin_local_20250724071704.py:39:        print("✅ GHIN integration working!")
./.history/backend/deployment_test_20250723215427.py:69:    ghin_user = os.environ.get("GHIN_API_USER")
./.history/backend/deployment_test_20250723215427.py:70:    ghin_pass = os.environ.get("GHIN_API_PASS")
./.history/backend/deployment_test_20250723215427.py:72:    print(f"✅ GHIN_API_USER: {'SET' if ghin_user else 'MISSING'}")
./.history/backend/deployment_test_20250723215427.py:73:    print(f"✅ GHIN_API_PASS: {'SET' if ghin_pass else 'MISSING'}")
./.history/README_20250725110515.md:311:- **GHIN Integration**: Real golfer handicap lookup and validation
./.history/UNIFIED_ACTION_API_20250731114142.md:350:- `GET /ghin/lookup` - GHIN golfer lookup
./.history/UNIFIED_ACTION_API_20250731114142.md:351:- `GET /ghin/diagnostic` - GHIN API diagnostic
./.history/UNIFIED_ACTION_API_20250727080003.md:349:- `GET /ghin/lookup` - GHIN golfer lookup
./.history/UNIFIED_ACTION_API_20250727080003.md:350:- `GET /ghin/diagnostic` - GHIN API diagnostic
./.history/README_20250725070015.md:311:- **GHIN Integration**: Real golfer handicap lookup and validation
./.history/UNIFIED_ACTION_API_20250727080133.md:349:- `GET /ghin/lookup` - GHIN golfer lookup
./.history/UNIFIED_ACTION_API_20250727080133.md:350:- `GET /ghin/diagnostic` - GHIN API diagnostic
./.history/UNIFIED_ACTION_API_20250727075927.md:349:- `GET /ghin/lookup` - GHIN golfer lookup
./.history/UNIFIED_ACTION_API_20250727075927.md:350:- `GET /ghin/diagnostic` - GHIN API diagnostic
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221746.md:11:- **GHIN Network**: Golf Handicap and Information Network
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221746.md:39:# GHIN API (optional, basic search works without key)
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221746.md:40:GHIN_API_KEY=your_ghin_api_key_here
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221746.md:81:      "name": "GHIN",
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221746.md:112:  "message": "Course 'Pebble Beach Golf Links' imported successfully from GHIN",
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221746.md:121:    "source": "GHIN",
./.history/COURSE_IMPORT_DOCUMENTATION_20250725221746.md:427:- **GHIN**: Contact GHIN support team
Binary file ./scripts/development/__pycache__/deployment_test.cpython-313-pytest-8.4.1.pyc matches
./scripts/development/deployment_test.py:69:    ghin_user = os.environ.get("GHIN_API_USER")
./scripts/development/deployment_test.py:70:    ghin_pass = os.environ.get("GHIN_API_PASS")
./scripts/development/deployment_test.py:72:    print(f"✅ GHIN_API_USER: {'SET' if ghin_user else 'MISSING'}")
./scripts/development/deployment_test.py:73:    print(f"✅ GHIN_API_PASS: {'SET' if ghin_pass else 'MISSING'}")
./scripts/diagnostics/test_all_routes.py:179:        """Test GHIN integration endpoints"""
./scripts/diagnostics/test_all_routes.py:180:        print(f"\n{BLUE}=== Testing GHIN Endpoints ==={RESET}")
./scripts/diagnostics/test_all_routes.py:182:        # GHIN diagnostic
./scripts/diagnostics/test_all_routes.py:187:                          "GHIN not configured" if response.status_code != 200 else "",
./scripts/diagnostics/test_all_routes.py:192:        # GHIN lookup (will fail without credentials)
./scripts/diagnostics/test_all_routes.py:196:                self.log_result("/ghin/lookup", "GET", "PASS", "GHIN configured", response.status_code)
./scripts/diagnostics/test_all_routes.py:198:                self.log_result("/ghin/lookup", "GET", "WARN", "GHIN not configured", response.status_code)
./scripts/diagnostics/test_sync_endpoints.py:55:                print(f"   Players with GHIN: {data.get('ghin_players_count', 0)}")
./scripts/diagnostics/test_sync_endpoints.py:58:                # Check if GHIN data is in response
./scripts/diagnostics/test_sync_endpoints.py:60:                    print(f"   GHIN data included for: {list(data['ghin_data'].keys())}")
./scripts/diagnostics/test_sync_endpoints.py:62:                    print("   No GHIN data in response (expected if no GHIN IDs configured)")
./scripts/diagnostics/test_sync_endpoints.py:88:        print("✨ GHIN scores are now included in sync-wgp-sheet payload!")
Binary file ./scripts/diagnostics/__pycache__/test_all_routes.cpython-313-pytest-8.4.1.pyc matches
Binary file ./scripts/diagnostics/__pycache__/test_sync_endpoints.cpython-313-pytest-8.4.1.pyc matches
./docker-compose.prod.yml:31:      GHIN_API_USER: ${GHIN_API_USER:-}
./docker-compose.prod.yml:32:      GHIN_API_PASS: ${GHIN_API_PASS:-}
./.env.example:31:# GHIN Integration (Optional - app works fine without this)
./.env.example:32:GHIN_API_USER=your-ghin-user
./.env.example:33:GHIN_API_PASS=your-ghin-password
./.env.example:34:GHIN_API_STATIC_TOKEN=your-ghin-token
./.env.example:41:ENABLE_GHIN_INTEGRATION=false
./.git/logs/HEAD:10:8a17d2c196f27c740f1e43d38b5e23b03b08470f 43ec70ebc8ca8a0f08b490ed57af3bfb739ff855 Stuart Gano <stuagano@gmail.com> 1753120109 -0700	commit: Full GHIN JWT lookup integration: backend and frontend support for real GHIN API golfer search
./.git/logs/HEAD:12:4e2eeda5b5ec611577e49268f422041a0de43d42 58a162437c493d11f46aa7afd785c4335c997af7 Stuart Gano <stuagano@gmail.com> 1753131970 -0700	commit: fix: add httpx dependency for GHIN API integration
./.git/logs/HEAD:34:dd7878bc7ba9192464889c1af9f1fa8d1d0af293 cf81bf86541419bc7986da5f12cbffed7c3dd3f0 Stuart Gano <stuagano@gmail.com> 1753332751 -0700	commit: Add GHIN diagnostic endpoint to troubleshoot API connectivity issues
./.git/logs/HEAD:37:b2c00cd8f1e4cacfb348c72ac95de18f5f6bb038 8ae3a357623d381de532ad39b7ec22733e8374aa Stuart Gano <stuagano@gmail.com> 1753392614 -0700	commit: Frontend: GHIN lookup UI, defensive error handling, and backend: robust state, rules, and checklist
./.git/logs/HEAD:38:8ae3a357623d381de532ad39b7ec22733e8374aa d81aef6c451e6f6cc2017f5c0054080e0a5a13da Stuart Gano <stuagano@gmail.com> 1753393441 -0700	commit: Fix backend endpoints with comprehensive defensive error handling - Add safe defaults for rules, courses, personalities, opponents endpoints - Fix GHIN lookup with proper error handling and response format - Add defensive error handling to simulation setup - Ensure all frontend-called endpoints return valid data even on errors - Fix calculate_shot_probabilities method implementation
./.git/logs/HEAD:66:32f7fec332d61dd3760d0702930040820623fab9 a4daf418232c4666ca2defd1211b2ae051005d1a Stuart Gano <stuagano@gmail.com> 1753555089 -0700	commit: Clean up duplicate GHIN integration in frontend
./.git/logs/HEAD:170:c47d381b486e1dd910a6b7bb2dadad43ba255479 ee4d2ea93fda8fbe5c88915aa97232ae2c7809da Stuart Gano <stuagano@gmail.com> 1756246517 -0700	commit: Integrate GHIN handicap data into leaderboard view
./.git/logs/HEAD:172:840951a59d8b733014705a4296968234941361a8 e4503ae2e47a7cd8711ccec483e492571741d6e8 Stuart Gano <stuagano@gmail.com> 1756247227 -0700	commit: Use last known GHIN handicap when API unavailable
./.git/logs/HEAD:181:d86e3c1fa0b1c3f07e192c28b49d3fcdc984c29b 74122826bae72af6196c424c9eb3bf84292a5c3d Stuart Gano <stuagano@gmail.com> 1756318019 -0700	commit: refactor(backend): Finalize GHIN service and endpoints
./.git/logs/HEAD:182:74122826bae72af6196c424c9eb3bf84292a5c3d 25df9f3e5ee2b30ea4c4c12d0fa16fbce2fcc308 Stuart Gano <stuagano@gmail.com> 1756319845 -0700	commit: fix(backend): Update models and reorganize endpoints for GHIN integration
./.git/logs/HEAD:216:833a53658b2b345910d60ccb305504c8f3307e30 1f9f229e19e9a57b488850ff3e05f1c4d91ef224 Stuart Gano <stuagano@gmail.com> 1756503065 -0700	commit: fix: Enhance Google Sheets sync endpoints with GHIN integration
./.git/logs/HEAD:224:6ba2f16d6407190dad729ae0966bba44bbc92bc1 52afc6946f8bfd288a78fc7c5d8ce82627dd5057 Stuart Gano <stuagano@gmail.com> 1756707728 -0700	commit: fix: Add missing GHINService imports in GHIN endpoints
./.git/logs/HEAD:247:639ddb87da1547dbbca3a30dfa805643770254a3 70513d6269e07b7233aed9a185af03276f6e9cd6 Stuart Gano <stuagano@gmail.com> 1757103510 -0700	commit: feat: Complete GHIN integration with optional configuration
./.git/logs/refs/heads/main:10:8a17d2c196f27c740f1e43d38b5e23b03b08470f 43ec70ebc8ca8a0f08b490ed57af3bfb739ff855 Stuart Gano <stuagano@gmail.com> 1753120109 -0700	commit: Full GHIN JWT lookup integration: backend and frontend support for real GHIN API golfer search
./.git/logs/refs/heads/main:12:4e2eeda5b5ec611577e49268f422041a0de43d42 58a162437c493d11f46aa7afd785c4335c997af7 Stuart Gano <stuagano@gmail.com> 1753131970 -0700	commit: fix: add httpx dependency for GHIN API integration
./.git/logs/refs/heads/main:34:dd7878bc7ba9192464889c1af9f1fa8d1d0af293 cf81bf86541419bc7986da5f12cbffed7c3dd3f0 Stuart Gano <stuagano@gmail.com> 1753332751 -0700	commit: Add GHIN diagnostic endpoint to troubleshoot API connectivity issues
./.git/logs/refs/heads/main:37:b2c00cd8f1e4cacfb348c72ac95de18f5f6bb038 8ae3a357623d381de532ad39b7ec22733e8374aa Stuart Gano <stuagano@gmail.com> 1753392614 -0700	commit: Frontend: GHIN lookup UI, defensive error handling, and backend: robust state, rules, and checklist
./.git/logs/refs/heads/main:38:8ae3a357623d381de532ad39b7ec22733e8374aa d81aef6c451e6f6cc2017f5c0054080e0a5a13da Stuart Gano <stuagano@gmail.com> 1753393441 -0700	commit: Fix backend endpoints with comprehensive defensive error handling - Add safe defaults for rules, courses, personalities, opponents endpoints - Fix GHIN lookup with proper error handling and response format - Add defensive error handling to simulation setup - Ensure all frontend-called endpoints return valid data even on errors - Fix calculate_shot_probabilities method implementation
./.git/logs/refs/heads/main:63:32f7fec332d61dd3760d0702930040820623fab9 a4daf418232c4666ca2defd1211b2ae051005d1a Stuart Gano <stuagano@gmail.com> 1753555089 -0700	commit: Clean up duplicate GHIN integration in frontend
./.git/logs/refs/heads/main:163:c47d381b486e1dd910a6b7bb2dadad43ba255479 ee4d2ea93fda8fbe5c88915aa97232ae2c7809da Stuart Gano <stuagano@gmail.com> 1756246517 -0700	commit: Integrate GHIN handicap data into leaderboard view
./.git/logs/refs/heads/main:165:840951a59d8b733014705a4296968234941361a8 e4503ae2e47a7cd8711ccec483e492571741d6e8 Stuart Gano <stuagano@gmail.com> 1756247227 -0700	commit: Use last known GHIN handicap when API unavailable
./.git/logs/refs/heads/main:174:d86e3c1fa0b1c3f07e192c28b49d3fcdc984c29b 74122826bae72af6196c424c9eb3bf84292a5c3d Stuart Gano <stuagano@gmail.com> 1756318019 -0700	commit: refactor(backend): Finalize GHIN service and endpoints
./.git/logs/refs/heads/main:175:74122826bae72af6196c424c9eb3bf84292a5c3d 25df9f3e5ee2b30ea4c4c12d0fa16fbce2fcc308 Stuart Gano <stuagano@gmail.com> 1756319845 -0700	commit: fix(backend): Update models and reorganize endpoints for GHIN integration
./.git/logs/refs/heads/main:209:833a53658b2b345910d60ccb305504c8f3307e30 1f9f229e19e9a57b488850ff3e05f1c4d91ef224 Stuart Gano <stuagano@gmail.com> 1756503065 -0700	commit: fix: Enhance Google Sheets sync endpoints with GHIN integration
./.git/logs/refs/heads/main:217:6ba2f16d6407190dad729ae0966bba44bbc92bc1 52afc6946f8bfd288a78fc7c5d8ce82627dd5057 Stuart Gano <stuagano@gmail.com> 1756707728 -0700	commit: fix: Add missing GHINService imports in GHIN endpoints
./.git/logs/refs/heads/main:240:639ddb87da1547dbbca3a30dfa805643770254a3 70513d6269e07b7233aed9a185af03276f6e9cd6 Stuart Gano <stuagano@gmail.com> 1757103510 -0700	commit: feat: Complete GHIN integration with optional configuration
Binary file ./.git/worktrees/code-code-fix-simulationengine-compatibility/index matches
Binary file ./.git/worktrees/code-code-just-landed-simulation/index matches
Binary file ./.git/worktrees/code-claude-need-robust-coverage/index matches
Binary file ./.git/worktrees/code-cloud-we-ve-introduced-testing-only/index matches
Binary file ./.git/worktrees/code-claude-add-helper-file/index matches
Binary file ./.git/worktrees/code-claude-just-landed-simulation/index matches
Binary file ./.git/worktrees/code-claude-modify-tests-backend-helpers-simulation/index matches
Binary file ./.git/worktrees/code-code-implement-next-phase/index matches
Binary file ./.git/worktrees/code-claude-analyze-pytest-output/index matches
Binary file ./.git/worktrees/code-claude-stabilize-remaining-failing/index matches
Binary file ./.git/worktrees/code-claude-fix-simulationengine-compatibility/index matches
Binary file ./.git/worktrees/code-claude-run-pytest--vv/index matches
Binary file ./.git/worktrees/code-code-add-helper-file/index matches
Binary file ./.git/worktrees/code-cloud-need-robust-coverage/index matches
Binary file ./.git/worktrees/code-code-update-pytest-configuration/index matches
Binary file ./.git/worktrees/code-claude-update-tests-backend-helpers-simulation/index matches
Binary file ./.git/worktrees/code-code-modify-tests-backend-helpers-simulation/index matches
Binary file ./.git/worktrees/code-cloud-just-landed-simulation/index matches
Binary file ./.git/worktrees/code-claude-execute-pytest-verbose/index matches
Binary file ./.git/worktrees/code-code-need-robust-coverage/index matches
Binary file ./.git/worktrees/code-cloud-fix-simulationengine-compatibility/index matches
Binary file ./.git/worktrees/code-code-analyze-pytest-output/index matches
Binary file ./.git/worktrees/code-code-update-tests-backend-helpers-simulation/index matches
Binary file ./.git/worktrees/code-claude-run-pythonpath-backend-pytest/index matches
Binary file ./.git/worktrees/code-cloud-implement-next-phase/index matches
Binary file ./.git/worktrees/code-code-run-pytest--vv/index matches
Binary file ./.git/worktrees/code-claude-we-ve-introduced-testing-only/index matches
Binary file ./.git/worktrees/code-code-stabilize-remaining-failing/index matches
Binary file ./.git/worktrees/code-claude-update-pytest-configuration/index matches
Binary file ./.git/worktrees/code-claude-implement-next-phase/index matches
Binary file ./.git/worktrees/code-cloud-update-tests-backend-helpers-simulation/index matches
Binary file ./.git/worktrees/code-code-we-ve-introduced-testing-only/index matches
Binary file ./.git/worktrees/code-code-execute-pytest-verbose/index matches
Binary file ./.git/worktrees/code-code-run-pythonpath-backend-pytest/index matches
Binary file ./.git/worktrees/code-cloud-stabilize-remaining-failing/index matches
Binary file ./.git/index matches
