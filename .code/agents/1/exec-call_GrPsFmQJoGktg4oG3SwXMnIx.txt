🎯 ADK auto-sync aliases loaded!
💡 Use 'sync' to sync with upstream anytime
💡 Use 'synccheck' to check sync status
backend/smoke_tests.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer
backend/smoke_tests.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:    print("   ✓ Simulation created with 4 players")
backend/smoke_tests.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:    runner.run_test("Basic Simulation Creation", test_basic_simulation_creation)
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"$ref": "Simulation"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"Simulation": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"id": "Simulation",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"description": "Full resource name of the Simulation: `organizations/123/simulations/456`",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/orgpolicy.v2.json:"supportsSimulation": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"flatPath": "v1/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"flatPath": "v1/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"flatPath": "v1alpha/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"flatPath": "v1beta/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/pygments/lexers/hdl.py:                # Simulation control tasks (20.2)
backend/.venv-prod/lib/python3.13/site-packages/pygments/lexers/hdl.py:                # Simulation time functions (20.3)
backend/.venv-prod/lib/python3.13/site-packages/pygments/lexers/_scilab_builtins.py:    'xcosSimulationStarted',
Binary file backend/.venv-prod/lib/python3.13/site-packages/pygments/lexers/__pycache__/_scilab_builtins.cpython-313.pyc matches
Binary file backend/.venv-prod/lib/python3.13/site-packages/numpy/random/_generator.cpython-313-darwin.so matches
Binary file backend/.venv-prod/lib/python3.13/site-packages/numpy/random/mtrand.cpython-313-darwin.so matches
backend/backend.log:INFO:app.main:✅ Simulation initialization verified
backend/startup.py:        from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
backend/startup.py:        # 3. Simulation engine
backend/startup.py:            test_sim = WolfGoatPigSimulation(player_count=4)
backend/startup.py:            logging.info("✅ Simulation engine health check passed")
backend/startup.py:            logging.error(f"❌ Simulation engine health check failed: {e}")
backend/startup.py:            from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
backend/startup.py:        # 3. Simulation engine check
backend/startup.py:            test_sim = WolfGoatPigSimulation(player_count=4)
backend/startup.py:            logger.info("✅ Simulation engine verified")
backend/startup.py:            health_status["warnings"].append("Simulation engine check failed")
backend/startup.py:            logger.warning(f"⚠️ Simulation engine check failed: {e}")
backend/app/wolf_goat_pig_simulation.py:class WolfGoatPigSimulation:
backend/app/wolf_goat_pig_simulation.py:        new_sim = WolfGoatPigSimulation(player_count=len(wgp_players), players=wgp_players)
backend/app/models.py:class SimulationResult(Base):
Binary file backend/app/__pycache__/main.cpython-313.pyc matches
Binary file backend/app/__pycache__/schemas.cpython-313.pyc matches
Binary file backend/app/__pycache__/schemas.cpython-312.pyc matches
Binary file backend/app/__pycache__/main.cpython-312.pyc matches
Binary file backend/app/__pycache__/wolf_goat_pig_simulation.cpython-312.pyc matches
Binary file backend/app/__pycache__/wolf_goat_pig_simulation.cpython-313.pyc matches
Binary file backend/app/__pycache__/models.cpython-312.pyc matches
Binary file backend/app/__pycache__/models.cpython-313.pyc matches
Binary file backend/app/__pycache__/simulation_timeline_enhancements.cpython-312.pyc matches
Binary file backend/app/__pycache__/simulation_timeline_enhancements.cpython-313.pyc matches
Binary file backend/app/__pycache__/simulation.cpython-312.pyc matches
backend/app/schemas.py:class SimulationCourseData(BaseModel):
backend/app/schemas.py:# Game Setup and Simulation Schemas
backend/app/simulation_timeline_enhancements.py:class SimulationTimelineManager:
backend/app/simulation_timeline_enhancements.py:        simulation.timeline_manager = SimulationTimelineManager()
backend/app/main.py:from .wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer, BallPosition, TeamFormation
backend/app/main.py:# Initialize Wolf Goat Pig Simulation (will be replaced when game starts)
backend/app/main.py:wgp_simulation = WolfGoatPigSimulation(player_count=4)
backend/app/main.py:class SimulationSeedRequest(BaseModel):
backend/app/main.py:    title="Wolf Goat Pig Golf Simulation API",
backend/app/main.py:            test_simulation = WolfGoatPigSimulation(player_count=4)
backend/app/main.py:            logger.info("✅ Simulation initialization verified")
backend/app/main.py:            logger.warning(f"⚠️ Simulation test failed (non-critical): {e}")
backend/app/main.py:        # 5. Simulation initialization test
backend/app/main.py:            test_simulation = WolfGoatPigSimulation(player_count=4)
backend/app/main.py:                "message": "Simulation engine operational"
backend/app/main.py:            logger.error(f"Simulation initialization test failed: {e}")
backend/app/main.py:                "message": f"Simulation test failed: {str(e)}"
backend/app/main.py:        from .services.monte_carlo import run_monte_carlo_simulation, SimulationParams
backend/app/main.py:            mc_params = SimulationParams()
backend/app/main.py:        total_simulations = db.query(models.SimulationResult).count()
backend/app/main.py:class SimulationSetupRequest(BaseModel):
backend/app/main.py:class SimulationPlayShotRequest(BaseModel):
backend/app/main.py:class SimulationPlayHoleRequest(BaseModel):
backend/app/main.py:        wgp_simulation = WolfGoatPigSimulation(
backend/app/main.py:        logger.info("Simulation setup completed successfully")
backend/app/main.py:            "message": "Simulation initialized successfully",
backend/app/main.py:        logger.error(f"Simulation setup failed: {e}")
backend/app/main.py:def play_next_shot(request: SimulationPlayShotRequest = None):
backend/app/main.py:            raise HTTPException(status_code=400, detail="Simulation not initialized. Call /simulation/setup first.")
backend/app/main.py:            raise HTTPException(status_code=400, detail="Simulation not initialized. Call /simulation/setup first.")
backend/app/main.py:    def seed_simulation_state(payload: SimulationSeedRequest):
backend/app/main.py:            raise HTTPException(status_code=400, detail="Simulation not initialized. Call /simulation/setup first.")
backend/app/main.py:        raise HTTPException(status_code=404, detail="Simulation not initialized")
backend/app/main.py:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/main.py:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/main.py:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/main.py:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/main.py:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/main.py:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/services/monte_carlo.py:class SimulationParams:
backend/app/services/monte_carlo.py:class SimulationResult:
backend/app/services/monte_carlo.py:    def __init__(self, params: Optional[SimulationParams] = None):
backend/app/services/monte_carlo.py:        self.params = params or SimulationParams()
backend/app/services/monte_carlo.py:        params: Optional[SimulationParams] = None
backend/app/services/monte_carlo.py:    ) -> SimulationResult:
backend/app/services/monte_carlo.py:        params: SimulationParams,
backend/app/services/monte_carlo.py:    ) -> SimulationResult:
backend/app/services/monte_carlo.py:                    print(f"Simulation batch failed: {e}")
backend/app/services/monte_carlo.py:        params: SimulationParams,
backend/app/services/monte_carlo.py:    ) -> SimulationResult:
backend/app/services/monte_carlo.py:    ) -> SimulationResult:
backend/app/services/monte_carlo.py:            return SimulationResult(
backend/app/services/monte_carlo.py:        return SimulationResult(
backend/app/services/monte_carlo.py:) -> SimulationResult:
backend/app/services/monte_carlo.py:    params = SimulationParams(
Binary file backend/app/services/__pycache__/monte_carlo.cpython-312.pyc matches
Binary file backend/app/services/__pycache__/monte_carlo.cpython-313.pyc matches
backend/.pytest_cache/v/cache/nodeids:  "tests/simulation/test_simulation_scenarios.py::TestSimulationMode::test_aggressive_captain_solo",
backend/.pytest_cache/v/cache/nodeids:  "tests/simulation/test_simulation_scenarios.py::TestSimulationMode::test_full_18_hole_game",
backend/.pytest_cache/v/cache/nodeids:  "tests/simulation/test_simulation_scenarios.py::TestSimulationMode::test_karl_marx_rule",
backend/.pytest_cache/v/cache/nodeids:  "tests/simulation/test_simulation_scenarios.py::TestSimulationMode::test_partnership_formation",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_play_next_shot_without_setup",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_error_handling",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_full_flow",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_legacy_format_compatibility",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_setup_invalid_players",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_setup_success",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestSimulationErrorHandling::test_invalid_partnership_request",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestSimulationErrorHandling::test_invalid_player_count",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestSimulationErrorHandling::test_missing_course",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestSimulationUtilities::test_handicap_calculation",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestSimulationUtilities::test_net_score_calculation",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestSimulationUtilities::test_team_formation_validation",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_add_players",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_captain_rotation",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_game_state_serialization",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_get_current_captain",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_lie_type_determination_with_distance",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_partnership_request",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_partnership_response",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_set_course",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_short_game_progression",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_shot_simulation",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_simulation_initialization",
backend/.pytest_cache/v/cache/nodeids:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_start_game",
backend/.pytest_cache/v/cache/lastfailed:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_setup_invalid_players": true,
backend/.pytest_cache/v/cache/lastfailed:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_play_next_shot_without_setup": true,
backend/test_short_game.py:    from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPShotResult
backend/test_short_game.py:        sim = WolfGoatPigSimulation()
backend/test_progression.py:    from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
backend/test_progression.py:        sim = WolfGoatPigSimulation()
backend/test_progression.py:        print("\n🎯 Testing Hole Completion Simulation")
backend/tests/test_models_schemas.py:    Rule, Course, Hole, GameStateModel, SimulationResult,
backend/tests/test_simulation_unit.py:    from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
backend/tests/test_simulation_unit.py:class TestWolfGoatPigSimulation:
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:class TestSimulationUtilities:
backend/tests/test_simulation_unit.py:class TestSimulationErrorHandling:
backend/tests/test_simulation_unit.py:            WolfGoatPigSimulation(player_count=3)
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:    print("🧪 Simulation Unit Tests")
backend/tests/test_simulation_unit.py:        print("⚠️ Simulation components not available for testing")
backend/tests/test_simulation_unit.py:        TestWolfGoatPigSimulation,
backend/tests/test_simulation_unit.py:        TestSimulationUtilities,
backend/tests/test_simulation_unit.py:        TestSimulationErrorHandling,
backend/tests/test_monte_carlo.py:    SimulationParams,
backend/tests/test_monte_carlo.py:    SimulationResult,
backend/tests/test_monte_carlo.py:        valid_params = SimulationParams(
backend/tests/test_monte_carlo.py:        default_params = SimulationParams()
backend/tests/test_monte_carlo.py:        params = SimulationParams(num_simulations=5000, use_parallel=False)
backend/tests/test_monte_carlo.py:        params = SimulationParams(
backend/tests/test_monte_carlo.py:        self.assertLess(total_time, 50, f"Simulation took {total_time:.1f}ms, should be under 50ms")
backend/tests/test_monte_carlo.py:        params = SimulationParams(num_simulations=1000, use_parallel=False)
backend/tests/test_monte_carlo.py:        params = SimulationParams(num_simulations=2000, confidence_level=0.95)
backend/tests/test_monte_carlo.py:        params = SimulationParams(num_simulations=1000)
backend/tests/test_monte_carlo.py:        params_parallel = SimulationParams(num_simulations=1000, use_parallel=True, num_threads=2)
backend/tests/test_monte_carlo.py:        params_sequential = SimulationParams(num_simulations=1000, use_parallel=False)
backend/tests/test_monte_carlo.py:        params = SimulationParams(
backend/tests/test_monte_carlo.py:        minimal_params = SimulationParams(num_simulations=10)
backend/tests/test_monte_carlo.py:        self.assertIsInstance(minimal_result, SimulationResult)
backend/tests/test_monte_carlo.py:        self.assertIsInstance(single_result, SimulationResult)
backend/tests/test_monte_carlo.py:        params = SimulationParams(num_simulations=2000, use_parallel=False)
backend/tests/test_monte_carlo.py:        self.assertIsInstance(result, SimulationResult)
backend/tests/test_monte_carlo.py:        self.assertIsInstance(result, SimulationResult)
backend/tests/simulation/test_simulation_scenarios.py:class WolfGoatPigSimulationTester:
backend/tests/simulation/test_simulation_scenarios.py:class SimulationScenarios:
backend/tests/simulation/test_simulation_scenarios.py:class TestSimulationMode:
backend/tests/simulation/test_simulation_scenarios.py:        return WolfGoatPigSimulationTester()
backend/tests/simulation/test_simulation_scenarios.py:        scenario = SimulationScenarios.aggressive_captain_solo()
backend/tests/simulation/test_simulation_scenarios.py:        scenario = SimulationScenarios.partnership_acceptance()
backend/tests/simulation/test_simulation_scenarios.py:        tester = WolfGoatPigSimulationTester()
backend/tests/simulation/test_simulation_scenarios.py:        scenario = SimulationScenarios.partnership_acceptance()
backend/tests/simulation/__init__.py:"""Simulation test subpackage for backend suite."""
Binary file backend/tests/simulation/__pycache__/test_simulation_scenarios.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/simulation/__pycache__/test_simulation_scenarios.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/simulation/__pycache__/test_simulation_scenarios.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/simulation/__pycache__/__init__.cpython-312.pyc matches
Binary file backend/tests/simulation/__pycache__/__init__.cpython-313.pyc matches
Binary file backend/tests/__pycache__/test_monte_carlo.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_simulation_endpoints.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_monte_carlo.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_performance.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_endpoints.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_integration.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_bootstrapping.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_integration.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_performance.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_simulation_endpoints.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_performance.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_monte_carlo.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_integration.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_integration.cpython-313.pyc matches
Binary file backend/tests/__pycache__/test_bootstrapping.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_bootstrapping.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_models_schemas.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_unit.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_models_schemas.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_unit.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_models_schemas.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_simulation_unit.cpython-313-pytest-8.4.2.pyc matches
backend/tests/test_performance.py:            with self.profiler.timer(f"Simulation with {iterations} iterations"):
backend/tests/test_performance.py:                name=f"Simulation with {player_count} players"
backend/tests/test_performance.py:        with self.profiler.memory_monitor("Large Monte Carlo Simulation"):
backend/tests/test_bootstrapping.py:                with patch('app.main.WolfGoatPigSimulation') as mock_sim:
backend/tests/test_bootstrapping.py:                with patch('app.main.WolfGoatPigSimulation') as mock_sim:
backend/tests/test_bootstrapping.py:                    mock_sim.side_effect = Exception("Simulation initialization failed")
backend/tests/test_simulation_endpoints.py:class MockSimulation:
backend/tests/test_simulation_endpoints.py:mock_wgp_simulation = MockSimulation()
backend/tests/test_simulation_endpoints.py:        "message": "Simulation initialized successfully",
backend/tests/test_simulation_endpoints.py:    """Test compatibility with useSimulationApi.js frontend hook"""
backend/tests/test_simulation_endpoints.py:    # This tests the specific calls made by useSimulationApi.js
backend/tests/test_simulation_endpoints.py:            "message": "Simulation initialized",
backend/tests/test_simulation_endpoints.py:    print("✅ 'Simulation not found' error has been resolved")
backend/tests/test_simulation_endpoints.py:    print("✅ Simulation integrates properly with bootstrap system")
backend/tests/test_simulation_endpoints.py:    print("🎮 Simulation Endpoints Test Suite")
backend/tests/test_simulation_integration.py:class TestSimulationIntegration:
backend/tests/test_simulation_integration.py:        assert "Simulation not initialized" in response.json()["detail"]
backend/SIMULATION_ENDPOINTS_SUMMARY.md:# Simulation API Endpoints Implementation Summary
backend/SIMULATION_ENDPOINTS_SUMMARY.md:- Uses existing `WolfGoatPigSimulation` class and `WGPPlayer` objects
backend/SIMULATION_ENDPOINTS_SUMMARY.md:  - `SimulationSetupRequest`
backend/SIMULATION_ENDPOINTS_SUMMARY.md:  - `SimulationPlayShotRequest` 
backend/SIMULATION_ENDPOINTS_SUMMARY.md:  - `SimulationPlayHoleRequest`
backend/SIMULATION_ENDPOINTS_SUMMARY.md:- **Shot Simulation**: Uses existing shot simulation engine
backend/SIMULATION_ENDPOINTS_SUMMARY.md:The implemented endpoints match exactly what the frontend `useSimulationApi.js` hook expects:
backend/SIMULATION_ENDPOINTS_SUMMARY.md:- `setupSimulation()` → POST /simulation/setup
backend/SIMULATION_ENDPOINTS_SUMMARY.md:- `makeSimulationDecision()` → POST /simulation/play-hole
backend/BOOTSTRAP_README.md:- **Simulation Verification**: Tests simulation initialization
backend/BOOTSTRAP_README.md:- Simulation engine functionality
backend/BOOTSTRAP_README.md:- Simulation engine recovery
backend/BOOTSTRAP_README.md:- Simulation initialization success rate
Binary file backend/__pycache__/test_fixes.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/__pycache__/test_progression.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/__pycache__/test_betting_flow.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/__pycache__/test_hole_completion.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/__pycache__/test_progression.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/__pycache__/dev_workflow.cpython-312.pyc matches
Binary file backend/__pycache__/test_fixes.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/__pycache__/test_hole_completion.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/__pycache__/startup.cpython-313.pyc matches
Binary file backend/__pycache__/test_betting_flow.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/__pycache__/test_short_game.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/__pycache__/test_simulation_timeline.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/__pycache__/test_short_game.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/__pycache__/test_simulation_timeline.cpython-312-pytest-8.4.2.pyc matches
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"$ref": "Simulation"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"Simulation": {
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"id": "Simulation",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"description": "Full resource name of the Simulation: `organizations/123/simulations/456`",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/orgpolicy.v2.json:"supportsSimulation": {
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"accessPolicySimulations": {
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"flatPath": "v1/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"accessPolicySimulations": {
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"accessPolicySimulations": {
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"flatPath": "v1/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"accessPolicySimulations": {
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"flatPath": "v1alpha/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"accessPolicySimulations": {
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"accessPolicySimulations": {
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"accessPolicySimulations": {
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"flatPath": "v1beta/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"accessPolicySimulations": {
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"accessPolicySimulations": {
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/test_env/lib/python3.13/site-packages/pygments/lexers/hdl.py:                # Simulation control tasks (20.2)
backend/test_env/lib/python3.13/site-packages/pygments/lexers/hdl.py:                # Simulation time functions (20.3)
backend/test_env/lib/python3.13/site-packages/pygments/lexers/_scilab_builtins.py:    'xcosSimulationStarted',
Binary file backend/test_env/lib/python3.13/site-packages/pygments/lexers/__pycache__/_scilab_builtins.cpython-313.pyc matches
Binary file backend/test_env/lib/python3.13/site-packages/numpy/random/_generator.cpython-313-darwin.so matches
Binary file backend/test_env/lib/python3.13/site-packages/numpy/random/mtrand.cpython-313-darwin.so matches
backend/test_fixes.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer
backend/test_fixes.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/test_betting_flow.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer
backend/test_betting_flow.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/deploy.sh:  "name": "Wolf-Goat-Pig Golf Simulation API",
backend/test_hole_completion.py:    print("✅ Simulation setup successful")
backend/venv/lib/python3.12/site-packages/pygments/lexers/hdl.py:                # Simulation control tasks (20.2)
backend/venv/lib/python3.12/site-packages/pygments/lexers/hdl.py:                # Simulation time functions (20.3)
backend/venv/lib/python3.12/site-packages/pygments/lexers/_scilab_builtins.py:    'xcosSimulationStarted',
Binary file backend/venv/lib/python3.12/site-packages/pygments/lexers/__pycache__/_scilab_builtins.cpython-312.pyc matches
Binary file backend/venv/lib/python3.12/site-packages/numpy/random/mtrand.cpython-312-darwin.so matches
Binary file backend/venv/lib/python3.12/site-packages/numpy/random/_generator.cpython-312-darwin.so matches
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"$ref": "Simulation"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"Simulation": {
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"id": "Simulation",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:"description": "Full resource name of the Simulation: `organizations/123/simulations/456`",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/orgpolicy.v2.json:"supportsSimulation": {
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"accessPolicySimulations": {
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"flatPath": "v1/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"accessPolicySimulations": {
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"accessPolicySimulations": {
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"flatPath": "v1/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"accessPolicySimulations": {
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"flatPath": "v1alpha/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"accessPolicySimulations": {
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"accessPolicySimulations": {
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"accessPolicySimulations": {
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"flatPath": "v1beta/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"accessPolicySimulations": {
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"accessPolicySimulations": {
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/venv/lib/python3.13/site-packages/pygments/lexers/hdl.py:                # Simulation control tasks (20.2)
backend/venv/lib/python3.13/site-packages/pygments/lexers/hdl.py:                # Simulation time functions (20.3)
backend/venv/lib/python3.13/site-packages/pygments/lexers/_scilab_builtins.py:    'xcosSimulationStarted',
Binary file backend/venv/lib/python3.13/site-packages/pygments/lexers/__pycache__/_scilab_builtins.cpython-313.pyc matches
Binary file backend/venv/lib/python3.13/site-packages/numpy/random/_generator.cpython-313-darwin.so matches
Binary file backend/venv/lib/python3.13/site-packages/numpy/random/mtrand.cpython-313-darwin.so matches
backend/test_simulation_timeline.py:        print('🎮 Testing Wolf-Goat-Pig Simulation - Poker/Golf Hybrid')
backend/test_simulation_timeline.py:            print('✅ Simulation setup successful!')
backend/test_simulation_timeline.py:        print('✅ Simulation test complete!')
backend/server.log:INFO:app.main:✅ Simulation initialization verified
tests/backend/test_integration_scenarios.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
tests/backend/test_integration_scenarios.py:        base = WolfGoatPigSimulation(player_count=len(configs) + 1)
tests/backend/test_integration_scenarios.py:        base = WolfGoatPigSimulation(player_count=4)
tests/backend/test_integration_scenarios.py:        base = WolfGoatPigSimulation(player_count=4)
tests/backend/test_debug.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer
tests/backend/test_debug.py:    print("🧪 Testing Wolf Goat Pig Simulation")
tests/backend/test_debug.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
tests/backend/test_debug.py:    print(f"✅ Simulation created")
tests/backend/test_basic_functionality.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer
tests/backend/test_basic_functionality.py:class TestBasicSimulation:
tests/backend/test_basic_functionality.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_basic_functionality.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_basic_functionality.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_basic_functionality.py:class TestSimulationFlow:
tests/backend/test_basic_functionality.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_basic_functionality.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_basic_functionality.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_basic_functionality.py:class TestShotSimulation:
tests/backend/test_basic_functionality.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_basic_functionality.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_basic_functionality.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_basic_functionality.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_final_implementation.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer, WGPShotResult
tests/backend/test_final_implementation.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
tests/backend/test_aardvark.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer
tests/backend/test_aardvark.py:    simulation = WolfGoatPigSimulation(player_count=5, players=players)
tests/backend/test_aardvark.py:    simulation = WolfGoatPigSimulation(player_count=5, players=players)
tests/backend/test_aardvark.py:    simulation = WolfGoatPigSimulation(player_count=6, players=players)
tests/backend/test_simulation_state_endpoint.py:        assert "Simulation not initialized" in response.json()["detail"]
tests/backend/test_simulation_courses.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
tests/backend/test_simulation_courses.py:    print("🧪 Testing Simulation with Course Data")
tests/backend/test_simulation_courses.py:    engine = WolfGoatPigSimulation()
tests/backend/test_wgp_direct.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer
tests/backend/test_wgp_direct.py:    print("🧪 Testing Wolf Goat Pig Simulation Directly")
tests/backend/test_wgp_direct.py:    sim = WolfGoatPigSimulation(player_count=4, players=players)
tests/backend/test_wgp_direct.py:    print(f"✅ Simulation created with {len(players)} players")
tests/backend/test_wgp_direct.py:    sim = WolfGoatPigSimulation(4)
tests/backend/test_simulation_components.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
tests/backend/test_simulation_components.py:class TestShotSimulation:
tests/backend/test_simulation_components.py:        engine = WolfGoatPigSimulation()
tests/backend/test_simulation_components.py:class TestSimulationFlow:
tests/backend/test_simulation_components.py:        engine = WolfGoatPigSimulation()
tests/backend/test_analytics.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer
tests/backend/test_analytics.py:    simulation = WolfGoatPigSimulation(player_count=4, players=players)
Binary file tests/backend/__pycache__/test_basic_functionality.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_analytics.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_simulation_components_fixed.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_advanced_rules.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_simulation_components.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_wgp_direct.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_simulation_state_endpoint.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_simulation_state_endpoint.cpython-313-pytest-8.4.2.pyc matches
Binary file tests/backend/__pycache__/test_final_implementation.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_integration_scenarios.cpython-313.pyc matches
Binary file tests/backend/__pycache__/test_integration_scenarios.cpython-312-pytest-8.4.2.pyc matches
Binary file tests/backend/__pycache__/test_debug.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_integration_scenarios.cpython-313-pytest-8.4.2.pyc matches
Binary file tests/backend/__pycache__/test_simulation_courses.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_unified_action_api.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_integration_scenarios.cpython-313-pytest-8.4.1.pyc matches
Binary file tests/backend/__pycache__/test_aardvark.cpython-313-pytest-8.4.1.pyc matches
tests/backend/test_advanced_rules.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer
tests/backend/test_advanced_rules.py:        self.simulation = WolfGoatPigSimulation(player_count=4)
tests/backend/test_advanced_rules.py:        simulation_5 = WolfGoatPigSimulation(player_count=5)
tests/backend/test_advanced_rules.py:        simulation_6 = WolfGoatPigSimulation(player_count=6)
tests/backend/test_advanced_rules.py:        simulation_5 = WolfGoatPigSimulation(player_count=5)
tests/backend/test_advanced_rules.py:        simulation_6 = WolfGoatPigSimulation(player_count=6)
tests/backend/test_unified_action_api.py:        from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
tests/backend/test_unified_action_api.py:        app.main.wgp_simulation = WolfGoatPigSimulation(player_count=4)
tests/backend/test_unified_action_api.py:        print("\n=== Starting Two Full Holes Simulation ===")
tests/backend/test_unified_action_api.py:        print("\n=== Two Full Holes Simulation Completed Successfully ===")
Binary file tests/backend/helpers/__pycache__/simulation_engine.cpython-313.pyc matches
tests/backend/test_simulation_components_fixed.py:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer
tests/backend/test_simulation_components_fixed.py:class TestWolfGoatPigSimulation:
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4, players=players)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
tests/backend/test_simulation_components_fixed.py:        sim = WolfGoatPigSimulation(player_count=4)
reports/test_summary.md:# Simulation Mode Test Results
reports/test_summary.md:🎉 **ALL TESTS PASSED** - Simulation mode is ready for production use.
reports/backend_unit_tests.html:    <div id="data-container" data-jsonblob="{&#34;environment&#34;: {&#34;Python&#34;: &#34;3.13.3&#34;, &#34;Platform&#34;: &#34;macOS-26.0.1-arm64-arm-64bit-Mach-O&#34;, &#34;Packages&#34;: {&#34;pytest&#34;: &#34;8.4.1&#34;, &#34;pluggy&#34;: &#34;1.6.0&#34;}, &#34;Plugins&#34;: {&#34;mock&#34;: &#34;3.15.1&#34;, &#34;html&#34;: &#34;4.1.1&#34;, &#34;asyncio&#34;: &#34;1.1.0&#34;, &#34;metadata&#34;: &#34;3.1.1&#34;, &#34;anyio&#34;: &#34;4.10.0&#34;}}, &#34;tests&#34;: {&#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_simulation_initialization&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_simulation_initialization::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_simulation_initialization::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 41, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_add_players&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_add_players::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_add_players::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 48, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_set_course&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_set_course::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_set_course::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 56, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_start_game&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_start_game::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_start_game::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 64, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_get_current_captain&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_get_current_captain::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_get_current_captain::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 75, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_captain_rotation&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_captain_rotation::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_captain_rotation::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 86, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_partnership_request&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_partnership_request::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_partnership_request::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 99, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_partnership_response&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_partnership_response::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_partnership_response::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 112, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_shot_simulation&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_shot_simulation::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_shot_simulation::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 127, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_short_game_progression&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_short_game_progression::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_short_game_progression::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 141, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_lie_type_determination_with_distance&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_lie_type_determination_with_distance::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_lie_type_determination_with_distance::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 162, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_game_state_serialization&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_game_state_serialization::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_game_state_serialization::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 195, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestGameState::test_game_state_creation&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestGameState::test_game_state_creation::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestGameState::test_game_state_creation::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 209, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestGameState::test_hole_progression&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestGameState::test_hole_progression::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestGameState::test_hole_progression::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 218, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestGameState::test_score_tracking&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestGameState::test_score_tracking::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestGameState::test_score_tracking::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 228, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestMonteCarloService::test_monte_carlo_initialization&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestMonteCarloService::test_monte_carlo_initialization::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestMonteCarloService::test_monte_carlo_initialization::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 242, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestMonteCarloService::test_shot_probability_calculation&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestMonteCarloService::test_shot_probability_calculation::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestMonteCarloService::test_shot_probability_calculation::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 247, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestMonteCarloService::test_outcome_simulation&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestMonteCarloService::test_outcome_simulation::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestMonteCarloService::test_outcome_simulation::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 275, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestOddsCalculator::test_odds_calculator_initialization&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestOddsCalculator::test_odds_calculator_initialization::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestOddsCalculator::test_odds_calculator_initialization::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 291, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestOddsCalculator::test_betting_odds_calculation&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestOddsCalculator::test_betting_odds_calculation::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestOddsCalculator::test_betting_odds_calculation::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 296, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestOddsCalculator::test_double_decision_logic&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Skipped&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestOddsCalculator::test_double_decision_logic::setup&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Skipped&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestOddsCalculator::test_double_decision_logic::setup&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;(&amp;#x27;/Users/stuartgano/Documents/wolf-goat-pig/backend/tests/test_simulation_unit.py&amp;#x27;, 317, &amp;#x27;Skipped: Required imports not available&amp;#x27;)\n&#34;}], &#34;tests/test_simulation_unit.py::TestSimulationUtilities::test_handicap_calculation&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Passed&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestSimulationUtilities::test_handicap_calculation&#34;, &#34;duration&#34;: &#34;83 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Passed&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestSimulationUtilities::test_handicap_calculation&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;83 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;No log output captured.&#34;}], &#34;tests/test_simulation_unit.py::TestSimulationUtilities::test_net_score_calculation&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Passed&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestSimulationUtilities::test_net_score_calculation&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Passed&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestSimulationUtilities::test_net_score_calculation&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;No log output captured.&#34;}], &#34;tests/test_simulation_unit.py::TestSimulationUtilities::test_team_formation_validation&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Passed&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestSimulationUtilities::test_team_formation_validation&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Passed&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestSimulationUtilities::test_team_formation_validation&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;No log output captured.&#34;}], &#34;tests/test_simulation_unit.py::TestSimulationErrorHandling::test_invalid_player_count&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Passed&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestSimulationErrorHandling::test_invalid_player_count&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Passed&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestSimulationErrorHandling::test_invalid_player_count&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;No log output captured.&#34;}], &#34;tests/test_simulation_unit.py::TestSimulationErrorHandling::test_missing_course&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Passed&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestSimulationErrorHandling::test_missing_course&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Passed&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestSimulationErrorHandling::test_missing_course&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;No log output captured.&#34;}], &#34;tests/test_simulation_unit.py::TestSimulationErrorHandling::test_invalid_partnership_request&#34;: [{&#34;extras&#34;: [], &#34;result&#34;: &#34;Passed&#34;, &#34;testId&#34;: &#34;tests/test_simulation_unit.py::TestSimulationErrorHandling::test_invalid_partnership_request&#34;, &#34;duration&#34;: &#34;0 ms&#34;, &#34;resultsTableRow&#34;: [&#34;&lt;td class=\&#34;col-result\&#34;&gt;Passed&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-testId\&#34;&gt;tests/test_simulation_unit.py::TestSimulationErrorHandling::test_invalid_partnership_request&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-duration\&#34;&gt;0 ms&lt;/td&gt;&#34;, &#34;&lt;td class=\&#34;col-links\&#34;&gt;&lt;/td&gt;&#34;], &#34;log&#34;: &#34;No log output captured.&#34;}]}, &#34;renderCollapsed&#34;: [&#34;passed&#34;], &#34;initialSort&#34;: &#34;result&#34;, &#34;title&#34;: &#34;backend_unit_tests.html&#34;}"></div>
reports/backend_dev.log:INFO:app.main:✅ Simulation initialization verified
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: At least 4 players required
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: At least 4 players required
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: At least 4 players required
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: At least 4 players required
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: Missing player data
reports/backend_dev.log:ERROR:app.main:Simulation setup failed: 400: At least 4 players required
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
reports/backend_dev.log:INFO:app.main:Simulation setup completed successfully
