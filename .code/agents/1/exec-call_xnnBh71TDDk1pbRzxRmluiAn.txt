🎯 ADK auto-sync aliases loaded!
💡 Use 'sync' to sync with upstream anytime
💡 Use 'synccheck' to check sync status
backend/smoke_tests.py:10:from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer
backend/smoke_tests.py:65:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:71:    print("   ✓ Simulation created with 4 players")
backend/smoke_tests.py:83:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:137:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:182:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:220:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:273:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:313:    sim = WolfGoatPigSimulation(player_count=4, players=players)
backend/smoke_tests.py:339:    runner.run_test("Basic Simulation Creation", test_basic_simulation_creation)
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:3479:"$ref": "Simulation"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:16344:"Simulation": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:16346:"id": "Simulation",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/securitycenter.v1.json:16371:"description": "Full resource name of the Simulation: `organizations/123/simulations/456`",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/orgpolicy.v2.json:997:"supportsSimulation": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:112:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:118:"flatPath": "v1/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:120:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:128:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:425:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:431:"flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:433:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:441:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:804:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:810:"flatPath": "v1/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:812:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1.json:820:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:112:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:118:"flatPath": "v1alpha/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:120:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:128:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:330:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:336:"flatPath": "v1alpha/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:338:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:346:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:478:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:484:"flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:486:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1alpha.json:494:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:112:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:118:"flatPath": "v1beta/folders/{foldersId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:120:"id": "policysimulator.folders.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:128:"pattern": "^folders/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:461:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:467:"flatPath": "v1beta/organizations/{organizationsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:469:"id": "policysimulator.organizations.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:477:"pattern": "^organizations/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:904:"accessPolicySimulations": {
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:910:"flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/accessPolicySimulations/{accessPolicySimulationsId}/operations/{operationsId}",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:912:"id": "policysimulator.projects.locations.accessPolicySimulations.operations.get",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/policysimulator.v1beta.json:920:"pattern": "^projects/[^/]+/locations/[^/]+/accessPolicySimulations/[^/]+/operations/.*$",
backend/.venv-prod/lib/python3.13/site-packages/pygments/lexers/hdl.py:269:                # Simulation control tasks (20.2)
backend/.venv-prod/lib/python3.13/site-packages/pygments/lexers/hdl.py:271:                # Simulation time functions (20.3)
backend/.venv-prod/lib/python3.13/site-packages/pygments/lexers/_scilab_builtins.py:1028:    'xcosSimulationStarted',
Binary file backend/.venv-prod/lib/python3.13/site-packages/pygments/lexers/__pycache__/_scilab_builtins.cpython-313.pyc matches
Binary file backend/.venv-prod/lib/python3.13/site-packages/numpy/random/_generator.cpython-313-darwin.so matches
Binary file backend/.venv-prod/lib/python3.13/site-packages/numpy/random/mtrand.cpython-313-darwin.so matches
backend/backend.log:35:INFO:app.main:✅ Simulation initialization verified
backend/startup.py:444:        from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
backend/startup.py:475:        # 3. Simulation engine
backend/startup.py:477:            test_sim = WolfGoatPigSimulation(player_count=4)
backend/startup.py:479:            logging.info("✅ Simulation engine health check passed")
backend/startup.py:483:            logging.error(f"❌ Simulation engine health check failed: {e}")
backend/startup.py:635:            from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
backend/startup.py:674:        # 3. Simulation engine check
backend/startup.py:676:            test_sim = WolfGoatPigSimulation(player_count=4)
backend/startup.py:678:            logger.info("✅ Simulation engine verified")
backend/startup.py:681:            health_status["warnings"].append("Simulation engine check failed")
backend/startup.py:682:            logger.warning(f"⚠️ Simulation engine check failed: {e}")
backend/app/wolf_goat_pig_simulation.py:601:class WolfGoatPigSimulation:
backend/app/wolf_goat_pig_simulation.py:3389:        new_sim = WolfGoatPigSimulation(player_count=len(wgp_players), players=wgp_players)
backend/app/models.py:43:class SimulationResult(Base):
Binary file backend/app/__pycache__/main.cpython-313.pyc matches
Binary file backend/app/__pycache__/schemas.cpython-313.pyc matches
Binary file backend/app/__pycache__/schemas.cpython-312.pyc matches
Binary file backend/app/__pycache__/main.cpython-312.pyc matches
Binary file backend/app/__pycache__/wolf_goat_pig_simulation.cpython-312.pyc matches
Binary file backend/app/__pycache__/wolf_goat_pig_simulation.cpython-313.pyc matches
Binary file backend/app/__pycache__/models.cpython-312.pyc matches
Binary file backend/app/__pycache__/models.cpython-313.pyc matches
Binary file backend/app/__pycache__/simulation_timeline_enhancements.cpython-312.pyc matches
Binary file backend/app/__pycache__/simulation_timeline_enhancements.cpython-313.pyc matches
Binary file backend/app/__pycache__/simulation.cpython-312.pyc matches
backend/app/schemas.py:143:class SimulationCourseData(BaseModel):
backend/app/schemas.py:351:# Game Setup and Simulation Schemas
backend/app/simulation_timeline_enhancements.py:68:class SimulationTimelineManager:
backend/app/simulation_timeline_enhancements.py:113:        simulation.timeline_manager = SimulationTimelineManager()
backend/app/main.py:11:from .wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPPlayer, BallPosition, TeamFormation
backend/app/main.py:49:# Initialize Wolf Goat Pig Simulation (will be replaced when game starts)
backend/app/main.py:50:wgp_simulation = WolfGoatPigSimulation(player_count=4)
backend/app/main.py:111:class SimulationSeedRequest(BaseModel):
backend/app/main.py:134:    title="Wolf Goat Pig Golf Simulation API",
backend/app/main.py:308:            test_simulation = WolfGoatPigSimulation(player_count=4)
backend/app/main.py:309:            logger.info("✅ Simulation initialization verified")
backend/app/main.py:311:            logger.warning(f"⚠️ Simulation test failed (non-critical): {e}")
backend/app/main.py:512:        # 5. Simulation initialization test
backend/app/main.py:515:            test_simulation = WolfGoatPigSimulation(player_count=4)
backend/app/main.py:518:                "message": "Simulation engine operational"
backend/app/main.py:521:            logger.error(f"Simulation initialization test failed: {e}")
backend/app/main.py:524:                "message": f"Simulation test failed: {str(e)}"
backend/app/main.py:2369:        from .services.monte_carlo import run_monte_carlo_simulation, SimulationParams
backend/app/main.py:2394:            mc_params = SimulationParams()
backend/app/main.py:2918:        total_simulations = db.query(models.SimulationResult).count()
backend/app/main.py:4110:class SimulationSetupRequest(BaseModel):
backend/app/main.py:4118:class SimulationPlayShotRequest(BaseModel):
backend/app/main.py:4122:class SimulationPlayHoleRequest(BaseModel):
backend/app/main.py:4315:        wgp_simulation = WolfGoatPigSimulation(
backend/app/main.py:4371:        logger.info("Simulation setup completed successfully")
backend/app/main.py:4375:            "message": "Simulation initialized successfully",
backend/app/main.py:4391:        logger.error(f"Simulation setup failed: {e}")
backend/app/main.py:4395:def play_next_shot(request: SimulationPlayShotRequest = None):
backend/app/main.py:4401:            raise HTTPException(status_code=400, detail="Simulation not initialized. Call /simulation/setup first.")
backend/app/main.py:4473:            raise HTTPException(status_code=400, detail="Simulation not initialized. Call /simulation/setup first.")
backend/app/main.py:4607:    def seed_simulation_state(payload: SimulationSeedRequest):
backend/app/main.py:4617:            raise HTTPException(status_code=400, detail="Simulation not initialized. Call /simulation/setup first.")
backend/app/main.py:4733:        raise HTTPException(status_code=404, detail="Simulation not initialized")
backend/app/main.py:4875:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/main.py:4956:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/main.py:5055:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/main.py:5164:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/main.py:5302:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/main.py:5330:            raise HTTPException(status_code=400, detail="Simulation not initialized")
backend/app/services/monte_carlo.py:17:class SimulationParams:
backend/app/services/monte_carlo.py:28:class SimulationResult:
backend/app/services/monte_carlo.py:44:    def __init__(self, params: Optional[SimulationParams] = None):
backend/app/services/monte_carlo.py:45:        self.params = params or SimulationParams()
backend/app/services/monte_carlo.py:58:        params: Optional[SimulationParams] = None
backend/app/services/monte_carlo.py:59:    ) -> SimulationResult:
backend/app/services/monte_carlo.py:76:        params: SimulationParams,
backend/app/services/monte_carlo.py:78:    ) -> SimulationResult:
backend/app/services/monte_carlo.py:112:                    print(f"Simulation batch failed: {e}")
backend/app/services/monte_carlo.py:123:        params: SimulationParams,
backend/app/services/monte_carlo.py:125:    ) -> SimulationResult:
backend/app/services/monte_carlo.py:502:    ) -> SimulationResult:
backend/app/services/monte_carlo.py:506:            return SimulationResult(
backend/app/services/monte_carlo.py:558:        return SimulationResult(
backend/app/services/monte_carlo.py:659:) -> SimulationResult:
backend/app/services/monte_carlo.py:664:    params = SimulationParams(
Binary file backend/app/services/__pycache__/monte_carlo.cpython-312.pyc matches
Binary file backend/app/services/__pycache__/monte_carlo.cpython-313.pyc matches
backend/.pytest_cache/v/cache/nodeids:32:  "tests/simulation/test_simulation_scenarios.py::TestSimulationMode::test_aggressive_captain_solo",
backend/.pytest_cache/v/cache/nodeids:33:  "tests/simulation/test_simulation_scenarios.py::TestSimulationMode::test_full_18_hole_game",
backend/.pytest_cache/v/cache/nodeids:34:  "tests/simulation/test_simulation_scenarios.py::TestSimulationMode::test_karl_marx_rule",
backend/.pytest_cache/v/cache/nodeids:35:  "tests/simulation/test_simulation_scenarios.py::TestSimulationMode::test_partnership_formation",
backend/.pytest_cache/v/cache/nodeids:472:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_play_next_shot_without_setup",
backend/.pytest_cache/v/cache/nodeids:473:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_error_handling",
backend/.pytest_cache/v/cache/nodeids:474:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_full_flow",
backend/.pytest_cache/v/cache/nodeids:475:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_legacy_format_compatibility",
backend/.pytest_cache/v/cache/nodeids:476:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_setup_invalid_players",
backend/.pytest_cache/v/cache/nodeids:477:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_setup_success",
backend/.pytest_cache/v/cache/nodeids:487:  "tests/test_simulation_unit.py::TestSimulationErrorHandling::test_invalid_partnership_request",
backend/.pytest_cache/v/cache/nodeids:488:  "tests/test_simulation_unit.py::TestSimulationErrorHandling::test_invalid_player_count",
backend/.pytest_cache/v/cache/nodeids:489:  "tests/test_simulation_unit.py::TestSimulationErrorHandling::test_missing_course",
backend/.pytest_cache/v/cache/nodeids:490:  "tests/test_simulation_unit.py::TestSimulationUtilities::test_handicap_calculation",
backend/.pytest_cache/v/cache/nodeids:491:  "tests/test_simulation_unit.py::TestSimulationUtilities::test_net_score_calculation",
backend/.pytest_cache/v/cache/nodeids:492:  "tests/test_simulation_unit.py::TestSimulationUtilities::test_team_formation_validation",
backend/.pytest_cache/v/cache/nodeids:493:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_add_players",
backend/.pytest_cache/v/cache/nodeids:494:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_captain_rotation",
backend/.pytest_cache/v/cache/nodeids:495:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_game_state_serialization",
backend/.pytest_cache/v/cache/nodeids:496:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_get_current_captain",
backend/.pytest_cache/v/cache/nodeids:497:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_lie_type_determination_with_distance",
backend/.pytest_cache/v/cache/nodeids:498:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_partnership_request",
backend/.pytest_cache/v/cache/nodeids:499:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_partnership_response",
backend/.pytest_cache/v/cache/nodeids:500:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_set_course",
backend/.pytest_cache/v/cache/nodeids:501:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_short_game_progression",
backend/.pytest_cache/v/cache/nodeids:502:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_shot_simulation",
backend/.pytest_cache/v/cache/nodeids:503:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_simulation_initialization",
backend/.pytest_cache/v/cache/nodeids:504:  "tests/test_simulation_unit.py::TestWolfGoatPigSimulation::test_start_game",
backend/.pytest_cache/v/cache/lastfailed:82:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_simulation_setup_invalid_players": true,
backend/.pytest_cache/v/cache/lastfailed:83:  "tests/test_simulation_integration.py::TestSimulationIntegration::test_play_next_shot_without_setup": true,
backend/test_short_game.py:13:    from app.wolf_goat_pig_simulation import WolfGoatPigSimulation, WGPShotResult
backend/test_short_game.py:20:        sim = WolfGoatPigSimulation()
backend/test_progression.py:13:    from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
backend/test_progression.py:20:        sim = WolfGoatPigSimulation()
backend/test_progression.py:52:        print("\n🎯 Testing Hole Completion Simulation")
backend/tests/test_models_schemas.py:19:    Rule, Course, Hole, GameStateModel, SimulationResult,
backend/tests/test_simulation_unit.py:16:    from app.wolf_goat_pig_simulation import WolfGoatPigSimulation
backend/tests/test_simulation_unit.py:27:class TestWolfGoatPigSimulation:
backend/tests/test_simulation_unit.py:43:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:50:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:58:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:66:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:77:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:88:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:101:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:114:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:129:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:143:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:166:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:197:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:335:class TestSimulationUtilities:
backend/tests/test_simulation_unit.py:378:class TestSimulationErrorHandling:
backend/tests/test_simulation_unit.py:384:            WolfGoatPigSimulation(player_count=3)
backend/tests/test_simulation_unit.py:388:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:394:        sim = WolfGoatPigSimulation()
backend/tests/test_simulation_unit.py:401:    print("🧪 Simulation Unit Tests")
backend/tests/test_simulation_unit.py:405:        print("⚠️ Simulation components not available for testing")
backend/tests/test_simulation_unit.py:411:        TestWolfGoatPigSimulation,
backend/tests/test_simulation_unit.py:415:        TestSimulationUtilities,
backend/tests/test_simulation_unit.py:416:        TestSimulationErrorHandling,
backend/tests/test_monte_carlo.py:17:    SimulationParams,
backend/tests/test_monte_carlo.py:18:    SimulationResult,
backend/tests/test_monte_carlo.py:75:        valid_params = SimulationParams(
backend/tests/test_monte_carlo.py:84:        default_params = SimulationParams()
backend/tests/test_monte_carlo.py:182:        params = SimulationParams(num_simulations=5000, use_parallel=False)
backend/tests/test_monte_carlo.py:199:        params = SimulationParams(
backend/tests/test_monte_carlo.py:210:        self.assertLess(total_time, 50, f"Simulation took {total_time:.1f}ms, should be under 50ms")
backend/tests/test_monte_carlo.py:228:        params = SimulationParams(num_simulations=1000, use_parallel=False)
backend/tests/test_monte_carlo.py:249:        params = SimulationParams(num_simulations=2000, confidence_level=0.95)
backend/tests/test_monte_carlo.py:270:        params = SimulationParams(num_simulations=1000)
backend/tests/test_monte_carlo.py:305:        params_parallel = SimulationParams(num_simulations=1000, use_parallel=True, num_threads=2)
backend/tests/test_monte_carlo.py:306:        params_sequential = SimulationParams(num_simulations=1000, use_parallel=False)
backend/tests/test_monte_carlo.py:327:        params = SimulationParams(
backend/tests/test_monte_carlo.py:343:        minimal_params = SimulationParams(num_simulations=10)
backend/tests/test_monte_carlo.py:346:        self.assertIsInstance(minimal_result, SimulationResult)
backend/tests/test_monte_carlo.py:353:        self.assertIsInstance(single_result, SimulationResult)
backend/tests/test_monte_carlo.py:363:        params = SimulationParams(num_simulations=2000, use_parallel=False)
backend/tests/test_monte_carlo.py:406:        self.assertIsInstance(result, SimulationResult)
backend/tests/test_monte_carlo.py:425:        self.assertIsInstance(result, SimulationResult)
backend/tests/simulation/test_simulation_scenarios.py:102:class WolfGoatPigSimulationTester:
backend/tests/simulation/test_simulation_scenarios.py:258:class SimulationScenarios:
backend/tests/simulation/test_simulation_scenarios.py:316:class TestSimulationMode:
backend/tests/simulation/test_simulation_scenarios.py:322:        return WolfGoatPigSimulationTester()
backend/tests/simulation/test_simulation_scenarios.py:326:        scenario = SimulationScenarios.aggressive_captain_solo()
backend/tests/simulation/test_simulation_scenarios.py:341:        scenario = SimulationScenarios.partnership_acceptance()
backend/tests/simulation/test_simulation_scenarios.py:356:        tester = WolfGoatPigSimulationTester()
backend/tests/simulation/test_simulation_scenarios.py:357:        scenario = SimulationScenarios.partnership_acceptance()
backend/tests/simulation/__init__.py:1:"""Simulation test subpackage for backend suite."""
Binary file backend/tests/simulation/__pycache__/test_simulation_scenarios.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/simulation/__pycache__/test_simulation_scenarios.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/simulation/__pycache__/test_simulation_scenarios.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/simulation/__pycache__/__init__.cpython-312.pyc matches
Binary file backend/tests/simulation/__pycache__/__init__.cpython-313.pyc matches
Binary file backend/tests/__pycache__/test_monte_carlo.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_simulation_endpoints.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_monte_carlo.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_performance.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_endpoints.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_integration.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_bootstrapping.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_integration.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_performance.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_simulation_endpoints.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_performance.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_monte_carlo.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_integration.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_integration.cpython-313.pyc matches
Binary file backend/tests/__pycache__/test_bootstrapping.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_bootstrapping.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_models_schemas.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_unit.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_models_schemas.cpython-313-pytest-8.4.2.pyc matches
Binary file backend/tests/__pycache__/test_simulation_unit.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_models_schemas.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/tests/__pycache__/test_simulation_unit.cpython-313-pytest-8.4.2.pyc matches
backend/tests/test_performance.py:161:            with self.profiler.timer(f"Simulation with {iterations} iterations"):
backend/tests/test_performance.py:206:                name=f"Simulation with {player_count} players"
backend/tests/test_performance.py:230:        with self.profiler.memory_monitor("Large Monte Carlo Simulation"):
backend/tests/test_bootstrapping.py:317:                with patch('app.main.WolfGoatPigSimulation') as mock_sim:
backend/tests/test_bootstrapping.py:364:                with patch('app.main.WolfGoatPigSimulation') as mock_sim:
backend/tests/test_bootstrapping.py:365:                    mock_sim.side_effect = Exception("Simulation initialization failed")
backend/tests/test_simulation_endpoints.py:12:class MockSimulation:
backend/tests/test_simulation_endpoints.py:24:mock_wgp_simulation = MockSimulation()
backend/tests/test_simulation_endpoints.py:94:        "message": "Simulation initialized successfully",
backend/tests/test_simulation_endpoints.py:127:    """Test compatibility with useSimulationApi.js frontend hook"""
backend/tests/test_simulation_endpoints.py:131:    # This tests the specific calls made by useSimulationApi.js
backend/tests/test_simulation_endpoints.py:202:            "message": "Simulation initialized",
backend/tests/test_simulation_endpoints.py:213:    print("✅ 'Simulation not found' error has been resolved")
backend/tests/test_simulation_endpoints.py:232:    print("✅ Simulation integrates properly with bootstrap system")
backend/tests/test_simulation_endpoints.py:237:    print("🎮 Simulation Endpoints Test Suite")
backend/tests/test_simulation_integration.py:13:class TestSimulationIntegration:
backend/tests/test_simulation_integration.py:58:        assert "Simulation not initialized" in response.json()["detail"]
backend/SIMULATION_ENDPOINTS_SUMMARY.md:1:# Simulation API Endpoints Implementation Summary
backend/SIMULATION_ENDPOINTS_SUMMARY.md:96:- Uses existing `WolfGoatPigSimulation` class and `WGPPlayer` objects
backend/SIMULATION_ENDPOINTS_SUMMARY.md:109:  - `SimulationSetupRequest`
backend/SIMULATION_ENDPOINTS_SUMMARY.md:110:  - `SimulationPlayShotRequest` 
backend/SIMULATION_ENDPOINTS_SUMMARY.md:111:  - `SimulationPlayHoleRequest`
backend/SIMULATION_ENDPOINTS_SUMMARY.md:116:- **Shot Simulation**: Uses existing shot simulation engine
backend/SIMULATION_ENDPOINTS_SUMMARY.md:129:The implemented endpoints match exactly what the frontend `useSimulationApi.js` hook expects:
backend/SIMULATION_ENDPOINTS_SUMMARY.md:130:- `setupSimulation()` → POST /simulation/setup
backend/SIMULATION_ENDPOINTS_SUMMARY.md:132:- `makeSimulationDecision()` → POST /simulation/play-hole
backend/BOOTSTRAP_README.md:45:- **Simulation Verification**: Tests simulation initialization
backend/BOOTSTRAP_README.md:60:- Simulation engine functionality
backend/BOOTSTRAP_README.md:81:- Simulation engine recovery
backend/BOOTSTRAP_README.md:340:- Simulation initialization success rate
Binary file backend/__pycache__/test_fixes.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/__pycache__/test_progression.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/__pycache__/test_betting_flow.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/__pycache__/test_hole_completion.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/__pycache__/test_progression.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/__pycache__/dev_workflow.cpython-312.pyc matches
Binary file backend/__pycache__/test_fixes.cpython-313-pytest-8.4.1.pyc matches
Binary file backend/__pycache__/test_hole_completion.cpython-312-pytest-8.4.2.pyc matches
Binary file backend/__pycache__/startup.cpython-313.pyc 