ðŸŽ¯ ADK auto-sync aliases loaded!
ðŸ’¡ Use 'sync' to sync with upstream anytime
ðŸ’¡ Use 'synccheck' to check sync status
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/spanner.v1.json:4499:"description": "Required. Textual representation of the crontab. User can customize the backup frequency and the backup version time using the cron expression. The version time must be in UTC timezone. The backup will contain an externally consistent copy of the database at the version time. Full backups must be scheduled a minimum of 12 hours apart and incremental backups must be scheduled a minimum of 4 hours apart. Examples of valid cron specifications: * `0 2/12 * * *` : every 12 hours at (2, 14) hours past midnight in UTC. * `0 2,14 * * *` : every 12 hours at (2, 14) hours past midnight in UTC. * `0 */4 * * *` : (incremental backups only) every 4 hours at (0, 4, 8, 12, 16, 20) hours past midnight in UTC. * `0 2 * * *` : once a day at 2 past midnight in UTC. * `0 2 * * 0` : once a week every Sunday at 2 past midnight in UTC. * `0 2 8 * *` : once a month on 8th day at 2 past midnight in UTC.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/sheets.v4.json:2788:"Group dates by day of week, for example Sunday. The days of the week will be translated based on the spreadsheet locale.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/sheets.v4.json:3719:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/sheets.v4.json:3905:"Group dates by day of week, for example Sunday. The days of the week will be translated based on the spreadsheet locale.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/businessprofileperformance.v1.json:291:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/businessprofileperformance.v1.json:494:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/composer.v1.json:1664:"description": "Optional. The maintenance window is the period when Cloud Composer components may undergo maintenance. It is defined so that maintenance is not executed during peak hours or critical time periods. The system will not be under maintenance for every occurrence of this window, but when maintenance is planned, it will be scheduled during the window. The maintenance window period must encompass at least 12 hours per week. This may be split into multiple chunks, each with a size of at least 4 hours. If this value is omitted, the default value for maintenance window is applied. By default, maintenance windows are from 00:00:00 to 04:00:00 (GMT) on Friday, Saturday, and Sunday every week."
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1beta.json:2433:"description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1beta.json:2456:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1beta.json:2497:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/metastore.v1beta.json:2883:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/authorizedbuyersmarketplace.v1alpha.json:2037:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/merchantapi.datasources_v1.json:528:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinessinformation.v1.json:1751:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinessinformation.v1.json:1779:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1beta.json:2478:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1beta.json:3408:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1beta.json:6510:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/dlp.v2.json:7192:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/dlp.v2.json:12913:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/backupdr.v1.json:5958:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/backupdr.v1.json:6221:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/adsense.v2.json:1063:"Week dimension in YYYY-MM-DD format, representing the first day of each week (e.g. \"2010-02-08\"). The first day of the week is determined by the language_code specified in a report generation request (so e.g. this would be a Monday for \"en-GB\" or \"es\", but a Sunday for \"en\" or \"fr-CA\").",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/adsense.v2.json:1436:"Week dimension in YYYY-MM-DD format, representing the first day of each week (e.g. \"2010-02-08\"). The first day of the week is determined by the language_code specified in a report generation request (so e.g. this would be a Monday for \"en-GB\" or \"es\", but a Sunday for \"en\" or \"fr-CA\").",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v4.json:14533:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v4.json:14583:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/looker.v1.json:1361:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/managedidentities.v1alpha1.json:2950:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/composer.v1beta1.json:1676:"description": "Optional. The maintenance window is the period when Cloud Composer components may undergo maintenance. It is defined so that maintenance is not executed during peak hours or critical time periods. The system will not be under maintenance for every occurrence of this window, but when maintenance is planned, it will be scheduled during the window. The maintenance window period must encompass at least 12 hours per week. This may be split into multiple chunks, each with a size of at least 4 hours. If this value is omitted, the default value for maintenance window is applied. By default, maintenance windows are from 00:00:00 to 04:00:00 (GMT) on Friday, Saturday, and Sunday every week."
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v3.json:14496:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v3.json:14546:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1alpha.json:2497:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1alpha.json:3432:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1alpha.json:6534:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/connectors.v1.json:8322:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/vmwareengine.v1.json:5978:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/vmwareengine.v1.json:6366:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/vmwareengine.v1.json:6396:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1beta.json:714:"description": "The cohort selects users whose first touch date is between start date and end date defined in the `dateRange`. This `dateRange` does not specify the full date range of event data that is present in a cohort report. In a cohort report, this `dateRange` is extended by the granularity and offset present in the `cohortsRange`; event data for the extended reporting date range is present in a cohort report. In a cohort request, this `dateRange` is required and the `dateRanges` in the `RunReportRequest` or `RunPivotReportRequest` must be unspecified. This `dateRange` should generally be aligned with the cohort's granularity. If `CohortsRange` uses daily granularity, this `dateRange` can be a single day. If `CohortsRange` uses weekly granularity, this `dateRange` can be aligned to a week boundary, starting at Sunday and ending Saturday. If `CohortsRange` uses monthly granularity, this `dateRange` can be aligned to a month, starting at the first and ending on the last day of the month."
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1beta.json:780:"Weekly granularity. Commonly used if the cohort's `dateRange` is a week in duration (starting on Sunday and ending on Saturday) and the request contains `cohortNthWeek`.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/firestore.v1.json:4654:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1.json:3831:"description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1.json:3854:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1.json:3895:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v2.json:12882:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/file.v1beta1.json:2656:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/gkebackup.v1.json:2975:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1.json:1714:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1.json:1924:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/container.v1.json:7545:"description": "An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. For example, to have something repeat every weekday, you'd use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To repeat some window daily (equivalent to the DailyMaintenanceWindow): `FREQ=DAILY` For the first weekend of every month: `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies how frequently the window starts. Eg, if you wanted to have a 9-5 UTC-4 window every weekday, you'd use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ``` Windows can span multiple days. Eg, to make the window encompass every weekend from midnight Saturday till the last minute of Sunday UTC: ``` start time = 2019-01-05T00:00:00Z end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA ``` Note the start and end time's specific dates are largely arbitrary except to specify duration of the window and when it first starts. The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/metastore.v1alpha.json:2883:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsreporting.v4.json:254:"description": "This is used for `FIRST_VISIT_DATE` cohort, the cohort selects users whose first visit date is between start date and end date defined in the DateRange. The date ranges should be aligned for cohort requests. If the request contains `ga:cohortNthDay` it should be exactly one day long, if `ga:cohortNthWeek` it should be aligned to the week boundary (starting at Sunday and ending Saturday), and for `ga:cohortNthMonth` the date range should be aligned to the month (starting at the first and ending on the last day of the month). For LTV requests there are no such restrictions. You do not need to supply a date range for the `reportsRequest.dateRanges` field."
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsreporting.v4.json:287:"description": "Enable Life Time Value (LTV). LTV measures lifetime value for users acquired through different channels. Please see: [Cohort Analysis](https://support.google.com/analytics/answer/6074676) and [Lifetime Value](https://support.google.com/analytics/answer/6182550) If the value of lifetimeValue is false: - The metric values are similar to the values in the web interface cohort report. - The cohort definition date ranges must be aligned to the calendar week and month. i.e. while requesting `ga:cohortNthWeek` the `startDate` in the cohort definition should be a Sunday and the `endDate` should be the following Saturday, and for `ga:cohortNthMonth`, the `startDate` should be the 1st of the month and `endDate` should be the last day of the month. When the lifetimeValue is true: - The metric values will correspond to the values in the web interface LifeTime value report. - The Lifetime Value report shows you how user value (Revenue) and engagement (Appviews, Goal Completions, Sessions, and Session Duration) grow during the 90 days after a user is acquired. - The metrics are calculated as a cumulative average per user per the time increment. - The cohort definition date ranges need not be aligned to the calendar week and month boundaries. - The `viewId` must be an [app view ID](https://support.google.com/analytics/answer/2649553#WebVersusAppViews)",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/searchads360.v0.json:292:"Sunday."
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/searchads360.v0.json:1767:"Sunday."
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/searchads360.v0.json:2062:"description": "Week as defined as Monday through Sunday, and represented by the date of Monday. Formatted as yyyy-MM-dd.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinesscalls.v1.json:362:          "description": "Day of the week. Allowed values are Sunday - Saturday.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinesscalls.v1.json:381:            "Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v1.json:11701:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1beta1.json:5163:"description": "Make a snapshot every week e.g. at Monday 04:00, Wednesday 05:20, Sunday 23:50",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1beta1.json:5167:"description": "Set the day or days of the week to make a snapshot. Accepts a comma separated days of the week. Defaults to 'Sunday'.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/metastore.v1.json:2694:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1beta1.json:1876:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1beta1.json:5117:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/places.v1.json:1617:"description": "The periods that this place is open during the week. The periods are in chronological order, in the place-local timezone. An empty (but not absent) value indicates a place that is never open, e.g. because it is closed temporarily for renovations. The starting day of `periods` is NOT fixed and should not be assumed to be Sunday. The API determines the start day based on a variety of factors. For example, for a 24/7 business, the first period may begin on the day of the request. For other businesses, it might be the first day of the week that they are open. NOTE: The ordering of the `periods` array is independent of the ordering of the `weekday_descriptions` array. Do not assume they will begin on the same day.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/places.v1.json:1700:"description": "A day of the week, as an integer in the range 0-6. 0 is Sunday, 1 is Monday, etc.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/authorizedbuyersmarketplace.v1.json:1806:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/connectors.v2.json:2629:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1beta2.json:1770:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1beta2.json:1980:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/contactcenteraiplatform.v1alpha1.json:1334:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/managedidentities.v1beta1.json:2926:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1alpha.json:350:                    "description": "The cohort selects users whose first touch date is between start date and end date defined in the `dateRange`. This `dateRange` does not specify the full date range of event data that is present in a cohort report. In a cohort report, this `dateRange` is extended by the granularity and offset present in the `cohortsRange`; event data for the extended reporting date range is present in a cohort report. In a cohort request, this `dateRange` is required and the `dateRanges` in the `RunReportRequest` or `RunPivotReportRequest` must be unspecified. This `dateRange` should generally be aligned with the cohort's granularity. If `CohortsRange` uses daily granularity, this `dateRange` can be a single day. If `CohortsRange` uses weekly granularity, this `dateRange` can be aligned to a week boundary, starting at Sunday and ending Saturday. If `CohortsRange` uses monthly granularity, this `dateRange` can be aligned to a month, starting at the first and ending on the last day of the month."
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1alpha.json:416:                        "Weekly granularity. Commonly used if the cohort's `dateRange` is a week in duration (starting on Sunday and ending on Saturday) and the request contains `cohortNthWeek`.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/managedidentities.v1.json:2914:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1.json:5109:"description": "Make a snapshot every week e.g. at Monday 04:00, Wednesday 05:20, Sunday 23:50",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1.json:5113:"description": "Set the day or days of the week to make a snapshot. Accepts a comma separated days of the week. Defaults to 'Sunday'.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/adexchangebuyer2.v2beta1.json:4126:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/clouddeploy.v1.json:7283:"description": "Weekly windows. For example, blocking actions every Saturday and Sunday. Another example would be blocking actions every weekday from 5pm to midnight.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/clouddeploy.v1.json:7307:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1.json:2397:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1.json:3290:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1.json:6363:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1.json:1876:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1.json:5110:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/file.v1.json:2285:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/merchantapi.datasources_v1beta.json:528:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/addressvalidation.v1.json:517:"description": "Integer identifying non-delivery days. It can be interrogated using bit flags: 0x40 \u2013 Sunday is a non-delivery day 0x20 \u2013 Monday is a non-delivery day 0x10 \u2013 Tuesday is a non-delivery day 0x08 \u2013 Wednesday is a non-delivery day 0x04 \u2013 Thursday is a non-delivery day 0x02 \u2013 Friday is a non-delivery day 0x01 \u2013 Saturday is a non-delivery day",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/doubleclickbidmanager.v2.json:365:"All days, including the current day, since the most recent Sunday.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/doubleclickbidmanager.v2.json:369:"The previous completed week, beginning from Sunday.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/container.v1beta1.json:8030:"description": "An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. For example, to have something repeat every weekday, you'd use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To repeat some window daily (equivalent to the DailyMaintenanceWindow): `FREQ=DAILY` For the first weekend of every month: `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies how frequently the window starts. Eg, if you wanted to have a 9-5 UTC-4 window every weekday, you'd use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ``` Windows can span multiple days. Eg, to make the window encompass every weekend from midnight Saturday till the last minute of Sunday UTC: ``` start time = 2019-01-05T00:00:00Z end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA ``` Note the start and end time's specific dates are largely arbitrary except to specify duration of the window and when it first starts. The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/oracledatabase.v1.json:4516:"description": "Optional. The day of the week on which the full backup should be performed on the database. If no value is provided, it will default to Sunday.",
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/oracledatabase.v1.json:4535:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/oracledatabase.v1.json:6366:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/oracledatabase.v1.json:6950:"Sunday"
backend/.venv-prod/lib/python3.13/site-packages/pygments/lexers/_vbscript_builtins.py:261:    'vbSunday',
backend/.venv-prod/lib/python3.13/site-packages/google/type/dayofweek.proto:48:  // Sunday
backend/.venv-prod/lib/python3.13/site-packages/parse_type/parse.py:310:    "%A": "(?:Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday)",
backend/.venv-prod/lib/python3.13/site-packages/numpy/_core/_add_newdocs.py:6464:        A seven-element array indicating which of Monday through Sunday are
backend/.venv-prod/lib/python3.13/site-packages/numpy/_core/multiarray.py:1478:        A seven-element array indicating which of Monday through Sunday are
backend/.venv-prod/lib/python3.13/site-packages/numpy/_core/multiarray.py:1561:        A seven-element array indicating which of Monday through Sunday are
backend/.venv-prod/lib/python3.13/site-packages/numpy/_core/multiarray.py:1648:        A seven-element array indicating which of Monday through Sunday are
backend/.venv-prod/lib/python3.13/site-packages/python_dateutil-2.9.0.post0.dist-info/METADATA:124:* Computing of Easter Sunday dates for any given year,
backend/.venv-prod/lib/python3.13/site-packages/parse.py:297:    "%A": "(?:Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday)",
backend/.venv-prod/lib/python3.13/site-packages/dateutil/parser/_parser.py:270:                ("Sun", "Sunday")]
backend/.venv-prod/lib/python3.13/site-packages/dateutil/rrule.py:396:        Easter Sunday. Passing the offset 0 to byeaster will yield the Easter
backend/.venv-prod/lib/python3.13/site-packages/dateutil/rrule.py:397:        Sunday itself. This is an extension to the RFC specification.
backend/.venv-prod/lib/python3.13/site-packages/dateutil/easter.py:59:    # j - Weekday for PFM (0=Sunday, etc)
backend/.venv-prod/lib/python3.13/site-packages/dateutil/easter.py:60:    # p - Number of days from March 21 to Sunday on or before PFM
backend/.venv-prod/lib/python3.13/site-packages/dateutil/tz/tz.py:910:        specify, for example, that DST starts at 2AM on the 2nd Sunday in
backend/.venv-prod/lib/python3.13/site-packages/dateutil/tz/tz.py:916:        value is 2 AM on the first Sunday in April.
backend/.venv-prod/lib/python3.13/site-packages/dateutil/tz/win.py:238:         self._stddayofweek,   # Sunday = 0
backend/.venv-prod/lib/python3.13/site-packages/dateutil/tz/win.py:244:         self._dstdayofweek,   # Sunday = 0
backend/.venv-prod/lib/python3.13/site-packages/dateutil/tz/win.py:334:    """ dayofweek == 0 means Sunday, whichweek 5 means last instance """
backend/app/models.py:168:    day_of_week = Column(Integer)  # 0=Monday, 1=Tuesday, ..., 6=Sunday
backend/app/models.py:237:    day_of_week = Column(Integer)  # 0=Monday, 6=Sunday
backend/app/schemas.py:422:            raise ValueError('Day of week must be between 0 (Monday) and 6 (Sunday)')
backend/app/main.py:6156:    num_rotations: int = Query(3, description="Number of Sunday pairing options to generate"),
backend/app/main.py:6159:    """Generate randomized Sunday game pairings with optional deterministic seeding."""
backend/app/main.py:6193:        logger.error(f"Error generating Sunday game pairings for {date}: {e}")
backend/app/main.py:6194:        raise HTTPException(status_code=500, detail=f"Failed to generate Sunday pairings: {str(e)}")
backend/app/main.py:6640:        preferred_days: Comma-separated list of preferred days (0=Monday, 6=Sunday)
backend/app/services/matchmaking_service.py:88:            preferred_days: List of preferred days of week (0=Monday, 6=Sunday)
backend/app/services/matchmaking_service.py:213:                     'Friday', 'Saturday', 'Sunday']
backend/app/services/sunday_game_service.py:1:"""Utility functions for preparing Sunday game pairings with randomness support."""
backend/app/services/sunday_game_service.py:50:    """Generate randomized Sunday pairings and select one rotation when multiple exist."""
backend/app/services/sunday_game_service.py:52:        logger.info("Sunday pairings requested with insufficient players: %s", len(players))
backend/app/services/sunday_game_service.py:86:        "Generated %s Sunday rotations (seed=%s). Selected rotation %s.",
backend/app/services/email_scheduler.py:43:        # Schedule weekly summaries on Sunday at 9 AM
backend/tests/test_sunday_game_service.py:1:"""Tests for Sunday game pairing logic and related randomization helpers."""
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/spanner.v1.json:4499:"description": "Required. Textual representation of the crontab. User can customize the backup frequency and the backup version time using the cron expression. The version time must be in UTC timezone. The backup will contain an externally consistent copy of the database at the version time. Full backups must be scheduled a minimum of 12 hours apart and incremental backups must be scheduled a minimum of 4 hours apart. Examples of valid cron specifications: * `0 2/12 * * *` : every 12 hours at (2, 14) hours past midnight in UTC. * `0 2,14 * * *` : every 12 hours at (2, 14) hours past midnight in UTC. * `0 */4 * * *` : (incremental backups only) every 4 hours at (0, 4, 8, 12, 16, 20) hours past midnight in UTC. * `0 2 * * *` : once a day at 2 past midnight in UTC. * `0 2 * * 0` : once a week every Sunday at 2 past midnight in UTC. * `0 2 8 * *` : once a month on 8th day at 2 past midnight in UTC.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/sheets.v4.json:2788:"Group dates by day of week, for example Sunday. The days of the week will be translated based on the spreadsheet locale.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/sheets.v4.json:3719:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/sheets.v4.json:3905:"Group dates by day of week, for example Sunday. The days of the week will be translated based on the spreadsheet locale.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/businessprofileperformance.v1.json:291:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/businessprofileperformance.v1.json:494:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/composer.v1.json:1664:"description": "Optional. The maintenance window is the period when Cloud Composer components may undergo maintenance. It is defined so that maintenance is not executed during peak hours or critical time periods. The system will not be under maintenance for every occurrence of this window, but when maintenance is planned, it will be scheduled during the window. The maintenance window period must encompass at least 12 hours per week. This may be split into multiple chunks, each with a size of at least 4 hours. If this value is omitted, the default value for maintenance window is applied. By default, maintenance windows are from 00:00:00 to 04:00:00 (GMT) on Friday, Saturday, and Sunday every week."
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1beta.json:2433:"description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1beta.json:2456:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1beta.json:2497:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/metastore.v1beta.json:2883:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/authorizedbuyersmarketplace.v1alpha.json:2037:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/merchantapi.datasources_v1.json:528:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinessinformation.v1.json:1751:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinessinformation.v1.json:1779:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1beta.json:2468:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1beta.json:3398:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1beta.json:6423:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/dlp.v2.json:7183:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/dlp.v2.json:12829:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/backupdr.v1.json:5846:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/backupdr.v1.json:6044:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/adsense.v2.json:1063:"Week dimension in YYYY-MM-DD format, representing the first day of each week (e.g. \"2010-02-08\"). The first day of the week is determined by the language_code specified in a report generation request (so e.g. this would be a Monday for \"en-GB\" or \"es\", but a Sunday for \"en\" or \"fr-CA\").",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/adsense.v2.json:1436:"Week dimension in YYYY-MM-DD format, representing the first day of each week (e.g. \"2010-02-08\"). The first day of the week is determined by the language_code specified in a report generation request (so e.g. this would be a Monday for \"en-GB\" or \"es\", but a Sunday for \"en\" or \"fr-CA\").",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v4.json:14458:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v4.json:14508:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/looker.v1.json:1361:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/managedidentities.v1alpha1.json:2950:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/composer.v1beta1.json:1676:"description": "Optional. The maintenance window is the period when Cloud Composer components may undergo maintenance. It is defined so that maintenance is not executed during peak hours or critical time periods. The system will not be under maintenance for every occurrence of this window, but when maintenance is planned, it will be scheduled during the window. The maintenance window period must encompass at least 12 hours per week. This may be split into multiple chunks, each with a size of at least 4 hours. If this value is omitted, the default value for maintenance window is applied. By default, maintenance windows are from 00:00:00 to 04:00:00 (GMT) on Friday, Saturday, and Sunday every week."
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v3.json:14421:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v3.json:14471:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1alpha.json:2487:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1alpha.json:3422:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1alpha.json:6447:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/connectors.v1.json:8303:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/vmwareengine.v1.json:5935:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/vmwareengine.v1.json:6323:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/vmwareengine.v1.json:6353:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1beta.json:714:"description": "The cohort selects users whose first touch date is between start date and end date defined in the `dateRange`. This `dateRange` does not specify the full date range of event data that is present in a cohort report. In a cohort report, this `dateRange` is extended by the granularity and offset present in the `cohortsRange`; event data for the extended reporting date range is present in a cohort report. In a cohort request, this `dateRange` is required and the `dateRanges` in the `RunReportRequest` or `RunPivotReportRequest` must be unspecified. This `dateRange` should generally be aligned with the cohort's granularity. If `CohortsRange` uses daily granularity, this `dateRange` can be a single day. If `CohortsRange` uses weekly granularity, this `dateRange` can be aligned to a week boundary, starting at Sunday and ending Saturday. If `CohortsRange` uses monthly granularity, this `dateRange` can be aligned to a month, starting at the first and ending on the last day of the month."
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1beta.json:780:"Weekly granularity. Commonly used if the cohort's `dateRange` is a week in duration (starting on Sunday and ending on Saturday) and the request contains `cohortNthWeek`.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/firestore.v1.json:4166:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1.json:3831:"description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1.json:3854:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1.json:3895:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v2.json:12860:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/file.v1beta1.json:2572:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/gkebackup.v1.json:2975:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1.json:1681:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1.json:1843:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/container.v1.json:7508:"description": "An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. For example, to have something repeat every weekday, you'd use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To repeat some window daily (equivalent to the DailyMaintenanceWindow): `FREQ=DAILY` For the first weekend of every month: `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies how frequently the window starts. Eg, if you wanted to have a 9-5 UTC-4 window every weekday, you'd use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ``` Windows can span multiple days. Eg, to make the window encompass every weekend from midnight Saturday till the last minute of Sunday UTC: ``` start time = 2019-01-05T00:00:00Z end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA ``` Note the start and end time's specific dates are largely arbitrary except to specify duration of the window and when it first starts. The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/metastore.v1alpha.json:2883:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsreporting.v4.json:254:"description": "This is used for `FIRST_VISIT_DATE` cohort, the cohort selects users whose first visit date is between start date and end date defined in the DateRange. The date ranges should be aligned for cohort requests. If the request contains `ga:cohortNthDay` it should be exactly one day long, if `ga:cohortNthWeek` it should be aligned to the week boundary (starting at Sunday and ending Saturday), and for `ga:cohortNthMonth` the date range should be aligned to the month (starting at the first and ending on the last day of the month). For LTV requests there are no such restrictions. You do not need to supply a date range for the `reportsRequest.dateRanges` field."
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsreporting.v4.json:287:"description": "Enable Life Time Value (LTV). LTV measures lifetime value for users acquired through different channels. Please see: [Cohort Analysis](https://support.google.com/analytics/answer/6074676) and [Lifetime Value](https://support.google.com/analytics/answer/6182550) If the value of lifetimeValue is false: - The metric values are similar to the values in the web interface cohort report. - The cohort definition date ranges must be aligned to the calendar week and month. i.e. while requesting `ga:cohortNthWeek` the `startDate` in the cohort definition should be a Sunday and the `endDate` should be the following Saturday, and for `ga:cohortNthMonth`, the `startDate` should be the 1st of the month and `endDate` should be the last day of the month. When the lifetimeValue is true: - The metric values will correspond to the values in the web interface LifeTime value report. - The Lifetime Value report shows you how user value (Revenue) and engagement (Appviews, Goal Completions, Sessions, and Session Duration) grow during the 90 days after a user is acquired. - The metrics are calculated as a cumulative average per user per the time increment. - The cohort definition date ranges need not be aligned to the calendar week and month boundaries. - The `viewId` must be an [app view ID](https://support.google.com/analytics/answer/2649553#WebVersusAppViews)",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/searchads360.v0.json:292:"Sunday."
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/searchads360.v0.json:1767:"Sunday."
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/searchads360.v0.json:2062:"description": "Week as defined as Monday through Sunday, and represented by the date of Monday. Formatted as yyyy-MM-dd.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinesscalls.v1.json:362:          "description": "Day of the week. Allowed values are Sunday - Saturday.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinesscalls.v1.json:381:            "Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v1.json:11701:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1beta1.json:4743:"description": "Make a snapshot every week e.g. at Monday 04:00, Wednesday 05:20, Sunday 23:50",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1beta1.json:4747:"description": "Set the day or days of the week to make a snapshot. Accepts a comma separated days of the week. Defaults to 'Sunday'.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/metastore.v1.json:2694:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1beta1.json:1850:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1beta1.json:5008:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/places.v1.json:1560:"description": "The periods that this place is open during the week. The periods are in chronological order, in the place-local timezone. An empty (but not absent) value indicates a place that is never open, e.g. because it is closed temporarily for renovations. The starting day of `periods` is NOT fixed and should not be assumed to be Sunday. The API determines the start day based on a variety of factors. For example, for a 24/7 business, the first period may begin on the day of the request. For other businesses, it might be the first day of the week that they are open. NOTE: The ordering of the `periods` array is independent of the ordering of the `weekday_descriptions` array. Do not assume they will begin on the same day.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/places.v1.json:1643:"description": "A day of the week, as an integer in the range 0-6. 0 is Sunday, 1 is Monday, etc.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/authorizedbuyersmarketplace.v1.json:1806:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/connectors.v2.json:2395:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1beta2.json:1737:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1beta2.json:1899:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/contactcenteraiplatform.v1alpha1.json:1320:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/managedidentities.v1beta1.json:2926:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1alpha.json:350:                    "description": "The cohort selects users whose first touch date is between start date and end date defined in the `dateRange`. This `dateRange` does not specify the full date range of event data that is present in a cohort report. In a cohort report, this `dateRange` is extended by the granularity and offset present in the `cohortsRange`; event data for the extended reporting date range is present in a cohort report. In a cohort request, this `dateRange` is required and the `dateRanges` in the `RunReportRequest` or `RunPivotReportRequest` must be unspecified. This `dateRange` should generally be aligned with the cohort's granularity. If `CohortsRange` uses daily granularity, this `dateRange` can be a single day. If `CohortsRange` uses weekly granularity, this `dateRange` can be aligned to a week boundary, starting at Sunday and ending Saturday. If `CohortsRange` uses monthly granularity, this `dateRange` can be aligned to a month, starting at the first and ending on the last day of the month."
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1alpha.json:416:                        "Weekly granularity. Commonly used if the cohort's `dateRange` is a week in duration (starting on Sunday and ending on Saturday) and the request contains `cohortNthWeek`.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/managedidentities.v1.json:2914:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1.json:4624:"description": "Make a snapshot every week e.g. at Monday 04:00, Wednesday 05:20, Sunday 23:50",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1.json:4628:"description": "Set the day or days of the week to make a snapshot. Accepts a comma separated days of the week. Defaults to 'Sunday'.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/adexchangebuyer2.v2beta1.json:4126:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/clouddeploy.v1.json:7283:"description": "Weekly windows. For example, blocking actions every Saturday and Sunday. Another example would be blocking actions every weekday from 5pm to midnight.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/clouddeploy.v1.json:7307:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1.json:2364:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1.json:3253:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1.json:6237:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1.json:1850:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1.json:5011:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/file.v1.json:2236:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/merchantapi.datasources_v1beta.json:528:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/addressvalidation.v1.json:517:"description": "Integer identifying non-delivery days. It can be interrogated using bit flags: 0x40 \u2013 Sunday is a non-delivery day 0x20 \u2013 Monday is a non-delivery day 0x10 \u2013 Tuesday is a non-delivery day 0x08 \u2013 Wednesday is a non-delivery day 0x04 \u2013 Thursday is a non-delivery day 0x02 \u2013 Friday is a non-delivery day 0x01 \u2013 Saturday is a non-delivery day",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/doubleclickbidmanager.v2.json:365:"All days, including the current day, since the most recent Sunday.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/doubleclickbidmanager.v2.json:369:"The previous completed week, beginning from Sunday.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/container.v1beta1.json:7971:"description": "An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. For example, to have something repeat every weekday, you'd use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To repeat some window daily (equivalent to the DailyMaintenanceWindow): `FREQ=DAILY` For the first weekend of every month: `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies how frequently the window starts. Eg, if you wanted to have a 9-5 UTC-4 window every weekday, you'd use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ``` Windows can span multiple days. Eg, to make the window encompass every weekend from midnight Saturday till the last minute of Sunday UTC: ``` start time = 2019-01-05T00:00:00Z end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA ``` Note the start and end time's specific dates are largely arbitrary except to specify duration of the window and when it first starts. The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.",
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/oracledatabase.v1.json:4024:"Sunday"
backend/test_env/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/oracledatabase.v1.json:4363:"Sunday"
backend/test_env/lib/python3.13/site-packages/pygments/lexers/_vbscript_builtins.py:261:    'vbSunday',
backend/test_env/lib/python3.13/site-packages/google/type/dayofweek.proto:48:  // Sunday
backend/test_env/lib/python3.13/site-packages/numpy/_core/_add_newdocs.py:6464:        A seven-element array indicating which of Monday through Sunday are
backend/test_env/lib/python3.13/site-packages/numpy/_core/multiarray.py:1478:        A seven-element array indicating which of Monday through Sunday are
backend/test_env/lib/python3.13/site-packages/numpy/_core/multiarray.py:1561:        A seven-element array indicating which of Monday through Sunday are
backend/test_env/lib/python3.13/site-packages/numpy/_core/multiarray.py:1648:        A seven-element array indicating which of Monday through Sunday are
backend/test_env/lib/python3.13/site-packages/python_dateutil-2.9.0.post0.dist-info/METADATA:124:* Computing of Easter Sunday dates for any given year,
backend/test_env/lib/python3.13/site-packages/dateutil/parser/_parser.py:270:                ("Sun", "Sunday")]
backend/test_env/lib/python3.13/site-packages/dateutil/rrule.py:396:        Easter Sunday. Passing the offset 0 to byeaster will yield the Easter
backend/test_env/lib/python3.13/site-packages/dateutil/rrule.py:397:        Sunday itself. This is an extension to the RFC specification.
backend/test_env/lib/python3.13/site-packages/dateutil/easter.py:59:    # j - Weekday for PFM (0=Sunday, etc)
backend/test_env/lib/python3.13/site-packages/dateutil/easter.py:60:    # p - Number of days from March 21 to Sunday on or before PFM
backend/test_env/lib/python3.13/site-packages/dateutil/tz/tz.py:910:        specify, for example, that DST starts at 2AM on the 2nd Sunday in
backend/test_env/lib/python3.13/site-packages/dateutil/tz/tz.py:916:        value is 2 AM on the first Sunday in April.
backend/test_env/lib/python3.13/site-packages/dateutil/tz/win.py:238:         self._stddayofweek,   # Sunday = 0
backend/test_env/lib/python3.13/site-packages/dateutil/tz/win.py:244:         self._dstdayofweek,   # Sunday = 0
backend/test_env/lib/python3.13/site-packages/dateutil/tz/win.py:334:    """ dayofweek == 0 means Sunday, whichweek 5 means last instance """
backend/venv/lib/python3.12/site-packages/pygments/lexers/_vbscript_builtins.py:261:    'vbSunday',
backend/venv/lib/python3.12/site-packages/numpy/_core/_add_newdocs.py:6464:        A seven-element array indicating which of Monday through Sunday are
backend/venv/lib/python3.12/site-packages/numpy/_core/multiarray.py:1478:        A seven-element array indicating which of Monday through Sunday are
backend/venv/lib/python3.12/site-packages/numpy/_core/multiarray.py:1561:        A seven-element array indicating which of Monday through Sunday are
backend/venv/lib/python3.12/site-packages/numpy/_core/multiarray.py:1648:        A seven-element array indicating which of Monday through Sunday are
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/spanner.v1.json:4499:"description": "Required. Textual representation of the crontab. User can customize the backup frequency and the backup version time using the cron expression. The version time must be in UTC timezone. The backup will contain an externally consistent copy of the database at the version time. Full backups must be scheduled a minimum of 12 hours apart and incremental backups must be scheduled a minimum of 4 hours apart. Examples of valid cron specifications: * `0 2/12 * * *` : every 12 hours at (2, 14) hours past midnight in UTC. * `0 2,14 * * *` : every 12 hours at (2, 14) hours past midnight in UTC. * `0 */4 * * *` : (incremental backups only) every 4 hours at (0, 4, 8, 12, 16, 20) hours past midnight in UTC. * `0 2 * * *` : once a day at 2 past midnight in UTC. * `0 2 * * 0` : once a week every Sunday at 2 past midnight in UTC. * `0 2 8 * *` : once a month on 8th day at 2 past midnight in UTC.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/sheets.v4.json:2788:"Group dates by day of week, for example Sunday. The days of the week will be translated based on the spreadsheet locale.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/sheets.v4.json:3719:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/sheets.v4.json:3905:"Group dates by day of week, for example Sunday. The days of the week will be translated based on the spreadsheet locale.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/businessprofileperformance.v1.json:291:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/businessprofileperformance.v1.json:494:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/composer.v1.json:1664:"description": "Optional. The maintenance window is the period when Cloud Composer components may undergo maintenance. It is defined so that maintenance is not executed during peak hours or critical time periods. The system will not be under maintenance for every occurrence of this window, but when maintenance is planned, it will be scheduled during the window. The maintenance window period must encompass at least 12 hours per week. This may be split into multiple chunks, each with a size of at least 4 hours. If this value is omitted, the default value for maintenance window is applied. By default, maintenance windows are from 00:00:00 to 04:00:00 (GMT) on Friday, Saturday, and Sunday every week."
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1beta.json:2433:"description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1beta.json:2456:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1beta.json:2497:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/metastore.v1beta.json:2883:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/authorizedbuyersmarketplace.v1alpha.json:2037:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/merchantapi.datasources_v1.json:528:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinessinformation.v1.json:1751:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinessinformation.v1.json:1779:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1beta.json:2468:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1beta.json:3398:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1beta.json:6427:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/dlp.v2.json:7188:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/dlp.v2.json:12866:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/backupdr.v1.json:5903:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/backupdr.v1.json:6151:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/adsense.v2.json:1063:"Week dimension in YYYY-MM-DD format, representing the first day of each week (e.g. \"2010-02-08\"). The first day of the week is determined by the language_code specified in a report generation request (so e.g. this would be a Monday for \"en-GB\" or \"es\", but a Sunday for \"en\" or \"fr-CA\").",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/adsense.v2.json:1436:"Week dimension in YYYY-MM-DD format, representing the first day of each week (e.g. \"2010-02-08\"). The first day of the week is determined by the language_code specified in a report generation request (so e.g. this would be a Monday for \"en-GB\" or \"es\", but a Sunday for \"en\" or \"fr-CA\").",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v4.json:14526:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v4.json:14576:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/looker.v1.json:1361:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/managedidentities.v1alpha1.json:2950:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/composer.v1beta1.json:1676:"description": "Optional. The maintenance window is the period when Cloud Composer components may undergo maintenance. It is defined so that maintenance is not executed during peak hours or critical time periods. The system will not be under maintenance for every occurrence of this window, but when maintenance is planned, it will be scheduled during the window. The maintenance window period must encompass at least 12 hours per week. This may be split into multiple chunks, each with a size of at least 4 hours. If this value is omitted, the default value for maintenance window is applied. By default, maintenance windows are from 00:00:00 to 04:00:00 (GMT) on Friday, Saturday, and Sunday every week."
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v3.json:14489:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v3.json:14539:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1alpha.json:2487:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1alpha.json:3422:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1alpha.json:6451:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/connectors.v1.json:8322:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/vmwareengine.v1.json:5978:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/vmwareengine.v1.json:6366:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/vmwareengine.v1.json:6396:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1beta.json:714:"description": "The cohort selects users whose first touch date is between start date and end date defined in the `dateRange`. This `dateRange` does not specify the full date range of event data that is present in a cohort report. In a cohort report, this `dateRange` is extended by the granularity and offset present in the `cohortsRange`; event data for the extended reporting date range is present in a cohort report. In a cohort request, this `dateRange` is required and the `dateRanges` in the `RunReportRequest` or `RunPivotReportRequest` must be unspecified. This `dateRange` should generally be aligned with the cohort's granularity. If `CohortsRange` uses daily granularity, this `dateRange` can be a single day. If `CohortsRange` uses weekly granularity, this `dateRange` can be aligned to a week boundary, starting at Sunday and ending Saturday. If `CohortsRange` uses monthly granularity, this `dateRange` can be aligned to a month, starting at the first and ending on the last day of the month."
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1beta.json:780:"Weekly granularity. Commonly used if the cohort's `dateRange` is a week in duration (starting on Sunday and ending on Saturday) and the request contains `cohortNthWeek`.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/firestore.v1.json:4177:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1.json:3831:"description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1.json:3854:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/osconfig.v1.json:3895:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v2.json:12877:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/file.v1beta1.json:2656:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/gkebackup.v1.json:2975:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1.json:1714:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1.json:1924:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/container.v1.json:7545:"description": "An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. For example, to have something repeat every weekday, you'd use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To repeat some window daily (equivalent to the DailyMaintenanceWindow): `FREQ=DAILY` For the first weekend of every month: `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies how frequently the window starts. Eg, if you wanted to have a 9-5 UTC-4 window every weekday, you'd use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ``` Windows can span multiple days. Eg, to make the window encompass every weekend from midnight Saturday till the last minute of Sunday UTC: ``` start time = 2019-01-05T00:00:00Z end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA ``` Note the start and end time's specific dates are largely arbitrary except to specify duration of the window and when it first starts. The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/metastore.v1alpha.json:2883:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsreporting.v4.json:254:"description": "This is used for `FIRST_VISIT_DATE` cohort, the cohort selects users whose first visit date is between start date and end date defined in the DateRange. The date ranges should be aligned for cohort requests. If the request contains `ga:cohortNthDay` it should be exactly one day long, if `ga:cohortNthWeek` it should be aligned to the week boundary (starting at Sunday and ending Saturday), and for `ga:cohortNthMonth` the date range should be aligned to the month (starting at the first and ending on the last day of the month). For LTV requests there are no such restrictions. You do not need to supply a date range for the `reportsRequest.dateRanges` field."
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsreporting.v4.json:287:"description": "Enable Life Time Value (LTV). LTV measures lifetime value for users acquired through different channels. Please see: [Cohort Analysis](https://support.google.com/analytics/answer/6074676) and [Lifetime Value](https://support.google.com/analytics/answer/6182550) If the value of lifetimeValue is false: - The metric values are similar to the values in the web interface cohort report. - The cohort definition date ranges must be aligned to the calendar week and month. i.e. while requesting `ga:cohortNthWeek` the `startDate` in the cohort definition should be a Sunday and the `endDate` should be the following Saturday, and for `ga:cohortNthMonth`, the `startDate` should be the 1st of the month and `endDate` should be the last day of the month. When the lifetimeValue is true: - The metric values will correspond to the values in the web interface LifeTime value report. - The Lifetime Value report shows you how user value (Revenue) and engagement (Appviews, Goal Completions, Sessions, and Session Duration) grow during the 90 days after a user is acquired. - The metrics are calculated as a cumulative average per user per the time increment. - The cohort definition date ranges need not be aligned to the calendar week and month boundaries. - The `viewId` must be an [app view ID](https://support.google.com/analytics/answer/2649553#WebVersusAppViews)",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/searchads360.v0.json:292:"Sunday."
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/searchads360.v0.json:1767:"Sunday."
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/searchads360.v0.json:2062:"description": "Week as defined as Monday through Sunday, and represented by the date of Monday. Formatted as yyyy-MM-dd.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinesscalls.v1.json:362:          "description": "Day of the week. Allowed values are Sunday - Saturday.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/mybusinessbusinesscalls.v1.json:381:            "Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/displayvideo.v1.json:11701:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1beta1.json:4912:"description": "Make a snapshot every week e.g. at Monday 04:00, Wednesday 05:20, Sunday 23:50",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1beta1.json:4916:"description": "Set the day or days of the week to make a snapshot. Accepts a comma separated days of the week. Defaults to 'Sunday'.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/metastore.v1.json:2694:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1beta1.json:1869:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1beta1.json:5037:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/places.v1.json:1560:"description": "The periods that this place is open during the week. The periods are in chronological order, in the place-local timezone. An empty (but not absent) value indicates a place that is never open, e.g. because it is closed temporarily for renovations. The starting day of `periods` is NOT fixed and should not be assumed to be Sunday. The API determines the start day based on a variety of factors. For example, for a 24/7 business, the first period may begin on the day of the request. For other businesses, it might be the first day of the week that they are open. NOTE: The ordering of the `periods` array is independent of the ordering of the `weekday_descriptions` array. Do not assume they will begin on the same day.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/places.v1.json:1643:"description": "A day of the week, as an integer in the range 0-6. 0 is Sunday, 1 is Monday, etc.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/authorizedbuyersmarketplace.v1.json:1806:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/connectors.v2.json:2629:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1beta2.json:1770:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/memcache.v1beta2.json:1980:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/contactcenteraiplatform.v1alpha1.json:1334:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/managedidentities.v1beta1.json:2926:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1alpha.json:350:                    "description": "The cohort selects users whose first touch date is between start date and end date defined in the `dateRange`. This `dateRange` does not specify the full date range of event data that is present in a cohort report. In a cohort report, this `dateRange` is extended by the granularity and offset present in the `cohortsRange`; event data for the extended reporting date range is present in a cohort report. In a cohort request, this `dateRange` is required and the `dateRanges` in the `RunReportRequest` or `RunPivotReportRequest` must be unspecified. This `dateRange` should generally be aligned with the cohort's granularity. If `CohortsRange` uses daily granularity, this `dateRange` can be a single day. If `CohortsRange` uses weekly granularity, this `dateRange` can be aligned to a week boundary, starting at Sunday and ending Saturday. If `CohortsRange` uses monthly granularity, this `dateRange` can be aligned to a month, starting at the first and ending on the last day of the month."
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/analyticsdata.v1alpha.json:416:                        "Weekly granularity. Commonly used if the cohort's `dateRange` is a week in duration (starting on Sunday and ending on Saturday) and the request contains `cohortNthWeek`.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/managedidentities.v1.json:2914:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1.json:4720:"description": "Make a snapshot every week e.g. at Monday 04:00, Wednesday 05:20, Sunday 23:50",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/netapp.v1.json:4724:"description": "Set the day or days of the week to make a snapshot. Accepts a comma separated days of the week. Defaults to 'Sunday'.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/adexchangebuyer2.v2beta1.json:4126:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/clouddeploy.v1.json:7283:"description": "Weekly windows. For example, blocking actions every Saturday and Sunday. Another example would be blocking actions every weekday from 5pm to midnight.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/clouddeploy.v1.json:7307:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1.json:2373:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1.json:3262:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/alloydb.v1.json:6262:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1.json:1869:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/redis.v1.json:5030:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/file.v1.json:2264:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/merchantapi.datasources_v1beta.json:528:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/addressvalidation.v1.json:517:"description": "Integer identifying non-delivery days. It can be interrogated using bit flags: 0x40 \u2013 Sunday is a non-delivery day 0x20 \u2013 Monday is a non-delivery day 0x10 \u2013 Tuesday is a non-delivery day 0x08 \u2013 Wednesday is a non-delivery day 0x04 \u2013 Thursday is a non-delivery day 0x02 \u2013 Friday is a non-delivery day 0x01 \u2013 Saturday is a non-delivery day",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/doubleclickbidmanager.v2.json:365:"All days, including the current day, since the most recent Sunday.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/doubleclickbidmanager.v2.json:369:"The previous completed week, beginning from Sunday.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/container.v1beta1.json:8018:"description": "An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. For example, to have something repeat every weekday, you'd use: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR` To repeat some window daily (equivalent to the DailyMaintenanceWindow): `FREQ=DAILY` For the first weekend of every month: `FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU` This specifies how frequently the window starts. Eg, if you wanted to have a 9-5 UTC-4 window every weekday, you'd use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ``` Windows can span multiple days. Eg, to make the window encompass every weekend from midnight Saturday till the last minute of Sunday UTC: ``` start time = 2019-01-05T00:00:00Z end time = 2019-01-07T23:59:00Z recurrence = FREQ=WEEKLY;BYDAY=SA ``` Note the start and end time's specific dates are largely arbitrary except to specify duration of the window and when it first starts. The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.",
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/oracledatabase.v1.json:4024:"Sunday"
backend/venv/lib/python3.13/site-packages/googleapiclient/discovery_cache/documents/oracledatabase.v1.json:4363:"Sunday"
backend/venv/lib/python3.13/site-packages/pygments/lexers/_vbscript_builtins.py:261:    'vbSunday',
backend/venv/lib/python3.13/site-packages/google/type/dayofweek.proto:48:  // Sunday
backend/venv/lib/python3.13/site-packages/numpy/_core/_add_newdocs.py:6464:        A seven-element array indicating which of Monday through Sunday are
backend/venv/lib/python3.13/site-packages/numpy/_core/multiarray.py:1478:        A seven-element array indicating which of Monday through Sunday are
backend/venv/lib/python3.13/site-packages/numpy/_core/multiarray.py:1561:        A seven-element array indicating which of Monday through Sunday are
backend/venv/lib/python3.13/site-packages/numpy/_core/multiarray.py:1648:        A seven-element array indicating which of Monday through Sunday are
backend/venv/lib/python3.13/site-packages/python_dateutil-2.9.0.post0.dist-info/METADATA:124:* Computing of Easter Sunday dates for any given year,
backend/venv/lib/python3.13/site-packages/dateutil/parser/_parser.py:270:                ("Sun", "Sunday")]
backend/venv/lib/python3.13/site-packages/dateutil/rrule.py:396:        Easter Sunday. Passing the offset 0 to byeaster will yield the Easter
backend/venv/lib/python3.13/site-packages/dateutil/rrule.py:397:        Sunday itself. This is an extension to the RFC specification.
backend/venv/lib/python3.13/site-packages/dateutil/easter.py:59:    # j - Weekday for PFM (0=Sunday, etc)
backend/venv/lib/python3.13/site-packages/dateutil/easter.py:60:    # p - Number of days from March 21 to Sunday on or before PFM
backend/venv/lib/python3.13/site-packages/dateutil/tz/tz.py:910:        specify, for example, that DST starts at 2AM on the 2nd Sunday in
backend/venv/lib/python3.13/site-packages/dateutil/tz/tz.py:916:        value is 2 AM on the first Sunday in April.
backend/venv/lib/python3.13/site-packages/dateutil/tz/win.py:238:         self._stddayofweek,   # Sunday = 0
backend/venv/lib/python3.13/site-packages/dateutil/tz/win.py:244:         self._dstdayofweek,   # Sunday = 0
backend/venv/lib/python3.13/site-packages/dateutil/tz/win.py:334:    """ dayofweek == 0 means Sunday, whichweek 5 means last instance """
backend/.env.example:90:# Sunday game configuration
