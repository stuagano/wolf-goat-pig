## Simulation + Sunday Game Updated Notes

### **Simulation Mode**

**Core Implementation:**
- Main simulation class: `backend/app/wolf_goat_pig_simulation.py:1-100` (WolfGoatPigSimulation)
- Timeline enhancements: `backend/app/simulation_timeline_enhancements.py` 
- Post-hole analytics: `backend/app/post_hole_analytics.py`

**API Routes (backend/app/main.py):**
- `/simulation/setup`:4273 - Initialize new simulation
- `/simulation/play-next-shot`:4394 - Simulate next shot
- `/simulation/play-hole`:4466 - Process hole decisions
- `/simulation/test/seed-state`:4606 - Test seeding helper (ENABLE_TEST_ENDPOINTS required)
- `/simulation/state`:4727 - Get current state
- `/simulation/available-personalities`:4741 - List AI personalities  
- `/simulation/suggested-opponents`:4821 - Get opponent configs
- `/simulation/shot-probabilities`:4868,4917 - GET/POST shot probability calculations
- `/simulation/betting-decision`:4949 - Process betting decisions
- `/simulation/post-hole-analytics/{hole_number}`:5048 - Post-hole analytics
- `/simulation/turn-based-state`:5157 - Turn-based game state
- `/simulation/timeline`:5295 - Get timeline events
- `/simulation/poker-state`:5323 - Poker betting state

**Key Changes:**
- ✅ SimulationEngine helper **REMOVED** from `tests/backend/helpers/simulation_engine.py` (file deleted)
- ✅ Integration tests updated to use WolfGoatPigSimulation directly: `tests/backend/test_integration_scenarios.py:12`
- ✅ All tests passing (8/8 integration tests)
- ✅ New conftest.py added: `tests/backend/conftest.py:1-23` - Configures backend imports and test endpoints

**Configuration:**
- Test endpoints controlled by ENABLE_TEST_ENDPOINTS env var: `backend/app/main.py:141`
- Database initialization moved to startup event handler (per simulation-fixes.md:12-21)

---

### **Sunday Game Mode**

**Core Implementation:**
- Service: `backend/app/services/sunday_game_service.py:1-100`
- Team formation: `backend/app/services/team_formation_service.py`
- Tests: `backend/tests/test_sunday_game_service.py:1-74`

**API Route:**
- `/signups/{date}/sunday-game/pairings`:6153 - Generate Sunday game pairings

**Key Features:**
- Deterministic seeding via SUNDAY_GAME_RANDOM_SEED env var: `sunday_game_service.py:12`
- Seed resolution logic: `sunday_game_service.py:15-33` (_resolve_seed function)
- RNG builder with salt support: `sunday_game_service.py:35-41` (_build_rng function)
- Main pairing generator: `sunday_game_service.py:44-99` (generate_sunday_pairings)
- Handles insufficient players gracefully: `sunday_game_service.py:51-61`

**Test Coverage:**
- ✅ Deterministic seeding: `test_sunday_game_service.py:33-39`
- ✅ Explicit seed respect: `test_sunday_game_service.py:42-51`
- ✅ Environment seed usage: `test_sunday_game_service.py:53-64`
- ✅ Insufficient player handling: `test_sunday_game_service.py:66-74`

---

### **Open Risks/Notes**

1. **Test endpoints security**: Controlled by ENABLE_TEST_ENDPOINTS, defaults to "true" in dev: `main.py:141`
2. **Missing SimulationEngine**: Helper class removed, tests refactored to use WolfGoatPigSimulation directly
3. **Database initialization**: Moved to startup handler, may continue even if DB fails in dev mode
4. **Sunday game randomness**: Can be controlled via SUNDAY_GAME_RANDOM_SEED env var for testing
5. **Frontend status**: Unverified per `docs/status/current-state.md:27-30`
6. **Python version**: Backend expects 3.12.0 via Pyenv but may not be installed: `current-state.md:36`

**All tests currently passing** - No failing tests in recent reports.
