🎯 ADK auto-sync aliases loaded!
💡 Use 'sync' to sync with upstream anytime
💡 Use 'synccheck' to check sync status

> wgp-frontend@0.1.1 test
> react-scripts test --watchAll=false

FAIL src/components/tutorial/__tests__/hooks.test.js
  ● useTutorialProgress Hook › Analytics and Tracking › identifies learning patterns

    ReferenceError: result is not defined

      302 |
      303 |     test('identifies learning patterns', () => {
    > 304 |       const analytics = result.current.getAnalytics();
          |                         ^
      305 |       
      306 |       expect(analytics.learningVelocity).toBeDefined();
      307 |       expect(analytics.strugglingAreas).toBeInstanceOf(Array);

      at Object.<anonymous> (src/components/tutorial/__tests__/hooks.test.js:304:25)

  ● Hook Integration Tests › tutorial progress and player profile sync correctly

    TypeError: Cannot read properties of undefined (reading 'progress')

      730 |
      731 |     // Both hooks should reflect consistent state
    > 732 |     expect(progressResult.current.progress.currentModule).toBe('golf-basics');
          |                                   ^
      733 |     expect(profileResult.current.profile.tutorialProgress.currentModule).toBe('golf-basics');
      734 |   });
      735 |

      at Object.<anonymous> (src/components/tutorial/__tests__/hooks.test.js:732:35)

  ● Hook Integration Tests › odds calculation updates trigger progress tracking

    TypeError: Cannot read properties of undefined (reading 'calculateForTutorial')

      740 |     // Simulate learning interaction
      741 |     await act(async () => {
    > 742 |       oddsResult.current.calculateForTutorial({
          |                          ^
      743 |         players: [{ id: 'test', handicap: 12 }]
      744 |       });
      745 |     });

      at src/components/tutorial/__tests__/hooks.test.js:742:26
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (src/components/tutorial/__tests__/hooks.test.js:741:14)

  ● Hook Integration Tests › all hooks handle concurrent updates correctly

    TypeError: Cannot read properties of undefined (reading 'completeCurrentStep')

      756 |     // Simulate concurrent updates
      757 |     await act(async () => {
    > 758 |       progressResult.current.completeCurrentStep();
          |                              ^
      759 |       profileResult.current.updatePreferences({ showHints: false });
      760 |       oddsResult.current.resetCalculation();
      761 |     });

      at src/components/tutorial/__tests__/hooks.test.js:758:30
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (src/components/tutorial/__tests__/hooks.test.js:757:14)

FAIL src/components/tutorial/__tests__/InteractiveElement.test.js
  ● Console

    console.error
      An update to InteractiveElement inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      77 |       onMouseEnter: () => !disabled && setIsHovered(true),
      78 |       onMouseLeave: () => setIsHovered(false),
    > 79 |       onFocus: () => setIsFocused(true),
         |                      ^
      80 |       onBlur: () => setIsFocused(false)
      81 |     };
      82 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setIsFocused (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at onFocus (src/components/tutorial/__tests__/InteractiveElement.test.js:79:22)
      at executeDispatch (node_modules/react-dom/cjs/react-dom-client.development.js:16368:9)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom-client.development.js:16418:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:17016:9
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom-client.development.js:3262:40)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom-client.development.js:16572:7)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20658:11)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20626:11)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
      at Object.exports.fireFocusEventWithTargetAdjustment (node_modules/jsdom/lib/jsdom/living/helpers/focusing.js:103:10)
      at HTMLButtonElementImpl.focus (node_modules/jsdom/lib/jsdom/living/nodes/HTMLOrSVGElement-impl.js:69:14)
      at HTMLButtonElement.focus (node_modules/jsdom/lib/jsdom/living/generated/HTMLElement.js:119:34)
      at HTMLButtonElement.focus (node_modules/@testing-library/user-event/dist/cjs/document/patchFocus.js:35:26)
      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:319:15)

    console.error
      An update to InteractiveElement inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      77 |       onMouseEnter: () => !disabled && setIsHovered(true),
      78 |       onMouseLeave: () => setIsHovered(false),
    > 79 |       onFocus: () => setIsFocused(true),
         |                      ^
      80 |       onBlur: () => setIsFocused(false)
      81 |     };
      82 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setIsFocused (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at onFocus (src/components/tutorial/__tests__/InteractiveElement.test.js:79:22)
      at executeDispatch (node_modules/react-dom/cjs/react-dom-client.development.js:16368:9)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom-client.development.js:16418:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:17016:9
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom-client.development.js:3262:40)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom-client.development.js:16572:7)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20658:11)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20626:11)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
      at Object.exports.fireFocusEventWithTargetAdjustment (node_modules/jsdom/lib/jsdom/living/helpers/focusing.js:103:10)
      at HTMLButtonElementImpl.focus (node_modules/jsdom/lib/jsdom/living/nodes/HTMLOrSVGElement-impl.js:69:14)
      at HTMLButtonElement.focus (node_modules/jsdom/lib/jsdom/living/generated/HTMLElement.js:119:34)
      at HTMLButtonElement.focus (node_modules/@testing-library/user-event/dist/cjs/document/patchFocus.js:35:26)
      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:334:15)

    console.error
      An update to InteractiveElement inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      77 |       onMouseEnter: () => !disabled && setIsHovered(true),
      78 |       onMouseLeave: () => setIsHovered(false),
    > 79 |       onFocus: () => setIsFocused(true),
         |                      ^
      80 |       onBlur: () => setIsFocused(false)
      81 |     };
      82 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setIsFocused (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at onFocus (src/components/tutorial/__tests__/InteractiveElement.test.js:79:22)
      at executeDispatch (node_modules/react-dom/cjs/react-dom-client.development.js:16368:9)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom-client.development.js:16418:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:17016:9
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom-client.development.js:3262:40)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom-client.development.js:16572:7)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20658:11)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20626:11)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
      at Object.exports.fireFocusEventWithTargetAdjustment (node_modules/jsdom/lib/jsdom/living/helpers/focusing.js:103:10)
      at HTMLButtonElementImpl.focus (node_modules/jsdom/lib/jsdom/living/nodes/HTMLOrSVGElement-impl.js:69:14)
      at HTMLButtonElement.focus (node_modules/jsdom/lib/jsdom/living/generated/HTMLElement.js:119:34)
      at HTMLButtonElement.focus (node_modules/@testing-library/user-event/dist/cjs/document/patchFocus.js:35:26)
      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:349:15)

    console.error
      An update to InteractiveElement inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      77 |       onMouseEnter: () => !disabled && setIsHovered(true),
      78 |       onMouseLeave: () => setIsHovered(false),
    > 79 |       onFocus: () => setIsFocused(true),
         |                      ^
      80 |       onBlur: () => setIsFocused(false)
      81 |     };
      82 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setIsFocused (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at onFocus (src/components/tutorial/__tests__/InteractiveElement.test.js:79:22)
      at executeDispatch (node_modules/react-dom/cjs/react-dom-client.development.js:16368:9)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom-client.development.js:16418:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:17016:9
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom-client.development.js:3262:40)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom-client.development.js:16572:7)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20658:11)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20626:11)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
      at Object.exports.fireFocusEventWithTargetAdjustment (node_modules/jsdom/lib/jsdom/living/helpers/focusing.js:103:10)
      at HTMLButtonElementImpl.focus (node_modules/jsdom/lib/jsdom/living/nodes/HTMLOrSVGElement-impl.js:69:14)
      at HTMLButtonElement.focus (node_modules/jsdom/lib/jsdom/living/generated/HTMLElement.js:119:34)
      at HTMLButtonElement.focus (node_modules/@testing-library/user-event/dist/cjs/document/patchFocus.js:35:26)
      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:384:15)

    console.error
      An update to InteractiveElement inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      77 |       onMouseEnter: () => !disabled && setIsHovered(true),
      78 |       onMouseLeave: () => setIsHovered(false),
    > 79 |       onFocus: () => setIsFocused(true),
         |                      ^
      80 |       onBlur: () => setIsFocused(false)
      81 |     };
      82 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setIsFocused (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at onFocus (src/components/tutorial/__tests__/InteractiveElement.test.js:79:22)
      at executeDispatch (node_modules/react-dom/cjs/react-dom-client.development.js:16368:9)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom-client.development.js:16418:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:17016:9
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom-client.development.js:3262:40)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom-client.development.js:16572:7)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20658:11)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20626:11)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
      at Object.exports.fireFocusEventWithTargetAdjustment (node_modules/jsdom/lib/jsdom/living/helpers/focusing.js:103:10)
      at HTMLButtonElementImpl.focus (node_modules/jsdom/lib/jsdom/living/nodes/HTMLOrSVGElement-impl.js:69:14)
      at HTMLButtonElement.focus (node_modules/jsdom/lib/jsdom/living/generated/HTMLElement.js:119:34)
      at HTMLButtonElement.focus (node_modules/@testing-library/user-event/dist/cjs/document/patchFocus.js:35:26)
      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:528:15)

    console.error
      An update to InteractiveElement inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      77 |       onMouseEnter: () => !disabled && setIsHovered(true),
      78 |       onMouseLeave: () => setIsHovered(false),
    > 79 |       onFocus: () => setIsFocused(true),
         |                      ^
      80 |       onBlur: () => setIsFocused(false)
      81 |     };
      82 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setIsFocused (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at onFocus (src/components/tutorial/__tests__/InteractiveElement.test.js:79:22)
      at executeDispatch (node_modules/react-dom/cjs/react-dom-client.development.js:16368:9)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at processDispatchQueue (node_modules/react-dom/cjs/react-dom-client.development.js:16418:19)
      at node_modules/react-dom/cjs/react-dom-client.development.js:17016:9
      at batchedUpdates$1 (node_modules/react-dom/cjs/react-dom-client.development.js:3262:40)
      at dispatchEventForPluginEventSystem (node_modules/react-dom/cjs/react-dom-client.development.js:16572:7)
      at dispatchEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20658:11)
      at dispatchDiscreteEvent (node_modules/react-dom/cjs/react-dom-client.development.js:20626:11)
      at HTMLDivElement.callTheUserObjectsOperation (node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
      at HTMLButtonElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
      at Object.exports.fireFocusEventWithTargetAdjustment (node_modules/jsdom/lib/jsdom/living/helpers/focusing.js:103:10)
      at HTMLButtonElementImpl.focus (node_modules/jsdom/lib/jsdom/living/nodes/HTMLOrSVGElement-impl.js:69:14)
      at HTMLButtonElement.focus (node_modules/jsdom/lib/jsdom/living/generated/HTMLElement.js:119:34)
      at HTMLButtonElement.focus (node_modules/@testing-library/user-event/dist/cjs/document/patchFocus.js:35:26)
      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:594:15)

  ● InteractiveElement › Keyboard Navigation › prevents default behavior for Enter and Space

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      371 |       });
      372 |
    > 373 |       expect(preventDefault).toHaveBeenCalled();
          |                              ^
      374 |     });
      375 |
      376 |     test('does not handle keyboard when disabled', async () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:373:30)

  ● InteractiveElement › Accessibility Features › handles focus and blur for visual feedback

    expect(element).toHaveStyle()

    - Expected

    - box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
    + box-shadow: none;

      527 |       // Focus
      528 |       element.focus();
    > 529 |       expect(element).toHaveStyle('box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25)');
          |                       ^
      530 |
      531 |       // Blur
      532 |       element.blur();

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:529:23)

  ● InteractiveElement › Tooltip Functionality › shows tooltip on focus

    expect(element).toHaveStyle()

    - Expected

    - visibility: visible;
    + visibility: hidden;

      593 |       
      594 |       element.focus();
    > 595 |       expect(tooltip).toHaveStyle('visibility: visible');
          |                       ^
      596 |       
      597 |       element.blur();
      598 |       expect(tooltip).toHaveStyle('visibility: hidden');

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:595:23)

  ● InteractiveElement › Color and Theming › applies different background colors for different states

    expect(element).toHaveStyle()

    - Expected

    - backgroundColor: rgb(212, 237, 218);

      674 |
      675 |       element = screen.getByTestId('interactive-element');
    > 676 |       expect(element).toHaveStyle('backgroundColor: #d4edda');
          |                       ^
      677 |     });
      678 |
      679 |     test('applies different border colors for different states', () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:676:23)

  ● InteractiveElement › Color and Theming › applies different border colors for different states

    expect(element).toHaveStyle()

    - Expected

    - border: 2px solid #28a745;
    + border: 2px solid #dee2e6;

      705 |
      706 |       element = screen.getByTestId('interactive-element');
    > 707 |       expect(element).toHaveStyle('border: 2px solid #28a745');
          |                       ^
      708 |     });
      709 |   });
      710 |

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:707:23)

  ● InteractiveElement › Custom Props Forwarding › forwards custom props to underlying element

    expect(element).toHaveAttribute("data-custom", "custom-value") // element.getAttribute("data-custom") === "custom-value"

    Expected the element to have attribute:
      data-custom="custom-value"
    Received:
      null

      779 |
      780 |       const element = screen.getByTestId('interactive-element');
    > 781 |       expect(element).toHaveAttribute('data-custom', 'custom-value');
          |                       ^
      782 |       expect(element).toHaveAttribute('id', 'custom-id');
      783 |     });
      784 |

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:781:23)

FAIL src/components/signup/__tests__/AllPlayersAvailability.test.js
  ● Console

    console.error
      Error loading all availability: Error: Failed to load availability data
          at Object.<anonymous> (/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/signup/__tests__/AllPlayersAvailability.test.js:159:33)
          at Promise.then.completed (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:391:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:316:10)
          at _callCircusTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:218:40)
          at _runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:155:3)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:66:9)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:60:9)
          at run (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:25:3)
          at runAndTransformResultsToJestFormat (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
          at jestAdapter (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
          at runTestInternal (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:389:16)
          at runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:475:34)
          at Object.worker (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/testWorker.js:133:12)

      29 |       setError(null);
      30 |     } catch (err) {
    > 31 |       console.error('Error loading all availability:', err);
         |               ^
      32 |       setError(err.message);
      33 |       setPlayersAvailability([]);
      34 |     } finally {

      at loadAllAvailability (src/components/signup/AllPlayersAvailability.js:31:15)

  ● AllPlayersAvailability › switches to day detail view when clicking day tab

    TestingLibraryElementError: Unable to find an element with the text: 🧑 John Doe. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1200px; margin: 0px auto;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-bottom: 30px;"[39m
          [36m>[39m
            [36m<h2[39m
              [33mstyle[39m=[32m"color: rgb(51, 51, 51); margin-bottom: 10px;"[39m
            [36m>[39m
              [0m👥 Players' Availability Calendar[0m
            [36m</h2>[39m
            [36m<p[39m
              [33mstyle[39m=[32m"color: rgb(108, 117, 125); font-size: 14px;"[39m
            [36m>[39m
              [0mView individual player schedules and find who's available when you are[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: flex; gap: 8px; margin-bottom: 30px; overflow-x: auto; padding-bottom: 10px;"[39m
          [36m>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; background: rgb(248, 249, 250);"[39m
            [36m>[39m
              [0mAll Days[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; color: white; border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative; background: rgb(0, 123, 255);"[39m
            [36m>[39m
              [0mMonday[0m
              [36m<span[39m
                [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 6px; color: white; border-radius: 10px; font-size: 12px; background: rgba(255, 255, 255, 0.3);"[39m
              [36m>[39m
                [0m2[0m
              [36m</span>[39m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mTuesday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mWednesday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mThursday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mFriday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mSaturday[0m
              [36m<span[39m
                [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 6px; background: rgb(40, 167, 69); color: white; border-radius: 10px; font-size: 12px;"[39m
              [36m>[39m
                [0m1[0m
              [36m</span>[39m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mSunday[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m""[39m
          [36m>[39m
            [36m<h3[39m
              [33mstyle[39m=[32m"color: rgb(73, 80, 87); font-size: 20px; margin-bottom: 20px; display: flex; align-items: center; gap: 10px;"[39m
            [36m>[39m
              [0mMonday[0m
              [0m Availability[0m
              [36m<span[39m
                [33mstyle[39m=[32m"padding: 4px 12px; background: rgb(40, 167, 69); color: white; border-radius: 12px; font-size: 14px; font-weight: normal;"[39m
              [36m>[39m
                [0m2[0m
                [0m players available[0m
              [36m</span>[39m
            [36m</h3>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); gap: 16px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"border: 1px solid #dee2e6; border-radius: 8px; padding: 16px; background: rgb(255, 255, 255);"[39m
              [36m>[39m
                [36m<h5[39m
                  [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 16px; font-weight: 600; margin-bottom: 8px;"[39m
                [36m>[39m
                  [0mJohn Doe[0m
                [36m</h5>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125); margin-bottom: 4px;"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mTime:[0m
                  [36m</strong>[39m
                  [0m [0m
                  [0m9:00 AM - 5:00 PM[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mNotes:[0m
                  [36m</strong>[39m
                  [0m [0m
                  [0mFlexible schedule[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 12px; color: rgb(173, 181, 189); margin-top: 8px;"[39m
                [36m>[39m
                  [0mjohn@test.com[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"border: 1px solid #dee2e6; border-radius: 8px; padding: 16px; background: rgb(255, 255, 255);"[39m
              [36m>[39m
                [36m<h5[39m
                  [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 16px; font-weight: 600; margin-bottom: 8px;"[39m
                [36m>[39m
                  [0mJane Smith[0m
                [36m</h5>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125); margin-bottom: 4px;"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mTime:[0m
                  [36m</strong>[39m
                  [0m [0m
                  [0m10:00 AM - 3:00 PM[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 12px; color: rgb(173, 181, 189); margin-top: 8px;"[39m
                [36m>[39m
                  [0mjane@test.com[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-top: 40px; padding: 20px; background: rgb(232, 245, 232); border-radius: 8px; border: 1px solid #c3e6c3;"[39m
          [36m>[39m
            [36m<h4[39m
              [33mstyle[39m=[32m"color: rgb(46, 125, 50); margin-bottom: 16px;"[39m
            [36m>[39m
              [0m📊 Weekly Availability Overview[0m
            [36m</h4>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 16px;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 24px; font-weight: bold; color: rgb(0, 123, 255);"[39m
                [36m>[39m
                  [0m2[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
                [36m>[39m
                  [0mTotal Players[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 24px; font-weight: bold; color: rgb(40, 167, 69);"[39m
                [36m>[39m
                  [0m2[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
                [36m>[39m
                  [0mMost Available (Single Day)[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 24px; font-weight: bold; color: rgb(255, 193, 7);"[39m
                [36m>[39m
                  [0mMonday[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
                [36m>[39m
                  [0mMost Popular Day[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      86 |     expect(screen.getByText('Monday Availability')).toBeInTheDocument();
      87 |     expect(screen.getByText('2 players available')).toBeInTheDocument();
    > 88 |     expect(screen.getByText('🧑 John Doe')).toBeInTheDocument();
         |                   ^
      89 |     expect(screen.getByText('🧑 Jane Smith')).toBeInTheDocument();
      90 |   });
      91 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/signup/__tests__/AllPlayersAvailability.test.js:88:19)

  ● AllPlayersAvailability › displays player time ranges correctly

    TestingLibraryElementError: Unable to find an element with the text: 9:00 AM - 5:00 PM. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1200px; margin: 0px auto;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-bottom: 30px;"[39m
          [36m>[39m
            [36m<h2[39m
              [33mstyle[39m=[32m"color: rgb(51, 51, 51); margin-bottom: 10px;"[39m
            [36m>[39m
              [0m👥 Players' Availability Calendar[0m
            [36m</h2>[39m
            [36m<p[39m
              [33mstyle[39m=[32m"color: rgb(108, 117, 125); font-size: 14px;"[39m
            [36m>[39m
              [0mView individual player schedules and find who's available when you are[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: flex; gap: 8px; margin-bottom: 30px; overflow-x: auto; padding-bottom: 10px;"[39m
          [36m>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(0, 123, 255); color: white; border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap;"[39m
            [36m>[39m
              [0mAll Days[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mMonday[0m
              [36m<span[39m
                [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 6px; background: rgb(40, 167, 69); color: white; border-radius: 10px; font-size: 12px;"[39m
              [36m>[39m
                [0m2[0m
              [36m</span>[39m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mTuesday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mWednesday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mThursday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mFriday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mSaturday[0m
              [36m<span[39m
                [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 6px; background: rgb(40, 167, 69); color: white; border-radius: 10px; font-size: 12px;"[39m
              [36m>[39m
                [0m1[0m
              [36m</span>[39m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mSunday[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"border: 1px solid #dee2e6; border-radius: 8px; padding: 16px; background: rgb(255, 255, 255);"[39m
            [36m>[39m
              [36m<h4[39m
                [33mstyle[39m=[32m"color: rgb(73, 80, 87); font-size: 16px; font-weight: 600; margin-bottom: 12px; display: flex; justify-content: space-between; align-items: center;"[39m
              [36m>[39m
                [0mMonday[0m
                [36m<span[39m
                  [33mstyle[39m=[32m"padding: 2px 8px; background: rgb(40, 167, 69); color: white; border-radius: 12px; font-size: 12px; font-weight: normal;"[39m
                [36m>[39m
                  [0m2[0m
                  [0m available[0m
                [36m</span>[39m
              [36m</h4>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 8px;"[39m
              [36m>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"padding: 8px; background: rgb(240, 248, 255); border-radius: 4px; font-size: 14px; border-left: 3px solid #4CAF50;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"font-weight: 500; color: rgb(26, 84, 144);"[39m
                  [36m>[39m
                    [0m👤 [0m
                    [0mJohn Doe[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"font-size: 12px; color: rgb(90, 108, 125); margin-top: 2px;"[39m
                  [36m>[39m
                    [0m⏰ [0m
                    [0m9:00 AM - 5:00 PM[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"font-size: 12px; color: rgb(122, 138, 154); margin-top: 2px; font-style: italic;"[39m
                  [36m>[39m
                    [0m💬 [0m
                    [0mFlexible schedule[0m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"padding: 8px; background: rgb(240, 248, 255); border-radius: 4px; font-size: 14px; border-left: 3px solid #4CAF50;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"font-weight: 500; color: rgb(26, 84, 144);"[39m
                  [36m>[39m
                    [0m👤 [0m
                    [0mJane Smith[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"font-size: 12px; color: rgb(90, 108, 125); margin-top: 2px;"[39m
                  [36m>[39m
                    [0m⏰ [0m
                    [0m10:00 AM - 3:00 PM[0m
                  [36m</div>[39m
                [36m</div>[39m
    ...

      121 |
      122 |     // Check time formatting
    > 123 |     expect(screen.getByText('9:00 AM - 5:00 PM')).toBeInTheDocument();
          |                   ^
      124 |     expect(screen.getByText('10:00 AM - 3:00 PM')).toBeInTheDocument();
      125 |     expect(screen.getByText('8:00 AM - 12:00 PM')).toBeInTheDocument();
      126 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/signup/__tests__/AllPlayersAvailability.test.js:123:19)

FAIL src/components/ui/__tests__/UIComponents.test.js
  ● Card Component › applies variant styles

    expect(element).toHaveStyle()

    - Expected

    - boxShadow: 0 4px 6px rgba(0, 0, 0, 0.1);

      267 |
      268 |     const card = screen.getByTestId('card');
    > 269 |     expect(card).toHaveStyle({
          |                  ^
      270 |       boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'
      271 |     });
      272 |   });

      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:269:18)

  ● Card Component › applies outlined variant

    expect(element).toHaveStyle()

    - Expected

      border: 2px solid #dee2e6;
    - boxShadow: none;

      276 |
      277 |     const card = screen.getByTestId('card');
    > 278 |     expect(card).toHaveStyle({
          |                  ^
      279 |       border: '2px solid #dee2e6',
      280 |       boxShadow: 'none'
      281 |     });

      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:278:18)

  ● Input Component › renders with label

    TestingLibraryElementError: Found a label with the text of: Username, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<label[39m
            [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
          [36m>[39m
            [0mUsername[0m
          [36m</label>[39m
          [36m<input[39m
            [33mplaceholder[39m=[32m"Enter username"[39m
            [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; transition: border-color 0.2s ease;"[39m
            [33mtype[39m=[32m"text"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      326 |     render(<Input label="Username" placeholder="Enter username" />);
      327 |
    > 328 |     expect(screen.getByLabelText('Username')).toBeInTheDocument();
          |                   ^
      329 |     expect(screen.getByText('Username')).toBeInTheDocument();
      330 |   });
      331 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:108:40)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByLabelText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:328:19)

  ● Select Component › renders with label

    TestingLibraryElementError: Found a label with the text of: Country, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<label[39m
            [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
          [36m>[39m
            [0mCountry[0m
          [36m</label>[39m
          [36m<select[39m
            [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; cursor: pointer;"[39m
          [36m>[39m
            [36m<option[39m
              [33mdisabled[39m=[32m""[39m
              [33mvalue[39m=[32m""[39m
            [36m>[39m
              [0mSelect an option[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"USA"[39m
            [36m>[39m
              [0mUSA[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"Canada"[39m
            [36m>[39m
              [0mCanada[0m
            [36m</option>[39m
          [36m</select>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      450 |     render(<Select label="Country" options={['USA', 'Canada']} />);
      451 |
    > 452 |     expect(screen.getByLabelText('Country')).toBeInTheDocument();
          |                   ^
      453 |   });
      454 |
      455 |   it('shows required indicator', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:108:40)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByLabelText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:452:19)

  ● UI Components Integration › components work together in a form

    TestingLibraryElementError: Found a label with the text of: Name*, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"background-color: rgb(255, 255, 255); border: 1px solid #dee2e6; border-radius: 8px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); padding: 16px;"[39m
        [36m>[39m
          [36m<form>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
              [36m>[39m
                [0mName[0m
                [36m<span[39m
                  [33mstyle[39m=[32m"color: rgb(220, 53, 69);"[39m
                [36m>[39m
                  [0m*[0m
                [36m</span>[39m
              [36m</label>[39m
              [36m<input[39m
                [33mrequired[39m=[32m""[39m
                [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; transition: border-color 0.2s ease;"[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
            [36m</div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
              [36m>[39m
                [0mEmail[0m
                [36m<span[39m
                  [33mstyle[39m=[32m"color: rgb(220, 53, 69);"[39m
                [36m>[39m
                  [0m*[0m
                [36m</span>[39m
              [36m</label>[39m
              [36m<input[39m
                [33mrequired[39m=[32m""[39m
                [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; transition: border-color 0.2s ease;"[39m
                [33mtype[39m=[32m"email"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
            [36m</div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
              [36m>[39m
                [0mCountry[0m
                [36m<span[39m
                  [33mstyle[39m=[32m"color: rgb(220, 53, 69);"[39m
                [36m>[39m
                  [0m*[0m
                [36m</span>[39m
              [36m</label>[39m
              [36m<select[39m
                [33mrequired[39m=[32m""[39m
                [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; cursor: pointer;"[39m
              [36m>[39m
                [36m<option[39m
                  [33mdisabled[39m=[32m""[39m
                  [33mvalue[39m=[32m""[39m
                [36m>[39m
                  [0mSelect an option[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"USA"[39m
                [36m>[39m
                  [0mUSA[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"Canada"[39m
                [36m>[39m
                  [0mCanada[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"UK"[39m
                [36m>[39m
                  [0mUK[0m
                [36m</option>[39m
              [36m</select>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [0mSubmit[0m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      577 |
      578 |     // Fill out form
    > 579 |     await user.type(screen.getByLabelText('Name*'), 'John Doe');
          |                            ^
      580 |     await user.type(screen.getByLabelText('Email*'), 'john@example.com');
      581 |     await user.selectOptions(screen.getByLabelText('Country*'), 'USA');
      582 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:108:40)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByLabelText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:579:28)

  ● UI Components Integration › maintains accessibility across components

    TestingLibraryElementError: Found a label with the text of: Username*, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"background-color: rgb(255, 255, 255); border: 1px solid #dee2e6; border-radius: 8px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); padding: 16px;"[39m
        [36m>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
            [36m>[39m
              [0mUsername[0m
              [36m<span[39m
                [33mstyle[39m=[32m"color: rgb(220, 53, 69);"[39m
              [36m>[39m
                [0m*[0m
              [36m</span>[39m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"username-help"[39m
              [33mrequired[39m=[32m""[39m
              [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; transition: border-color 0.2s ease;"[39m
              [33mtype[39m=[32m"text"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mid[39m=[32m"username-help"[39m
          [36m>[39m
            [0mEnter your username[0m
          [36m</div>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
            [36m>[39m
              [0mRole[0m
            [36m</label>[39m
            [36m<select[39m
              [33maria-describedby[39m=[32m"role-help"[39m
              [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; cursor: pointer;"[39m
            [36m>[39m
              [36m<option[39m
                [33mdisabled[39m=[32m""[39m
                [33mvalue[39m=[32m""[39m
              [36m>[39m
                [0mSelect an option[0m
              [36m</option>[39m
              [36m<option[39m
                [33mvalue[39m=[32m"Admin"[39m
              [36m>[39m
                [0mAdmin[0m
              [36m</option>[39m
              [36m<option[39m
                [33mvalue[39m=[32m"User"[39m
              [36m>[39m
                [0mUser[0m
              [36m</option>[39m
            [36m</select>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mid[39m=[32m"role-help"[39m
          [36m>[39m
            [0mSelect your role[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      601 |     );
      602 |
    > 603 |     const input = screen.getByLabelText('Username*');
          |                          ^
      604 |     expect(input).toHaveAttribute('aria-describedby', 'username-help');
      605 |
      606 |     const select = screen.getByLabelText('Role');

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:108:40)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByLabelText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:603:26)

FAIL src/components/tutorial/__tests__/TutorialSystem.test.js
  ● TutorialSystem › Welcome Screen › shows welcome screen when tutorial is not active

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:266:13)

  ● TutorialSystem › Welcome Screen › starts tutorial when Start Tutorial button is clicked

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:277:13)

  ● TutorialSystem › Welcome Screen › resumes tutorial when Resume button is clicked

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:293:13)

  ● TutorialSystem › Welcome Screen › disables resume button when no saved progress

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:308:13)

  ● TutorialSystem › Welcome Screen › exits tutorial when Skip button is clicked

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:317:13)

  ● TutorialSystem › Active Tutorial Interface › displays module navigation with correct state

    expect(element).toBeDisabled()

    Received element is not disabled:
      <button aria-label="Go to previous module" style="padding: 8px 16px; border-radius: 4px; cursor: pointer; background-color: rgb(0, 123, 255); color: rgb(255, 255, 255); font-size: 14px;" />

      363 |       const moduleInfo = screen.getByRole('status');
      364 |       
    > 365 |       expect(prevButton).toBeDisabled(); // First module
          |                          ^
      366 |       expect(nextButton).not.toBeDisabled();
      367 |       expect(moduleInfo).toHaveTextContent('Module 1 of 7');
      368 |     });

      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:365:26)

  ● TutorialSystem › Keyboard Navigation › handles arrow key navigation

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      419 |       // Right arrow for next step
      420 |       fireEvent.keyDown(window, { key: 'ArrowRight' });
    > 421 |       expect(mockTutorial.nextStep).toHaveBeenCalled();
          |                                     ^
      422 |       
      423 |       // Left arrow for previous step
      424 |       fireEvent.keyDown(window, { key: 'ArrowLeft' });

      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:421:37)

  ● TutorialSystem › Keyboard Navigation › handles escape key for overlay

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      440 |       
      441 |       fireEvent.keyDown(window, { key: 'Escape' });
    > 442 |       expect(mockTutorial.toggleOverlay).toHaveBeenCalled();
          |                                          ^
      443 |     });
      444 |
      445 |     test('handles Ctrl+H for hints toggle', () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:442:42)

  ● TutorialSystem › Keyboard Navigation › handles Ctrl+H for hints toggle

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      447 |       
      448 |       fireEvent.keyDown(window, { key: 'h', ctrlKey: true });
    > 449 |       expect(mockTutorial.toggleHints).toHaveBeenCalled();
          |                                        ^
      450 |     });
      451 |
      452 |     test('ignores keyboard shortcuts when tutorial is not active', () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:449:40)

  ● TutorialSystem › Keyboard Navigation › ignores keyboard shortcuts when tutorial is not active

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:455:13)

  ● TutorialSystem › Accessibility › has live regions for dynamic content

    expect(element).toHaveAttribute("aria-live", "polite") // element.getAttribute("aria-live") === "polite"

    Expected the element to have attribute:
      aria-live="polite"
    Received:
      null

      649 |       
      650 |       const moduleContainer = screen.getByLabelText('Tutorial content');
    > 651 |       expect(moduleContainer).toHaveAttribute('aria-live', 'polite');
          |                               ^
      652 |       expect(moduleContainer).toHaveAttribute('aria-atomic', 'false');
      653 |       
      654 |       const statusInfo = screen.getByRole('status');

      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:651:31)

  ● TutorialSystem › Loading States › shows loading screen when tutorial is not active and no welcome

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:681:34)

  ● TutorialSystem › Error Handling › handles context errors gracefully

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "Cannot read properties of null (reading 'findIndex')"

          526 |             aria-live="polite"
          527 |           >
        > 528 |             Module {tutorial.modules.findIndex(m => m.id === tutorial.currentModule) + 1} of {tutorial.modules.length}
              |                                      ^
          529 |           </div>
          530 |           
          531 |           <button

      at TutorialSystem (src/components/tutorial/TutorialSystem.js:528:38)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at src/components/tutorial/__tests__/TutorialSystem.test.js:719:15
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:83:11)
      at Object.toThrow (node_modules/expect/build/index.js:382:21)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:720:14)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:720:14)

  ● TutorialSystem › Learning Preferences › updates preferences through tutorial context

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:760:13)

FAIL src/components/__tests__/ShotAnalysisWidget.test.js
  ● ShotAnalysisWidget › calls analysis function when button clicked

    TypeError: useApiCall.mockReturnValue is not a function

      165 |     });
      166 |
    > 167 |     useApiCall.mockReturnValue({
          |                ^
      168 |       makeApiCall: mockMakeApiCall,
      169 |       loading: false,
      170 |       error: null,

      at Object.<anonymous> (src/components/__tests__/ShotAnalysisWidget.test.js:167:16)

  ● ShotAnalysisWidget › displays loading state

    TypeError: useApiCall.mockReturnValue is not a function

      193 |   test('displays loading state', () => {
      194 |     const { useApiCall } = require('../../utils/api');
    > 195 |     useApiCall.mockReturnValue({
          |                ^
      196 |       makeApiCall: jest.fn(),
      197 |       loading: true,
      198 |       error: null,

      at Object.<anonymous> (src/components/__tests__/ShotAnalysisWidget.test.js:195:16)

  ● ShotAnalysisWidget › displays cold start state

    TypeError: useApiCall.mockReturnValue is not a function

      216 |   test('displays cold start state', () => {
      217 |     const { useApiCall } = require('../../utils/api');
    > 218 |     useApiCall.mockReturnValue({
          |                ^
      219 |       makeApiCall: jest.fn(),
      220 |       loading: true,
      221 |       error: null,

      at Object.<anonymous> (src/components/__tests__/ShotAnalysisWidget.test.js:218:16)

  ● ShotAnalysisWidget › displays error state with retry button

    TypeError: useApiCall.mockReturnValue is not a function

      240 |     const { useApiCall } = require('../../utils/api');
      241 |     const mockMakeApiCall = jest.fn();
    > 242 |     useApiCall.mockReturnValue({
          |                ^
      243 |       makeApiCall: mockMakeApiCall,
      244 |       loading: false,
      245 |       error: 'Analysis failed',

      at Object.<anonymous> (src/components/__tests__/ShotAnalysisWidget.test.js:242:16)

  ● ShotAnalysisWidget › calls onShotRecommendation callback when analysis completes

    TypeError: useApiCall.mockReturnValue is not a function

      304 |
      305 |     const mockMakeApiCall = jest.fn().mockResolvedValue(mockAnalysis);
    > 306 |     useApiCall.mockReturnValue({
          |                ^
      307 |       makeApiCall: mockMakeApiCall,
      308 |       loading: false,
      309 |       error: null,

      at Object.<anonymous> (src/components/__tests__/ShotAnalysisWidget.test.js:306:16)

FAIL src/components/tutorial/__tests__/ProgressTracker.test.js
  ● Console

    console.error
      Each child in a list should have a unique "key" prop.
      
      Check the render method of `ProgressTracker`. See https://react.dev/link/warning-keys for more information.

      479 |       ];
      480 |       
    > 481 |       expect(() => render(<ProgressTracker />)).not.toThrow();
          |                          ^
      482 |     });
      483 |   });
      484 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:24030:21
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnForMissingKey (node_modules/react-dom/cjs/react-dom-client.development.js:24029:11)
      at warnOnInvalidKey (node_modules/react-dom/cjs/react-dom-client.development.js:7550:13)
      at reconcileChildrenArray (node_modules/react-dom/cjs/react-dom-client.development.js:7631:31)
      at reconcileChildFibersImpl (node_modules/react-dom/cjs/react-dom-client.development.js:7952:30)
      at node_modules/react-dom/cjs/react-dom-client.development.js:8057:33
      at reconcileChildren (node_modules/react-dom/cjs/react-dom-client.development.js:8621:13)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10793:13)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at src/components/tutorial/__tests__/ProgressTracker.test.js:481:26
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:83:11)
      at Object.toThrow (node_modules/expect/build/index.js:382:21)
      at Object.<anonymous> (src/components/tutorial/__tests__/ProgressTracker.test.js:481:53)

  ● ProgressTracker › Module Navigation › handles keyboard navigation for modules

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "betting-system"

    Number of calls: 0

      294 |       await userEvent.keyboard('{Enter}');
      295 |       
    > 296 |       expect(mockProgress.navigateToModule).toHaveBeenCalledWith('betting-system');
          |                                             ^
      297 |     });
      298 |
      299 |     test('handles Space key for module navigation', async () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/ProgressTracker.test.js:296:45)

  ● ProgressTracker › Module Navigation › handles Space key for module navigation

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "advanced-rules"

    Number of calls: 0

      305 |       await userEvent.keyboard(' ');
      306 |       
    > 307 |       expect(mockProgress.navigateToModule).toHaveBeenCalledWith('advanced-rules');
          |                                             ^
      308 |     });
      309 |
      310 |     test('does not navigate when navigateToModule is not available', async () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/ProgressTracker.test.js:307:45)

FAIL src/components/__tests__/UnifiedGameInterface.integration.test.js
  ● UnifiedGameInterface Integration Tests › Enhanced Mode › displays game status information

    TestingLibraryElementError: Unable to find an element with the text: Regular Play. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1400px; margin: 0px auto; padding: 1rem;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background-color: rgb(255, 255, 255); border-radius: 0.75rem; border: 1px solid #e0e0e0; margin-bottom: 1rem; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04); padding: 1rem;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;"[39m
            [36m>[39m
              [36m<h1[39m
                [33mstyle[39m=[32m"color: rgb(4, 120, 87); margin: 0px; font-size: 1.5rem; font-weight: 700;"[39m
              [36m>[39m
                [0m🚀 Enhanced Wolf Goat Pig[0m
              [36m</h1>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; gap: 0.5rem; align-items: center;"[39m
              [36m>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"background: rgb(4, 120, 87); color: rgb(33, 33, 33); border: 1px solid #e0e0e0; border-radius: 0.5rem; padding: 0.5rem 0.75rem; font-weight: 600; font-size: 0.875rem; cursor: pointer; transition: all 0.2s ease; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; opacity: 1; display: inline-flex; align-items: center; justify-content: center; text-decoration: none; user-select: none; background-color: rgb(238, 238, 238);"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m🎯 Shot Analysis[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"background: rgb(4, 120, 87); color: rgb(255, 255, 255); border-radius: 0.5rem; padding: 0.5rem 0.75rem; font-weight: 600; font-size: 0.875rem; cursor: pointer; transition: all 0.2s ease; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; opacity: 1; display: inline-flex; align-items: center; justify-content: center; text-decoration: none; user-select: none; background-color: rgb(4, 120, 87);"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m📊 Odds ON[0m
                [36m</button>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-bottom: 1rem;"[39m
                [36m>[39m
                  [36m<select[39m
                    [33mid[39m=[32m"«r2»"[39m
                    [33mstyle[39m=[32m"border: 1px solid #e0e0e0; border-radius: 0.5rem; padding: 0.75rem 2.5rem 0.75rem 1rem; font-size: 1rem; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; width: 100%; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33); cursor: pointer; opacity: 1; transition: border-color 0.2s ease, box-shadow 0.2s ease; appearance: none; background-repeat: no-repeat; background-size: 16px;"[39m
                  [36m>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m""[39m
                    [36m>[39m
                      [0mSelect an option...[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"game"[39m
                    [36m>[39m
                      [0m🎮 Game View[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"analytics"[39m
                    [36m>[39m
                      [0m📊 Analytics[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"history"[39m
                    [36m>[39m
                      [0m📋 History[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"timeline"[39m
                    [36m>[39m
                      [0m🕒 Timeline[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"visualization"[39m
                    [36m>[39m
                      [0m🗺️ Course View[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"odds"[39m
                    [36m>[39m
                      [0m🎲 Odds Analysis[0m
                    [36m</option>[39m
                  [36m</select>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-bottom: 1rem;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mCurrent Hole[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1.25rem; font-weight: 700; color: rgb(4, 120, 87);"[39m
                [36m>[39m
                  [0m10[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mGame Phase[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1rem; font-weight: 500; color: rgb(33, 33, 33);"[39m
                [36m>[39m
                  [0mregular[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mBase Wager[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1.125rem; font-weight: 700; color: rgb(255, 152, 0);"[39m
                [36m>[39m
                  [0m$[0m
                  [0m1[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: grid; grid-template-col...

      183 |       expect(screen.getByText('10')).toBeInTheDocument();
      184 |       expect(screen.getByText('Game Phase')).toBeInTheDocument();
    > 185 |       expect(screen.getByText('Regular Play')).toBeInTheDocument();
          |                     ^
      186 |       expect(screen.getByText('Base Wager')).toBeInTheDocument();
      187 |       expect(screen.getByText('$1')).toBeInTheDocument();
      188 |     });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:185:21)

  ● UnifiedGameInterface Integration Tests › Enhanced Mode › visualization view includes shot overlay when analysis active

    TestingLibraryElementError: Unable to find an element with the text: Analyze Shot. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1400px; margin: 0px auto; padding: 1rem;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background-color: rgb(255, 255, 255); border-radius: 0.75rem; border: 1px solid #e0e0e0; margin-bottom: 1rem; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04); padding: 1rem;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;"[39m
            [36m>[39m
              [36m<h1[39m
                [33mstyle[39m=[32m"color: rgb(4, 120, 87); margin: 0px; font-size: 1.5rem; font-weight: 700;"[39m
              [36m>[39m
                [0m🚀 Enhanced Wolf Goat Pig[0m
              [36m</h1>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; gap: 0.5rem; align-items: center;"[39m
              [36m>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"background: rgb(4, 120, 87); color: rgb(255, 255, 255); border-radius: 0.5rem; padding: 0.5rem 0.75rem; font-weight: 600; font-size: 0.875rem; cursor: pointer; transition: all 0.2s ease; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; opacity: 1; display: inline-flex; align-items: center; justify-content: center; text-decoration: none; user-select: none; background-color: rgb(4, 120, 87);"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m🎯 Analysis ON[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"background: rgb(4, 120, 87); color: rgb(255, 255, 255); border-radius: 0.5rem; padding: 0.5rem 0.75rem; font-weight: 600; font-size: 0.875rem; cursor: pointer; transition: all 0.2s ease; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; opacity: 1; display: inline-flex; align-items: center; justify-content: center; text-decoration: none; user-select: none; background-color: rgb(4, 120, 87);"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m📊 Odds ON[0m
                [36m</button>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-bottom: 1rem;"[39m
                [36m>[39m
                  [36m<select[39m
                    [33mid[39m=[32m"«r5»"[39m
                    [33mstyle[39m=[32m"border: 1px solid #e0e0e0; border-radius: 0.5rem; padding: 0.75rem 2.5rem 0.75rem 1rem; font-size: 1rem; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; width: 100%; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33); cursor: pointer; opacity: 1; transition: border-color 0.2s ease, box-shadow 0.2s ease; appearance: none; background-repeat: no-repeat; background-size: 16px;"[39m
                  [36m>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m""[39m
                    [36m>[39m
                      [0mSelect an option...[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"game"[39m
                    [36m>[39m
                      [0m🎮 Game View[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"analytics"[39m
                    [36m>[39m
                      [0m📊 Analytics[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"history"[39m
                    [36m>[39m
                      [0m📋 History[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"timeline"[39m
                    [36m>[39m
                      [0m🕒 Timeline[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"visualization"[39m
                    [36m>[39m
                      [0m🗺️ Course View[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"odds"[39m
                    [36m>[39m
                      [0m🎲 Odds Analysis[0m
                    [36m</option>[39m
                  [36m</select>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-bottom: 1rem;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mCurrent Hole[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1.25rem; font-weight: 700; color: rgb(4, 120, 87);"[39m
                [36m>[39m
                  [0m10[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mGame Phase[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1rem; font-weight: 500; color: rgb(33, 33, 33);"[39m
                [36m>[39m
                  [0mregular[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mBase Wager[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1.125rem; font-weight: 700; color: rgb(255, 152, 0);"[39m
                [36m>[39m
                  [0m$[0m
                  [0m1[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"hole-strategy-display"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"hole-header"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"hole-number"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"hole-label"[39m
                  [36m>[39m
                    [0mHOLE[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"hole-value"[39m
                  [36m>[39m
                    [0m10[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"hole-stats"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"stat-item"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"stat-label"[39m
                    [36m>[39m
                      [0mPAR[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"stat-value"[39m
                    [36m>[39m
                      [0m4[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"stat-item"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"stat-label"[39m
                    [36m>[39m
                      [0mYARDS[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"stat-value"[39m
                    [36m>[39m
                      [0m400[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"difficulty-badge medium"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"difficulty-icon"[39m
                    [36m>[39m
                      [0m⚡[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"difficulty-text"[39m
                    [36m>[39m
                      [0mMEDIUM[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"wager-display"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"wager-label"[39m
                  [36m>[39m
                    [0mPOT[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"wager-value"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"wager-amount"[39m
                    [36m>[39m
                      [0m1[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"wager-unit"[39m
                    [36m>[39m
                      [0mquarters[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"players-grid"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card is-away fairway"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-rank"[39m
                  [36m>[39m
                    [0m1[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-info"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"player-name"[39m
                    [36m>[39m
                      [0mJohn Doe[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"player-stats"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"shot-count"[39m
                      [36m>[39m
                        [0m1 shot[0m
                      [36m</span>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"status-icon"[39m
                      [36m>[39m
                        [0m✓[0m
                      [36m</span>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"distance-info"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"distance-value"[39m
                    [36m>[39m
                      [0m150[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"distance-label"[39m
                    [36m>[39m
                      [0myards[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"away-indicator"[39m
                  [36m>[39m
                    [36m<span>[39m
                      [0mAWAY[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card  waiting"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-rank"[39m
                  [36m>[39m
                    [0m2[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-info"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"player-name"[39m
                    [36m>[39m
                      [0mJane Smith[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"player-stats"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"shot-count"[39m
                      [36m>[39m
                        [0mReady[0m
                      [36m</span>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"distance-info"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"distance-value"[39m
                    [36m>[39m
                      [0m--[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"distance-label"[39m
                    [36m>[39m
                      [0myards[0m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"strategy-tips"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"tip-item"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"tip-icon"[39m
                  [36m>[39m
                    [0m💡[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"tip-text"[39m
                  [36m>[39m
                    [0mBalanced hole - play to your strengths[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"tip-item"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"tip-icon"[39m
                  [36m>[39m
                    [0m📍[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"tip-text"[39m
                  [36m>[39m
                    [0mJohn Doe[0m
                    [0m is away at [0m
                    [0m150[0m
                    [0m yards[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      232 |
      233 |       // Trigger analysis to get shot data
    > 234 |       const analyzeButton = screen.getByText('Analyze Shot');
          |                                    ^
      235 |       fireEvent.click(analyzeButton);
      236 |
      237 |       await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:234:36)

  ● UnifiedGameInterface Integration Tests › Shot Analysis Integration › shot analysis updates when game state changes

    TypeError: require(...).useGame.mockReturnValue is not a function

      305 |
      306 |       // Mock updated context
    > 307 |       require('../../context').useGame.mockReturnValue(updatedContextValue);
          |                                        ^
      308 |
      309 |       rerender(
      310 |         <TestWrapper>

      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:307:40)

  ● UnifiedGameInterface Integration Tests › Error Handling › displays error state when game loading fails

    TypeError: require(...).useGame.mockReturnValue is not a function

      325 |       };
      326 |
    > 327 |       require('../../context').useGame.mockReturnValue(errorContextValue);
          |                                        ^
      328 |
      329 |       render(
      330 |         <TestWrapper>

      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:327:40)

  ● UnifiedGameInterface Integration Tests › Error Handling › displays loading state

    TypeError: require(...).useGame.mockReturnValue is not a function

      345 |       };
      346 |
    > 347 |       require('../../context').useGame.mockReturnValue(loadingContextValue);
          |                                        ^
      348 |
      349 |       render(
      350 |         <TestWrapper>

      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:347:40)

  ● UnifiedGameInterface Integration Tests › Error Handling › displays no game state message

    TypeError: require(...).useGame.mockReturnValue is not a function

      363 |       };
      364 |
    > 365 |       require('../../context').useGame.mockReturnValue(noGameContextValue);
          |                                        ^
      366 |
      367 |       render(
      368 |         <TestWrapper>

      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:365:40)

FAIL src/components/__tests__/BettingOddsPanel.test.js
  ● Console

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      Error fetching odds data: Error: Network error
          at Object.<anonymous> (/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/__tests__/BettingOddsPanel.test.js:237:35)
          at Promise.then.completed (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:391:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:316:10)
          at _callCircusTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:218:40)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at _runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:155:3)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:66:9)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:60:9)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:60:9)
          at run (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:25:3)
          at runAndTransformResultsToJestFormat (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
          at jestAdapter (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
          at runTestInternal (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:389:16)
          at runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:475:34)
          at Object.worker (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/testWorker.js:133:12)

      135 |
      136 |     } catch (err) {
    > 137 |       console.error('Error fetching odds data:', err);
          |               ^
      138 |       setError(err.message);
      139 |     } finally {
      140 |       setLoading(false);

      at src/components/BettingOddsPanel.js:137:15

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      Error fetching odds data: Error: Network error
          at Object.<anonymous> (/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/__tests__/BettingOddsPanel.test.js:259:35)
          at Promise.then.completed (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:391:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:316:10)
          at _callCircusTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:218:40)
          at _runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:155:3)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:66:9)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:60:9)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:60:9)
          at run (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:25:3)
          at runAndTransformResultsToJestFormat (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
          at jestAdapter (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
          at runTestInternal (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:389:16)
          at runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:475:34)
          at Object.worker (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/testWorker.js:133:12)

      135 |
      136 |     } catch (err) {
    > 137 |       console.error('Error fetching odds data:', err);
          |               ^
      138 |       setError(err.message);
      139 |     } finally {
      140 |       setLoading(false);

      at src/components/BettingOddsPanel.js:137:15

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

      802 |
      803 |       // Advance time by refresh interval
    > 804 |       act(() => {
          |          ^
      805 |         jest.advanceTimersByTime(2000);
      806 |       });
      807 |

      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react-dom/cjs/react-dom-test-utils.development.js:19:17)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:804:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      Error fetching odds data: Error: HTTP error! status: 500
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/BettingOddsPanel.js:117:15

      135 |
      136 |     } catch (err) {
    > 137 |       console.error('Error fetching odds data:', err);
          |               ^
      138 |       setError(err.message);
      139 |     } finally {
      140 |       setLoading(false);

      at src/components/BettingOddsPanel.js:137:15

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      Error fetching odds data: Error: HTTP error! status: 500
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/BettingOddsPanel.js:117:15

      135 |
      136 |     } catch (err) {
    > 137 |       console.error('Error fetching odds data:', err);
          |               ^
      138 |       setError(err.message);
      139 |     } finally {
      140 |       setLoading(false);

      at src/components/BettingOddsPanel.js:137:15

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      136 |     } catch (err) {
      137 |       console.error('Error fetching odds data:', err);
    > 138 |       setError(err.message);
          |       ^
      139 |     } finally {
      140 |       setLoading(false);
      141 |     }

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:138:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      69 |     }
      70 |
    > 71 |     setLoading(true);
         |     ^
      72 |     setError(null);
      73 |
      74 |     try {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:71:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      70 |
      71 |     setLoading(true);
    > 72 |     setError(null);
         |     ^
      73 |
      74 |     try {
      75 |       // Prepare request data

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:72:5
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:729:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1289:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1370:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1378:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1534:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/modernFakeTimers.js:81:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:213:10)

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      120 |       const data = await response.json();
      121 |       
    > 122 |       setOddsData(data);
          |       ^
      123 |       setLastUpdate(new Date());
      124 |       
      125 |       // Add to calculation history for trends

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setOddsData (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:122:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      121 |       
      122 |       setOddsData(data);
    > 123 |       setLastUpdate(new Date());
          |       ^
      124 |       
      125 |       // Add to calculation history for trends
      126 |       setCalculationHistory(prev => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLastUpdate (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:123:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |       
      125 |       // Add to calculation history for trends
    > 126 |       setCalculationHistory(prev => {
          |       ^
      127 |         const newHistory = [...prev, {
      128 |           timestamp: data.timestamp,
      129 |           calculation_time: data.calculation_time_ms,

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCalculationHistory (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:126:7

    console.error
      An update to BettingOddsPanel inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |       setError(err.message);
      139 |     } finally {
    > 140 |       setLoading(false);
          |       ^
      141 |     }
      142 |   }, [gameState]);
      143 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/components/BettingOddsPanel.js:140:7

  ● BettingOddsPanel › Basic Rendering and Loading States › renders nothing when no players

    expect(received).toBeNull()

    Received: <div class="betting-odds-panel" data-testid="card"><div style="padding: 20px; text-align: center;"><div style="font-size: 24px; margin-bottom: 16px;">🎯</div><div>Calculating odds...</div><div style="font-size: 12px; color: rgb(136, 136, 136); margin-top: 8px;">Running probability analysis</div></div></div>

      315 |       );
      316 |
    > 317 |       expect(container.firstChild).toBeNull();
          |                                    ^
      318 |     });
      319 |   });
      320 |

      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:317:36)

  ● BettingOddsPanel › Scenarios View › expands scenario when clicked

    TestingLibraryElementError: Found multiple elements with the text: Analysis

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<button[39m
      [33mstyle[39m=[32m"background: transparent; color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px;"[39m
    [36m>[39m
      [36m<span>[39m
        [0m🔍[0m
      [36m</span>[39m
      [0mAnalysis[0m
    [36m</button>[39m

    Ignored nodes: comments, script, style
    [36m<h4[39m
      [33mstyle[39m=[32m"margin: 0px 0px 8px 0px; color: rgb(34, 34, 34);"[39m
    [36m>[39m
      [0mAnalysis[0m
    [36m</h4>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"betting-odds-panel"[39m
          [33mstyle[39m=[32m"background: rgb(255, 255, 255); border-radius: 16px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); overflow: hidden;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"color: white; padding: 20px; display: flex; justify-content: space-between; align-items: center;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<span[39m
                [33mstyle[39m=[32m"font-size: 28px;"[39m
              [36m>[39m
                [0m🎯[0m
              [36m</span>[39m
              [36m<div>[39m
                [36m<h2[39m
                  [33mstyle[39m=[32m"margin: 0px; font-size: 20px; font-weight: 600;"[39m
                [36m>[39m
                  [0mReal-Time Betting Odds[0m
                [36m</h2>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mHole [0m
                  [0m8[0m
                  [0m • Updated [0m
                  [0m4:45:40 PM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m87[0m
                [0m% Confidence[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m145[0m
                [0mms[0m
              [36m</div>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 8px; color: white; padding: 6px 12px; cursor: pointer; font-size: 12px;"[39m
              [36m>[39m
                [0m↻[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 16px 20px 0px; border-bottom: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 4px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: transparent;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m📊[0m
                [36m</span>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: white; border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: rgb(25, 118, 210);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m💰[0m
                [36m</span>[39m
                [0mBetting Scenarios[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: transparent; color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m🔍[0m
                [36m</span>[39m
                [0mAnalysis[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 16px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"border: 2px solid #ff9800; border-radius: 12px; overflow: hidden;"[39m
              [36m>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"background: rgb(255, 152, 0); color: white; padding: 16px; cursor: pointer; display: flex; justify-content: space-between; align-items: center;"[39m
                [36m>[39m
                  [36m<div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 16px; font-weight: 600; margin-bottom: 4px;"[39m
                    [36m>[39m
                      [0mDouble Down[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mdata-testid[39m=[32m"educational-tooltip"[39m
                        [33mtitle[39m=[32m"Win Probability: The chance of winning based on current position"[39m
                      [36m>[39m
                        [0m62.0%[0m
                        [0m win probability[0m
                      [36m</div>[39m
                      [0m • [0m
                      [36m<div[39m
                        [33mdata-testid[39m=[32m"educational-tooltip"[39m
                        [33mtitle[39m=[32m"Expected Value: The average expected return on this bet"[39m
                      [36m>[39m
                        [0mEV: [0m
                        [0m+1.25[0m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 8px; font-size: 12px; display: flex; align-items: center; gap: 4px;"[39m
                    [36m>[39m
                      [0m🟡[0m
                      [0m [0m
                      [0mMEDIUM[0m
                    [36m</div>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 18px;"[39m
                    [36m>[39m
                      [0m⌄[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"padding: 20px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"margin-bottom: 16px;"[39m
                  [36m>[39m
                    [36m<h4[39m
                      [33mstyle[39m=[32m"margin: 0px 0px 8px 0px; color: rgb(34, 34, 34);"[39m
                    [36m>[39m
                      [0mAnalysis[0m
                    [36m</h4>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 12px; border-radius: 8px; font-size: 14px; line-height: 1.4; color: rgb(34, 34, 34);"[39m
                    [36m>[39m
                      [0mAlice has favorable position with good lie and manageable distance[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"margin-bottom: 16px;"[39m
                  [36m>[39m
                    [36m<h4[39m
                      [33mstyle[39m=[32m"margin: 0px 0px 8px 0px; color: rgb(34, 34, 34);"[39m
                    [36m>[39m
                      [0mPotential Outcomes[0m
                    [36m</h4>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 8px;"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mstyle[39m=[32m"background: rgb(76, 175, 80); color: white; padding: 12px; border-radius: 8px; text-align: center;"[39m
                      [36m>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 12px; opacity: 0.9; margin-bottom: 4px;"[39m
                        [36m>[39m
                          [0mWin[0m
                        [36m</div>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 16px; font-weight: bold;"[39m
                        [36m>[39m
                          [0m+4.00[0m
                        [36m</div>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mstyle[39m=[32m"background: rgb(244, 67, 54); color: white; padding: 12px; border-radius: 8px; text-align: center;"[39m
                      [36m>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 12px; opacity: 0.9; margin-bottom: 4px;"[39m
                        [36m>[39m
                          [0mLoss[0m
                        [36m</div>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 16px; font-weight: bold;"[39m
                        [36m>[39m
                          [0m-2.00[0m
                        [36m</div>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mstyle[39m=[32m"background: rgb(117, 117, 117); color: white; padding: 12px; border-radius: 8px; text-align: center;"[39m
                      [36m>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 12px; opacity: 0.9; margin-bottom: 4px;"[39m
                        [36m>[39m
                          [0mPush[0m
                        [36m</div>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 16px; font-weight: bold;"[39m
                        [36m>[39m
                          [0m+0.00[0m
                        [36m</div>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"margin-bottom: 16px;"[39m
                  [36m>[39m
                    [36m<h4[39m
                      [33mstyle[39m=[32m"margin: 0px 0px 8px 0px; color: rgb(34, 34, 34);"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mdata-testid[39m=[32m"educational-tooltip"[39m
                        [33mtitle[39m=[32m"Confidence Interval: The range of probable outcomes"[39m
                      [36m>[39m
                        [0mConfidence Range[0m
                      [36m</div>[39m
                    [36m</h4>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 14px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0m55.0%[0m
                      [0m - [0m
                      [0m69.0%[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<button[39m
                    [33mstyle[39m=[32m"background: rgb(25, 118, 210); color: white; border-radius: 8px; padding: 12px 24px; font-size: 14px; font-weight: 600; cursor: pointer; width: 100%;"[39m
                  [36m>[39m
                    [0m💰 Offer[0m
                  [36m</button>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"border: 2px solid #d32f2f; border-radius: 12px; overflow: hidden;"[39m
              [36m>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"background: rgb(211, 47, 47); color: white; padding: 16px; cursor: pointer; display: flex; justify-content: space-between; align-items: center;"[39m
                [36m>[39m
                  [36m<div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 16px; font-weight: 600; margin-bottom: 4px;"[39m
                    [36m>[39m
                      [0mSide Bet[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mdata-testid[39m=[32m"educational-tooltip"[39m
                        [33mtitle[39m=[32m"Win Probability: The chance of winning based on current position"[39m
                      [36m>[39m
                        [0m45.0%[0m
                        [0m win probability[0m
                      [36m</div>[39m
                      [0m • [0m
                      [36m<div[39m
                        [33mdata-testid[39m=[32m"educational-tooltip"[39m
                        [33mtitle[39m=[32m"Expected Value: The average expected return on this bet"[39m
                      [36m>[39m
                        [0mEV: [0m
                        [0m-0.15[0m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 8px; font-size: 12px; display: flex; align-items: center; gap: 4px;"[39m
                    [36m>[39m
                      [0m🔴[0m
                      [0m [0m
                      [0mHIGH[0m
                    [36m</div>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 18px;"[39m
                    [36m>[39m
                      [0m›[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 16px; border-top: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"contextual-help"[39m
            [36m>[39m
              [36m<div>[39m
                [0mGame Phase: [0m
                [0mbetting_window[0m
              [36m</div>[39m
              [36m<div>[39m
                [0mPlayer Position: [0m
                [0mbehind[0m
              [36m</div>[39m
              [36m<div>[39m
                [0mBetting Scenario: [0m
                [0mdouble_down[0m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 14px; font-weight: 600; margin-bottom: 8px; display: flex; align-items: center; gap: 8px;"[39m
            [36m>[39m
              [36m<span>[39m
                [0m💡[0m
              [36m</span>[39m
              [0mStrategic Insights[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mAlice's fairway lie provides significant advantage over rough[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mCurrent hole difficulty (3.5/5) suggests moderate challenge[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mTeam partnerships favor balanced risk-taking approach[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      577 |
      578 |       // Check expanded content
    > 579 |       expect(screen.getByText('Analysis')).toBeInTheDocument();
          |                     ^
      580 |       expect(screen.getByText(/Alice has favorable position/)).toBeInTheDocument();
      581 |       expect(screen.getByText('Potential Outcomes')).toBeInTheDocument();
      582 |       expect(screen.getByText('Win')).toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:579:21)

  ● BettingOddsPanel › Scenarios View › shows no scenarios message when empty

    TestingLibraryElementError: Found multiple elements with the text: 🎯

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<span[39m
      [33mstyle[39m=[32m"font-size: 28px;"[39m
    [36m>[39m
      [0m🎯[0m
    [36m</span>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"font-size: 48px; margin-bottom: 16px;"[39m
    [36m>[39m
      [0m🎯[0m
    [36m</div>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"betting-odds-panel"[39m
          [33mstyle[39m=[32m"background: rgb(255, 255, 255); border-radius: 16px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); overflow: hidden;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"color: white; padding: 20px; display: flex; justify-content: space-between; align-items: center;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<span[39m
                [33mstyle[39m=[32m"font-size: 28px;"[39m
              [36m>[39m
                [0m🎯[0m
              [36m</span>[39m
              [36m<div>[39m
                [36m<h2[39m
                  [33mstyle[39m=[32m"margin: 0px; font-size: 20px; font-weight: 600;"[39m
                [36m>[39m
                  [0mReal-Time Betting Odds[0m
                [36m</h2>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mHole [0m
                  [0m8[0m
                  [0m • Updated [0m
                  [0m4:45:40 PM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m87[0m
                [0m% Confidence[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m145[0m
                [0mms[0m
              [36m</div>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 8px; color: white; padding: 6px 12px; cursor: pointer; font-size: 12px;"[39m
              [36m>[39m
                [0m↻[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 16px 20px 0px; border-bottom: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 4px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: transparent;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m📊[0m
                [36m</span>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: white; border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: rgb(25, 118, 210);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m💰[0m
                [36m</span>[39m
                [0mBetting Scenarios[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: transparent; color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m🔍[0m
                [36m</span>[39m
                [0mAnalysis[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"text-align: center; padding: 40px; color: rgb(136, 136, 136);"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"font-size: 48px; margin-bottom: 16px;"[39m
              [36m>[39m
                [0m🎯[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"font-size: 16px; margin-bottom: 8px;"[39m
              [36m>[39m
                [0mNo Betting Scenarios Available[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"font-size: 14px;"[39m
              [36m>[39m
                [0mBetting opportunities will appear based on game state and timing.[0m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 16px; border-top: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"contextual-help"[39m
            [36m>[39m
              [36m<div>[39m
                [0mGame Phase: [0m
                [0mbetting_window[0m
              [36m</div>[39m
              [36m<div>[39m
                [0mPlayer Position: [0m
                [0mbehind[0m
              [36m</div>[39m
              [36m<div>[39m
                [0mBetting Scenario: [0m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 14px; font-weight: 600; margin-bottom: 8px; display: flex; align-items: center; gap: 8px;"[39m
            [36m>[39m
              [36m<span>[39m
                [0m💡[0m
              [36m</span>[39m
              [0mStrategic Insights[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mAlice's fairway lie provides significant advantage over rough[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mCurrent hole difficulty (3.5/5) suggests moderate challenge[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mTeam partnerships favor balanced risk-taking approach[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      641 |       await user.click(scenariosTab);
      642 |
    > 643 |       expect(screen.getByText('🎯')).toBeInTheDocument();
          |                     ^
      644 |       expect(screen.getByText('No Betting Scenarios Available')).toBeInTheDocument();
      645 |       expect(screen.getByText(/Betting opportunities will appear/)).toBeInTheDocument();
      646 |     });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:643:21)

  ● BettingOddsPanel › Analysis View › displays performance metrics

    TestingLibraryElementError: Found multiple elements with the text: 145ms

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
    [36m>[39m
      [0m145[0m
      [0mms[0m
    [36m</div>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
    [36m>[39m
      [0m145[0m
      [0mms[0m
    [36m</div>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"betting-odds-panel"[39m
          [33mstyle[39m=[32m"background: rgb(255, 255, 255); border-radius: 16px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); overflow: hidden;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"color: white; padding: 20px; display: flex; justify-content: space-between; align-items: center;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<span[39m
                [33mstyle[39m=[32m"font-size: 28px;"[39m
              [36m>[39m
                [0m🎯[0m
              [36m</span>[39m
              [36m<div>[39m
                [36m<h2[39m
                  [33mstyle[39m=[32m"margin: 0px; font-size: 20px; font-weight: 600;"[39m
                [36m>[39m
                  [0mReal-Time Betting Odds[0m
                [36m</h2>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mHole [0m
                  [0m8[0m
                  [0m • Updated [0m
                  [0m4:45:40 PM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m87[0m
                [0m% Confidence[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m145[0m
                [0mms[0m
              [36m</div>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 8px; color: white; padding: 6px 12px; cursor: pointer; font-size: 12px;"[39m
              [36m>[39m
                [0m↻[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 16px 20px 0px; border-bottom: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 4px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: transparent;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m📊[0m
                [36m</span>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: transparent; color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m💰[0m
                [36m</span>[39m
                [0mBetting Scenarios[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: white; border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: rgb(25, 118, 210);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m🔍[0m
                [36m</span>[39m
                [0mAnalysis[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 20px;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<h3[39m
                  [33mstyle[39m=[32m"margin: 0px 0px 16px 0px; color: rgb(34, 34, 34);"[39m
                [36m>[39m
                  [0mCalculation Performance[0m
                [36m</h3>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 12px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m145[0m
                      [0mms[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mCalculation Time[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m87[0m
                      [0m%[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mConfidence Level[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m5,000[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mSimulations Run[0m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<h3[39m
                  [33mstyle[39m=[32m"margin: 0px 0px 16px 0px; color: rgb(34, 34, 34);"[39m
                [36m>[39m
                  [0mRisk Assessment[0m
                [36m</h3>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39...

      698 |       await user.click(analysisTab);
      699 |
    > 700 |       expect(screen.getByText('145ms')).toBeInTheDocument(); // Calculation time
          |                     ^
      701 |       expect(screen.getByText('Calculation Time')).toBeInTheDocument();
      702 |       expect(screen.getByText('87%')).toBeInTheDocument(); // Confidence level
      703 |       expect(screen.getByText('Confidence Level')).toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:700:21)

  ● BettingOddsPanel › Analysis View › displays educational insights

    TestingLibraryElementError: Found multiple elements with the text: /Alice's fairway lie provides/

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mdata-testid[39m=[32m"current-odds"[39m
    [36m>[39m
      [0m{"timestamp":"2024-01-15T10:30:00Z","calculation_time_ms":145.2,"confidence_level":0.87,"monte_carlo_used":true,"player_probabilities":{"player1":{"name":"Alice","win_probability":0.65,"expected_score":4.2,"risk_factors":["weather","lie"]},"player2":{"name":"Bob","win_probability":0.35,"expected_score":4.8,"risk_factors":["distance","lie"]}},"team_probabilities":{"team_a":0.58,"team_b":0.42},"optimal_strategy":"conservative_play","betting_scenarios":[{"scenario_type":"double_down","win_probability":0.62,"expected_value":1.25,"risk_level":"medium","reasoning":"Alice has favorable position with good lie and manageable distance","confidence_interval":[0.55,0.69],"payout_matrix":{"win":4,"loss":-2,"push":0},"recommendation":"offer"},{"scenario_type":"side_bet","win_probability":0.45,"expected_value":-0.15,"risk_level":"high","reasoning":"Bob faces challenging rough lie with increased distance","confidence_interval":[0.38,0.52],"payout_matrix":{"win":2.5,"loss":-1.5},"recommendation":"decline"}],"risk_assessment":{"volatility":0.23,"weather_factor":1,"course_difficulty":3.5,"player_fatigue":0.15},"educational_insights":["Alice's fairway lie provides significant advantage over rough","Current hole difficulty (3.5/5) suggests moderate challenge","Team partnerships favor balanced risk-taking approach"],"simulation_details":{"num_simulations_run":5000,"convergence_achieved":true,"monte_carlo_variance":0.012}}[0m
    [36m</div>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 8px; padding: 12px; font-size: 14px; line-height: 1.4; color: rgb(34, 34, 34); border-left: 4px solid #1976d2;"[39m
    [36m>[39m
      [0mAlice's fairway lie provides significant advantage over rough[0m
    [36m</div>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
    [36m>[39m
      [0m• [0m
      [0mAlice's fairway lie provides significant advantage over rough[0m
    [36m</div>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"betting-odds-panel"[39m
          [33mstyle[39m=[32m"background: rgb(255, 255, 255); border-radius: 16px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); overflow: hidden;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"color: white; padding: 20px; display: flex; justify-content: space-between; align-items: center;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<span[39m
                [33mstyle[39m=[32m"font-size: 28px;"[39m
              [36m>[39m
                [0m🎯[0m
              [36m</span>[39m
              [36m<div>[39m
                [36m<h2[39m
                  [33mstyle[39m=[32m"margin: 0px; font-size: 20px; font-weight: 600;"[39m
                [36m>[39m
                  [0mReal-Time Betting Odds[0m
                [36m</h2>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mHole [0m
                  [0m8[0m
                  [0m • Updated [0m
                  [0m4:45:40 PM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m87[0m
                [0m% Confidence[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m145[0m
                [0mms[0m
              [36m</div>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 8px; color: white; padding: 6px 12px; cursor: pointer; font-size: 12px;"[39m
              [36m>[39m
                [0m↻[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 16px 20px 0px; border-bottom: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 4px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: transparent;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m📊[0m
                [36m</span>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: transparent; color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m💰[0m
                [36m</span>[39m
                [0mBetting Scenarios[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: white; border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: rgb(25, 118, 210);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m🔍[0m
                [36m</span>[39m
                [0mAnalysis[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 20px;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<h3[39m
                  [33mstyle[39m=[32m"margin: 0px 0px 16px 0px; color: rgb(34, 34, 34);"[39m
                [36m>[39m
                  [0mCalculation Performance[0m
                [36m</h3>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 12px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m145[0m
                      [0mms[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mCalculation Time[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m87[0m
                      [0m%[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mConfidence Level[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m5,000[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mSimulations Run[0m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<h3[39m
                  [33mstyle[39m=[32m"margin: 0px 0px 16px 0px; color: rgb(34, 34, 34);"[39m
                [36m>[39m
                  [0mRisk Assessment[0m
                [36m</h3>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39...

      773 |
      774 |       expect(screen.getByText('Educational Insights')).toBeInTheDocument();
    > 775 |       expect(screen.getByText(/Alice's fairway lie provides/)).toBeInTheDocument();
          |                     ^
      776 |       expect(screen.getByText(/Current hole difficulty/)).toBeInTheDocument();
      777 |     });
      778 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:775:21)

  ● BettingOddsPanel › Auto-update Functionality › manual refresh works

    TestingLibraryElementError: Unable to find an element with the text: ↻. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"betting-odds-panel"[39m
          [33mdata-testid[39m=[32m"card"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 20px; text-align: center;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 24px; margin-bottom: 16px;"[39m
            [36m>[39m
              [0m🎯[0m
            [36m</div>[39m
            [36m<div>[39m
              [0mCalculating odds...[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136); margin-top: 8px;"[39m
            [36m>[39m
              [0mRunning probability analysis[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      867 |
      868 |       // Click refresh button
    > 869 |       const refreshButton = screen.getByText('↻');
          |                                    ^
      870 |       await user.click(refreshButton);
      871 |
      872 |       await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:869:36)

  ● BettingOddsPanel › Calculation History Tracking › maintains calculation history

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 2
    Received array:  [{"calculation_time": 145.2, "confidence": 0.87, "team_probabilities": {"team_a": 0.58, "team_b": 0.42}, "timestamp": "2024-01-15T10:30:00Z"}, {"calculation_time": 145.2, "confidence": 0.87, "team_probabilities": {"team_a": 0.58, "team_b": 0.42}, "timestamp": "2024-01-15T10:30:05Z"}]

      992 |       const historyArray = JSON.parse(historyData.textContent);
      993 |       
    > 994 |       expect(historyArray).toHaveLength(3);
          |                            ^
      995 |       expect(historyArray[0].timestamp).toBe('2024-01-15T10:30:00Z');
      996 |       expect(historyArray[2].timestamp).toBe('2024-01-15T10:30:10Z');
      997 |     });

      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:994:28)

FAIL src/components/__tests__/ShotVisualizationOverlay.test.js
  ● ShotVisualizationOverlay › displays shot recommendation overlay

    TestingLibraryElementError: Found multiple elements with the text: CONSERVATIVE APPROACH

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<text[39m
      [33mfill[39m=[32m"#212121"[39m
      [33mfont-size[39m=[32m"10"[39m
      [33mfont-weight[39m=[32m"bold"[39m
      [33mtext-anchor[39m=[32m"middle"[39m
      [33mx[39m=[32m"230"[39m
      [33my[39m=[32m"0"[39m
    [36m>[39m
      [0mCONSERVATIVE APPROACH[0m
    [36m</text>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"font-size: 1rem; font-weight: 700; margin-bottom: 0.25rem;"[39m
    [36m>[39m
      [0mCONSERVATIVE APPROACH[0m
    [36m</div>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"position: relative; width: 100%; height: 300px; background: rgb(144, 238, 144); border-radius: 0.5rem; overflow: hidden; border: 2px solid #e0e0e0;"[39m
        [36m>[39m
          [36m<svg[39m
            [33mheight[39m=[32m"100%"[39m
            [33mstyle[39m=[32m"position: absolute; top: 0px; left: 0px;"[39m
            [33mviewBox[39m=[32m"0 0 400 200"[39m
            [33mwidth[39m=[32m"100%"[39m
          [36m>[39m
            [36m<rect[39m
              [33mfill[39m=[32m"#90EE90"[39m
              [33mheight[39m=[32m"200"[39m
              [33mwidth[39m=[32m"400"[39m
              [33mx[39m=[32m"0"[39m
              [33my[39m=[32m"0"[39m
            [36m/>[39m
            [36m<rect[39m
              [33mfill[39m=[32m"#228B22"[39m
              [33mheight[39m=[32m"20"[39m
              [33mwidth[39m=[32m"400"[39m
              [33mx[39m=[32m"0"[39m
              [33my[39m=[32m"0"[39m
            [36m/>[39m
            [36m<rect[39m
              [33mfill[39m=[32m"#228B22"[39m
              [33mheight[39m=[32m"20"[39m
              [33mwidth[39m=[32m"400"[39m
              [33mx[39m=[32m"0"[39m
              [33my[39m=[32m"180"[39m
            [36m/>[39m
            [36m<g>[39m
              [36m<circle[39m
                [33mcx[39m=[32m"230"[39m
                [33mcy[39m=[32m"60"[39m
                [33mfill[39m=[32m"#388e3c40"[39m
                [33mr[39m=[32m"55"[39m
                [33mstroke[39m=[32m"#388e3c"[39m
                [33mstroke-dasharray[39m=[32m"5,5"[39m
                [33mstroke-width[39m=[32m"2"[39m
              [36m/>[39m
              [36m<text[39m
                [33mfill[39m=[32m"#212121"[39m
                [33mfont-size[39m=[32m"10"[39m
                [33mfont-weight[39m=[32m"bold"[39m
                [33mtext-anchor[39m=[32m"middle"[39m
                [33mx[39m=[32m"230"[39m
                [33my[39m=[32m"0"[39m
              [36m>[39m
                [0mCONSERVATIVE APPROACH[0m
              [36m</text>[39m
              [36m<text[39m
                [33mfill[39m=[32m"#757575"[39m
                [33mfont-size[39m=[32m"8"[39m
                [33mtext-anchor[39m=[32m"middle"[39m
                [33mx[39m=[32m"230"[39m
                [33my[39m=[32m"63"[39m
              [36m>[39m
                [0m85%[0m
                [0m success[0m
              [36m</text>[39m
            [36m</g>[39m
            [36m<g>[39m
              [36m<circle[39m
                [33mcx[39m=[32m"240"[39m
                [33mcy[39m=[32m"100"[39m
                [33mfill[39m=[32m"#ff980040"[39m
                [33mr[39m=[32m"48.33333333333333"[39m
                [33mstroke[39m=[32m"#ff9800"[39m
                [33mstroke-dasharray[39m=[32m"5,5"[39m
                [33mstroke-width[39m=[32m"2"[39m
              [36m/>[39m
              [36m<text[39m
                [33mfill[39m=[32m"#212121"[39m
                [33mfont-size[39m=[32m"10"[39m
                [33mfont-weight[39m=[32m"bold"[39m
                [33mtext-anchor[39m=[32m"middle"[39m
                [33mx[39m=[32m"240"[39m
                [33my[39m=[32m"46.66666666666667"[39m
              [36m>[39m
                [0mAGGRESSIVE APPROACH[0m
              [36m</text>[39m
              [36m<text[39m
                [33mfill[39m=[32m"#757575"[39m
                [33mfont-size[39m=[32m"8"[39m
                [33mtext-anchor[39m=[32m"middle"[39m
                [33mx[39m=[32m"240"[39m
                [33my[39m=[32m"103"[39m
              [36m>[39m
                [0m70%[0m
                [0m success[0m
              [36m</text>[39m
            [36m</g>[39m
            [36m<path[39m
              [33md[39m=[32m"M 150 100 L 200 90 L 340 105 L 380 100"[39m
              [33mfill[39m=[32m"none"[39m
              [33mmarker-end[39m=[32m"url(#arrowhead)"[39m
              [33mstroke[39m=[32m"#047857"[39m
              [33mstroke-dasharray[39m=[32m"8,4"[39m
              [33mstroke-width[39m=[32m"3"[39m
            [36m/>[39m
            [36m<ellipse[39m
              [33mcx[39m=[32m"280"[39m
              [33mcy[39m=[32m"60"[39m
              [33mfill[39m=[32m"#4682B4"[39m
              [33mopacity[39m=[32m"0.6"[39m
              [33mrx[39m=[32m"40"[39m
              [33mry[39m=[32m"20"[39m
            [36m/>[39m
            [36m<text[39m
              [33mfill[39m=[32m"white"[39m
              [33mfont-size[39m=[32m"8"[39m
              [33mfont-weight[39m=[32m"bold"[39m
              [33mtext-anchor[39m=[32m"middle"[39m
              [33mx[39m=[32m"280"[39m
              [33my[39m=[32m"63"[39m
            [36m>[39m
              [0mWATER[0m
            [36m</text>[39m
            [36m<ellipse[39m
              [33mcx[39m=[32m"320"[39m
              [33mcy[39m=[32m"140"[39m
              [33mfill[39m=[32m"#F4A460"[39m
              [33mopacity[39m=[32m"0.8"[39m
              [33mrx[39m=[32m"25"[39m
              [33mry[39m=[32m"15"[39m
            [36m/>[39m
            [36m<text[39m
              [33mfill[39m=[32m"#212121"[39m
              [33mfont-size[39m=[32m"8"[39m
              [33mfont-weight[39m=[32m"bold"[39m
              [33mtext-anchor[39m=[32m"middle"[39m
              [33mx[39m=[32m"320"[39m
              [33my[39m=[32m"143"[39m
            [36m>[39m
              [0mSAND[0m
            [36m</text>[39m
            [36m<g>[39m
              [36m<line[39m
                [33mopacity[39m=[32m"0.6"[39m
                [33mstroke[39m=[32m"#757575"[39m
                [33mstroke-dasharray[39m=[32m"3,3"[39m
                [33mstroke-width[39m=[32m"1"[39m
                [33mx1[39m=[32m"280"[39m
                [33mx2[39m=[32m"280"[39m
                [33my1[39m=[32m"20"[39m
                [33my2[39m=[32m"180"[39m
              [36m/>[39m
              [36m<text[39m
                [33mfill[39m=[32m"#757575"[39m
                [33mfont-size[39m=[32m"9"[39m
                [33mfont-weight[39m=[32m"bold"[39m
                [33mtext-anchor[39m=[32m"middle"[39m
                [33mx[39m=[32m"280"[39m
                [33my[39m=[32m"180"[39m
              [36m>[39m
                [0m100[0m
                [0my[0m
              [36m</text>[39m
            [36m</g>[39m
            [36m<circle[39m
              [33mcx[39m=[32m"150"[39m
              [33mcy[39m=[32m"100"[39m
              [33mfill[39m=[32m"#047857"[39m
              [33mr[39m=[32m"8"[39m
              [33mstroke[39m=[32m"white"[39m
              [33mstroke-width[39m=[32m"2"[39m
            [36m/>[39m
            [36m<text[39m
              [33mfill[39m=[32m"#047857"[39m
              [33mfont-size[39m=[32m"10"[39m
              [33mfont-weight[39m=[32m"bold"[39m
              [33mtext-anchor[39m=[32m"middle"[39m
              [33mx[39m=[32m"150"[39m
              [33my[39m=[32m"85"[39m
            [36m>[39m
              [0mYOU[0m
            [36m</text>[39m
            [36m<circle[39m
              [33mcx[39m=[32m"380"[39m
              [33mcy[39m=[32m"100"[39m
              [33mfill[39m=[32m"red"[39m
              [33mr[39m=[32m"4"[39m
            [36m/>[39m
            [36m<line[39m
              [33mstroke[39m=[32m"red"[39m
              [33mstroke-width[39m=[32m"2"[39m
              [33mx1[39m=[32m"380"[39m
              [33mx2[39m=[32m"380"[39m
              [33my1[39m=[32m"85"[39m
              [33my2[39m=[32m"96"[39m
            [36m/>[39m
            [36m<text[39m
              [33mfill[39m=[32m"red"[39m
              [33mfont-size[39m=[32m"10"[39m
              [33mfont-weight[39m=[32m"bold"[39m
              [33mx[39m=[32m"390"[39m
              [33my[39m=[32m"103"[39m
            [36m>[39m
              [0mPIN[0m
            [36m</text>[39m
            [36m<defs>[39m
              [36m<marker[39m
                [33mid[39m=[32m"arrowhead"[39m
                [33mmarkerHeight[39m=[32m"7"[39m
                [33mmarkerWidth[39m=[32m"10"[39m
                [33morient[39m=[32m"auto"[39m
                [33mrefX[39m=[32m"10"[39m
                [33mrefY[39m=[32m"3.5"[39m
              [36m>[39m
                [36m<polygon[39m
                  [33mfill[39m=[32m"#047857"[39m
                  [33mpoints[39m=[32m"0 0, 10 3.5, 0 7"[39m
                [36m/>[39m
              [36m</marker>[39m
            [36m</defs>[39m
          [36m</svg>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"position: absolute; top: 0.5rem; left: 0.5rem; background: rgba(255, 255, 255, 0.9); padding: 0.5rem; border-radius: 0.5rem; font-size: 0.75rem; min-width: 120px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-weight: 700; margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [0mLegend[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"width: 12px; height: 12px; background: rgba(56, 142, 60, 0.251); border: 1px solid #388e3c; border-radius: 50%; margin-right: 0.25rem;"[39m
              [36m/>[39m
              [0mLow Risk[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"width: 12px; height: 12px; background: rgba(255, 152, 0, 0.251); border: 1px solid #ff9800; border-radius: 50%; margin-right: 0.25rem;"[39m
              [36m/>[39m
              [0mMedium Risk[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"width: 12px; height: 12px; background: rgba(211, 47, 47, 0.251); border: 1px solid #d32f2f; border-radius: 50%; margin-right: 0.25rem;"[39m
              [36m/>[39m
              [0mHigh Risk[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"width: 12px; height: 2px; background: rgb(4, 120, 87); margin-right: 0.25rem;"[39m
              [36m/>[39m
              [0mOptimal Path[0m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"position: absolute; top: 0.5rem; right: 0.5rem; background: rgba(255, 255, 255, 0.95); padding: 0.75rem; border-radius: 0.5rem; border: 2px solid #047857; min-width: 160px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-weight: 700; color: rgb(4, 120, 87); margin-bottom: 0.25rem; font-size: 0.875rem;"[39m
            [36m>[39m
              [0m🎯 Recommended[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 1rem; font-weight: 700; margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [0mCONSERVATIVE APPROACH[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 0.75rem; color: rgb(117, 117, 117); margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [0mSuccess: [0m
              [0m85%[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 0.75rem; color: rgb(56, 142, 60);"[39m
            [36m>[39m
              [0mRisk: [0m
              [0m25[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      159 |
      160 |     expect(screen.getByText('🎯 Recommended')).toBeInTheDocument();
    > 161 |     expect(screen.getByText('CONSERVATIVE APPROACH')).toBeInTheDocument();
          |                   ^
      162 |     expect(screen.getByText('Success: 85%')).toBeInTheDocument();
      163 |     expect(screen.getByText('Risk: 25')).toBeInTheDocument();
      164 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/ShotVisualizationOverlay.test.js:161:19)

FAIL src/components/signup/__tests__/MatchmakingSuggestions.test.js
  ● Console

    console.error
      Error loading matches: Error: API Error
          at Object.<anonymous> (/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/signup/__tests__/MatchmakingSuggestions.test.js:70:33)
          at Promise.then.completed (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:391:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:316:10)
          at _callCircusTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:218:40)
          at _runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:155:3)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:66:9)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:60:9)
          at run (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:25:3)
          at runAndTransformResultsToJestFormat (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
          at jestAdapter (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
          at runTestInternal (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:389:16)
          at runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:475:34)
          at Object.worker (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/testWorker.js:133:12)

      39 |       setError(null);
      40 |     } catch (err) {
    > 41 |       console.error('Error loading matches:', err);
         |               ^
      42 |       setError(err.message);
      43 |       setMatches([]);
      44 |     } finally {

      at loadMatches (src/components/signup/MatchmakingSuggestions.js:41:15)

    console.error
      An update to MatchmakingSuggestions inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      32 |       if (response.ok) {
      33 |         const data = await response.json();
    > 34 |         setMatches(data.matches || []);
         |         ^
      35 |       } else {
      36 |         throw new Error('Failed to load match suggestions');
      37 |       }

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setMatches (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at loadMatches (src/components/signup/MatchmakingSuggestions.js:34:9)

    console.error
      An update to MatchmakingSuggestions inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      37 |       }
      38 |       
    > 39 |       setError(null);
         |       ^
      40 |     } catch (err) {
      41 |       console.error('Error loading matches:', err);
      42 |       setError(err.message);

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at loadMatches (src/components/signup/MatchmakingSuggestions.js:39:7)

    console.error
      An update to MatchmakingSuggestions inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      43 |       setMatches([]);
      44 |     } finally {
    > 45 |       setLoading(false);
         |       ^
      46 |     }
      47 |   };
      48 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at loadMatches (src/components/signup/MatchmakingSuggestions.js:45:7)

    console.error
      An update to MatchmakingSuggestions inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      32 |       if (response.ok) {
      33 |         const data = await response.json();
    > 34 |         setMatches(data.matches || []);
         |         ^
      35 |       } else {
      36 |         throw new Error('Failed to load match suggestions');
      37 |       }

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setMatches (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at loadMatches (src/components/signup/MatchmakingSuggestions.js:34:9)

    console.error
      An update to MatchmakingSuggestions inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      37 |       }
      38 |       
    > 39 |       setError(null);
         |       ^
      40 |     } catch (err) {
      41 |       console.error('Error loading matches:', err);
      42 |       setError(err.message);

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setError (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at loadMatches (src/components/signup/MatchmakingSuggestions.js:39:7)

    console.error
      An update to MatchmakingSuggestions inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      43 |       setMatches([]);
      44 |     } finally {
    > 45 |       setLoading(false);
         |       ^
      46 |     }
      47 |   };
      48 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at loadMatches (src/components/signup/MatchmakingSuggestions.js:45:7)

  ● MatchmakingSuggestions › renders match suggestions after loading

    Found multiple elements with the text: /Monday/i

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<button[39m
      [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
    [36m>[39m
      [0mMonday[0m
    [36m</button>[39m

    Ignored nodes: comments, script, style
    [36m<h4[39m
      [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 18px; margin-bottom: 12px;"[39m
    [36m>[39m
      [0mMonday[0m
    [36m</h4>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1200px; margin: 0px auto;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-bottom: 30px;"[39m
          [36m>[39m
            [36m<h2[39m
              [33mstyle[39m=[32m"color: rgb(51, 51, 51); margin-bottom: 10px;"[39m
            [36m>[39m
              [0m🤖 Smart Golf Matchmaking[0m
            [36m</h2>[39m
            [36m<p[39m
              [33mstyle[39m=[32m"color: rgb(108, 117, 125); font-size: 14px;"[39m
            [36m>[39m
              [0mAutomatic 4-player group suggestions based on schedule compatibility[0m
            [36m</p>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"margin-top: 15px; padding: 12px; background: rgb(255, 243, 205); border: 1px solid #ffc107; border-radius: 6px; font-size: 13px; color: rgb(133, 100, 4);"[39m
            [36m>[39m
              [0m🔔 [0m
              [36m<strong>[39m
                [0mHow it works:[0m
              [36m</strong>[39m
              [0m The system automatically finds groups of 4 players with overlapping availability and sends email invitations daily at 10 AM.[0m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 20px; border-radius: 8px; margin-bottom: 30px; border: 1px solid #dee2e6;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"margin-bottom: 20px;"[39m
            [36m>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; font-size: 14px; font-weight: 600; color: rgb(73, 80, 87); margin-bottom: 8px;"[39m
              [36m>[39m
                [0mMinimum Overlap Hours:[0m
              [36m</label>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; align-items: center; gap: 15px;"[39m
              [36m>[39m
                [36m<input[39m
                  [33mmax[39m=[32m"6"[39m
                  [33mmin[39m=[32m"1"[39m
                  [33mstep[39m=[32m"0.5"[39m
                  [33mstyle[39m=[32m"flex: 1;"[39m
                  [33mtype[39m=[32m"range"[39m
                  [33mvalue[39m=[32m"2"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: rgb(0, 123, 255); color: white; border-radius: 4px; font-size: 14px; font-weight: 600; min-width: 60px; text-align: center;"[39m
                [36m>[39m
                  [0m2[0m
                  [0mh[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; font-size: 14px; font-weight: 600; color: rgb(73, 80, 87); margin-bottom: 8px;"[39m
              [36m>[39m
                [0mPreferred Days:[0m
              [36m</label>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; gap: 8px; flex-wrap: wrap;"[39m
              [36m>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mMonday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mTuesday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mWednesday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mThursday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mFriday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mSaturday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mSunday[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
            [36m>[39m
              [0mFound [0m
              [36m<strong>[39m
                [0m1[0m
              [36m</strong>[39m
              [0m potential matches[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 10px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"padding: 8px 16px; background: rgb(108, 117, 125); color: white; border-radius: 4px; font-size: 14px; cursor: pointer;"[39m
              [36m>[39m
                [0mRefresh[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"padding: 8px 16px; background: rgb(40, 167, 69); color: white; border-radius: 4px; font-size: 14px; cursor: pointer; opacity: 1;"[39m
              [36m>[39m
                [0mSend All Notifications[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); gap: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"border: 2px solid #dee2e6; border-radius: 8px; padding: 20px; background: white; position: relative;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"position: absolute; top: 10px; right: 10px; padding: 4px 8px; background: rgb(40, 167, 69); color: white; border-radius: 12px; font-size: 12px; font-weight: 600;"[39m
              [36m>[39m
                [0mExcellent[0m
                [0m Match[0m
              [36m</div>[39m
              [36m<h4[39m
                [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 18px; margin-bottom: 12px;"[39m
              [36m>[39m
                [0mMonday[0m
              [36m</h4>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 12px; border-radius: 6px; margin-bottom: 16px;"[39m
              [36m>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(73, 80, 87); margin-bottom: 6px;"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mAvailable:[0m
                  [36m</strong>[39m
                  [0m [0m
                  [0m9:00 AM[0m
                  [0m - [0m
                  [0m1:00 PM[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(73, 80, 87);"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mSuggested Tee Time:[0m
                  [36m</strong>[39m
                  [36m<span[39m
                    [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 8px; background: rgb(0, 123, 255); color: white; border-radius: 4px; font-size: 13px;"[39m
                  [36m>[39m
                    [0m10:00 AM[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"margin-bottom: 16px;"[39m
              [36m>[39m
                [36m<h5[39m
                  [33mstyle[39m=[32m"color: rgb(73, 80, 87); font-size: 14px; font-weight: 600; margin-bottom: 8px;"[39m
                [36m>[39m
                  [0mPlayers ([0m
                  [0m4[0m
                  [0m)[0m
                [36m</h5>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 6px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mJohn Doe[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mJane Smith[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mBob Wilson[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mAlice Brown[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; justify-content: space-between; padding: 8px 0px; border-top: 1px solid #dee2e6; font-size: 12px; color: rgb(108, 117, 125);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0mOverlap: [0m
                  [0m4.0[0m
                  [0mh[0m
                [36m</span>[39m
                [36m<span>[39m
                  [0mScore: [0m
                  [0m86[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-top: 40px; padding: 20px; border-radius: 8px; color: white;"[39m
          [36m>[39m
            [36m<h4[39m
              [33mstyle[39m=[32m"color: white; margin-bottom: 10px;"[39m
            [36m>[39m
              [0m🎯 Matchmaking Features[0m
            [36m</h4>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px; font-size: 13px;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m🤝 Group Formation:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mAutomatically creates perfect 4-player groups[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m⏰ Time Optimization:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mFinds optimal tee times for all players[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m📧 Email Invitations:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mSends notifications to matched players[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m🔄 Smart Rotation:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mAvoids re-matching same groups (3-day cooldown)[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      45 |     render(<MatchmakingSuggestions />);
      46 |
    > 47 |     await waitFor(() => {
         |                  ^
      48 |       expect(screen.getByText(/Monday/i)).toBeInTheDocument();
      49 |     });
      50 |

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/components/signup/__tests__/MatchmakingSuggestions.test.js:47:18)

  ● MatchmakingSuggestions › updates minimum overlap hours

    TestingLibraryElementError: Unable to find an accessible element with the role "slider"

    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"text-align: center; padding: 40px; font-size: 16px; color: rgb(108, 117, 125);"[39m
        [36m>[39m
          [0mFinding perfect golf matches...[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      85 |     render(<MatchmakingSuggestions />);
      86 |
    > 87 |     const slider = screen.getByRole('slider');
         |                           ^
      88 |     fireEvent.change(slider, { target: { value: '3' } });
      89 |
      90 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/signup/__tests__/MatchmakingSuggestions.test.js:87:27)

  ● MatchmakingSuggestions › toggles day selection

    TestingLibraryElementError: Unable to find an element with the text: Monday. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"text-align: center; padding: 40px; font-size: 16px; color: rgb(108, 117, 125);"[39m
        [36m>[39m
          [0mFinding perfect golf matches...[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      107 |     render(<MatchmakingSuggestions />);
      108 |
    > 109 |     const mondayButton = screen.getByText('Monday');
          |                                 ^
      110 |     fireEvent.click(mondayButton);
      111 |
      112 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/signup/__tests__/MatchmakingSuggestions.test.js:109:33)

  ● MatchmakingSuggestions › sends notifications

    Found multiple elements with the text: /Monday/i

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<button[39m
      [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
    [36m>[39m
      [0mMonday[0m
    [36m</button>[39m

    Ignored nodes: comments, script, style
    [36m<h4[39m
      [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 18px; margin-bottom: 12px;"[39m
    [36m>[39m
      [0mMonday[0m
    [36m</h4>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1200px; margin: 0px auto;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-bottom: 30px;"[39m
          [36m>[39m
            [36m<h2[39m
              [33mstyle[39m=[32m"color: rgb(51, 51, 51); margin-bottom: 10px;"[39m
            [36m>[39m
              [0m🤖 Smart Golf Matchmaking[0m
            [36m</h2>[39m
            [36m<p[39m
              [33mstyle[39m=[32m"color: rgb(108, 117, 125); font-size: 14px;"[39m
            [36m>[39m
              [0mAutomatic 4-player group suggestions based on schedule compatibility[0m
            [36m</p>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"margin-top: 15px; padding: 12px; background: rgb(255, 243, 205); border: 1px solid #ffc107; border-radius: 6px; font-size: 13px; color: rgb(133, 100, 4);"[39m
            [36m>[39m
              [0m🔔 [0m
              [36m<strong>[39m
                [0mHow it works:[0m
              [36m</strong>[39m
              [0m The system automatically finds groups of 4 players with overlapping availability and sends email invitations daily at 10 AM.[0m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 20px; border-radius: 8px; margin-bottom: 30px; border: 1px solid #dee2e6;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"margin-bottom: 20px;"[39m
            [36m>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; font-size: 14px; font-weight: 600; color: rgb(73, 80, 87); margin-bottom: 8px;"[39m
              [36m>[39m
                [0mMinimum Overlap Hours:[0m
              [36m</label>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; align-items: center; gap: 15px;"[39m
              [36m>[39m
                [36m<input[39m
                  [33mmax[39m=[32m"6"[39m
                  [33mmin[39m=[32m"1"[39m
                  [33mstep[39m=[32m"0.5"[39m
                  [33mstyle[39m=[32m"flex: 1;"[39m
                  [33mtype[39m=[32m"range"[39m
                  [33mvalue[39m=[32m"2"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: rgb(0, 123, 255); color: white; border-radius: 4px; font-size: 14px; font-weight: 600; min-width: 60px; text-align: center;"[39m
                [36m>[39m
                  [0m2[0m
                  [0mh[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; font-size: 14px; font-weight: 600; color: rgb(73, 80, 87); margin-bottom: 8px;"[39m
              [36m>[39m
                [0mPreferred Days:[0m
              [36m</label>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; gap: 8px; flex-wrap: wrap;"[39m
              [36m>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mMonday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mTuesday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mWednesday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mThursday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mFriday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mSaturday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mSunday[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
            [36m>[39m
              [0mFound [0m
              [36m<strong>[39m
                [0m1[0m
              [36m</strong>[39m
              [0m potential matches[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 10px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"padding: 8px 16px; background: rgb(108, 117, 125); color: white; border-radius: 4px; font-size: 14px; cursor: pointer;"[39m
              [36m>[39m
                [0mRefresh[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"padding: 8px 16px; background: rgb(40, 167, 69); color: white; border-radius: 4px; font-size: 14px; cursor: pointer; opacity: 1;"[39m
              [36m>[39m
                [0mSend All Notifications[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); gap: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"border: 2px solid #dee2e6; border-radius: 8px; padding: 20px; background: white; position: relative;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"position: absolute; top: 10px; right: 10px; padding: 4px 8px; background: rgb(40, 167, 69); color: white; border-radius: 12px; font-size: 12px; font-weight: 600;"[39m
              [36m>[39m
                [0mExcellent[0m
                [0m Match[0m
              [36m</div>[39m
              [36m<h4[39m
                [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 18px; margin-bottom: 12px;"[39m
              [36m>[39m
                [0mMonday[0m
              [36m</h4>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 12px; border-radius: 6px; margin-bottom: 16px;"[39m
              [36m>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(73, 80, 87); margin-bottom: 6px;"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mAvailable:[0m
                  [36m</strong>[39m
                  [0m [0m
                  [0m9:00 AM[0m
                  [0m - [0m
                  [0m1:00 PM[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(73, 80, 87);"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mSuggested Tee Time:[0m
                  [36m</strong>[39m
                  [36m<span[39m
                    [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 8px; background: rgb(0, 123, 255); color: white; border-radius: 4px; font-size: 13px;"[39m
                  [36m>[39m
                    [0m10:00 AM[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"margin-bottom: 16px;"[39m
              [36m>[39m
                [36m<h5[39m
                  [33mstyle[39m=[32m"color: rgb(73, 80, 87); font-size: 14px; font-weight: 600; margin-bottom: 8px;"[39m
                [36m>[39m
                  [0mPlayers ([0m
                  [0m4[0m
                  [0m)[0m
                [36m</h5>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 6px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mJohn Doe[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mJane Smith[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mBob Wilson[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mAlice Brown[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; justify-content: space-between; padding: 8px 0px; border-top: 1px solid #dee2e6; font-size: 12px; color: rgb(108, 117, 125);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0mOverlap: [0m
                  [0m4.0[0m
                  [0mh[0m
                [36m</span>[39m
                [36m<span>[39m
                  [0mScore: [0m
                  [0m86[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-top: 40px; padding: 20px; border-radius: 8px; color: white;"[39m
          [36m>[39m
            [36m<h4[39m
              [33mstyle[39m=[32m"color: white; margin-bottom: 10px;"[39m
            [36m>[39m
              [0m🎯 Matchmaking Features[0m
            [36m</h4>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px; font-size: 13px;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m🤝 Group Formation:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mAutomatically creates perfect 4-player groups[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m⏰ Time Optimization:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mFinds optimal tee times for all players[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m📧 Email Invitations:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mSends notifications to matched players[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m🔄 Smart Rotation:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mAvoids re-matching same groups (3-day cooldown)[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      134 |     render(<MatchmakingSuggestions />);
      135 |
    > 136 |     await waitFor(() => {
          |                  ^
      137 |       expect(screen.getByText(/Monday/i)).toBeInTheDocument();
      138 |     });
      139 |

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/components/signup/__tests__/MatchmakingSuggestions.test.js:136:18)

FAIL src/components/__tests__/GameDashboard.test.js
  ● GameDashboard › Overview Panel › shows player position information

    TestingLibraryElementError: Unable to find an element with the text: 120y from pin. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"game-dashboard"[39m
          [33mdata-testid[39m=[32m"game-dashboard"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"dashboard-header"[39m
            [33mdata-testid[39m=[32m"dashboard-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mWolf Goat Pig - Hole [0m
              [0m8[0m
            [36m</h1>[39m
            [36m<div[39m
              [33mclass[39m=[32m"pot-display"[39m
              [33mdata-testid[39m=[32m"pot-display"[39m
            [36m>[39m
              [0mCurrent Pot: $[0m
              [0m48.50[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"view-switcher"[39m
              [33mdata-testid[39m=[32m"view-switcher"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button active"[39m
                [33mdata-testid[39m=[32m"view-overview"[39m
              [36m>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-scores"[39m
              [36m>[39m
                [0mScores[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-betting"[39m
              [36m>[39m
                [0mBetting[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-analytics"[39m
              [36m>[39m
                [0mAnalytics[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"dashboard-content"[39m
            [33mdata-testid[39m=[32m"dashboard-content"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"overview-panel"[39m
              [33mdata-testid[39m=[32m"overview-panel"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"players-grid"[39m
                [33mdata-testid[39m=[32m"players-grid"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player1"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mAlice[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m12[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m32[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m15.50[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m120[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mfairway[0m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player2"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mBob[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m18[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m38[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m-8.25[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m85[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mrough[0m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player3"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mCarol[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m8[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m29[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m22.75[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m150[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mbunker[0m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"floating-actions"[39m
            [33mdata-testid[39m=[32m"floating-actions"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button betting-button"[39m
              [33mdata-testid[39m=[32m"quick-bet-button"[39m
            [36m>[39m
              [0m💰 Quick Bet[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button analysis-button"[39m
              [33mdata-testid[39m=[32m"shot-analysis-button"[39m
            [36m>[39m
              [0m🎯 Shot Analysis[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button simulation-button"[39m
              [33mdata-testid[39m=[32m"monte-carlo-button"[39m
            [36m>[39m
              [0m📊 Simulate[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"realtime-indicator active"[39m
            [33mdata-testid[39m=[32m"realtime-indicator"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"pulse-dot"[39m
            [36m/>[39m
            [36m<span>[39m
              [0mLive Updates[0m
            [36m</span>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      487 |
      488 |       // Check position display for first player
    > 489 |       expect(screen.getByText('120y from pin')).toBeInTheDocument();
          |                     ^
      490 |       expect(screen.getByText('Lie: fairway')).toBeInTheDocument();
      491 |     });
      492 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/GameDashboard.test.js:489:21)

  ● GameDashboard › Error Handling › does not crash with malformed data

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "Cannot read properties of null (reading 'id')"

          73 |                 <div
          74 |                   key={player.id}
        > 75 |                   data-testid={`player-card-${player.id}`}
             |                                                      ^
          76 |                   className={`player-card ${selectedPlayer?.id === player.id ? 'selected' : ''}`}
          77 |                   onClick={() => setSelectedPlayer(player)}
          78 |                 >

      at map (src/components/__tests__/GameDashboard.test.js:75:54)
                at Array.map (<anonymous>)
      at GameDashboard (src/components/__tests__/GameDashboard.test.js:72:36)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at src/components/__tests__/GameDashboard.test.js:871:15
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:83:11)
      at Object.toThrow (node_modules/expect/build/index.js:382:21)
      at Object.<anonymous> (src/components/__tests__/GameDashboard.test.js:876:14)
      at Object.<anonymous> (src/components/__tests__/GameDashboard.test.js:876:14)

  ● GameDashboard › Accessibility › has proper ARIA labels and roles

    TestingLibraryElementError: Unable to find an accessible element with the role "table"

    Here are the accessible roles:

      heading:

      Name "Wolf Goat Pig - Hole 8":
      [36m<h1 />[39m

      --------------------------------------------------
      button:

      Name "Overview":
      [36m<button[39m
        [33mclass[39m=[32m"view-button active"[39m
        [33mdata-testid[39m=[32m"view-overview"[39m
      [36m/>[39m

      Name "Scores":
      [36m<button[39m
        [33mclass[39m=[32m"view-button "[39m
        [33mdata-testid[39m=[32m"view-scores"[39m
      [36m/>[39m

      Name "Betting":
      [36m<button[39m
        [33mclass[39m=[32m"view-button "[39m
        [33mdata-testid[39m=[32m"view-betting"[39m
      [36m/>[39m

      Name "Analytics":
      [36m<button[39m
        [33mclass[39m=[32m"view-button "[39m
        [33mdata-testid[39m=[32m"view-analytics"[39m
      [36m/>[39m

      Name "💰 Quick Bet":
      [36m<button[39m
        [33mclass[39m=[32m"quick-action-button betting-button"[39m
        [33mdata-testid[39m=[32m"quick-bet-button"[39m
      [36m/>[39m

      Name "🎯 Shot Analysis":
      [36m<button[39m
        [33mclass[39m=[32m"quick-action-button analysis-button"[39m
        [33mdata-testid[39m=[32m"shot-analysis-button"[39m
      [36m/>[39m

      Name "📊 Simulate":
      [36m<button[39m
        [33mclass[39m=[32m"quick-action-button simulation-button"[39m
        [33mdata-testid[39m=[32m"monte-carlo-button"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"game-dashboard"[39m
          [33mdata-testid[39m=[32m"game-dashboard"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"dashboard-header"[39m
            [33mdata-testid[39m=[32m"dashboard-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mWolf Goat Pig - Hole [0m
              [0m8[0m
            [36m</h1>[39m
            [36m<div[39m
              [33mclass[39m=[32m"pot-display"[39m
              [33mdata-testid[39m=[32m"pot-display"[39m
            [36m>[39m
              [0mCurrent Pot: $[0m
              [0m48.50[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"view-switcher"[39m
              [33mdata-testid[39m=[32m"view-switcher"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button active"[39m
                [33mdata-testid[39m=[32m"view-overview"[39m
              [36m>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-scores"[39m
              [36m>[39m
                [0mScores[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-betting"[39m
              [36m>[39m
                [0mBetting[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-analytics"[39m
              [36m>[39m
                [0mAnalytics[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"dashboard-content"[39m
            [33mdata-testid[39m=[32m"dashboard-content"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"overview-panel"[39m
              [33mdata-testid[39m=[32m"overview-panel"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"players-grid"[39m
                [33mdata-testid[39m=[32m"players-grid"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player1"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mAlice[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m12[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m32[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m15.50[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m120[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mfairway[0m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player2"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mBob[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m18[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m38[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m-8.25[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m85[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mrough[0m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player3"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mCarol[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m8[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m29[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m22.75[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m150[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mbunker[0m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"floating-actions"[39m
            [33mdata-testid[39m=[32m"floating-actions"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button betting-button"[39m
              [33mdata-testid[39m=[32m"quick-bet-button"[39m
            [36m>[39m
              [0m💰 Quick Bet[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button analysis-button"[39m
              [33mdata-testid[39m=[32m"shot-analysis-button"[39m
            [36m>[39m
              [0m🎯 Shot Analysis[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button simulation-button"[39m
              [33mdata-testid[39m=[32m"monte-carlo-button"[39m
            [36m>[39m
              [0m📊 Simulate[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"realtime-indicator active"[39m
            [33mdata-testid[39m=[32m"realtime-indicator"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"pulse-dot"[39m
            [36m/>[39m
            [36m<span>[39m
              [0mLive Updates[0m
            [36m</span>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      944 |
      945 |       // Tables should have proper roles
    > 946 |       const scoreTable = screen.getByRole('table');
          |                                 ^
      947 |       expect(scoreTable).toBeInTheDocument();
      948 |
      949 |       // Buttons should be keyboard accessible

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/GameDashboard.test.js:946:33)

  ● GameDashboard › Accessibility › supports keyboard navigation

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "scores"

    Number of calls: 0

      975 |       // Enter should activate button
      976 |       await user.keyboard('{Enter}');
    > 977 |       expect(mockOnViewChange).toHaveBeenCalledWith('scores');
          |                                ^
      978 |     });
      979 |   });
      980 | });

      at Object.<anonymous> (src/components/__tests__/GameDashboard.test.js:977:32)

PASS src/components/simulation/__tests__/GameSetup.test.js
PASS src/components/ui/__tests__/Button.test.js
PASS src/context/__tests__/GameProvider.shotProbabilities.test.js
PASS src/components/signup/__tests__/PlayerAvailability.test.js
  ● Console

    console.error
      Save error: Error: Save failed
          at Object.<anonymous> (/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/signup/__tests__/PlayerAvailability.test.js:176:30)
          at Promise.then.completed (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:391:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:316:10)
          at _callCircusTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:218:40)
          at _runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:155:3)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:66:9)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:60:9)
          at run (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:25:3)
          at runAndTransformResultsToJestFormat (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
          at jestAdapter (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
          at runTestInternal (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:389:16)
          at runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:475:34)
          at Object.worker (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/testWorker.js:133:12)

      170 |       setError(null);
      171 |     } catch (err) {
    > 172 |       console.error('Save error:', err);
          |               ^
      173 |       setError(`Failed to save ${dayNames[dayIndex]} availability: ${err.message}`);
      174 |     } finally {
      175 |       setSaving(false);

      at saveDayAvailability (src/components/signup/PlayerAvailability.js:172:15)

PASS src/components/__tests__/PlayerProfileManager.test.js
  ● Console

    console.error
      Error loading profiles: Error: Network error
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/__tests__/PlayerProfileManager.test.js:85:55
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-mock/build/index.js:449:39
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-mock/build/index.js:457:13
          at fetch (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-mock/build/index.js:170:19)
          at loadProfiles (/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/PlayerProfileManager.js:41:36)
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/PlayerProfileManager.js:35:9
          at Object.react_stack_bottom_frame (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:23953:20)
          at runWithFiberInDEV (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
          at commitHookEffectListMount (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:11905:29)
          at commitHookPassiveMountEffects (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:12028:11)
          at commitPassiveMountOnFiber (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13841:13)
          at recursivelyTraversePassiveMountEffects (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13815:11)
          at commitPassiveMountOnFiber (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13957:11)
          at recursivelyTraversePassiveMountEffects (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13815:11)
          at commitPassiveMountOnFiber (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13834:11)
          at recursivelyTraversePassiveMountEffects (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13815:11)
          at commitPassiveMountOnFiber (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13957:11)
          at recursivelyTraversePassiveMountEffects (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13815:11)
          at commitPassiveMountOnFiber (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13834:11)
          at recursivelyTraversePassiveMountEffects (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13815:11)
          at commitPassiveMountOnFiber (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13834:11)
          at recursivelyTraversePassiveMountEffects (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13815:11)
          at commitPassiveMountOnFiber (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13853:11)
          at flushPassiveEffects (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:15737:9)
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:15379:15
          at flushActQueue (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react/cjs/react.development.js:566:34)
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react/cjs/react.development.js:860:10)
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at renderRoot (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/@testing-library/react/dist/pure.js:190:26)
          at render (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/@testing-library/react/dist/pure.js:292:10)
          at renderManager (/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/__tests__/PlayerProfileManager.test.js:50:11)
          at Object.<anonymous> (/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/__tests__/PlayerProfileManager.test.js:87:5)
          at Promise.then.completed (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:391:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:316:10)
          at _callCircusTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:218:40)
          at _runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:155:3)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:66:9)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:60:9)
          at run (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:25:3)
          at runAndTransformResultsToJestFormat (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
          at jestAdapter (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
          at runTestInternal (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:389:16)
          at runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:475:34)
          at Object.worker (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/testWorker.js:133:12)

      48 |         } catch (err) {
      49 |             setError(`Failed to load profiles: ${err.message}`);
    > 50 |             console.error('Error loading profiles:', err);
         |                     ^
      51 |         } finally {
      52 |             setLoading(false);
      53 |         }

      at loadProfiles (src/components/PlayerProfileManager.js:50:21)

PASS src/components/simulation/__tests__/GamePlay.test.js
PASS src/hooks/__tests__/usePlayerProfile.test.js
  ● Console

    console.error
      An update to TestComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      87 |                 }
      88 |             };
    > 89 |             setProfileStatistics(updatedStats);
         |             ^
      90 |             saveToLocalStorage(STORAGE_KEYS.STATISTICS_CACHE, updatedStats);
      91 |
      92 |             return stats;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setProfileStatistics (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/hooks/usePlayerProfile.js:89:13
      at Object.selectProfile (src/hooks/usePlayerProfile.js:182:13)

    console.error
      An update to TestComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      124 |             
      125 |             const serverProfiles = await response.json();
    > 126 |             setProfiles(serverProfiles);
          |             ^
      127 |             saveToLocalStorage(STORAGE_KEYS.PROFILES_CACHE, serverProfiles);
      128 |
      129 |             // Update selected profile if it exists on server

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setProfiles (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/hooks/usePlayerProfile.js:126:13
      at src/hooks/usePlayerProfile.js:162:13

    console.error
      An update to TestComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      131 |                 const updatedProfile = serverProfiles.find(p => p.id === selectedProfile.id);
      132 |                 if (updatedProfile) {
    > 133 |                     setSelectedProfile(updatedProfile);
          |                     ^
      134 |                     saveToLocalStorage(STORAGE_KEYS.SELECTED_PROFILE, updatedProfile);
      135 |                 }
      136 |             }

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setSelectedProfile (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/hooks/usePlayerProfile.js:133:21
      at src/hooks/usePlayerProfile.js:162:13

    console.error
      An update to TestComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      138 |             // Mark last sync time
      139 |             localStorage.setItem(STORAGE_KEYS.LAST_SYNC, Date.now().toString());
    > 140 |             setSyncStatus('success');
          |             ^
      141 |             
      142 |             // Clear sync status after 2 seconds
      143 |             setTimeout(() => setSyncStatus('idle'), 2000);

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setSyncStatus (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/hooks/usePlayerProfile.js:140:13
      at src/hooks/usePlayerProfile.js:162:13

    console.error
      An update to TestComponent inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      165 |             setError('Failed to load player profiles');
      166 |         } finally {
    > 167 |             setLoading(false);
          |             ^
      168 |         }
      169 |     }, [loadFromLocalStorage, syncWithServer]);
      170 |

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setLoading (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at src/hooks/usePlayerProfile.js:167:13

PASS src/components/simulation/__tests__/SimulationMode.probabilities.test.js
PASS src/components/__tests__/NewComponents.test.js
PASS src/utils/__tests__/api.test.js
PASS src/__tests__/fixtures/gameFixtures.js
PASS src/components/simulation/__tests__/SimulationMode.test.js
  ● Console

    console.error
      An update to SimulationMode inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      317 |       const coursesData = await coursesRes.json();
      318 |       
    > 319 |       setPersonalities(personalitiesData.personalities || []);
          |       ^
      320 |       setSuggestedOpponents(opponentsData.opponents || []);
      321 |       setCourses(coursesData || {});
      322 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setPersonalities (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at fetchInitialData (src/components/simulation/SimulationMode.js:319:7)

    console.error
      An update to SimulationMode inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      318 |       
      319 |       setPersonalities(personalitiesData.personalities || []);
    > 320 |       setSuggestedOpponents(opponentsData.opponents || []);
          |       ^
      321 |       setCourses(coursesData || {});
      322 |       
      323 |       // Set default computer players

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setSuggestedOpponents (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at fetchInitialData (src/components/simulation/SimulationMode.js:320:7)

    console.error
      An update to SimulationMode inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      319 |       setPersonalities(personalitiesData.personalities || []);
      320 |       setSuggestedOpponents(opponentsData.opponents || []);
    > 321 |       setCourses(coursesData || {});
          |       ^
      322 |       
      323 |       // Set default computer players
      324 |       if (opponentsData.opponents && opponentsData.opponents.length >= 3) {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCourses (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at fetchInitialData (src/components/simulation/SimulationMode.js:321:7)

    console.error
      An update to SimulationMode inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      317 |       const coursesData = await coursesRes.json();
      318 |       
    > 319 |       setPersonalities(personalitiesData.personalities || []);
          |       ^
      320 |       setSuggestedOpponents(opponentsData.opponents || []);
      321 |       setCourses(coursesData || {});
      322 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setPersonalities (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at fetchInitialData (src/components/simulation/SimulationMode.js:319:7)

    console.error
      An update to SimulationMode inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      318 |       
      319 |       setPersonalities(personalitiesData.personalities || []);
    > 320 |       setSuggestedOpponents(opponentsData.opponents || []);
          |       ^
      321 |       setCourses(coursesData || {});
      322 |       
      323 |       // Set default computer players

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setSuggestedOpponents (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at fetchInitialData (src/components/simulation/SimulationMode.js:320:7)

    console.error
      An update to SimulationMode inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      319 |       setPersonalities(personalitiesData.personalities || []);
      320 |       setSuggestedOpponents(opponentsData.opponents || []);
    > 321 |       setCourses(coursesData || {});
          |       ^
      322 |       
      323 |       // Set default computer players
      324 |       if (opponentsData.opponents && opponentsData.opponents.length >= 3) {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at setCourses (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at fetchInitialData (src/components/simulation/SimulationMode.js:321:7)

PASS src/components/__tests__/PerformanceAnalytics.test.js
  ● Console

    console.error
      Error loading analytics data: Error: Network error
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/__tests__/PerformanceAnalytics.test.js:91:51
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-mock/build/index.js:449:39
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-mock/build/index.js:457:13
          at fetch (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-mock/build/index.js:170:19)
          at loadAnalyticsData (/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/PerformanceAnalytics.js:38:17)
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/PerformanceAnalytics.js:27:13
          at Object.react_stack_bottom_frame (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:23953:20)
          at runWithFiberInDEV (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
          at commitHookEffectListMount (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:11905:29)
          at commitHookPassiveMountEffects (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:12028:11)
          at commitPassiveMountOnFiber (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13841:13)
          at recursivelyTraversePassiveMountEffects (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13815:11)
          at commitPassiveMountOnFiber (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:13853:11)
          at flushPassiveEffects (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:15737:9)
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react-dom/cjs/react-dom-client.development.js:15379:15
          at flushActQueue (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react/cjs/react.development.js:566:34)
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/react/cjs/react.development.js:860:10)
          at /Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/@testing-library/react/dist/act-compat.js:47:25
          at renderRoot (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/@testing-library/react/dist/pure.js:190:26)
          at render (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/@testing-library/react/dist/pure.js:292:10)
          at Object.<anonymous> (/Users/stuartgano/Documents/wolf-goat-pig/frontend/src/components/__tests__/PerformanceAnalytics.test.js:93:11)
          at Promise.then.completed (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:391:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/utils.js:316:10)
          at _callCircusTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:218:40)
          at _runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:155:3)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:66:9)
          at _runTestsForDescribeBlock (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:60:9)
          at run (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/run.js:25:3)
          at runAndTransformResultsToJestFormat (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
          at jestAdapter (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
          at runTestInternal (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:389:16)
          at runTest (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/runTest.js:475:34)
          at Object.worker (/Users/stuartgano/Documents/wolf-goat-pig/frontend/node_modules/jest-runner/build/testWorker.js:133:12)

      54 |         } catch (err) {
      55 |             setError(`Failed to load analytics data: ${err.message}`);
    > 56 |             console.error('Error loading analytics data:', err);
         |                     ^
      57 |         } finally {
      58 |             setLoading(false);
      59 |         }

      at loadAnalyticsData (src/components/PerformanceAnalytics.js:56:21)

FAIL src/pages/__tests__/SetupPage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/SetupPage.test.js'

      15 |
      16 | const mockNavigate = jest.fn();
    > 17 | jest.mock('react-router-dom', () => ({
         |      ^
      18 |   ...jest.requireActual('react-router-dom'),
      19 |   useNavigate: () => mockNavigate,
      20 | }));

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/SetupPage.test.js:17:6)

FAIL src/pages/__tests__/AdminPage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/AdminPage.test.js'

       6 | import React from 'react';
       7 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';
    >  8 | import { BrowserRouter } from 'react-router-dom';
         | ^
       9 | import AdminPage from '../AdminPage';
      10 | import { ThemeProvider } from '../../theme/Provider';
      11 | import { AuthProvider } from '../../context/AuthContext';

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/AdminPage.test.js:8:1)

FAIL src/pages/__tests__/AboutPage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/AboutPage.test.js'

       6 | import React from 'react';
       7 | import { render, screen } from '@testing-library/react';
    >  8 | import { BrowserRouter } from 'react-router-dom';
         | ^
       9 | import AboutPage from '../AboutPage';
      10 | import { ThemeProvider } from '../../theme/Provider';
      11 |

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/AboutPage.test.js:8:1)

FAIL src/pages/__tests__/SignupPage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/SignupPage.test.js'

      2 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';
      3 | import '@testing-library/jest-dom';
    > 4 | import { BrowserRouter } from 'react-router-dom';
        | ^
      5 | import SignupPage from '../SignupPage';
      6 |
      7 | // Mock Auth0

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/SignupPage.test.js:4:1)

FAIL src/pages/__tests__/HomePage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/HomePage.test.js'

      13 | // Mock the navigation hook
      14 | const mockNavigate = jest.fn();
    > 15 | jest.mock('react-router-dom', () => ({
         |      ^
      16 |   ...jest.requireActual('react-router-dom'),
      17 |   useNavigate: () => mockNavigate,
      18 | }));

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/HomePage.test.js:15:6)

FAIL src/pages/__tests__/GamePage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/GamePage.test.js'

      17 | // Mock the navigation hook
      18 | const mockNavigate = jest.fn();
    > 19 | jest.mock('react-router-dom', () => ({
         |      ^
      20 |   ...jest.requireActual('react-router-dom'),
      21 |   useNavigate: () => mockNavigate,
      22 | }));

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/GamePage.test.js:19:6)

FAIL src/__tests__/utils/testHelpers.js
  ● Test suite failed to run

    ReferenceError: React is not defined

      490 |
      491 | // Error boundary testing
    > 492 | export class TestErrorBoundary extends React.Component {
          |                                        ^
      493 |   constructor(props) {
      494 |     super(props);
      495 |     this.state = { hasError: false, error: null };

      at Object.<anonymous> (src/__tests__/utils/testHelpers.js:492:40)

FAIL src/pages/__tests__/RulesPage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/RulesPage.test.js'

       6 | import React from 'react';
       7 | import { render, screen, fireEvent } from '@testing-library/react';
    >  8 | import { BrowserRouter } from 'react-router-dom';
         | ^
       9 | import RulesPage from '../RulesPage';
      10 | import { ThemeProvider } from '../../theme/Provider';
      11 |

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/RulesPage.test.js:8:1)

FAIL src/components/game/__tests__/UnifiedGameInterface.test.js
  ● Test suite failed to run

    Cannot find module '../../context' from 'src/components/game/__tests__/UnifiedGameInterface.test.js'

      34 | }));
      35 |
    > 36 | jest.mock('../../context', () => ({
         |      ^
      37 |   useGame: jest.fn()
      38 | }));
      39 |

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/components/game/__tests__/UnifiedGameInterface.test.js:36:6)

FAIL src/components/__tests__/WGPAnalyticsDashboard.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/components/__tests__/WGPAnalyticsDashboard.test.js'

       6 | import React from 'react';
       7 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';
    >  8 | import { BrowserRouter } from 'react-router-dom';
         | ^
       9 | import WGPAnalyticsDashboard from '../WGPAnalyticsDashboard';
      10 | import { ThemeProvider } from '../theme/Provider';
      11 | import { AuthProvider } from '../context/AuthContext';

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/components/__tests__/WGPAnalyticsDashboard.test.js:8:1)

FAIL src/components/__tests__/Navigation.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/components/Navigation.js'

    Require stack:
      src/components/Navigation.js
      src/components/__tests__/Navigation.test.js

      1 | import React, { useState } from 'react';
    > 2 | import { useNavigate, useLocation } from 'react-router-dom';
        | ^
      3 | import { useAuth0 } from '@auth0/auth0-react';
      4 | import { useTheme } from '../theme/Provider';
      5 |

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/components/Navigation.js:2:1)
      at Object.<anonymous> (src/components/__tests__/Navigation.test.js:4:1)

FAIL src/context/__tests__/GameProvider.test.js (5.555 s)
  ● GameProvider › API Integration › fetches game state successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "http://localhost:8000/game/state"
    Received: "http://test-api.com/game/state"

    Number of calls: 1

      222 |       });
      223 |
    > 224 |       expect(fetch).toHaveBeenCalledWith(`${process.env.REACT_APP_API_URL}/game/state`);
          |                     ^
      225 |     });
      226 |
      227 |     it('handles fetch game state error', async () => {

      at Object.<anonymous> (src/context/__tests__/GameProvider.test.js:224:21)

  ● GameProvider › API Integration › handles fetch game state error

    expect(element).toHaveTextContent()

    Expected element to have text content:
      Failed to fetch game state
    Received:
      Network error

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"loading"[39m
            [36m>[39m
              [0mNot Loading[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"error"[39m
            [36m>[39m
              [0mNetwork error[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"game-active"[39m
            [36m>[39m
              [0mInactive[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"current-hole"[39m
            [36m>[39m
              [0m1[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"players-count"[39m
            [36m>[39m
              [0m0[0m
            [36m</div>[39m
            [36m<button>[39m
              [0mStart Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mEnd Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mFetch State[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mMake Action[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mClear Error[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mSet Loading[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      234 |
      235 |       await waitFor(() => {
    > 236 |         expect(screen.getByTestId('error')).toHaveTextContent('Failed to fetch game state');
          |                                             ^
      237 |       });
      238 |     });
      239 |

      at src/context/__tests__/GameProvider.test.js:236:45
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)

  ● GameProvider › API Integration › makes game actions successfully

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 4

      Object {
    +   "gameState": Object {
          "current_hole": 2,
    +   },
    +   "message": "Action completed",
    +   "success": true,
      }

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"loading"[39m
            [36m>[39m
              [0mNot Loading[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"error"[39m
            [36m>[39m
              [0mNo Error[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"game-active"[39m
            [36m>[39m
              [0mInactive[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"current-hole"[39m
            [36m>[39m
              [0m1[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"players-count"[39m
            [36m>[39m
              [0m0[0m
            [36m</div>[39m
            [36m<button>[39m
              [0mStart Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mEnd Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mFetch State[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mMake Action[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mClear Error[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mSet Loading[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      259 |
      260 |       await waitFor(() => {
    > 261 |         expect(contextValue.gameState).toEqual(mockResponse.gameState);
          |                                        ^
      262 |       });
      263 |
      264 |       expect(fetch).toHaveBeenCalledWith(

      at src/context/__tests__/GameProvider.test.js:261:40
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)

  ● GameProvider › API Integration › handles game action errors

    Action failed

      273 |
      274 |     it('handles game action errors', async () => {
    > 275 |       fetch.mockRejectedValueOnce(new Error('Action failed'));
          |                                   ^
      276 |
      277 |       renderWithProvider(<TestComponent />);
      278 |

      at Object.<anonymous> (src/context/__tests__/GameProvider.test.js:275:35)

  ● GameProvider › API Integration › handles API server errors

    expect(element).toHaveTextContent()

    Expected element to have text content:
      HTTP error! status: 500
    Received:
      Failed to fetch game state

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"loading"[39m
            [36m>[39m
              [0mNot Loading[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"error"[39m
            [36m>[39m
              [0mFailed to fetch game state[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"game-active"[39m
            [36m>[39m
              [0mInactive[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"current-hole"[39m
            [36m>[39m
              [0m1[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"players-count"[39m
            [36m>[39m
              [0m0[0m
            [36m</div>[39m
            [36m<button>[39m
              [0mStart Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mEnd Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mFetch State[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mMake Action[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mClear Error[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mSet Loading[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      298 |
      299 |       await waitFor(() => {
    > 300 |         expect(screen.getByTestId('error')).toHaveTextContent('HTTP error! status: 500');
          |                                             ^
      301 |       });
      302 |     });
      303 |   });

      at src/context/__tests__/GameProvider.test.js:300:45
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)

Summary of all failing tests
FAIL src/components/tutorial/__tests__/hooks.test.js
  ● useTutorialProgress Hook › Analytics and Tracking › identifies learning patterns

    ReferenceError: result is not defined

      302 |
      303 |     test('identifies learning patterns', () => {
    > 304 |       const analytics = result.current.getAnalytics();
          |                         ^
      305 |       
      306 |       expect(analytics.learningVelocity).toBeDefined();
      307 |       expect(analytics.strugglingAreas).toBeInstanceOf(Array);

      at Object.<anonymous> (src/components/tutorial/__tests__/hooks.test.js:304:25)

  ● Hook Integration Tests › tutorial progress and player profile sync correctly

    TypeError: Cannot read properties of undefined (reading 'progress')

      730 |
      731 |     // Both hooks should reflect consistent state
    > 732 |     expect(progressResult.current.progress.currentModule).toBe('golf-basics');
          |                                   ^
      733 |     expect(profileResult.current.profile.tutorialProgress.currentModule).toBe('golf-basics');
      734 |   });
      735 |

      at Object.<anonymous> (src/components/tutorial/__tests__/hooks.test.js:732:35)

  ● Hook Integration Tests › odds calculation updates trigger progress tracking

    TypeError: Cannot read properties of undefined (reading 'calculateForTutorial')

      740 |     // Simulate learning interaction
      741 |     await act(async () => {
    > 742 |       oddsResult.current.calculateForTutorial({
          |                          ^
      743 |         players: [{ id: 'test', handicap: 12 }]
      744 |       });
      745 |     });

      at src/components/tutorial/__tests__/hooks.test.js:742:26
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (src/components/tutorial/__tests__/hooks.test.js:741:14)

  ● Hook Integration Tests › all hooks handle concurrent updates correctly

    TypeError: Cannot read properties of undefined (reading 'completeCurrentStep')

      756 |     // Simulate concurrent updates
      757 |     await act(async () => {
    > 758 |       progressResult.current.completeCurrentStep();
          |                              ^
      759 |       profileResult.current.updatePreferences({ showHints: false });
      760 |       oddsResult.current.resetCalculation();
      761 |     });

      at src/components/tutorial/__tests__/hooks.test.js:758:30
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:790:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (src/components/tutorial/__tests__/hooks.test.js:757:14)

FAIL src/components/tutorial/__tests__/InteractiveElement.test.js
  ● InteractiveElement › Keyboard Navigation › prevents default behavior for Enter and Space

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      371 |       });
      372 |
    > 373 |       expect(preventDefault).toHaveBeenCalled();
          |                              ^
      374 |     });
      375 |
      376 |     test('does not handle keyboard when disabled', async () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:373:30)

  ● InteractiveElement › Accessibility Features › handles focus and blur for visual feedback

    expect(element).toHaveStyle()

    - Expected

    - box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
    + box-shadow: none;

      527 |       // Focus
      528 |       element.focus();
    > 529 |       expect(element).toHaveStyle('box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25)');
          |                       ^
      530 |
      531 |       // Blur
      532 |       element.blur();

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:529:23)

  ● InteractiveElement › Tooltip Functionality › shows tooltip on focus

    expect(element).toHaveStyle()

    - Expected

    - visibility: visible;
    + visibility: hidden;

      593 |       
      594 |       element.focus();
    > 595 |       expect(tooltip).toHaveStyle('visibility: visible');
          |                       ^
      596 |       
      597 |       element.blur();
      598 |       expect(tooltip).toHaveStyle('visibility: hidden');

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:595:23)

  ● InteractiveElement › Color and Theming › applies different background colors for different states

    expect(element).toHaveStyle()

    - Expected

    - backgroundColor: rgb(212, 237, 218);

      674 |
      675 |       element = screen.getByTestId('interactive-element');
    > 676 |       expect(element).toHaveStyle('backgroundColor: #d4edda');
          |                       ^
      677 |     });
      678 |
      679 |     test('applies different border colors for different states', () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:676:23)

  ● InteractiveElement › Color and Theming › applies different border colors for different states

    expect(element).toHaveStyle()

    - Expected

    - border: 2px solid #28a745;
    + border: 2px solid #dee2e6;

      705 |
      706 |       element = screen.getByTestId('interactive-element');
    > 707 |       expect(element).toHaveStyle('border: 2px solid #28a745');
          |                       ^
      708 |     });
      709 |   });
      710 |

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:707:23)

  ● InteractiveElement › Custom Props Forwarding › forwards custom props to underlying element

    expect(element).toHaveAttribute("data-custom", "custom-value") // element.getAttribute("data-custom") === "custom-value"

    Expected the element to have attribute:
      data-custom="custom-value"
    Received:
      null

      779 |
      780 |       const element = screen.getByTestId('interactive-element');
    > 781 |       expect(element).toHaveAttribute('data-custom', 'custom-value');
          |                       ^
      782 |       expect(element).toHaveAttribute('id', 'custom-id');
      783 |     });
      784 |

      at Object.<anonymous> (src/components/tutorial/__tests__/InteractiveElement.test.js:781:23)

FAIL src/components/signup/__tests__/AllPlayersAvailability.test.js
  ● AllPlayersAvailability › switches to day detail view when clicking day tab

    TestingLibraryElementError: Unable to find an element with the text: �� John Doe. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1200px; margin: 0px auto;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-bottom: 30px;"[39m
          [36m>[39m
            [36m<h2[39m
              [33mstyle[39m=[32m"color: rgb(51, 51, 51); margin-bottom: 10px;"[39m
            [36m>[39m
              [0m�� Players' Availability Calendar[0m
            [36m</h2>[39m
            [36m<p[39m
              [33mstyle[39m=[32m"color: rgb(108, 117, 125); font-size: 14px;"[39m
            [36m>[39m
              [0mView individual player schedules and find who's available when you are[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: flex; gap: 8px; margin-bottom: 30px; overflow-x: auto; padding-bottom: 10px;"[39m
          [36m>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; background: rgb(248, 249, 250);"[39m
            [36m>[39m
              [0mAll Days[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; color: white; border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative; background: rgb(0, 123, 255);"[39m
            [36m>[39m
              [0mMonday[0m
              [36m<span[39m
                [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 6px; color: white; border-radius: 10px; font-size: 12px; background: rgba(255, 255, 255, 0.3);"[39m
              [36m>[39m
                [0m2[0m
              [36m</span>[39m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mTuesday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mWednesday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mThursday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mFriday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mSaturday[0m
              [36m<span[39m
                [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 6px; background: rgb(40, 167, 69); color: white; border-radius: 10px; font-size: 12px;"[39m
              [36m>[39m
                [0m1[0m
              [36m</span>[39m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mSunday[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m""[39m
          [36m>[39m
            [36m<h3[39m
              [33mstyle[39m=[32m"color: rgb(73, 80, 87); font-size: 20px; margin-bottom: 20px; display: flex; align-items: center; gap: 10px;"[39m
            [36m>[39m
              [0mMonday[0m
              [0m Availability[0m
              [36m<span[39m
                [33mstyle[39m=[32m"padding: 4px 12px; background: rgb(40, 167, 69); color: white; border-radius: 12px; font-size: 14px; font-weight: normal;"[39m
              [36m>[39m
                [0m2[0m
                [0m players available[0m
              [36m</span>[39m
            [36m</h3>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); gap: 16px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"border: 1px solid #dee2e6; border-radius: 8px; padding: 16px; background: rgb(255, 255, 255);"[39m
              [36m>[39m
                [36m<h5[39m
                  [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 16px; font-weight: 600; margin-bottom: 8px;"[39m
                [36m>[39m
                  [0mJohn Doe[0m
                [36m</h5>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125); margin-bottom: 4px;"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mTime:[0m
                  [36m</strong>[39m
                  [0m [0m
                  [0m9:00 AM - 5:00 PM[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mNotes:[0m
                  [36m</strong>[39m
                  [0m [0m
                  [0mFlexible schedule[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 12px; color: rgb(173, 181, 189); margin-top: 8px;"[39m
                [36m>[39m
                  [0mjohn@test.com[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"border: 1px solid #dee2e6; border-radius: 8px; padding: 16px; background: rgb(255, 255, 255);"[39m
              [36m>[39m
                [36m<h5[39m
                  [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 16px; font-weight: 600; margin-bottom: 8px;"[39m
                [36m>[39m
                  [0mJane Smith[0m
                [36m</h5>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125); margin-bottom: 4px;"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mTime:[0m
                  [36m</strong>[39m
                  [0m [0m
                  [0m10:00 AM - 3:00 PM[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 12px; color: rgb(173, 181, 189); margin-top: 8px;"[39m
                [36m>[39m
                  [0mjane@test.com[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-top: 40px; padding: 20px; background: rgb(232, 245, 232); border-radius: 8px; border: 1px solid #c3e6c3;"[39m
          [36m>[39m
            [36m<h4[39m
              [33mstyle[39m=[32m"color: rgb(46, 125, 50); margin-bottom: 16px;"[39m
            [36m>[39m
              [0m�� Weekly Availability Overview[0m
            [36m</h4>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 16px;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 24px; font-weight: bold; color: rgb(0, 123, 255);"[39m
                [36m>[39m
                  [0m2[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
                [36m>[39m
                  [0mTotal Players[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 24px; font-weight: bold; color: rgb(40, 167, 69);"[39m
                [36m>[39m
                  [0m2[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
                [36m>[39m
                  [0mMost Available (Single Day)[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 24px; font-weight: bold; color: rgb(255, 193, 7);"[39m
                [36m>[39m
                  [0mMonday[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
                [36m>[39m
                  [0mMost Popular Day[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      86 |     expect(screen.getByText('Monday Availability')).toBeInTheDocument();
      87 |     expect(screen.getByText('2 players available')).toBeInTheDocument();
    > 88 |     expect(screen.getByText('�� John Doe')).toBeInTheDocument();
         |                   ^
      89 |     expect(screen.getByText('�� Jane Smith')).toBeInTheDocument();
      90 |   });
      91 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/signup/__tests__/AllPlayersAvailability.test.js:88:19)

  ● AllPlayersAvailability › displays player time ranges correctly

    TestingLibraryElementError: Unable to find an element with the text: 9:00 AM - 5:00 PM. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1200px; margin: 0px auto;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-bottom: 30px;"[39m
          [36m>[39m
            [36m<h2[39m
              [33mstyle[39m=[32m"color: rgb(51, 51, 51); margin-bottom: 10px;"[39m
            [36m>[39m
              [0m�� Players' Availability Calendar[0m
            [36m</h2>[39m
            [36m<p[39m
              [33mstyle[39m=[32m"color: rgb(108, 117, 125); font-size: 14px;"[39m
            [36m>[39m
              [0mView individual player schedules and find who's available when you are[0m
            [36m</p>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: flex; gap: 8px; margin-bottom: 30px; overflow-x: auto; padding-bottom: 10px;"[39m
          [36m>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(0, 123, 255); color: white; border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap;"[39m
            [36m>[39m
              [0mAll Days[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mMonday[0m
              [36m<span[39m
                [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 6px; background: rgb(40, 167, 69); color: white; border-radius: 10px; font-size: 12px;"[39m
              [36m>[39m
                [0m2[0m
              [36m</span>[39m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mTuesday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mWednesday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mThursday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mFriday[0m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mSaturday[0m
              [36m<span[39m
                [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 6px; background: rgb(40, 167, 69); color: white; border-radius: 10px; font-size: 12px;"[39m
              [36m>[39m
                [0m1[0m
              [36m</span>[39m
            [36m</button>[39m
            [36m<button[39m
              [33mstyle[39m=[32m"padding: 10px 16px; background: rgb(248, 249, 250); color: rgb(73, 80, 87); border: 1px solid #dee2e6; border-radius: 4px; cursor: pointer; font-size: 14px; font-weight: 500; white-space: nowrap; position: relative;"[39m
            [36m>[39m
              [0mSunday[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"border: 1px solid #dee2e6; border-radius: 8px; padding: 16px; background: rgb(255, 255, 255);"[39m
            [36m>[39m
              [36m<h4[39m
                [33mstyle[39m=[32m"color: rgb(73, 80, 87); font-size: 16px; font-weight: 600; margin-bottom: 12px; display: flex; justify-content: space-between; align-items: center;"[39m
              [36m>[39m
                [0mMonday[0m
                [36m<span[39m
                  [33mstyle[39m=[32m"padding: 2px 8px; background: rgb(40, 167, 69); color: white; border-radius: 12px; font-size: 12px; font-weight: normal;"[39m
                [36m>[39m
                  [0m2[0m
                  [0m available[0m
                [36m</span>[39m
              [36m</h4>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 8px;"[39m
              [36m>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"padding: 8px; background: rgb(240, 248, 255); border-radius: 4px; font-size: 14px; border-left: 3px solid #4CAF50;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"font-weight: 500; color: rgb(26, 84, 144);"[39m
                  [36m>[39m
                    [0m�� [0m
                    [0mJohn Doe[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"font-size: 12px; color: rgb(90, 108, 125); margin-top: 2px;"[39m
                  [36m>[39m
                    [0m⏰ [0m
                    [0m9:00 AM - 5:00 PM[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"font-size: 12px; color: rgb(122, 138, 154); margin-top: 2px; font-style: italic;"[39m
                  [36m>[39m
                    [0m�� [0m
                    [0mFlexible schedule[0m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"padding: 8px; background: rgb(240, 248, 255); border-radius: 4px; font-size: 14px; border-left: 3px solid #4CAF50;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"font-weight: 500; color: rgb(26, 84, 144);"[39m
                  [36m>[39m
                    [0m�� [0m
                    [0mJane Smith[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"font-size: 12px; color: rgb(90, 108, 125); margin-top: 2px;"[39m
                  [36m>[39m
                    [0m⏰ [0m
                    [0m10:00 AM - 3:00 PM[0m
                  [36m</div>[39m
                [36m</div>[39m
    ...

      121 |
      122 |     // Check time formatting
    > 123 |     expect(screen.getByText('9:00 AM - 5:00 PM')).toBeInTheDocument();
          |                   ^
      124 |     expect(screen.getByText('10:00 AM - 3:00 PM')).toBeInTheDocument();
      125 |     expect(screen.getByText('8:00 AM - 12:00 PM')).toBeInTheDocument();
      126 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/signup/__tests__/AllPlayersAvailability.test.js:123:19)

FAIL src/components/ui/__tests__/UIComponents.test.js
  ● Card Component › applies variant styles

    expect(element).toHaveStyle()

    - Expected

    - boxShadow: 0 4px 6px rgba(0, 0, 0, 0.1);

      267 |
      268 |     const card = screen.getByTestId('card');
    > 269 |     expect(card).toHaveStyle({
          |                  ^
      270 |       boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'
      271 |     });
      272 |   });

      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:269:18)

  ● Card Component › applies outlined variant

    expect(element).toHaveStyle()

    - Expected

      border: 2px solid #dee2e6;
    - boxShadow: none;

      276 |
      277 |     const card = screen.getByTestId('card');
    > 278 |     expect(card).toHaveStyle({
          |                  ^
      279 |       border: '2px solid #dee2e6',
      280 |       boxShadow: 'none'
      281 |     });

      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:278:18)

  ● Input Component › renders with label

    TestingLibraryElementError: Found a label with the text of: Username, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<label[39m
            [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
          [36m>[39m
            [0mUsername[0m
          [36m</label>[39m
          [36m<input[39m
            [33mplaceholder[39m=[32m"Enter username"[39m
            [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; transition: border-color 0.2s ease;"[39m
            [33mtype[39m=[32m"text"[39m
          [36m/>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      326 |     render(<Input label="Username" placeholder="Enter username" />);
      327 |
    > 328 |     expect(screen.getByLabelText('Username')).toBeInTheDocument();
          |                   ^
      329 |     expect(screen.getByText('Username')).toBeInTheDocument();
      330 |   });
      331 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:108:40)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByLabelText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:328:19)

  ● Select Component › renders with label

    TestingLibraryElementError: Found a label with the text of: Country, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div>[39m
          [36m<label[39m
            [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
          [36m>[39m
            [0mCountry[0m
          [36m</label>[39m
          [36m<select[39m
            [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; cursor: pointer;"[39m
          [36m>[39m
            [36m<option[39m
              [33mdisabled[39m=[32m""[39m
              [33mvalue[39m=[32m""[39m
            [36m>[39m
              [0mSelect an option[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"USA"[39m
            [36m>[39m
              [0mUSA[0m
            [36m</option>[39m
            [36m<option[39m
              [33mvalue[39m=[32m"Canada"[39m
            [36m>[39m
              [0mCanada[0m
            [36m</option>[39m
          [36m</select>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      450 |     render(<Select label="Country" options={['USA', 'Canada']} />);
      451 |
    > 452 |     expect(screen.getByLabelText('Country')).toBeInTheDocument();
          |                   ^
      453 |   });
      454 |
      455 |   it('shows required indicator', () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:108:40)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByLabelText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:452:19)

  ● UI Components Integration › components work together in a form

    TestingLibraryElementError: Found a label with the text of: Name*, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"background-color: rgb(255, 255, 255); border: 1px solid #dee2e6; border-radius: 8px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); padding: 16px;"[39m
        [36m>[39m
          [36m<form>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
              [36m>[39m
                [0mName[0m
                [36m<span[39m
                  [33mstyle[39m=[32m"color: rgb(220, 53, 69);"[39m
                [36m>[39m
                  [0m*[0m
                [36m</span>[39m
              [36m</label>[39m
              [36m<input[39m
                [33mrequired[39m=[32m""[39m
                [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; transition: border-color 0.2s ease;"[39m
                [33mtype[39m=[32m"text"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
            [36m</div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
              [36m>[39m
                [0mEmail[0m
                [36m<span[39m
                  [33mstyle[39m=[32m"color: rgb(220, 53, 69);"[39m
                [36m>[39m
                  [0m*[0m
                [36m</span>[39m
              [36m</label>[39m
              [36m<input[39m
                [33mrequired[39m=[32m""[39m
                [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; transition: border-color 0.2s ease;"[39m
                [33mtype[39m=[32m"email"[39m
                [33mvalue[39m=[32m""[39m
              [36m/>[39m
            [36m</div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
              [36m>[39m
                [0mCountry[0m
                [36m<span[39m
                  [33mstyle[39m=[32m"color: rgb(220, 53, 69);"[39m
                [36m>[39m
                  [0m*[0m
                [36m</span>[39m
              [36m</label>[39m
              [36m<select[39m
                [33mrequired[39m=[32m""[39m
                [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; cursor: pointer;"[39m
              [36m>[39m
                [36m<option[39m
                  [33mdisabled[39m=[32m""[39m
                  [33mvalue[39m=[32m""[39m
                [36m>[39m
                  [0mSelect an option[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"USA"[39m
                [36m>[39m
                  [0mUSA[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"Canada"[39m
                [36m>[39m
                  [0mCanada[0m
                [36m</option>[39m
                [36m<option[39m
                  [33mvalue[39m=[32m"UK"[39m
                [36m>[39m
                  [0mUK[0m
                [36m</option>[39m
              [36m</select>[39m
            [36m</div>[39m
            [36m<button[39m
              [33mtype[39m=[32m"submit"[39m
            [36m>[39m
              [0mSubmit[0m
            [36m</button>[39m
          [36m</form>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      577 |
      578 |     // Fill out form
    > 579 |     await user.type(screen.getByLabelText('Name*'), 'John Doe');
          |                            ^
      580 |     await user.type(screen.getByLabelText('Email*'), 'john@example.com');
      581 |     await user.selectOptions(screen.getByLabelText('Country*'), 'USA');
      582 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:108:40)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByLabelText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:579:28)

  ● UI Components Integration › maintains accessibility across components

    TestingLibraryElementError: Found a label with the text of: Username*, however no form control was found associated to that label. Make sure you're using the "for" attribute or "aria-labelledby" attribute correctly.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"background-color: rgb(255, 255, 255); border: 1px solid #dee2e6; border-radius: 8px; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); padding: 16px;"[39m
        [36m>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
            [36m>[39m
              [0mUsername[0m
              [36m<span[39m
                [33mstyle[39m=[32m"color: rgb(220, 53, 69);"[39m
              [36m>[39m
                [0m*[0m
              [36m</span>[39m
            [36m</label>[39m
            [36m<input[39m
              [33maria-describedby[39m=[32m"username-help"[39m
              [33mrequired[39m=[32m""[39m
              [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; transition: border-color 0.2s ease;"[39m
              [33mtype[39m=[32m"text"[39m
            [36m/>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mid[39m=[32m"username-help"[39m
          [36m>[39m
            [0mEnter your username[0m
          [36m</div>[39m
          [36m<div>[39m
            [36m<label[39m
              [33mstyle[39m=[32m"display: block; margin-bottom: 4px; font-size: 14px; font-weight: 500;"[39m
            [36m>[39m
              [0mRole[0m
            [36m</label>[39m
            [36m<select[39m
              [33maria-describedby[39m=[32m"role-help"[39m
              [33mstyle[39m=[32m"width: 100%; border: 1px solid #dee2e6; border-radius: 4px; padding: 12px 16px; font-size: 16px; font-family: Arial, sans-serif; background-color: rgb(255, 255, 255); color: rgb(33, 37, 41); outline: none; cursor: pointer;"[39m
            [36m>[39m
              [36m<option[39m
                [33mdisabled[39m=[32m""[39m
                [33mvalue[39m=[32m""[39m
              [36m>[39m
                [0mSelect an option[0m
              [36m</option>[39m
              [36m<option[39m
                [33mvalue[39m=[32m"Admin"[39m
              [36m>[39m
                [0mAdmin[0m
              [36m</option>[39m
              [36m<option[39m
                [33mvalue[39m=[32m"User"[39m
              [36m>[39m
                [0mUser[0m
              [36m</option>[39m
            [36m</select>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mid[39m=[32m"role-help"[39m
          [36m>[39m
            [0mSelect your role[0m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      601 |     );
      602 |
    > 603 |     const input = screen.getByLabelText('Username*');
          |                          ^
      604 |     expect(input).toHaveAttribute('aria-describedby', 'username-help');
      605 |
      606 |     const select = screen.getByLabelText('Role');

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:108:40)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByLabelText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/ui/__tests__/UIComponents.test.js:603:26)

FAIL src/components/tutorial/__tests__/TutorialSystem.test.js
  ● TutorialSystem › Welcome Screen › shows welcome screen when tutorial is not active

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:266:13)

  ● TutorialSystem › Welcome Screen › starts tutorial when Start Tutorial button is clicked

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:277:13)

  ● TutorialSystem › Welcome Screen › resumes tutorial when Resume button is clicked

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:293:13)

  ● TutorialSystem › Welcome Screen › disables resume button when no saved progress

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:308:13)

  ● TutorialSystem › Welcome Screen › exits tutorial when Skip button is clicked

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:317:13)

  ● TutorialSystem › Active Tutorial Interface › displays module navigation with correct state

    expect(element).toBeDisabled()

    Received element is not disabled:
      <button aria-label="Go to previous module" style="padding: 8px 16px; border-radius: 4px; cursor: pointer; background-color: rgb(0, 123, 255); color: rgb(255, 255, 255); font-size: 14px;" />

      363 |       const moduleInfo = screen.getByRole('status');
      364 |       
    > 365 |       expect(prevButton).toBeDisabled(); // First module
          |                          ^
      366 |       expect(nextButton).not.toBeDisabled();
      367 |       expect(moduleInfo).toHaveTextContent('Module 1 of 7');
      368 |     });

      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:365:26)

  ● TutorialSystem › Keyboard Navigation › handles arrow key navigation

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      419 |       // Right arrow for next step
      420 |       fireEvent.keyDown(window, { key: 'ArrowRight' });
    > 421 |       expect(mockTutorial.nextStep).toHaveBeenCalled();
          |                                     ^
      422 |       
      423 |       // Left arrow for previous step
      424 |       fireEvent.keyDown(window, { key: 'ArrowLeft' });

      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:421:37)

  ● TutorialSystem › Keyboard Navigation › handles escape key for overlay

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      440 |       
      441 |       fireEvent.keyDown(window, { key: 'Escape' });
    > 442 |       expect(mockTutorial.toggleOverlay).toHaveBeenCalled();
          |                                          ^
      443 |     });
      444 |
      445 |     test('handles Ctrl+H for hints toggle', () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:442:42)

  ● TutorialSystem › Keyboard Navigation › handles Ctrl+H for hints toggle

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      447 |       
      448 |       fireEvent.keyDown(window, { key: 'h', ctrlKey: true });
    > 449 |       expect(mockTutorial.toggleHints).toHaveBeenCalled();
          |                                        ^
      450 |     });
      451 |
      452 |     test('ignores keyboard shortcuts when tutorial is not active', () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:449:40)

  ● TutorialSystem › Keyboard Navigation › ignores keyboard shortcuts when tutorial is not active

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:455:13)

  ● TutorialSystem › Accessibility › has live regions for dynamic content

    expect(element).toHaveAttribute("aria-live", "polite") // element.getAttribute("aria-live") === "polite"

    Expected the element to have attribute:
      aria-live="polite"
    Received:
      null

      649 |       
      650 |       const moduleContainer = screen.getByLabelText('Tutorial content');
    > 651 |       expect(moduleContainer).toHaveAttribute('aria-live', 'polite');
          |                               ^
      652 |       expect(moduleContainer).toHaveAttribute('aria-atomic', 'false');
      653 |       
      654 |       const statusInfo = screen.getByRole('status');

      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:651:31)

  ● TutorialSystem › Loading States › shows loading screen when tutorial is not active and no welcome

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:681:34)

  ● TutorialSystem › Error Handling › handles context errors gracefully

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "Cannot read properties of null (reading 'findIndex')"

          526 |             aria-live="polite"
          527 |           >
        > 528 |             Module {tutorial.modules.findIndex(m => m.id === tutorial.currentModule) + 1} of {tutorial.modules.length}
              |                                      ^
          529 |           </div>
          530 |           
          531 |           <button

      at TutorialSystem (src/components/tutorial/TutorialSystem.js:528:38)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at src/components/tutorial/__tests__/TutorialSystem.test.js:719:15
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:83:11)
      at Object.toThrow (node_modules/expect/build/index.js:382:21)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:720:14)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:720:14)

  ● TutorialSystem › Learning Preferences › updates preferences through tutorial context

    ReferenceError: Cannot access 'styles' before initialization

      103 |   // Welcome screen component
      104 |   const WelcomeScreen = () => (
    > 105 |     <div style={styles.welcomeScreen}>
          |                 ^
      106 |       <div style={styles.welcomeCard}>
      107 |         <h1 style={styles.welcomeTitle}>Welcome to Wolf Goat Pig Tutorial</h1>
      108 |         

      at WelcomeScreen (src/components/tutorial/TutorialSystem.js:105:17)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (src/components/tutorial/__tests__/TutorialSystem.test.js:760:13)

FAIL src/components/__tests__/ShotAnalysisWidget.test.js
  ● ShotAnalysisWidget › calls analysis function when button clicked

    TypeError: useApiCall.mockReturnValue is not a function

      165 |     });
      166 |
    > 167 |     useApiCall.mockReturnValue({
          |                ^
      168 |       makeApiCall: mockMakeApiCall,
      169 |       loading: false,
      170 |       error: null,

      at Object.<anonymous> (src/components/__tests__/ShotAnalysisWidget.test.js:167:16)

  ● ShotAnalysisWidget › displays loading state

    TypeError: useApiCall.mockReturnValue is not a function

      193 |   test('displays loading state', () => {
      194 |     const { useApiCall } = require('../../utils/api');
    > 195 |     useApiCall.mockReturnValue({
          |                ^
      196 |       makeApiCall: jest.fn(),
      197 |       loading: true,
      198 |       error: null,

      at Object.<anonymous> (src/components/__tests__/ShotAnalysisWidget.test.js:195:16)

  ● ShotAnalysisWidget › displays cold start state

    TypeError: useApiCall.mockReturnValue is not a function

      216 |   test('displays cold start state', () => {
      217 |     const { useApiCall } = require('../../utils/api');
    > 218 |     useApiCall.mockReturnValue({
          |                ^
      219 |       makeApiCall: jest.fn(),
      220 |       loading: true,
      221 |       error: null,

      at Object.<anonymous> (src/components/__tests__/ShotAnalysisWidget.test.js:218:16)

  ● ShotAnalysisWidget › displays error state with retry button

    TypeError: useApiCall.mockReturnValue is not a function

      240 |     const { useApiCall } = require('../../utils/api');
      241 |     const mockMakeApiCall = jest.fn();
    > 242 |     useApiCall.mockReturnValue({
          |                ^
      243 |       makeApiCall: mockMakeApiCall,
      244 |       loading: false,
      245 |       error: 'Analysis failed',

      at Object.<anonymous> (src/components/__tests__/ShotAnalysisWidget.test.js:242:16)

  ● ShotAnalysisWidget › calls onShotRecommendation callback when analysis completes

    TypeError: useApiCall.mockReturnValue is not a function

      304 |
      305 |     const mockMakeApiCall = jest.fn().mockResolvedValue(mockAnalysis);
    > 306 |     useApiCall.mockReturnValue({
          |                ^
      307 |       makeApiCall: mockMakeApiCall,
      308 |       loading: false,
      309 |       error: null,

      at Object.<anonymous> (src/components/__tests__/ShotAnalysisWidget.test.js:306:16)

FAIL src/components/tutorial/__tests__/ProgressTracker.test.js
  ● ProgressTracker › Module Navigation › handles keyboard navigation for modules

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "betting-system"

    Number of calls: 0

      294 |       await userEvent.keyboard('{Enter}');
      295 |       
    > 296 |       expect(mockProgress.navigateToModule).toHaveBeenCalledWith('betting-system');
          |                                             ^
      297 |     });
      298 |
      299 |     test('handles Space key for module navigation', async () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/ProgressTracker.test.js:296:45)

  ● ProgressTracker › Module Navigation › handles Space key for module navigation

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "advanced-rules"

    Number of calls: 0

      305 |       await userEvent.keyboard(' ');
      306 |       
    > 307 |       expect(mockProgress.navigateToModule).toHaveBeenCalledWith('advanced-rules');
          |                                             ^
      308 |     });
      309 |
      310 |     test('does not navigate when navigateToModule is not available', async () => {

      at Object.<anonymous> (src/components/tutorial/__tests__/ProgressTracker.test.js:307:45)

FAIL src/components/__tests__/UnifiedGameInterface.integration.test.js
  ● UnifiedGameInterface Integration Tests › Enhanced Mode › displays game status information

    TestingLibraryElementError: Unable to find an element with the text: Regular Play. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1400px; margin: 0px auto; padding: 1rem;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background-color: rgb(255, 255, 255); border-radius: 0.75rem; border: 1px solid #e0e0e0; margin-bottom: 1rem; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04); padding: 1rem;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;"[39m
            [36m>[39m
              [36m<h1[39m
                [33mstyle[39m=[32m"color: rgb(4, 120, 87); margin: 0px; font-size: 1.5rem; font-weight: 700;"[39m
              [36m>[39m
                [0m�� Enhanced Wolf Goat Pig[0m
              [36m</h1>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; gap: 0.5rem; align-items: center;"[39m
              [36m>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"background: rgb(4, 120, 87); color: rgb(33, 33, 33); border: 1px solid #e0e0e0; border-radius: 0.5rem; padding: 0.5rem 0.75rem; font-weight: 600; font-size: 0.875rem; cursor: pointer; transition: all 0.2s ease; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; opacity: 1; display: inline-flex; align-items: center; justify-content: center; text-decoration: none; user-select: none; background-color: rgb(238, 238, 238);"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m�� Shot Analysis[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"background: rgb(4, 120, 87); color: rgb(255, 255, 255); border-radius: 0.5rem; padding: 0.5rem 0.75rem; font-weight: 600; font-size: 0.875rem; cursor: pointer; transition: all 0.2s ease; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; opacity: 1; display: inline-flex; align-items: center; justify-content: center; text-decoration: none; user-select: none; background-color: rgb(4, 120, 87);"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m�� Odds ON[0m
                [36m</button>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-bottom: 1rem;"[39m
                [36m>[39m
                  [36m<select[39m
                    [33mid[39m=[32m"«r2»"[39m
                    [33mstyle[39m=[32m"border: 1px solid #e0e0e0; border-radius: 0.5rem; padding: 0.75rem 2.5rem 0.75rem 1rem; font-size: 1rem; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; width: 100%; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33); cursor: pointer; opacity: 1; transition: border-color 0.2s ease, box-shadow 0.2s ease; appearance: none; background-repeat: no-repeat; background-size: 16px;"[39m
                  [36m>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m""[39m
                    [36m>[39m
                      [0mSelect an option...[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"game"[39m
                    [36m>[39m
                      [0m�� Game View[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"analytics"[39m
                    [36m>[39m
                      [0m�� Analytics[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"history"[39m
                    [36m>[39m
                      [0m�� History[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"timeline"[39m
                    [36m>[39m
                      [0m�� Timeline[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"visualization"[39m
                    [36m>[39m
                      [0m��️ Course View[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"odds"[39m
                    [36m>[39m
                      [0m�� Odds Analysis[0m
                    [36m</option>[39m
                  [36m</select>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-bottom: 1rem;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mCurrent Hole[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1.25rem; font-weight: 700; color: rgb(4, 120, 87);"[39m
                [36m>[39m
                  [0m10[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mGame Phase[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1rem; font-weight: 500; color: rgb(33, 33, 33);"[39m
                [36m>[39m
                  [0mregular[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mBase Wager[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1.125rem; font-weight: 700; color: rgb(255, 152, 0);"[39m
                [36m>[39m
                  [0m$[0m
                  [0m1[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: grid; grid-template-col...

      183 |       expect(screen.getByText('10')).toBeInTheDocument();
      184 |       expect(screen.getByText('Game Phase')).toBeInTheDocument();
    > 185 |       expect(screen.getByText('Regular Play')).toBeInTheDocument();
          |                     ^
      186 |       expect(screen.getByText('Base Wager')).toBeInTheDocument();
      187 |       expect(screen.getByText('$1')).toBeInTheDocument();
      188 |     });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:185:21)

  ● UnifiedGameInterface Integration Tests › Enhanced Mode › visualization view includes shot overlay when analysis active

    TestingLibraryElementError: Unable to find an element with the text: Analyze Shot. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1400px; margin: 0px auto; padding: 1rem;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background-color: rgb(255, 255, 255); border-radius: 0.75rem; border: 1px solid #e0e0e0; margin-bottom: 1rem; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04); padding: 1rem;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;"[39m
            [36m>[39m
              [36m<h1[39m
                [33mstyle[39m=[32m"color: rgb(4, 120, 87); margin: 0px; font-size: 1.5rem; font-weight: 700;"[39m
              [36m>[39m
                [0m�� Enhanced Wolf Goat Pig[0m
              [36m</h1>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; gap: 0.5rem; align-items: center;"[39m
              [36m>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"background: rgb(4, 120, 87); color: rgb(255, 255, 255); border-radius: 0.5rem; padding: 0.5rem 0.75rem; font-weight: 600; font-size: 0.875rem; cursor: pointer; transition: all 0.2s ease; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; opacity: 1; display: inline-flex; align-items: center; justify-content: center; text-decoration: none; user-select: none; background-color: rgb(4, 120, 87);"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m�� Analysis ON[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"background: rgb(4, 120, 87); color: rgb(255, 255, 255); border-radius: 0.5rem; padding: 0.5rem 0.75rem; font-weight: 600; font-size: 0.875rem; cursor: pointer; transition: all 0.2s ease; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; opacity: 1; display: inline-flex; align-items: center; justify-content: center; text-decoration: none; user-select: none; background-color: rgb(4, 120, 87);"[39m
                  [33mtype[39m=[32m"button"[39m
                [36m>[39m
                  [0m�� Odds ON[0m
                [36m</button>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-bottom: 1rem;"[39m
                [36m>[39m
                  [36m<select[39m
                    [33mid[39m=[32m"«r5»"[39m
                    [33mstyle[39m=[32m"border: 1px solid #e0e0e0; border-radius: 0.5rem; padding: 0.75rem 2.5rem 0.75rem 1rem; font-size: 1rem; font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif; width: 100%; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33); cursor: pointer; opacity: 1; transition: border-color 0.2s ease, box-shadow 0.2s ease; appearance: none; background-repeat: no-repeat; background-size: 16px;"[39m
                  [36m>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m""[39m
                    [36m>[39m
                      [0mSelect an option...[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"game"[39m
                    [36m>[39m
                      [0m�� Game View[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"analytics"[39m
                    [36m>[39m
                      [0m�� Analytics[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"history"[39m
                    [36m>[39m
                      [0m�� History[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"timeline"[39m
                    [36m>[39m
                      [0m�� Timeline[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"visualization"[39m
                    [36m>[39m
                      [0m��️ Course View[0m
                    [36m</option>[39m
                    [36m<option[39m
                      [33mstyle[39m=[32m"padding: 0.5rem; background-color: rgb(255, 255, 255); color: rgb(33, 33, 33);"[39m
                      [33mvalue[39m=[32m"odds"[39m
                    [36m>[39m
                      [0m�� Odds Analysis[0m
                    [36m</option>[39m
                  [36m</select>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-bottom: 1rem;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mCurrent Hole[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1.25rem; font-weight: 700; color: rgb(4, 120, 87);"[39m
                [36m>[39m
                  [0m10[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mGame Phase[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1rem; font-weight: 500; color: rgb(33, 33, 33);"[39m
                [36m>[39m
                  [0mregular[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 0.875rem; color: rgb(117, 117, 117);"[39m
                [36m>[39m
                  [0mBase Wager[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 1.125rem; font-weight: 700; color: rgb(255, 152, 0);"[39m
                [36m>[39m
                  [0m$[0m
                  [0m1[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"hole-strategy-display"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"hole-header"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"hole-number"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"hole-label"[39m
                  [36m>[39m
                    [0mHOLE[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"hole-value"[39m
                  [36m>[39m
                    [0m10[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"hole-stats"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"stat-item"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"stat-label"[39m
                    [36m>[39m
                      [0mPAR[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"stat-value"[39m
                    [36m>[39m
                      [0m4[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"stat-item"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"stat-label"[39m
                    [36m>[39m
                      [0mYARDS[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"stat-value"[39m
                    [36m>[39m
                      [0m400[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"difficulty-badge medium"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"difficulty-icon"[39m
                    [36m>[39m
                      [0m⚡[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"difficulty-text"[39m
                    [36m>[39m
                      [0mMEDIUM[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"wager-display"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"wager-label"[39m
                  [36m>[39m
                    [0mPOT[0m
                  [36m</span>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"wager-value"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"wager-amount"[39m
                    [36m>[39m
                      [0m1[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"wager-unit"[39m
                    [36m>[39m
                      [0mquarters[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"players-grid"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card is-away fairway"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-rank"[39m
                  [36m>[39m
                    [0m1[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-info"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"player-name"[39m
                    [36m>[39m
                      [0mJohn Doe[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"player-stats"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"shot-count"[39m
                      [36m>[39m
                        [0m1 shot[0m
                      [36m</span>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"status-icon"[39m
                      [36m>[39m
                        [0m✓[0m
                      [36m</span>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"distance-info"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"distance-value"[39m
                    [36m>[39m
                      [0m150[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"distance-label"[39m
                    [36m>[39m
                      [0myards[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"away-indicator"[39m
                  [36m>[39m
                    [36m<span>[39m
                      [0mAWAY[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card  waiting"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-rank"[39m
                  [36m>[39m
                    [0m2[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-info"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"player-name"[39m
                    [36m>[39m
                      [0mJane Smith[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"player-stats"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"shot-count"[39m
                      [36m>[39m
                        [0mReady[0m
                      [36m</span>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"distance-info"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"distance-value"[39m
                    [36m>[39m
                      [0m--[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"distance-label"[39m
                    [36m>[39m
                      [0myards[0m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mclass[39m=[32m"strategy-tips"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"tip-item"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"tip-icon"[39m
                  [36m>[39m
                    [0m��[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"tip-text"[39m
                  [36m>[39m
                    [0mBalanced hole - play to your strengths[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"tip-item"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"tip-icon"[39m
                  [36m>[39m
                    [0m��[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"tip-text"[39m
                  [36m>[39m
                    [0mJohn Doe[0m
                    [0m is away at [0m
                    [0m150[0m
                    [0m yards[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      232 |
      233 |       // Trigger analysis to get shot data
    > 234 |       const analyzeButton = screen.getByText('Analyze Shot');
          |                                    ^
      235 |       fireEvent.click(analyzeButton);
      236 |
      237 |       await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:234:36)

  ● UnifiedGameInterface Integration Tests › Shot Analysis Integration › shot analysis updates when game state changes

    TypeError: require(...).useGame.mockReturnValue is not a function

      305 |
      306 |       // Mock updated context
    > 307 |       require('../../context').useGame.mockReturnValue(updatedContextValue);
          |                                        ^
      308 |
      309 |       rerender(
      310 |         <TestWrapper>

      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:307:40)

  ● UnifiedGameInterface Integration Tests › Error Handling › displays error state when game loading fails

    TypeError: require(...).useGame.mockReturnValue is not a function

      325 |       };
      326 |
    > 327 |       require('../../context').useGame.mockReturnValue(errorContextValue);
          |                                        ^
      328 |
      329 |       render(
      330 |         <TestWrapper>

      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:327:40)

  ● UnifiedGameInterface Integration Tests › Error Handling › displays loading state

    TypeError: require(...).useGame.mockReturnValue is not a function

      345 |       };
      346 |
    > 347 |       require('../../context').useGame.mockReturnValue(loadingContextValue);
          |                                        ^
      348 |
      349 |       render(
      350 |         <TestWrapper>

      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:347:40)

  ● UnifiedGameInterface Integration Tests › Error Handling › displays no game state message

    TypeError: require(...).useGame.mockReturnValue is not a function

      363 |       };
      364 |
    > 365 |       require('../../context').useGame.mockReturnValue(noGameContextValue);
          |                                        ^
      366 |
      367 |       render(
      368 |         <TestWrapper>

      at Object.<anonymous> (src/components/__tests__/UnifiedGameInterface.integration.test.js:365:40)

FAIL src/components/__tests__/BettingOddsPanel.test.js
  ● BettingOddsPanel › Basic Rendering and Loading States › renders nothing when no players

    expect(received).toBeNull()

    Received: <div class="betting-odds-panel" data-testid="card"><div style="padding: 20px; text-align: center;"><div style="font-size: 24px; margin-bottom: 16px;">��</div><div>Calculating odds...</div><div style="font-size: 12px; color: rgb(136, 136, 136); margin-top: 8px;">Running probability analysis</div></div></div>

      315 |       );
      316 |
    > 317 |       expect(container.firstChild).toBeNull();
          |                                    ^
      318 |     });
      319 |   });
      320 |

      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:317:36)

  ● BettingOddsPanel › Scenarios View › expands scenario when clicked

    TestingLibraryElementError: Found multiple elements with the text: Analysis

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<button[39m
      [33mstyle[39m=[32m"background: transparent; color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px;"[39m
    [36m>[39m
      [36m<span>[39m
        [0m��[0m
      [36m</span>[39m
      [0mAnalysis[0m
    [36m</button>[39m

    Ignored nodes: comments, script, style
    [36m<h4[39m
      [33mstyle[39m=[32m"margin: 0px 0px 8px 0px; color: rgb(34, 34, 34);"[39m
    [36m>[39m
      [0mAnalysis[0m
    [36m</h4>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"betting-odds-panel"[39m
          [33mstyle[39m=[32m"background: rgb(255, 255, 255); border-radius: 16px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); overflow: hidden;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"color: white; padding: 20px; display: flex; justify-content: space-between; align-items: center;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<span[39m
                [33mstyle[39m=[32m"font-size: 28px;"[39m
              [36m>[39m
                [0m��[0m
              [36m</span>[39m
              [36m<div>[39m
                [36m<h2[39m
                  [33mstyle[39m=[32m"margin: 0px; font-size: 20px; font-weight: 600;"[39m
                [36m>[39m
                  [0mReal-Time Betting Odds[0m
                [36m</h2>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mHole [0m
                  [0m8[0m
                  [0m • Updated [0m
                  [0m4:45:40 PM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m87[0m
                [0m% Confidence[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m145[0m
                [0mms[0m
              [36m</div>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 8px; color: white; padding: 6px 12px; cursor: pointer; font-size: 12px;"[39m
              [36m>[39m
                [0m↻[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 16px 20px 0px; border-bottom: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 4px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: transparent;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: white; border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: rgb(25, 118, 210);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mBetting Scenarios[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: transparent; color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mAnalysis[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 16px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"border: 2px solid #ff9800; border-radius: 12px; overflow: hidden;"[39m
              [36m>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"background: rgb(255, 152, 0); color: white; padding: 16px; cursor: pointer; display: flex; justify-content: space-between; align-items: center;"[39m
                [36m>[39m
                  [36m<div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 16px; font-weight: 600; margin-bottom: 4px;"[39m
                    [36m>[39m
                      [0mDouble Down[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mdata-testid[39m=[32m"educational-tooltip"[39m
                        [33mtitle[39m=[32m"Win Probability: The chance of winning based on current position"[39m
                      [36m>[39m
                        [0m62.0%[0m
                        [0m win probability[0m
                      [36m</div>[39m
                      [0m • [0m
                      [36m<div[39m
                        [33mdata-testid[39m=[32m"educational-tooltip"[39m
                        [33mtitle[39m=[32m"Expected Value: The average expected return on this bet"[39m
                      [36m>[39m
                        [0mEV: [0m
                        [0m+1.25[0m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 8px; font-size: 12px; display: flex; align-items: center; gap: 4px;"[39m
                    [36m>[39m
                      [0m��[0m
                      [0m [0m
                      [0mMEDIUM[0m
                    [36m</div>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 18px;"[39m
                    [36m>[39m
                      [0m⌄[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"padding: 20px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"margin-bottom: 16px;"[39m
                  [36m>[39m
                    [36m<h4[39m
                      [33mstyle[39m=[32m"margin: 0px 0px 8px 0px; color: rgb(34, 34, 34);"[39m
                    [36m>[39m
                      [0mAnalysis[0m
                    [36m</h4>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 12px; border-radius: 8px; font-size: 14px; line-height: 1.4; color: rgb(34, 34, 34);"[39m
                    [36m>[39m
                      [0mAlice has favorable position with good lie and manageable distance[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"margin-bottom: 16px;"[39m
                  [36m>[39m
                    [36m<h4[39m
                      [33mstyle[39m=[32m"margin: 0px 0px 8px 0px; color: rgb(34, 34, 34);"[39m
                    [36m>[39m
                      [0mPotential Outcomes[0m
                    [36m</h4>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 8px;"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mstyle[39m=[32m"background: rgb(76, 175, 80); color: white; padding: 12px; border-radius: 8px; text-align: center;"[39m
                      [36m>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 12px; opacity: 0.9; margin-bottom: 4px;"[39m
                        [36m>[39m
                          [0mWin[0m
                        [36m</div>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 16px; font-weight: bold;"[39m
                        [36m>[39m
                          [0m+4.00[0m
                        [36m</div>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mstyle[39m=[32m"background: rgb(244, 67, 54); color: white; padding: 12px; border-radius: 8px; text-align: center;"[39m
                      [36m>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 12px; opacity: 0.9; margin-bottom: 4px;"[39m
                        [36m>[39m
                          [0mLoss[0m
                        [36m</div>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 16px; font-weight: bold;"[39m
                        [36m>[39m
                          [0m-2.00[0m
                        [36m</div>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mstyle[39m=[32m"background: rgb(117, 117, 117); color: white; padding: 12px; border-radius: 8px; text-align: center;"[39m
                      [36m>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 12px; opacity: 0.9; margin-bottom: 4px;"[39m
                        [36m>[39m
                          [0mPush[0m
                        [36m</div>[39m
                        [36m<div[39m
                          [33mstyle[39m=[32m"font-size: 16px; font-weight: bold;"[39m
                        [36m>[39m
                          [0m+0.00[0m
                        [36m</div>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"margin-bottom: 16px;"[39m
                  [36m>[39m
                    [36m<h4[39m
                      [33mstyle[39m=[32m"margin: 0px 0px 8px 0px; color: rgb(34, 34, 34);"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mdata-testid[39m=[32m"educational-tooltip"[39m
                        [33mtitle[39m=[32m"Confidence Interval: The range of probable outcomes"[39m
                      [36m>[39m
                        [0mConfidence Range[0m
                      [36m</div>[39m
                    [36m</h4>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 14px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0m55.0%[0m
                      [0m - [0m
                      [0m69.0%[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<button[39m
                    [33mstyle[39m=[32m"background: rgb(25, 118, 210); color: white; border-radius: 8px; padding: 12px 24px; font-size: 14px; font-weight: 600; cursor: pointer; width: 100%;"[39m
                  [36m>[39m
                    [0m�� Offer[0m
                  [36m</button>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"border: 2px solid #d32f2f; border-radius: 12px; overflow: hidden;"[39m
              [36m>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"background: rgb(211, 47, 47); color: white; padding: 16px; cursor: pointer; display: flex; justify-content: space-between; align-items: center;"[39m
                [36m>[39m
                  [36m<div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 16px; font-weight: 600; margin-bottom: 4px;"[39m
                    [36m>[39m
                      [0mSide Bet[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mdata-testid[39m=[32m"educational-tooltip"[39m
                        [33mtitle[39m=[32m"Win Probability: The chance of winning based on current position"[39m
                      [36m>[39m
                        [0m45.0%[0m
                        [0m win probability[0m
                      [36m</div>[39m
                      [0m • [0m
                      [36m<div[39m
                        [33mdata-testid[39m=[32m"educational-tooltip"[39m
                        [33mtitle[39m=[32m"Expected Value: The average expected return on this bet"[39m
                      [36m>[39m
                        [0mEV: [0m
                        [0m-0.15[0m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 8px; font-size: 12px; display: flex; align-items: center; gap: 4px;"[39m
                    [36m>[39m
                      [0m��[0m
                      [0m [0m
                      [0mHIGH[0m
                    [36m</div>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 18px;"[39m
                    [36m>[39m
                      [0m›[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 16px; border-top: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"contextual-help"[39m
            [36m>[39m
              [36m<div>[39m
                [0mGame Phase: [0m
                [0mbetting_window[0m
              [36m</div>[39m
              [36m<div>[39m
                [0mPlayer Position: [0m
                [0mbehind[0m
              [36m</div>[39m
              [36m<div>[39m
                [0mBetting Scenario: [0m
                [0mdouble_down[0m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 14px; font-weight: 600; margin-bottom: 8px; display: flex; align-items: center; gap: 8px;"[39m
            [36m>[39m
              [36m<span>[39m
                [0m��[0m
              [36m</span>[39m
              [0mStrategic Insights[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mAlice's fairway lie provides significant advantage over rough[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mCurrent hole difficulty (3.5/5) suggests moderate challenge[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mTeam partnerships favor balanced risk-taking approach[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      577 |
      578 |       // Check expanded content
    > 579 |       expect(screen.getByText('Analysis')).toBeInTheDocument();
          |                     ^
      580 |       expect(screen.getByText(/Alice has favorable position/)).toBeInTheDocument();
      581 |       expect(screen.getByText('Potential Outcomes')).toBeInTheDocument();
      582 |       expect(screen.getByText('Win')).toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:579:21)

  ● BettingOddsPanel › Scenarios View › shows no scenarios message when empty

    TestingLibraryElementError: Found multiple elements with the text: ��

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<span[39m
      [33mstyle[39m=[32m"font-size: 28px;"[39m
    [36m>[39m
      [0m��[0m
    [36m</span>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"font-size: 48px; margin-bottom: 16px;"[39m
    [36m>[39m
      [0m��[0m
    [36m</div>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"betting-odds-panel"[39m
          [33mstyle[39m=[32m"background: rgb(255, 255, 255); border-radius: 16px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); overflow: hidden;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"color: white; padding: 20px; display: flex; justify-content: space-between; align-items: center;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<span[39m
                [33mstyle[39m=[32m"font-size: 28px;"[39m
              [36m>[39m
                [0m��[0m
              [36m</span>[39m
              [36m<div>[39m
                [36m<h2[39m
                  [33mstyle[39m=[32m"margin: 0px; font-size: 20px; font-weight: 600;"[39m
                [36m>[39m
                  [0mReal-Time Betting Odds[0m
                [36m</h2>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mHole [0m
                  [0m8[0m
                  [0m • Updated [0m
                  [0m4:45:40 PM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m87[0m
                [0m% Confidence[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m145[0m
                [0mms[0m
              [36m</div>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 8px; color: white; padding: 6px 12px; cursor: pointer; font-size: 12px;"[39m
              [36m>[39m
                [0m↻[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 16px 20px 0px; border-bottom: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 4px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: transparent;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: white; border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: rgb(25, 118, 210);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mBetting Scenarios[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: transparent; color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mAnalysis[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"text-align: center; padding: 40px; color: rgb(136, 136, 136);"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"font-size: 48px; margin-bottom: 16px;"[39m
              [36m>[39m
                [0m��[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"font-size: 16px; margin-bottom: 8px;"[39m
              [36m>[39m
                [0mNo Betting Scenarios Available[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"font-size: 14px;"[39m
              [36m>[39m
                [0mBetting opportunities will appear based on game state and timing.[0m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 16px; border-top: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"contextual-help"[39m
            [36m>[39m
              [36m<div>[39m
                [0mGame Phase: [0m
                [0mbetting_window[0m
              [36m</div>[39m
              [36m<div>[39m
                [0mPlayer Position: [0m
                [0mbehind[0m
              [36m</div>[39m
              [36m<div>[39m
                [0mBetting Scenario: [0m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 14px; font-weight: 600; margin-bottom: 8px; display: flex; align-items: center; gap: 8px;"[39m
            [36m>[39m
              [36m<span>[39m
                [0m��[0m
              [36m</span>[39m
              [0mStrategic Insights[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mAlice's fairway lie provides significant advantage over rough[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mCurrent hole difficulty (3.5/5) suggests moderate challenge[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
            [36m>[39m
              [0m• [0m
              [0mTeam partnerships favor balanced risk-taking approach[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      641 |       await user.click(scenariosTab);
      642 |
    > 643 |       expect(screen.getByText('��')).toBeInTheDocument();
          |                     ^
      644 |       expect(screen.getByText('No Betting Scenarios Available')).toBeInTheDocument();
      645 |       expect(screen.getByText(/Betting opportunities will appear/)).toBeInTheDocument();
      646 |     });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:643:21)

  ● BettingOddsPanel › Analysis View › displays performance metrics

    TestingLibraryElementError: Found multiple elements with the text: 145ms

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
    [36m>[39m
      [0m145[0m
      [0mms[0m
    [36m</div>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
    [36m>[39m
      [0m145[0m
      [0mms[0m
    [36m</div>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"betting-odds-panel"[39m
          [33mstyle[39m=[32m"background: rgb(255, 255, 255); border-radius: 16px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); overflow: hidden;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"color: white; padding: 20px; display: flex; justify-content: space-between; align-items: center;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<span[39m
                [33mstyle[39m=[32m"font-size: 28px;"[39m
              [36m>[39m
                [0m��[0m
              [36m</span>[39m
              [36m<div>[39m
                [36m<h2[39m
                  [33mstyle[39m=[32m"margin: 0px; font-size: 20px; font-weight: 600;"[39m
                [36m>[39m
                  [0mReal-Time Betting Odds[0m
                [36m</h2>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mHole [0m
                  [0m8[0m
                  [0m • Updated [0m
                  [0m4:45:40 PM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m87[0m
                [0m% Confidence[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m145[0m
                [0mms[0m
              [36m</div>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 8px; color: white; padding: 6px 12px; cursor: pointer; font-size: 12px;"[39m
              [36m>[39m
                [0m↻[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 16px 20px 0px; border-bottom: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 4px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: transparent;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: transparent; color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mBetting Scenarios[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: white; border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: rgb(25, 118, 210);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mAnalysis[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 20px;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<h3[39m
                  [33mstyle[39m=[32m"margin: 0px 0px 16px 0px; color: rgb(34, 34, 34);"[39m
                [36m>[39m
                  [0mCalculation Performance[0m
                [36m</h3>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 12px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m145[0m
                      [0mms[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mCalculation Time[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m87[0m
                      [0m%[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mConfidence Level[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m5,000[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mSimulations Run[0m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<h3[39m
                  [33mstyle[39m=[32m"margin: 0px 0px 16px 0px; color: rgb(34, 34, 34);"[39m
                [36m>[39m
                  [0mRisk Assessment[0m
                [36m</h3>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39...

      698 |       await user.click(analysisTab);
      699 |
    > 700 |       expect(screen.getByText('145ms')).toBeInTheDocument(); // Calculation time
          |                     ^
      701 |       expect(screen.getByText('Calculation Time')).toBeInTheDocument();
      702 |       expect(screen.getByText('87%')).toBeInTheDocument(); // Confidence level
      703 |       expect(screen.getByText('Confidence Level')).toBeInTheDocument();

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:700:21)

  ● BettingOddsPanel › Analysis View › displays educational insights

    TestingLibraryElementError: Found multiple elements with the text: /Alice's fairway lie provides/

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mdata-testid[39m=[32m"current-odds"[39m
    [36m>[39m
      [0m{"timestamp":"2024-01-15T10:30:00Z","calculation_time_ms":145.2,"confidence_level":0.87,"monte_carlo_used":true,"player_probabilities":{"player1":{"name":"Alice","win_probability":0.65,"expected_score":4.2,"risk_factors":["weather","lie"]},"player2":{"name":"Bob","win_probability":0.35,"expected_score":4.8,"risk_factors":["distance","lie"]}},"team_probabilities":{"team_a":0.58,"team_b":0.42},"optimal_strategy":"conservative_play","betting_scenarios":[{"scenario_type":"double_down","win_probability":0.62,"expected_value":1.25,"risk_level":"medium","reasoning":"Alice has favorable position with good lie and manageable distance","confidence_interval":[0.55,0.69],"payout_matrix":{"win":4,"loss":-2,"push":0},"recommendation":"offer"},{"scenario_type":"side_bet","win_probability":0.45,"expected_value":-0.15,"risk_level":"high","reasoning":"Bob faces challenging rough lie with increased distance","confidence_interval":[0.38,0.52],"payout_matrix":{"win":2.5,"loss":-1.5},"recommendation":"decline"}],"risk_assessment":{"volatility":0.23,"weather_factor":1,"course_difficulty":3.5,"player_fatigue":0.15},"educational_insights":["Alice's fairway lie provides significant advantage over rough","Current hole difficulty (3.5/5) suggests moderate challenge","Team partnerships favor balanced risk-taking approach"],"simulation_details":{"num_simulations_run":5000,"convergence_achieved":true,"monte_carlo_variance":0.012}}[0m
    [36m</div>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 8px; padding: 12px; font-size: 14px; line-height: 1.4; color: rgb(34, 34, 34); border-left: 4px solid #1976d2;"[39m
    [36m>[39m
      [0mAlice's fairway lie provides significant advantage over rough[0m
    [36m</div>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"font-size: 13px; line-height: 1.4; color: rgb(34, 34, 34); margin-bottom: 8px;"[39m
    [36m>[39m
      [0m• [0m
      [0mAlice's fairway lie provides significant advantage over rough[0m
    [36m</div>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"betting-odds-panel"[39m
          [33mstyle[39m=[32m"background: rgb(255, 255, 255); border-radius: 16px; box-shadow: 0 4px 12px rgba(0,0,0,0.08); overflow: hidden;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"color: white; padding: 20px; display: flex; justify-content: space-between; align-items: center;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<span[39m
                [33mstyle[39m=[32m"font-size: 28px;"[39m
              [36m>[39m
                [0m��[0m
              [36m</span>[39m
              [36m<div>[39m
                [36m<h2[39m
                  [33mstyle[39m=[32m"margin: 0px; font-size: 20px; font-weight: 600;"[39m
                [36m>[39m
                  [0mReal-Time Betting Odds[0m
                [36m</h2>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mHole [0m
                  [0m8[0m
                  [0m • Updated [0m
                  [0m4:45:40 PM[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; gap: 12px;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m87[0m
                [0m% Confidence[0m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 20px; padding: 4px 12px; font-size: 12px;"[39m
              [36m>[39m
                [0m145[0m
                [0mms[0m
              [36m</div>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: rgba(255, 255, 255, 0.2); border-radius: 8px; color: white; padding: 6px 12px; cursor: pointer; font-size: 12px;"[39m
              [36m>[39m
                [0m↻[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 16px 20px 0px; border-bottom: 1px solid #e0e0e0;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 4px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: transparent;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"background: transparent; color: rgb(34, 34, 34); border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px;"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mBetting Scenarios[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"color: white; border-radius: 8px 8px 0 0; padding: 8px 16px; cursor: pointer; font-size: 14px; display: flex; align-items: center; gap: 8px; background: rgb(25, 118, 210);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0m��[0m
                [36m</span>[39m
                [0mAnalysis[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 20px;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<h3[39m
                  [33mstyle[39m=[32m"margin: 0px 0px 16px 0px; color: rgb(34, 34, 34);"[39m
                [36m>[39m
                  [0mCalculation Performance[0m
                [36m</h3>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 12px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m145[0m
                      [0mms[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mCalculation Time[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m87[0m
                      [0m%[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mConfidence Level[0m
                    [36m</div>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px; text-align: center;"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 20px; font-weight: bold; color: rgb(25, 118, 210);"[39m
                    [36m>[39m
                      [0m5,000[0m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136);"[39m
                    [36m>[39m
                      [0mSimulations Run[0m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<h3[39m
                  [33mstyle[39m=[32m"margin: 0px 0px 16px 0px; color: rgb(34, 34, 34);"[39m
                [36m>[39m
                  [0mRisk Assessment[0m
                [36m</h3>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"background: rgb(248, 249, 250); border-radius: 12px; padding: 16px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39...

      773 |
      774 |       expect(screen.getByText('Educational Insights')).toBeInTheDocument();
    > 775 |       expect(screen.getByText(/Alice's fairway lie provides/)).toBeInTheDocument();
          |                     ^
      776 |       expect(screen.getByText(/Current hole difficulty/)).toBeInTheDocument();
      777 |     });
      778 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:775:21)

  ● BettingOddsPanel › Auto-update Functionality › manual refresh works

    TestingLibraryElementError: Unable to find an element with the text: ↻. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"betting-odds-panel"[39m
          [33mdata-testid[39m=[32m"card"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"padding: 20px; text-align: center;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 24px; margin-bottom: 16px;"[39m
            [36m>[39m
              [0m��[0m
            [36m</div>[39m
            [36m<div>[39m
              [0mCalculating odds...[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 12px; color: rgb(136, 136, 136); margin-top: 8px;"[39m
            [36m>[39m
              [0mRunning probability analysis[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      867 |
      868 |       // Click refresh button
    > 869 |       const refreshButton = screen.getByText('↻');
          |                                    ^
      870 |       await user.click(refreshButton);
      871 |
      872 |       await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:869:36)

  ● BettingOddsPanel › Calculation History Tracking › maintains calculation history

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 2
    Received array:  [{"calculation_time": 145.2, "confidence": 0.87, "team_probabilities": {"team_a": 0.58, "team_b": 0.42}, "timestamp": "2024-01-15T10:30:00Z"}, {"calculation_time": 145.2, "confidence": 0.87, "team_probabilities": {"team_a": 0.58, "team_b": 0.42}, "timestamp": "2024-01-15T10:30:05Z"}]

      992 |       const historyArray = JSON.parse(historyData.textContent);
      993 |       
    > 994 |       expect(historyArray).toHaveLength(3);
          |                            ^
      995 |       expect(historyArray[0].timestamp).toBe('2024-01-15T10:30:00Z');
      996 |       expect(historyArray[2].timestamp).toBe('2024-01-15T10:30:10Z');
      997 |     });

      at Object.<anonymous> (src/components/__tests__/BettingOddsPanel.test.js:994:28)

FAIL src/components/__tests__/ShotVisualizationOverlay.test.js
  ● ShotVisualizationOverlay › displays shot recommendation overlay

    TestingLibraryElementError: Found multiple elements with the text: CONSERVATIVE APPROACH

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<text[39m
      [33mfill[39m=[32m"#212121"[39m
      [33mfont-size[39m=[32m"10"[39m
      [33mfont-weight[39m=[32m"bold"[39m
      [33mtext-anchor[39m=[32m"middle"[39m
      [33mx[39m=[32m"230"[39m
      [33my[39m=[32m"0"[39m
    [36m>[39m
      [0mCONSERVATIVE APPROACH[0m
    [36m</text>[39m

    Ignored nodes: comments, script, style
    [36m<div[39m
      [33mstyle[39m=[32m"font-size: 1rem; font-weight: 700; margin-bottom: 0.25rem;"[39m
    [36m>[39m
      [0mCONSERVATIVE APPROACH[0m
    [36m</div>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"position: relative; width: 100%; height: 300px; background: rgb(144, 238, 144); border-radius: 0.5rem; overflow: hidden; border: 2px solid #e0e0e0;"[39m
        [36m>[39m
          [36m<svg[39m
            [33mheight[39m=[32m"100%"[39m
            [33mstyle[39m=[32m"position: absolute; top: 0px; left: 0px;"[39m
            [33mviewBox[39m=[32m"0 0 400 200"[39m
            [33mwidth[39m=[32m"100%"[39m
          [36m>[39m
            [36m<rect[39m
              [33mfill[39m=[32m"#90EE90"[39m
              [33mheight[39m=[32m"200"[39m
              [33mwidth[39m=[32m"400"[39m
              [33mx[39m=[32m"0"[39m
              [33my[39m=[32m"0"[39m
            [36m/>[39m
            [36m<rect[39m
              [33mfill[39m=[32m"#228B22"[39m
              [33mheight[39m=[32m"20"[39m
              [33mwidth[39m=[32m"400"[39m
              [33mx[39m=[32m"0"[39m
              [33my[39m=[32m"0"[39m
            [36m/>[39m
            [36m<rect[39m
              [33mfill[39m=[32m"#228B22"[39m
              [33mheight[39m=[32m"20"[39m
              [33mwidth[39m=[32m"400"[39m
              [33mx[39m=[32m"0"[39m
              [33my[39m=[32m"180"[39m
            [36m/>[39m
            [36m<g>[39m
              [36m<circle[39m
                [33mcx[39m=[32m"230"[39m
                [33mcy[39m=[32m"60"[39m
                [33mfill[39m=[32m"#388e3c40"[39m
                [33mr[39m=[32m"55"[39m
                [33mstroke[39m=[32m"#388e3c"[39m
                [33mstroke-dasharray[39m=[32m"5,5"[39m
                [33mstroke-width[39m=[32m"2"[39m
              [36m/>[39m
              [36m<text[39m
                [33mfill[39m=[32m"#212121"[39m
                [33mfont-size[39m=[32m"10"[39m
                [33mfont-weight[39m=[32m"bold"[39m
                [33mtext-anchor[39m=[32m"middle"[39m
                [33mx[39m=[32m"230"[39m
                [33my[39m=[32m"0"[39m
              [36m>[39m
                [0mCONSERVATIVE APPROACH[0m
              [36m</text>[39m
              [36m<text[39m
                [33mfill[39m=[32m"#757575"[39m
                [33mfont-size[39m=[32m"8"[39m
                [33mtext-anchor[39m=[32m"middle"[39m
                [33mx[39m=[32m"230"[39m
                [33my[39m=[32m"63"[39m
              [36m>[39m
                [0m85%[0m
                [0m success[0m
              [36m</text>[39m
            [36m</g>[39m
            [36m<g>[39m
              [36m<circle[39m
                [33mcx[39m=[32m"240"[39m
                [33mcy[39m=[32m"100"[39m
                [33mfill[39m=[32m"#ff980040"[39m
                [33mr[39m=[32m"48.33333333333333"[39m
                [33mstroke[39m=[32m"#ff9800"[39m
                [33mstroke-dasharray[39m=[32m"5,5"[39m
                [33mstroke-width[39m=[32m"2"[39m
              [36m/>[39m
              [36m<text[39m
                [33mfill[39m=[32m"#212121"[39m
                [33mfont-size[39m=[32m"10"[39m
                [33mfont-weight[39m=[32m"bold"[39m
                [33mtext-anchor[39m=[32m"middle"[39m
                [33mx[39m=[32m"240"[39m
                [33my[39m=[32m"46.66666666666667"[39m
              [36m>[39m
                [0mAGGRESSIVE APPROACH[0m
              [36m</text>[39m
              [36m<text[39m
                [33mfill[39m=[32m"#757575"[39m
                [33mfont-size[39m=[32m"8"[39m
                [33mtext-anchor[39m=[32m"middle"[39m
                [33mx[39m=[32m"240"[39m
                [33my[39m=[32m"103"[39m
              [36m>[39m
                [0m70%[0m
                [0m success[0m
              [36m</text>[39m
            [36m</g>[39m
            [36m<path[39m
              [33md[39m=[32m"M 150 100 L 200 90 L 340 105 L 380 100"[39m
              [33mfill[39m=[32m"none"[39m
              [33mmarker-end[39m=[32m"url(#arrowhead)"[39m
              [33mstroke[39m=[32m"#047857"[39m
              [33mstroke-dasharray[39m=[32m"8,4"[39m
              [33mstroke-width[39m=[32m"3"[39m
            [36m/>[39m
            [36m<ellipse[39m
              [33mcx[39m=[32m"280"[39m
              [33mcy[39m=[32m"60"[39m
              [33mfill[39m=[32m"#4682B4"[39m
              [33mopacity[39m=[32m"0.6"[39m
              [33mrx[39m=[32m"40"[39m
              [33mry[39m=[32m"20"[39m
            [36m/>[39m
            [36m<text[39m
              [33mfill[39m=[32m"white"[39m
              [33mfont-size[39m=[32m"8"[39m
              [33mfont-weight[39m=[32m"bold"[39m
              [33mtext-anchor[39m=[32m"middle"[39m
              [33mx[39m=[32m"280"[39m
              [33my[39m=[32m"63"[39m
            [36m>[39m
              [0mWATER[0m
            [36m</text>[39m
            [36m<ellipse[39m
              [33mcx[39m=[32m"320"[39m
              [33mcy[39m=[32m"140"[39m
              [33mfill[39m=[32m"#F4A460"[39m
              [33mopacity[39m=[32m"0.8"[39m
              [33mrx[39m=[32m"25"[39m
              [33mry[39m=[32m"15"[39m
            [36m/>[39m
            [36m<text[39m
              [33mfill[39m=[32m"#212121"[39m
              [33mfont-size[39m=[32m"8"[39m
              [33mfont-weight[39m=[32m"bold"[39m
              [33mtext-anchor[39m=[32m"middle"[39m
              [33mx[39m=[32m"320"[39m
              [33my[39m=[32m"143"[39m
            [36m>[39m
              [0mSAND[0m
            [36m</text>[39m
            [36m<g>[39m
              [36m<line[39m
                [33mopacity[39m=[32m"0.6"[39m
                [33mstroke[39m=[32m"#757575"[39m
                [33mstroke-dasharray[39m=[32m"3,3"[39m
                [33mstroke-width[39m=[32m"1"[39m
                [33mx1[39m=[32m"280"[39m
                [33mx2[39m=[32m"280"[39m
                [33my1[39m=[32m"20"[39m
                [33my2[39m=[32m"180"[39m
              [36m/>[39m
              [36m<text[39m
                [33mfill[39m=[32m"#757575"[39m
                [33mfont-size[39m=[32m"9"[39m
                [33mfont-weight[39m=[32m"bold"[39m
                [33mtext-anchor[39m=[32m"middle"[39m
                [33mx[39m=[32m"280"[39m
                [33my[39m=[32m"180"[39m
              [36m>[39m
                [0m100[0m
                [0my[0m
              [36m</text>[39m
            [36m</g>[39m
            [36m<circle[39m
              [33mcx[39m=[32m"150"[39m
              [33mcy[39m=[32m"100"[39m
              [33mfill[39m=[32m"#047857"[39m
              [33mr[39m=[32m"8"[39m
              [33mstroke[39m=[32m"white"[39m
              [33mstroke-width[39m=[32m"2"[39m
            [36m/>[39m
            [36m<text[39m
              [33mfill[39m=[32m"#047857"[39m
              [33mfont-size[39m=[32m"10"[39m
              [33mfont-weight[39m=[32m"bold"[39m
              [33mtext-anchor[39m=[32m"middle"[39m
              [33mx[39m=[32m"150"[39m
              [33my[39m=[32m"85"[39m
            [36m>[39m
              [0mYOU[0m
            [36m</text>[39m
            [36m<circle[39m
              [33mcx[39m=[32m"380"[39m
              [33mcy[39m=[32m"100"[39m
              [33mfill[39m=[32m"red"[39m
              [33mr[39m=[32m"4"[39m
            [36m/>[39m
            [36m<line[39m
              [33mstroke[39m=[32m"red"[39m
              [33mstroke-width[39m=[32m"2"[39m
              [33mx1[39m=[32m"380"[39m
              [33mx2[39m=[32m"380"[39m
              [33my1[39m=[32m"85"[39m
              [33my2[39m=[32m"96"[39m
            [36m/>[39m
            [36m<text[39m
              [33mfill[39m=[32m"red"[39m
              [33mfont-size[39m=[32m"10"[39m
              [33mfont-weight[39m=[32m"bold"[39m
              [33mx[39m=[32m"390"[39m
              [33my[39m=[32m"103"[39m
            [36m>[39m
              [0mPIN[0m
            [36m</text>[39m
            [36m<defs>[39m
              [36m<marker[39m
                [33mid[39m=[32m"arrowhead"[39m
                [33mmarkerHeight[39m=[32m"7"[39m
                [33mmarkerWidth[39m=[32m"10"[39m
                [33morient[39m=[32m"auto"[39m
                [33mrefX[39m=[32m"10"[39m
                [33mrefY[39m=[32m"3.5"[39m
              [36m>[39m
                [36m<polygon[39m
                  [33mfill[39m=[32m"#047857"[39m
                  [33mpoints[39m=[32m"0 0, 10 3.5, 0 7"[39m
                [36m/>[39m
              [36m</marker>[39m
            [36m</defs>[39m
          [36m</svg>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"position: absolute; top: 0.5rem; left: 0.5rem; background: rgba(255, 255, 255, 0.9); padding: 0.5rem; border-radius: 0.5rem; font-size: 0.75rem; min-width: 120px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-weight: 700; margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [0mLegend[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"width: 12px; height: 12px; background: rgba(56, 142, 60, 0.251); border: 1px solid #388e3c; border-radius: 50%; margin-right: 0.25rem;"[39m
              [36m/>[39m
              [0mLow Risk[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"width: 12px; height: 12px; background: rgba(255, 152, 0, 0.251); border: 1px solid #ff9800; border-radius: 50%; margin-right: 0.25rem;"[39m
              [36m/>[39m
              [0mMedium Risk[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center; margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"width: 12px; height: 12px; background: rgba(211, 47, 47, 0.251); border: 1px solid #d32f2f; border-radius: 50%; margin-right: 0.25rem;"[39m
              [36m/>[39m
              [0mHigh Risk[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; align-items: center;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"width: 12px; height: 2px; background: rgb(4, 120, 87); margin-right: 0.25rem;"[39m
              [36m/>[39m
              [0mOptimal Path[0m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"position: absolute; top: 0.5rem; right: 0.5rem; background: rgba(255, 255, 255, 0.95); padding: 0.75rem; border-radius: 0.5rem; border: 2px solid #047857; min-width: 160px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-weight: 700; color: rgb(4, 120, 87); margin-bottom: 0.25rem; font-size: 0.875rem;"[39m
            [36m>[39m
              [0m�� Recommended[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 1rem; font-weight: 700; margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [0mCONSERVATIVE APPROACH[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 0.75rem; color: rgb(117, 117, 117); margin-bottom: 0.25rem;"[39m
            [36m>[39m
              [0mSuccess: [0m
              [0m85%[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 0.75rem; color: rgb(56, 142, 60);"[39m
            [36m>[39m
              [0mRisk: [0m
              [0m25[0m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      159 |
      160 |     expect(screen.getByText('�� Recommended')).toBeInTheDocument();
    > 161 |     expect(screen.getByText('CONSERVATIVE APPROACH')).toBeInTheDocument();
          |                   ^
      162 |     expect(screen.getByText('Success: 85%')).toBeInTheDocument();
      163 |     expect(screen.getByText('Risk: 25')).toBeInTheDocument();
      164 |   });

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/ShotVisualizationOverlay.test.js:161:19)

FAIL src/components/signup/__tests__/MatchmakingSuggestions.test.js
  ● MatchmakingSuggestions › renders match suggestions after loading

    Found multiple elements with the text: /Monday/i

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<button[39m
      [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
    [36m>[39m
      [0mMonday[0m
    [36m</button>[39m

    Ignored nodes: comments, script, style
    [36m<h4[39m
      [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 18px; margin-bottom: 12px;"[39m
    [36m>[39m
      [0mMonday[0m
    [36m</h4>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1200px; margin: 0px auto;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-bottom: 30px;"[39m
          [36m>[39m
            [36m<h2[39m
              [33mstyle[39m=[32m"color: rgb(51, 51, 51); margin-bottom: 10px;"[39m
            [36m>[39m
              [0m�� Smart Golf Matchmaking[0m
            [36m</h2>[39m
            [36m<p[39m
              [33mstyle[39m=[32m"color: rgb(108, 117, 125); font-size: 14px;"[39m
            [36m>[39m
              [0mAutomatic 4-player group suggestions based on schedule compatibility[0m
            [36m</p>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"margin-top: 15px; padding: 12px; background: rgb(255, 243, 205); border: 1px solid #ffc107; border-radius: 6px; font-size: 13px; color: rgb(133, 100, 4);"[39m
            [36m>[39m
              [0m�� [0m
              [36m<strong>[39m
                [0mHow it works:[0m
              [36m</strong>[39m
              [0m The system automatically finds groups of 4 players with overlapping availability and sends email invitations daily at 10 AM.[0m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 20px; border-radius: 8px; margin-bottom: 30px; border: 1px solid #dee2e6;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"margin-bottom: 20px;"[39m
            [36m>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; font-size: 14px; font-weight: 600; color: rgb(73, 80, 87); margin-bottom: 8px;"[39m
              [36m>[39m
                [0mMinimum Overlap Hours:[0m
              [36m</label>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; align-items: center; gap: 15px;"[39m
              [36m>[39m
                [36m<input[39m
                  [33mmax[39m=[32m"6"[39m
                  [33mmin[39m=[32m"1"[39m
                  [33mstep[39m=[32m"0.5"[39m
                  [33mstyle[39m=[32m"flex: 1;"[39m
                  [33mtype[39m=[32m"range"[39m
                  [33mvalue[39m=[32m"2"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: rgb(0, 123, 255); color: white; border-radius: 4px; font-size: 14px; font-weight: 600; min-width: 60px; text-align: center;"[39m
                [36m>[39m
                  [0m2[0m
                  [0mh[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; font-size: 14px; font-weight: 600; color: rgb(73, 80, 87); margin-bottom: 8px;"[39m
              [36m>[39m
                [0mPreferred Days:[0m
              [36m</label>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; gap: 8px; flex-wrap: wrap;"[39m
              [36m>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mMonday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mTuesday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mWednesday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mThursday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mFriday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mSaturday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mSunday[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
            [36m>[39m
              [0mFound [0m
              [36m<strong>[39m
                [0m1[0m
              [36m</strong>[39m
              [0m potential matches[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 10px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"padding: 8px 16px; background: rgb(108, 117, 125); color: white; border-radius: 4px; font-size: 14px; cursor: pointer;"[39m
              [36m>[39m
                [0mRefresh[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"padding: 8px 16px; background: rgb(40, 167, 69); color: white; border-radius: 4px; font-size: 14px; cursor: pointer; opacity: 1;"[39m
              [36m>[39m
                [0mSend All Notifications[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); gap: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"border: 2px solid #dee2e6; border-radius: 8px; padding: 20px; background: white; position: relative;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"position: absolute; top: 10px; right: 10px; padding: 4px 8px; background: rgb(40, 167, 69); color: white; border-radius: 12px; font-size: 12px; font-weight: 600;"[39m
              [36m>[39m
                [0mExcellent[0m
                [0m Match[0m
              [36m</div>[39m
              [36m<h4[39m
                [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 18px; margin-bottom: 12px;"[39m
              [36m>[39m
                [0mMonday[0m
              [36m</h4>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 12px; border-radius: 6px; margin-bottom: 16px;"[39m
              [36m>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(73, 80, 87); margin-bottom: 6px;"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mAvailable:[0m
                  [36m</strong>[39m
                  [0m [0m
                  [0m9:00 AM[0m
                  [0m - [0m
                  [0m1:00 PM[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(73, 80, 87);"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mSuggested Tee Time:[0m
                  [36m</strong>[39m
                  [36m<span[39m
                    [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 8px; background: rgb(0, 123, 255); color: white; border-radius: 4px; font-size: 13px;"[39m
                  [36m>[39m
                    [0m10:00 AM[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"margin-bottom: 16px;"[39m
              [36m>[39m
                [36m<h5[39m
                  [33mstyle[39m=[32m"color: rgb(73, 80, 87); font-size: 14px; font-weight: 600; margin-bottom: 8px;"[39m
                [36m>[39m
                  [0mPlayers ([0m
                  [0m4[0m
                  [0m)[0m
                [36m</h5>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 6px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mJohn Doe[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mJane Smith[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mBob Wilson[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mAlice Brown[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; justify-content: space-between; padding: 8px 0px; border-top: 1px solid #dee2e6; font-size: 12px; color: rgb(108, 117, 125);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0mOverlap: [0m
                  [0m4.0[0m
                  [0mh[0m
                [36m</span>[39m
                [36m<span>[39m
                  [0mScore: [0m
                  [0m86[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-top: 40px; padding: 20px; border-radius: 8px; color: white;"[39m
          [36m>[39m
            [36m<h4[39m
              [33mstyle[39m=[32m"color: white; margin-bottom: 10px;"[39m
            [36m>[39m
              [0m�� Matchmaking Features[0m
            [36m</h4>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px; font-size: 13px;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m�� Group Formation:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mAutomatically creates perfect 4-player groups[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m⏰ Time Optimization:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mFinds optimal tee times for all players[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m�� Email Invitations:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mSends notifications to matched players[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m�� Smart Rotation:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mAvoids re-matching same groups (3-day cooldown)[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      45 |     render(<MatchmakingSuggestions />);
      46 |
    > 47 |     await waitFor(() => {
         |                  ^
      48 |       expect(screen.getByText(/Monday/i)).toBeInTheDocument();
      49 |     });
      50 |

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/components/signup/__tests__/MatchmakingSuggestions.test.js:47:18)

  ● MatchmakingSuggestions › updates minimum overlap hours

    TestingLibraryElementError: Unable to find an accessible element with the role "slider"

    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"text-align: center; padding: 40px; font-size: 16px; color: rgb(108, 117, 125);"[39m
        [36m>[39m
          [0mFinding perfect golf matches...[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      85 |     render(<MatchmakingSuggestions />);
      86 |
    > 87 |     const slider = screen.getByRole('slider');
         |                           ^
      88 |     fireEvent.change(slider, { target: { value: '3' } });
      89 |
      90 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/signup/__tests__/MatchmakingSuggestions.test.js:87:27)

  ● MatchmakingSuggestions › toggles day selection

    TestingLibraryElementError: Unable to find an element with the text: Monday. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"text-align: center; padding: 40px; font-size: 16px; color: rgb(108, 117, 125);"[39m
        [36m>[39m
          [0mFinding perfect golf matches...[0m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      107 |     render(<MatchmakingSuggestions />);
      108 |
    > 109 |     const mondayButton = screen.getByText('Monday');
          |                                 ^
      110 |     fireEvent.click(mondayButton);
      111 |
      112 |     await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/signup/__tests__/MatchmakingSuggestions.test.js:109:33)

  ● MatchmakingSuggestions › sends notifications

    Found multiple elements with the text: /Monday/i

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<button[39m
      [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
    [36m>[39m
      [0mMonday[0m
    [36m</button>[39m

    Ignored nodes: comments, script, style
    [36m<h4[39m
      [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 18px; margin-bottom: 12px;"[39m
    [36m>[39m
      [0mMonday[0m
    [36m</h4>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mstyle[39m=[32m"max-width: 1200px; margin: 0px auto;"[39m
        [36m>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-bottom: 30px;"[39m
          [36m>[39m
            [36m<h2[39m
              [33mstyle[39m=[32m"color: rgb(51, 51, 51); margin-bottom: 10px;"[39m
            [36m>[39m
              [0m�� Smart Golf Matchmaking[0m
            [36m</h2>[39m
            [36m<p[39m
              [33mstyle[39m=[32m"color: rgb(108, 117, 125); font-size: 14px;"[39m
            [36m>[39m
              [0mAutomatic 4-player group suggestions based on schedule compatibility[0m
            [36m</p>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"margin-top: 15px; padding: 12px; background: rgb(255, 243, 205); border: 1px solid #ffc107; border-radius: 6px; font-size: 13px; color: rgb(133, 100, 4);"[39m
            [36m>[39m
              [0m�� [0m
              [36m<strong>[39m
                [0mHow it works:[0m
              [36m</strong>[39m
              [0m The system automatically finds groups of 4 players with overlapping availability and sends email invitations daily at 10 AM.[0m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 20px; border-radius: 8px; margin-bottom: 30px; border: 1px solid #dee2e6;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"margin-bottom: 20px;"[39m
            [36m>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; font-size: 14px; font-weight: 600; color: rgb(73, 80, 87); margin-bottom: 8px;"[39m
              [36m>[39m
                [0mMinimum Overlap Hours:[0m
              [36m</label>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; align-items: center; gap: 15px;"[39m
              [36m>[39m
                [36m<input[39m
                  [33mmax[39m=[32m"6"[39m
                  [33mmin[39m=[32m"1"[39m
                  [33mstep[39m=[32m"0.5"[39m
                  [33mstyle[39m=[32m"flex: 1;"[39m
                  [33mtype[39m=[32m"range"[39m
                  [33mvalue[39m=[32m"2"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: rgb(0, 123, 255); color: white; border-radius: 4px; font-size: 14px; font-weight: 600; min-width: 60px; text-align: center;"[39m
                [36m>[39m
                  [0m2[0m
                  [0mh[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</div>[39m
            [36m<div>[39m
              [36m<label[39m
                [33mstyle[39m=[32m"display: block; font-size: 14px; font-weight: 600; color: rgb(73, 80, 87); margin-bottom: 8px;"[39m
              [36m>[39m
                [0mPreferred Days:[0m
              [36m</label>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; gap: 8px; flex-wrap: wrap;"[39m
              [36m>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mMonday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mTuesday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mWednesday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mThursday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mFriday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mSaturday[0m
                [36m</button>[39m
                [36m<button[39m
                  [33mstyle[39m=[32m"padding: 6px 12px; background: white; color: rgb(73, 80, 87); border: 1px solid #ced4da; border-radius: 4px; font-size: 13px; cursor: pointer; transition: all 0.2s;"[39m
                [36m>[39m
                  [0mSunday[0m
                [36m</button>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"font-size: 14px; color: rgb(108, 117, 125);"[39m
            [36m>[39m
              [0mFound [0m
              [36m<strong>[39m
                [0m1[0m
              [36m</strong>[39m
              [0m potential matches[0m
            [36m</div>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: flex; gap: 10px;"[39m
            [36m>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"padding: 8px 16px; background: rgb(108, 117, 125); color: white; border-radius: 4px; font-size: 14px; cursor: pointer;"[39m
              [36m>[39m
                [0mRefresh[0m
              [36m</button>[39m
              [36m<button[39m
                [33mstyle[39m=[32m"padding: 8px 16px; background: rgb(40, 167, 69); color: white; border-radius: 4px; font-size: 14px; cursor: pointer; opacity: 1;"[39m
              [36m>[39m
                [0mSend All Notifications[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); gap: 20px;"[39m
          [36m>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"border: 2px solid #dee2e6; border-radius: 8px; padding: 20px; background: white; position: relative;"[39m
            [36m>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"position: absolute; top: 10px; right: 10px; padding: 4px 8px; background: rgb(40, 167, 69); color: white; border-radius: 12px; font-size: 12px; font-weight: 600;"[39m
              [36m>[39m
                [0mExcellent[0m
                [0m Match[0m
              [36m</div>[39m
              [36m<h4[39m
                [33mstyle[39m=[32m"color: rgb(51, 51, 51); font-size: 18px; margin-bottom: 12px;"[39m
              [36m>[39m
                [0mMonday[0m
              [36m</h4>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"background: rgb(248, 249, 250); padding: 12px; border-radius: 6px; margin-bottom: 16px;"[39m
              [36m>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(73, 80, 87); margin-bottom: 6px;"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mAvailable:[0m
                  [36m</strong>[39m
                  [0m [0m
                  [0m9:00 AM[0m
                  [0m - [0m
                  [0m1:00 PM[0m
                [36m</div>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"font-size: 14px; color: rgb(73, 80, 87);"[39m
                [36m>[39m
                  [36m<strong>[39m
                    [0mSuggested Tee Time:[0m
                  [36m</strong>[39m
                  [36m<span[39m
                    [33mstyle[39m=[32m"margin-left: 8px; padding: 2px 8px; background: rgb(0, 123, 255); color: white; border-radius: 4px; font-size: 13px;"[39m
                  [36m>[39m
                    [0m10:00 AM[0m
                  [36m</span>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"margin-bottom: 16px;"[39m
              [36m>[39m
                [36m<h5[39m
                  [33mstyle[39m=[32m"color: rgb(73, 80, 87); font-size: 14px; font-weight: 600; margin-bottom: 8px;"[39m
                [36m>[39m
                  [0mPlayers ([0m
                  [0m4[0m
                  [0m)[0m
                [36m</h5>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"display: flex; flex-direction: column; gap: 6px;"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mJohn Doe[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mJane Smith[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mBob Wilson[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mstyle[39m=[32m"padding: 6px 10px; background: rgb(233, 236, 239); border-radius: 4px; font-size: 13px; display: flex; justify-content: space-between; align-items: center;"[39m
                  [36m>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-weight: 500;"[39m
                    [36m>[39m
                      [0mAlice Brown[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mstyle[39m=[32m"font-size: 11px; color: rgb(108, 117, 125);"[39m
                    [36m>[39m
                      [0mAny[0m
                      [0m - [0m
                      [0mAny[0m
                    [36m</span>[39m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div[39m
                [33mstyle[39m=[32m"display: flex; justify-content: space-between; padding: 8px 0px; border-top: 1px solid #dee2e6; font-size: 12px; color: rgb(108, 117, 125);"[39m
              [36m>[39m
                [36m<span>[39m
                  [0mOverlap: [0m
                  [0m4.0[0m
                  [0mh[0m
                [36m</span>[39m
                [36m<span>[39m
                  [0mScore: [0m
                  [0m86[0m
                [36m</span>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mstyle[39m=[32m"margin-top: 40px; padding: 20px; border-radius: 8px; color: white;"[39m
          [36m>[39m
            [36m<h4[39m
              [33mstyle[39m=[32m"color: white; margin-bottom: 10px;"[39m
            [36m>[39m
              [0m�� Matchmaking Features[0m
            [36m</h4>[39m
            [36m<div[39m
              [33mstyle[39m=[32m"display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px; font-size: 13px;"[39m
            [36m>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m�� Group Formation:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mAutomatically creates perfect 4-player groups[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m⏰ Time Optimization:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mFinds optimal tee times for all players[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m�� Email Invitations:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mSends notifications to matched players[0m
                [36m</div>[39m
              [36m</div>[39m
              [36m<div>[39m
                [36m<strong>[39m
                  [0m�� Smart Rotation:[0m
                [36m</strong>[39m
                [36m<div[39m
                  [33mstyle[39m=[32m"margin-top: 4px; opacity: 0.9;"[39m
                [36m>[39m
                  [0mAvoids re-matching same groups (3-day cooldown)[0m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      134 |     render(<MatchmakingSuggestions />);
      135 |
    > 136 |     await waitFor(() => {
          |                  ^
      137 |       expect(screen.getByText(/Monday/i)).toBeInTheDocument();
      138 |     });
      139 |

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/components/signup/__tests__/MatchmakingSuggestions.test.js:136:18)

FAIL src/components/__tests__/GameDashboard.test.js
  ● GameDashboard › Overview Panel › shows player position information

    TestingLibraryElementError: Unable to find an element with the text: 120y from pin. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"game-dashboard"[39m
          [33mdata-testid[39m=[32m"game-dashboard"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"dashboard-header"[39m
            [33mdata-testid[39m=[32m"dashboard-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mWolf Goat Pig - Hole [0m
              [0m8[0m
            [36m</h1>[39m
            [36m<div[39m
              [33mclass[39m=[32m"pot-display"[39m
              [33mdata-testid[39m=[32m"pot-display"[39m
            [36m>[39m
              [0mCurrent Pot: $[0m
              [0m48.50[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"view-switcher"[39m
              [33mdata-testid[39m=[32m"view-switcher"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button active"[39m
                [33mdata-testid[39m=[32m"view-overview"[39m
              [36m>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-scores"[39m
              [36m>[39m
                [0mScores[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-betting"[39m
              [36m>[39m
                [0mBetting[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-analytics"[39m
              [36m>[39m
                [0mAnalytics[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"dashboard-content"[39m
            [33mdata-testid[39m=[32m"dashboard-content"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"overview-panel"[39m
              [33mdata-testid[39m=[32m"overview-panel"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"players-grid"[39m
                [33mdata-testid[39m=[32m"players-grid"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player1"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mAlice[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m12[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m32[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m15.50[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m120[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mfairway[0m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player2"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mBob[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m18[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m38[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m-8.25[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m85[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mrough[0m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player3"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mCarol[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m8[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m29[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m22.75[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m150[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mbunker[0m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"floating-actions"[39m
            [33mdata-testid[39m=[32m"floating-actions"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button betting-button"[39m
              [33mdata-testid[39m=[32m"quick-bet-button"[39m
            [36m>[39m
              [0m�� Quick Bet[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button analysis-button"[39m
              [33mdata-testid[39m=[32m"shot-analysis-button"[39m
            [36m>[39m
              [0m�� Shot Analysis[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button simulation-button"[39m
              [33mdata-testid[39m=[32m"monte-carlo-button"[39m
            [36m>[39m
              [0m�� Simulate[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"realtime-indicator active"[39m
            [33mdata-testid[39m=[32m"realtime-indicator"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"pulse-dot"[39m
            [36m/>[39m
            [36m<span>[39m
              [0mLive Updates[0m
            [36m</span>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      487 |
      488 |       // Check position display for first player
    > 489 |       expect(screen.getByText('120y from pin')).toBeInTheDocument();
          |                     ^
      490 |       expect(screen.getByText('Lie: fairway')).toBeInTheDocument();
      491 |     });
      492 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByText (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/GameDashboard.test.js:489:21)

  ● GameDashboard › Error Handling › does not crash with malformed data

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "Cannot read properties of null (reading 'id')"

          73 |                 <div
          74 |                   key={player.id}
        > 75 |                   data-testid={`player-card-${player.id}`}
             |                                                      ^
          76 |                   className={`player-card ${selectedPlayer?.id === player.id ? 'selected' : ''}`}
          77 |                   onClick={() => setSelectedPlayer(player)}
          78 |                 >

      at map (src/components/__tests__/GameDashboard.test.js:75:54)
                at Array.map (<anonymous>)
      at GameDashboard (src/components/__tests__/GameDashboard.test.js:72:36)
      at Object.react_stack_bottom_frame (node_modules/react-dom/cjs/react-dom-client.development.js:23863:20)
      at renderWithHooks (node_modules/react-dom/cjs/react-dom-client.development.js:5529:22)
      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom-client.development.js:8897:19)
      at beginWork (node_modules/react-dom/cjs/react-dom-client.development.js:10522:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15140:22)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14462:44)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:860:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at src/components/__tests__/GameDashboard.test.js:871:15
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:83:11)
      at Object.toThrow (node_modules/expect/build/index.js:382:21)
      at Object.<anonymous> (src/components/__tests__/GameDashboard.test.js:876:14)
      at Object.<anonymous> (src/components/__tests__/GameDashboard.test.js:876:14)

  ● GameDashboard › Accessibility › has proper ARIA labels and roles

    TestingLibraryElementError: Unable to find an accessible element with the role "table"

    Here are the accessible roles:

      heading:

      Name "Wolf Goat Pig - Hole 8":
      [36m<h1 />[39m

      --------------------------------------------------
      button:

      Name "Overview":
      [36m<button[39m
        [33mclass[39m=[32m"view-button active"[39m
        [33mdata-testid[39m=[32m"view-overview"[39m
      [36m/>[39m

      Name "Scores":
      [36m<button[39m
        [33mclass[39m=[32m"view-button "[39m
        [33mdata-testid[39m=[32m"view-scores"[39m
      [36m/>[39m

      Name "Betting":
      [36m<button[39m
        [33mclass[39m=[32m"view-button "[39m
        [33mdata-testid[39m=[32m"view-betting"[39m
      [36m/>[39m

      Name "Analytics":
      [36m<button[39m
        [33mclass[39m=[32m"view-button "[39m
        [33mdata-testid[39m=[32m"view-analytics"[39m
      [36m/>[39m

      Name "�� Quick Bet":
      [36m<button[39m
        [33mclass[39m=[32m"quick-action-button betting-button"[39m
        [33mdata-testid[39m=[32m"quick-bet-button"[39m
      [36m/>[39m

      Name "�� Shot Analysis":
      [36m<button[39m
        [33mclass[39m=[32m"quick-action-button analysis-button"[39m
        [33mdata-testid[39m=[32m"shot-analysis-button"[39m
      [36m/>[39m

      Name "�� Simulate":
      [36m<button[39m
        [33mclass[39m=[32m"quick-action-button simulation-button"[39m
        [33mdata-testid[39m=[32m"monte-carlo-button"[39m
      [36m/>[39m

      --------------------------------------------------

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<div[39m
          [33mclass[39m=[32m"game-dashboard"[39m
          [33mdata-testid[39m=[32m"game-dashboard"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"dashboard-header"[39m
            [33mdata-testid[39m=[32m"dashboard-header"[39m
          [36m>[39m
            [36m<h1>[39m
              [0mWolf Goat Pig - Hole [0m
              [0m8[0m
            [36m</h1>[39m
            [36m<div[39m
              [33mclass[39m=[32m"pot-display"[39m
              [33mdata-testid[39m=[32m"pot-display"[39m
            [36m>[39m
              [0mCurrent Pot: $[0m
              [0m48.50[0m
            [36m</div>[39m
            [36m<div[39m
              [33mclass[39m=[32m"view-switcher"[39m
              [33mdata-testid[39m=[32m"view-switcher"[39m
            [36m>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button active"[39m
                [33mdata-testid[39m=[32m"view-overview"[39m
              [36m>[39m
                [0mOverview[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-scores"[39m
              [36m>[39m
                [0mScores[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-betting"[39m
              [36m>[39m
                [0mBetting[0m
              [36m</button>[39m
              [36m<button[39m
                [33mclass[39m=[32m"view-button "[39m
                [33mdata-testid[39m=[32m"view-analytics"[39m
              [36m>[39m
                [0mAnalytics[0m
              [36m</button>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"dashboard-content"[39m
            [33mdata-testid[39m=[32m"dashboard-content"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"overview-panel"[39m
              [33mdata-testid[39m=[32m"overview-panel"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"players-grid"[39m
                [33mdata-testid[39m=[32m"players-grid"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player1"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mAlice[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m12[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m32[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m15.50[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m120[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mfairway[0m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player2"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mBob[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m18[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m38[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m-8.25[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m85[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mrough[0m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"player-card "[39m
                  [33mdata-testid[39m=[32m"player-card-player3"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-name"[39m
                  [36m>[39m
                    [0mCarol[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-handicap"[39m
                  [36m>[39m
                    [0mHC: [0m
                    [0m8[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-score"[39m
                  [36m>[39m
                    [0mScore: [0m
                    [0m29[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-earnings"[39m
                  [36m>[39m
                    [0mEarnings: $[0m
                    [0m22.75[0m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"player-position"[39m
                  [36m>[39m
                    [0m150[0m
                    [0my from pin[0m
                    [36m<br />[39m
                    [0mLie: [0m
                    [0mbunker[0m
                  [36m</div>[39m
                [36m</div>[39m
              [36m</div>[39m
            [36m</div>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"floating-actions"[39m
            [33mdata-testid[39m=[32m"floating-actions"[39m
          [36m>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button betting-button"[39m
              [33mdata-testid[39m=[32m"quick-bet-button"[39m
            [36m>[39m
              [0m�� Quick Bet[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button analysis-button"[39m
              [33mdata-testid[39m=[32m"shot-analysis-button"[39m
            [36m>[39m
              [0m�� Shot Analysis[0m
            [36m</button>[39m
            [36m<button[39m
              [33mclass[39m=[32m"quick-action-button simulation-button"[39m
              [33mdata-testid[39m=[32m"monte-carlo-button"[39m
            [36m>[39m
              [0m�� Simulate[0m
            [36m</button>[39m
          [36m</div>[39m
          [36m<div[39m
            [33mclass[39m=[32m"realtime-indicator active"[39m
            [33mdata-testid[39m=[32m"realtime-indicator"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"pulse-dot"[39m
            [36m/>[39m
            [36m<span>[39m
              [0mLive Updates[0m
            [36m</span>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</div>[39m
    [36m</body>[39m

      944 |
      945 |       // Tables should have proper roles
    > 946 |       const scoreTable = screen.getByRole('table');
          |                                 ^
      947 |       expect(scoreTable).toBeInTheDocument();
      948 |
      949 |       // Buttons should be keyboard accessible

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at getByRole (node_modules/@testing-library/dom/dist/query-helpers.js:95:19)
      at Object.<anonymous> (src/components/__tests__/GameDashboard.test.js:946:33)

  ● GameDashboard › Accessibility › supports keyboard navigation

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "scores"

    Number of calls: 0

      975 |       // Enter should activate button
      976 |       await user.keyboard('{Enter}');
    > 977 |       expect(mockOnViewChange).toHaveBeenCalledWith('scores');
          |                                ^
      978 |     });
      979 |   });
      980 | });

      at Object.<anonymous> (src/components/__tests__/GameDashboard.test.js:977:32)

FAIL src/pages/__tests__/SetupPage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/SetupPage.test.js'

      15 |
      16 | const mockNavigate = jest.fn();
    > 17 | jest.mock('react-router-dom', () => ({
         |      ^
      18 |   ...jest.requireActual('react-router-dom'),
      19 |   useNavigate: () => mockNavigate,
      20 | }));

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/SetupPage.test.js:17:6)

FAIL src/pages/__tests__/AdminPage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/AdminPage.test.js'

       6 | import React from 'react';
       7 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';
    >  8 | import { BrowserRouter } from 'react-router-dom';
         | ^
       9 | import AdminPage from '../AdminPage';
      10 | import { ThemeProvider } from '../../theme/Provider';
      11 | import { AuthProvider } from '../../context/AuthContext';

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/AdminPage.test.js:8:1)

FAIL src/pages/__tests__/AboutPage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/AboutPage.test.js'

       6 | import React from 'react';
       7 | import { render, screen } from '@testing-library/react';
    >  8 | import { BrowserRouter } from 'react-router-dom';
         | ^
       9 | import AboutPage from '../AboutPage';
      10 | import { ThemeProvider } from '../../theme/Provider';
      11 |

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/AboutPage.test.js:8:1)

FAIL src/pages/__tests__/SignupPage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/SignupPage.test.js'

      2 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';
      3 | import '@testing-library/jest-dom';
    > 4 | import { BrowserRouter } from 'react-router-dom';
        | ^
      5 | import SignupPage from '../SignupPage';
      6 |
      7 | // Mock Auth0

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/SignupPage.test.js:4:1)

FAIL src/pages/__tests__/HomePage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/HomePage.test.js'

      13 | // Mock the navigation hook
      14 | const mockNavigate = jest.fn();
    > 15 | jest.mock('react-router-dom', () => ({
         |      ^
      16 |   ...jest.requireActual('react-router-dom'),
      17 |   useNavigate: () => mockNavigate,
      18 | }));

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/HomePage.test.js:15:6)

FAIL src/pages/__tests__/GamePage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/GamePage.test.js'

      17 | // Mock the navigation hook
      18 | const mockNavigate = jest.fn();
    > 19 | jest.mock('react-router-dom', () => ({
         |      ^
      20 |   ...jest.requireActual('react-router-dom'),
      21 |   useNavigate: () => mockNavigate,
      22 | }));

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/GamePage.test.js:19:6)

FAIL src/__tests__/utils/testHelpers.js
  ● Test suite failed to run

    ReferenceError: React is not defined

      490 |
      491 | // Error boundary testing
    > 492 | export class TestErrorBoundary extends React.Component {
          |                                        ^
      493 |   constructor(props) {
      494 |     super(props);
      495 |     this.state = { hasError: false, error: null };

      at Object.<anonymous> (src/__tests__/utils/testHelpers.js:492:40)

FAIL src/pages/__tests__/RulesPage.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/pages/__tests__/RulesPage.test.js'

       6 | import React from 'react';
       7 | import { render, screen, fireEvent } from '@testing-library/react';
    >  8 | import { BrowserRouter } from 'react-router-dom';
         | ^
       9 | import RulesPage from '../RulesPage';
      10 | import { ThemeProvider } from '../../theme/Provider';
      11 |

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/pages/__tests__/RulesPage.test.js:8:1)

FAIL src/components/game/__tests__/UnifiedGameInterface.test.js
  ● Test suite failed to run

    Cannot find module '../../context' from 'src/components/game/__tests__/UnifiedGameInterface.test.js'

      34 | }));
      35 |
    > 36 | jest.mock('../../context', () => ({
         |      ^
      37 |   useGame: jest.fn()
      38 | }));
      39 |

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/components/game/__tests__/UnifiedGameInterface.test.js:36:6)

FAIL src/components/__tests__/WGPAnalyticsDashboard.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/components/__tests__/WGPAnalyticsDashboard.test.js'

       6 | import React from 'react';
       7 | import { render, screen, fireEvent, waitFor } from '@testing-library/react';
    >  8 | import { BrowserRouter } from 'react-router-dom';
         | ^
       9 | import WGPAnalyticsDashboard from '../WGPAnalyticsDashboard';
      10 | import { ThemeProvider } from '../theme/Provider';
      11 | import { AuthProvider } from '../context/AuthContext';

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/components/__tests__/WGPAnalyticsDashboard.test.js:8:1)

FAIL src/components/__tests__/Navigation.test.js
  ● Test suite failed to run

    Cannot find module 'react-router-dom' from 'src/components/Navigation.js'

    Require stack:
      src/components/Navigation.js
      src/components/__tests__/Navigation.test.js

      1 | import React, { useState } from 'react';
    > 2 | import { useNavigate, useLocation } from 'react-router-dom';
        | ^
      3 | import { useAuth0 } from '@auth0/auth0-react';
      4 | import { useTheme } from '../theme/Provider';
      5 |

      at Resolver.resolveModule (node_modules/jest-resolve/build/resolver.js:324:11)
      at Object.<anonymous> (src/components/Navigation.js:2:1)
      at Object.<anonymous> (src/components/__tests__/Navigation.test.js:4:1)

FAIL src/context/__tests__/GameProvider.test.js (5.555 s)
  ● GameProvider › API Integration › fetches game state successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "http://localhost:8000/game/state"
    Received: "http://test-api.com/game/state"

    Number of calls: 1

      222 |       });
      223 |
    > 224 |       expect(fetch).toHaveBeenCalledWith(`${process.env.REACT_APP_API_URL}/game/state`);
          |                     ^
      225 |     });
      226 |
      227 |     it('handles fetch game state error', async () => {

      at Object.<anonymous> (src/context/__tests__/GameProvider.test.js:224:21)

  ● GameProvider › API Integration › handles fetch game state error

    expect(element).toHaveTextContent()

    Expected element to have text content:
      Failed to fetch game state
    Received:
      Network error

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"loading"[39m
            [36m>[39m
              [0mNot Loading[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"error"[39m
            [36m>[39m
              [0mNetwork error[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"game-active"[39m
            [36m>[39m
              [0mInactive[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"current-hole"[39m
            [36m>[39m
              [0m1[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"players-count"[39m
            [36m>[39m
              [0m0[0m
            [36m</div>[39m
            [36m<button>[39m
              [0mStart Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mEnd Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mFetch State[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mMake Action[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mClear Error[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mSet Loading[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      234 |
      235 |       await waitFor(() => {
    > 236 |         expect(screen.getByTestId('error')).toHaveTextContent('Failed to fetch game state');
          |                                             ^
      237 |       });
      238 |     });
      239 |

      at src/context/__tests__/GameProvider.test.js:236:45
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)

  ● GameProvider › API Integration › makes game actions successfully

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 4

      Object {
    +   "gameState": Object {
          "current_hole": 2,
    +   },
    +   "message": "Action completed",
    +   "success": true,
      }

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"loading"[39m
            [36m>[39m
              [0mNot Loading[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"error"[39m
            [36m>[39m
              [0mNo Error[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"game-active"[39m
            [36m>[39m
              [0mInactive[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"current-hole"[39m
            [36m>[39m
              [0m1[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"players-count"[39m
            [36m>[39m
              [0m0[0m
            [36m</div>[39m
            [36m<button>[39m
              [0mStart Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mEnd Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mFetch State[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mMake Action[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mClear Error[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mSet Loading[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      259 |
      260 |       await waitFor(() => {
    > 261 |         expect(contextValue.gameState).toEqual(mockResponse.gameState);
          |                                        ^
      262 |       });
      263 |
      264 |       expect(fetch).toHaveBeenCalledWith(

      at src/context/__tests__/GameProvider.test.js:261:40
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)

  ● GameProvider › API Integration › handles game action errors

    Action failed

      273 |
      274 |     it('handles game action errors', async () => {
    > 275 |       fetch.mockRejectedValueOnce(new Error('Action failed'));
          |                                   ^
      276 |
      277 |       renderWithProvider(<TestComponent />);
      278 |

      at Object.<anonymous> (src/context/__tests__/GameProvider.test.js:275:35)

  ● GameProvider › API Integration › handles API server errors

    expect(element).toHaveTextContent()

    Expected element to have text content:
      HTTP error! status: 500
    Received:
      Failed to fetch game state

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"loading"[39m
            [36m>[39m
              [0mNot Loading[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"error"[39m
            [36m>[39m
              [0mFailed to fetch game state[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"game-active"[39m
            [36m>[39m
              [0mInactive[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"current-hole"[39m
            [36m>[39m
              [0m1[0m
            [36m</div>[39m
            [36m<div[39m
              [33mdata-testid[39m=[32m"players-count"[39m
            [36m>[39m
              [0m0[0m
            [36m</div>[39m
            [36m<button>[39m
              [0mStart Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mEnd Game[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mFetch State[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mMake Action[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mClear Error[0m
            [36m</button>[39m
            [36m<button>[39m
              [0mSet Loading[0m
            [36m</button>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      298 |
      299 |       await waitFor(() => {
    > 300 |         expect(screen.getByTestId('error')).toHaveTextContent('HTTP error! status: 500');
          |                                             ^
      301 |       });
      302 |     });
      303 |   });

      at src/context/__tests__/GameProvider.test.js:300:45
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:516:19)


Test Suites: 24 failed, 13 passed, 37 total
Tests:       66 failed, 389 passed, 455 total
Snapshots:   0 total
Time:        7.174 s, estimated 9 s
Ran all test suites.
