## Frontend Product Mode Analysis

Based on my investigation of the repository, here are the **frontend product modes** with their implementations:

### **1. SIMULATION UI (Practice Mode)**
**Route:** `/simulation`  
**Component:** `frontend/src/components/simulation/SimulationMode.js:24`  
**Entry Points:**
- Main component: `SimulationMode`
- Sub-components: `GameSetup`, `GamePlay`, `EnhancedSimulationLayout`, `TurnBasedInterface`

**API Calls:**
- `/simulation/setup` - Initialize simulation game
- `/simulation/play-next-shot` - Play shot by shot
- `/simulation/play-hole` - Make hole decisions  
- `/simulation/available-personalities` - Get AI player personalities
- `/simulation/suggested-opponents` - Get opponent suggestions
- `/simulation/shot-probabilities` - Get shot probability data
- `/simulation/betting-decision` - Handle betting decisions

**Tests:**
- `frontend/src/components/simulation/__tests__/SimulationMode.test.js`
- `frontend/src/components/simulation/__tests__/GameSetup.test.js`  
- `frontend/src/components/simulation/__tests__/GamePlay.test.js`

**Notes:**
- TODO at line 12: "Make enhanced layout a user preference"
- Uses turn-based mode by default (line 57)
- Mock mode available via environment variable

---

### **2. SIGNUP/MATCHMAKING FLOWS**
**Route:** `/signup`  
**Component:** `frontend/src/pages/SignupPage.js:11`  
**Entry Points:**
- Daily Signups Calendar view
- Player Availability management  
- All Players Availability view
- Matchmaking Suggestions
- Email Preferences

**API Calls:**
- Player signup endpoints (not explicitly defined in hooks, likely through context)
- Availability management endpoints
- Matchmaking algorithm endpoints

**Tests:**
- `frontend/src/pages/__tests__/SignupPage.test.js`
- `frontend/src/components/signup/__tests__/MatchmakingSuggestions.test.js`
- `frontend/src/components/signup/__tests__/PlayerAvailability.test.js`

**Notes:**
- Tab-based navigation with URL state management
- Auth0 integration required for access

---

### **3. SUNDAY GAME DASHBOARD**
**Route:** `/game`  
**Component:** `frontend/src/components/game/UnifiedGameInterface.js:34`  
**Entry Points:**
- Unified game interface for regular play
- Betting widgets and odds panels
- Shot analysis and visualization
- Game history tracking

**API Calls:**
- `/game/state` - Get current game state
- `/game/start` - Start new game
- `/game/action` - Perform game actions
- `/game/tips` - Get betting tips
- `/game/player_strokes` - Get player stroke data
- `/rules` - Fetch game rules

**Tests:**
- `frontend/src/components/game/__tests__/UnifiedGameInterface.test.js`
- `frontend/src/components/__tests__/UnifiedGameInterface.integration.test.js`
- `frontend/src/components/__tests__/GameDashboard.test.js`

**Notes:**
- Supports both regular and enhanced modes
- Auto-updates odds every 7 seconds
- Protected route requiring authentication

---

### **4. ANALYTICS PAGES**
**Route:** `/analytics`  
**Component:** `frontend/src/components/WGPAnalyticsDashboard.js:4`  
**Entry Points:**
- Leaderboard rankings
- Performance metrics
- Best/worst scores tracking
- GHIN integration dashboard

**API Calls:**
- GHIN service integration for handicap data
- Leaderboard data endpoints
- Player statistics endpoints

**Tests:**
- `frontend/src/components/__tests__/WGPAnalyticsDashboard.test.js`
- `frontend/src/components/__tests__/PerformanceAnalytics.test.js`

**Notes:**
- Status indicator for GHIN integration
- QB (Quarterly Bonus) calculation system
- Protected route

---

### **5. LEGACY/OTHER MODES**

**Additional Routes:**
- `/monte-carlo` - Monte Carlo simulation (protected)
- `/analyzer` - Shot range analyzer (protected)  
- `/feed-analyzer` - Feed analysis tool (protected)
- `/leaderboard` - Public leaderboard
- `/sheets` - Google Sheets integration (protected)
- `/live-sync` - Live sync dashboard (protected)
- `/tutorial` - Tutorial system (public)
- `/admin` - Admin panel (protected)

**Home Page (`/`):**
- `frontend/src/pages/HomePage.js:6`
- Splash screen with auth gate
- Navigation hub to all modes
- Quick access boxes for main features

---

### **CURRENT STATUS NOTES**

From `docs/status/current-state.md`:
- Frontend build/test status unverified (as of 2025-10-12)
- Auth0, GHIN, and email services require environment secrets
- Husky git hooks configured for pre-push testing
- Docker production files available for deployment testing

**Environment Variables Required:**
- `REACT_APP_API_URL` - Backend API endpoint
- `REACT_APP_USE_MOCK_AUTH` - Enable mock authentication mode
- Auth0 credentials for production

**Key Frontend Infrastructure:**
- React 19 with React Scripts 5
- Auth0 for authentication
- Context providers for game state management
- Theme provider system
- Mock auth provider for development
