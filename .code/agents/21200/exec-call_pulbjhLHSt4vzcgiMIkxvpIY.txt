ðŸŽ¯ ADK auto-sync aliases loaded!
ðŸ’¡ Use 'sync' to sync with upstream anytime
ðŸ’¡ Use 'synccheck' to check sync status
ðŸ§ª Executing Behave feature tests
ðŸ“¦ Ensuring backend test dependencies are available
ðŸš€ Running Behave against tests/bdd/behave
USING RUNNER: behave.runner:Runner
Feature: Simulation betting mechanics # tests/bdd/behave/features/simulation_betting.feature:1
  Wolf Goat Pig betting involves progressive wagering with doubles, carries, and special rules.
  These scenarios exercise the reusable seeding DSL for betting-related state.
  Feature: Simulation betting mechanics  # tests/bdd/behave/features/simulation_betting.feature:1

  Scenario: Seeded double state snapshot      # tests/bdd/behave/features/simulation_betting.feature:9
    Given the simulation API is available     # tests/bdd/behave/steps/simulation_steps.py:41
LOG_WARNING:backend.app.services.email_service: Email service is not fully configured. Check environment variables: SMTP_USER, SMTP_PASSWORD, SMTP_HOST
    And a simulation is set up with 4 players # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 3         # None
    And the ball positions are                # None
      | player_id | distance_to_pin | lie_type | shot_count |
      | p1        | 180             | fairway  | 1          |
      | bot1      | 150             | fairway  | 1          |
      | bot2      | 200             | rough    | 1          |
      | bot3      | 165             | fairway  | 1          |
    And the betting state is                  # None
      | base_wager    | 1    |
      | current_wager | 2    |
      | doubled       | true |
    Then the betting is doubled               # None
    And the current wager is 2 quarters       # None
----
CAPTURED LOG: scenario
LOG_WARNING:backend.app.services.email_service: Email service is not fully configured. Check environment variables: SMTP_USER, SMTP_PASSWORD, SMTP_HOST
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Line of scrimmage enforcement                 # tests/bdd/behave/features/simulation_betting.feature:24
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players             # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 5                     # None
    And the ball positions are                            # None
      | player_id | distance_to_pin | lie_type | shot_count |
      | p1        | 250             | rough    | 1          |
      | bot1      | 150             | fairway  | 1          |
      | bot2      | 175             | fairway  | 1          |
      | bot3      | 200             | bunker   | 1          |
    And the line of scrimmage is p1                       # None
    When I request the "GET" "/simulation/state" endpoint # None
    Then the response code is 200                         # None
    And the JSON response contains                        # None
      | hole_state.line_of_scrimmage | p1 |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Wagering closes after tee shots   # tests/bdd/behave/features/simulation_betting.feature:38
    Given the simulation API is available     # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 1         # None
    And the ball positions are                # None
      | player_id | distance_to_pin | lie_type | shot_count |
      | p1        | 180             | fairway  | 1          |
      | bot1      | 160             | fairway  | 1          |
      | bot2      | 190             | fairway  | 1          |
      | bot3      | 170             | fairway  | 1          |
    And wagering is set to closed             # None
    When I refresh the simulation state       # None
    Then wagering is closed                   # None
    And the simulation state contains         # None
      | wagering_closed | true |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Carry-over betting state          # tests/bdd/behave/features/simulation_betting.feature:52
    Given the simulation API is available     # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 7         # None
    And the betting state is                  # None
      | base_wager    | 1    |
      | current_wager | 4    |
      | carry_over    | true |
    When I refresh the simulation state       # None
    Then the current wager is 4 quarters      # None
    And the simulation state contains         # None
      | betting_state.carry_over | true |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Ping pong counter tracking        # tests/bdd/behave/features/simulation_betting.feature:63
    Given the simulation API is available     # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 10        # None
    And the betting state is                  # None
      | base_wager      | 2    |
      | ping_pong_count | 3    |
      | doubled         | true |
    When I refresh the simulation state       # None
    Then the simulation state contains        # None
      | betting_state.ping_pong_count | 3    |
      | betting_state.doubled         | true |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Complex betting state with multiple flags  # tests/bdd/behave/features/simulation_betting.feature:74
    Given the simulation API is available              # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players          # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation state is seeded with          # None
      | current_hole              | 15   |
      | betting.base_wager        | 2    |
      | betting.current_wager     | 8    |
      | betting.doubled           | true |
      | betting.carry_over        | true |
      | betting.float_invoked     | true |
      | betting.line_of_scrimmage | bot2 |
    When I refresh the simulation state                # None
    Then the simulation state contains                 # None
      | current_hole                 | 15   |
      | betting_state.current_wager  | 8    |
      | betting_state.float_invoked  | true |
      | hole_state.line_of_scrimmage | bot2 |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Reject double when wagering is closed  # tests/bdd/behave/features/simulation_betting.feature:90
    Given the simulation API is available          # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players      # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 2              # None
    And the ball positions are                     # None
      | player_id | distance_to_pin | lie_type | shot_count |
      | p1        | 150             | fairway  | 2          |
      | bot1      | 145             | fairway  | 2          |
      | bot2      | 160             | rough    | 2          |
      | bot3      | 155             | fairway  | 2          |
    And wagering is set to closed                  # None
    And the betting state is                       # None
      | current_wager | 1     |
      | doubled       | false |
    When I seed the betting state with             # None
      | doubled       | true |
      | current_wager | 2    |
    Then the simulation state contains             # None
      | betting_state.doubled       | true |
      | betting_state.current_wager | 2    |
      | wagering_closed             | true |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Solo captain can double when wagering closed  # tests/bdd/behave/features/simulation_betting.feature:110
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players             # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 4                     # None
    And the team formation is                             # None
      | type        | solo                     |
      | captain     | p1                       |
      | solo_player | p1                       |
      | opponents   | ["bot1", "bot2", "bot3"] |
    And wagering is set to closed                         # None
    When I seed the betting state with                    # None
      | doubled       | true |
      | current_wager | 2    |
    Then the simulation state contains                    # None
      | team_formation.type         | solo |
      | team_formation.solo_player  | p1   |
      | betting_state.doubled       | true |
      | betting_state.current_wager | 2    |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Ping pong counter tracks escalating doubles  # tests/bdd/behave/features/simulation_betting.feature:127
    Given the simulation API is available                # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players            # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 8                    # None
    And the ball positions are                           # None
      | player_id | distance_to_pin | lie_type | shot_count |
      | p1        | 120             | fairway  | 2          |
      | bot1      | 115             | fairway  | 2          |
      | bot2      | 130             | fairway  | 2          |
      | bot3      | 125             | fairway  | 2          |
    And the betting state is                             # None
      | base_wager      | 1     |
      | current_wager   | 1     |
      | ping_pong_count | 0     |
      | doubled         | false |
    When I seed the betting state with                   # None
      | doubled         | true |
      | current_wager   | 2    |
      | ping_pong_count | 1    |
    And I refresh the simulation state                   # None
    Then the simulation state contains                   # None
      | betting_state.ping_pong_count | 1    |
      | betting_state.doubled         | true |
      | betting_state.current_wager   | 2    |
    When I seed the betting state with                   # None
      | redoubled       | true |
      | current_wager   | 4    |
      | ping_pong_count | 2    |
    Then the simulation state contains                   # None
      | betting_state.ping_pong_count | 2    |
      | betting_state.redoubled       | true |
      | betting_state.current_wager   | 4    |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Betting with special rules invoked  # tests/bdd/behave/features/simulation_betting.feature:158
    Given the simulation API is available       # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players   # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 12          # None
    And the betting state is                    # None
      | base_wager       | 1     |
      | current_wager    | 3     |
      | float_invoked    | true  |
      | option_invoked   | true  |
      | duncan_invoked   | false |
      | tunkarri_invoked | false |
    When I refresh the simulation state         # None
    Then the simulation state contains          # None
      | betting_state.current_wager    | 3     |
      | betting_state.float_invoked    | true  |
      | betting_state.option_invoked   | true  |
      | betting_state.duncan_invoked   | false |
      | betting_state.tunkarri_invoked | false |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Carry-over accumulates across holes  # tests/bdd/behave/features/simulation_betting.feature:175
    Given the simulation API is available        # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players    # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 9            # None
    And the betting state is                     # None
      | base_wager    | 2     |
      | current_wager | 8     |
      | carry_over    | true  |
      | doubled       | false |
    When I refresh the simulation state          # None
    Then the simulation state contains           # None
      | betting_state.carry_over    | true |
      | betting_state.current_wager | 8    |
    When the simulation is moved to hole 10      # None
    And I seed the betting state with            # None
      | base_wager    | 2    |
      | current_wager | 10   |
      | carry_over    | true |
    Then the simulation state contains           # None
      | current_hole                | 10   |
      | betting_state.current_wager | 10   |
      | betting_state.carry_over    | true |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Line of scrimmage affects betting opportunities  # tests/bdd/behave/features/simulation_betting.feature:196
    Given the simulation API is available                    # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players                # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 6                        # None
    And the ball positions are                               # None
      | player_id | distance_to_pin | lie_type | shot_count |
      | p1        | 200             | rough    | 1          |
      | bot1      | 150             | fairway  | 1          |
      | bot2      | 160             | fairway  | 1          |
      | bot3      | 170             | fairway  | 1          |
    And the line of scrimmage is p1                          # None
    And the betting state is                                 # None
      | current_wager | 1     |
      | doubled       | false |
    When I refresh the simulation state                      # None
    Then the simulation state contains                       # None
      | hole_state.line_of_scrimmage | p1 |
      | betting_state.current_wager  | 1  |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Reset doubles history flag        # tests/bdd/behave/features/simulation_betting.feature:213
    Given the simulation API is available     # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with 4 players # tests/bdd/behave/steps/simulation_steps.py:49
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 11        # None
    And the betting state is                  # None
      | current_wager | 2    |
      | doubled       | true |
    When I seed the simulation state with     # None
      | betting.current_wager | 1     |
      | betting.doubled       | false |
      | reset_doubles_history | true  |
    Then the simulation state contains        # None
      | betting_state.current_wager | 1     |
      | betting_state.doubled       | false |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

Feature: Simulation service health checks # tests/bdd/behave/features/simulation_health.feature:1
  The Wolf Goat Pig platform needs high-level functional signals so stakeholders can express
  expectations in plain English. These Gherkin scenarios can be generated collaboratively with the AI agent
  from conversational requirements and then executed automatically.
  Feature: Simulation service health checks  # tests/bdd/behave/features/simulation_health.feature:1

  Scenario: Health endpoint returns an "ok" status payload  # tests/bdd/behave/features/simulation_health.feature:9
    Given the simulation API is available                   # tests/bdd/behave/steps/simulation_steps.py:41
    When I request the "GET" "health" endpoint              # tests/bdd/behave/steps/simulation_steps.py:240
LOG_ERROR:backend.app.main: AI players availability check failed: (sqlite3.OperationalError) no such table: player_profiles
[SQL: SELECT count(*) AS count_1 
FROM (SELECT player_profiles.id AS player_profiles_id, player_profiles.name AS player_profiles_name, player_profiles.email AS player_profiles_email, player_profiles.handicap AS player_profiles_handicap, player_profiles.ghin_id AS player_profiles_ghin_id, player_profiles.ghin_last_updated AS player_profiles_ghin_last_updated, player_profiles.avatar_url AS player_profiles_avatar_url, player_profiles.created_at AS player_profiles_created_at, player_profiles.updated_at AS player_profiles_updated_at, player_profiles.last_played AS player_profiles_last_played, player_profiles.preferences AS player_profiles_preferences, player_profiles.is_active AS player_profiles_is_active, player_profiles.is_ai AS player_profiles_is_ai, player_profiles.playing_style AS player_profiles_playing_style, player_profiles.description AS player_profiles_description, player_profiles.personality_traits AS player_profiles_personality_traits, player_profiles.strengths AS player_profiles_strengths, player_profiles.weaknesses AS player_profiles_weaknesses 
FROM player_profiles 
WHERE player_profiles.is_ai = ? AND player_profiles.is_active = ?) AS anon_1]
[parameters: (1, 1)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
LOG_INFO:backend.app.seed_data: Checking seeding status...
LOG_ERROR:backend.app.seed_data: Error verifying seeded data: (sqlite3.OperationalError) no such table: player_profiles
[SQL: SELECT count(*) AS count_1 
FROM (SELECT player_profiles.id AS player_profiles_id, player_profiles.name AS player_profiles_name, player_profiles.email AS player_profiles_email, player_profiles.handicap AS player_profiles_handicap, player_profiles.ghin_id AS player_profiles_ghin_id, player_profiles.ghin_last_updated AS player_profiles_ghin_last_updated, player_profiles.avatar_url AS player_profiles_avatar_url, player_profiles.created_at AS player_profiles_created_at, player_profiles.updated_at AS player_profiles_updated_at, player_profiles.last_played AS player_profiles_last_played, player_profiles.preferences AS player_profiles_preferences, player_profiles.is_active AS player_profiles_is_active, player_profiles.is_ai AS player_profiles_is_ai, player_profiles.playing_style AS player_profiles_playing_style, player_profiles.description AS player_profiles_description, player_profiles.personality_traits AS player_profiles_personality_traits, player_profiles.strengths AS player_profiles_strengths, player_profiles.weaknesses AS player_profiles_weaknesses 
FROM player_profiles 
WHERE player_profiles.is_ai = ?) AS anon_1]
[parameters: (1,)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
LOG_INFO:httpx: HTTP Request: GET http://testserver/health "HTTP/1.1 200 OK"
    Then the response code is 200                           # tests/bdd/behave/steps/simulation_steps.py:326
    And the JSON response contains:                         # tests/bdd/behave/steps/simulation_steps.py:335
      | status | ok |

  Scenario: Simulation setup rejects requests with fewer than four players  # tests/bdd/behave/features/simulation_health.feature:15
    Given the simulation API is available                                   # tests/bdd/behave/steps/simulation_steps.py:41
    When I submit a simulation setup request with 2 players                 # tests/bdd/behave/steps/simulation_steps.py:286
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_ERROR:backend.app.main: Simulation setup failed: 400: At least 4 players required
LOG_ERROR:backend.app.main: HTTP exception: 500 - Failed to setup simulation: 400: At least 4 players required
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 500 Internal Server Error"
    Then the response code is 400                                           # tests/bdd/behave/steps/simulation_steps.py:326
      ASSERT FAILED: Expected status 400, got 500: {"error":"HTTP error","detail":"Failed to setup simulation: 400: At least 4 players required"}

    And the JSON response contains:                                         # None
      | detail | Failed to setup simulation: 400: At least 4 players required |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_ERROR:backend.app.main: Simulation setup failed: 400: At least 4 players required
LOG_ERROR:backend.app.main: HTTP exception: 500 - Failed to setup simulation: 400: At least 4 players required
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 500 Internal Server Error"
---- CAPTURED_SCENARIO_OUTPUT_END ----

Feature: Simulation partnership and team formation # tests/bdd/behave/features/simulation_partnership.feature:1
  Wolf Goat Pig involves dynamic team formation with partnership requests, solo play, and captain decisions.
  These scenarios validate team-related helpers supported by the seeding DSL.
  Feature: Simulation partnership and team formation  # tests/bdd/behave/features/simulation_partnership.feature:1

  Scenario: Partnership formation after tee shots         # tests/bdd/behave/features/simulation_partnership.feature:14
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 2                     # None
    And the ball positions are                            # None
      | player_id | distance_to_pin | lie_type | shot_count |
      | p1        | 175             | fairway  | 1          |
      | bot1      | 160             | fairway  | 1          |
      | bot2      | 195             | rough    | 1          |
      | bot3      | 150             | fairway  | 1          |
    And the team formation is                             # None
      | type    | partners         |
      | captain | p1               |
      | team1   | ["p1", "bot1"]   |
      | team2   | ["bot2", "bot3"] |
    When I refresh the simulation state                   # None
    Then team 1 contains players p1, bot1                 # None
    And team 2 contains players bot2, bot3                # None
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Captain goes solo                             # tests/bdd/behave/features/simulation_partnership.feature:31
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 4                     # None
    And the team formation is                             # None
      | type        | solo                     |
      | solo_player | p1                       |
      | opponents   | ["bot1", "bot2", "bot3"] |
    When I refresh the simulation state                   # None
    And the simulation state contains                     # None
      | team_formation.type        | solo |
      | team_formation.solo_player | p1   |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Rotating captain order                        # tests/bdd/behave/features/simulation_partnership.feature:42
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 5                     # None
    And the next player to hit is bot1                    # None
    And the team formation is                             # None
      | type    | pending |
      | captain | bot1    |
    When I refresh the simulation state                   # None
    Then the simulation state contains                    # None
      | team_formation.captain | bot1    |
      | team_formation.type    | pending |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Aardvark toss setup in 5-player game          # tests/bdd/behave/features/simulation_partnership.feature:53
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation API is available                 # None
    And a simulation is set up with 5 players             # None
    And the simulation is at hole 3                       # None
    And the team formation is                             # None
      | type    | partners         |
      | captain | p1               |
      | team1   | ["p1", "bot2"]   |
      | team2   | ["bot1", "bot3"] |
    When I refresh the simulation state                   # None
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Pending partnership request snapshot          # tests/bdd/behave/features/simulation_partnership.feature:64
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation state is seeded with             # None
      | current_hole           | 8       |
      | next_player_to_hit     | bot2    |
      | team_formation.type    | pending |
      | team_formation.captain | bot2    |
      | wagering_closed        | false   |
    When I refresh the simulation state                   # None
    Then the simulation state contains                    # None
      | current_hole           | 8       |
      | team_formation.type    | pending |
      | team_formation.captain | bot2    |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Team formation affects betting opportunities  # tests/bdd/behave/features/simulation_partnership.feature:77
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 6                     # None
    And the team formation is                             # None
      | type    | partners         |
      | captain | bot3             |
      | team1   | ["bot3", "p1"]   |
      | team2   | ["bot1", "bot2"] |
    And the betting state is                              # None
      | base_wager    | 2     |
      | current_wager | 2     |
      | doubled       | false |
    When I request the "GET" "/simulation/state" endpoint # None
    Then the response code is 200                         # None
    And the JSON response contains                        # None
      | hole_state.teams.type            | partners |
      | hole_state.betting.current_wager | 2        |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Pending partnership request acceptance        # tests/bdd/behave/features/simulation_partnership.feature:94
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 7                     # None
    And the ball positions are                            # None
      | player_id | distance_to_pin | lie_type | shot_count |
      | p1        | 155             | fairway  | 1          |
      | bot1      | 160             | fairway  | 1          |
      | bot2      | 150             | fairway  | 1          |
      | bot3      | 165             | rough    | 1          |
    And the team formation is                             # None
      | type            | pending                                                     |
      | captain         | p1                                                          |
      | pending_request | {"captain": "p1", "requested": "bot2", "status": "pending"} |
    When I refresh the simulation state                   # None
    Then the simulation state contains                    # None
      | team_formation.type                      | pending |
      | team_formation.pending_request.status    | pending |
      | team_formation.pending_request.requested | bot2    |
    When I seed the team formation with                   # None
      | type    | partners         |
      | captain | p1               |
      | team1   | ["p1", "bot2"]   |
      | team2   | ["bot1", "bot3"] |
    Then team 1 contains players p1, bot2                 # None
    And team 2 contains players bot1, bot3                # None
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Pending partnership request decline           # tests/bdd/behave/features/simulation_partnership.feature:119
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 9                     # None
    And the ball positions are                            # None
      | player_id | distance_to_pin | lie_type | shot_count |
      | p1        | 140             | fairway  | 1          |
      | bot1      | 145             | fairway  | 1          |
      | bot2      | 135             | fairway  | 1          |
      | bot3      | 150             | rough    | 1          |
    And the team formation is                             # None
      | type            | pending                                                       |
      | captain         | bot1                                                          |
      | pending_request | {"captain": "bot1", "requested": "bot3", "status": "pending"} |
    When I seed the team formation with                   # None
      | type        | solo                   |
      | captain     | bot1                   |
      | solo_player | bot1                   |
      | opponents   | ["p1", "bot2", "bot3"] |
    Then the simulation state contains                    # None
      | team_formation.type        | solo |
      | team_formation.solo_player | bot1 |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Solo captain doubles after wagering closed    # tests/bdd/behave/features/simulation_partnership.feature:140
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 11                    # None
    And the ball positions are                            # None
      | player_id | distance_to_pin | lie_type | shot_count |
      | p1        | 100             | fairway  | 2          |
      | bot1      | 95              | green    | 2          |
      | bot2      | 110             | fairway  | 2          |
      | bot3      | 105             | fairway  | 2          |
    And the team formation is                             # None
      | type        | solo                   |
      | captain     | bot2                   |
      | solo_player | bot2                   |
      | opponents   | ["p1", "bot1", "bot3"] |
    And wagering is set to closed                         # None
    And the betting state is                              # None
      | current_wager | 2    |
      | doubled       | true |
    When I refresh the simulation state                   # None
    Then the simulation state contains                    # None
      | team_formation.type         | solo |
      | team_formation.solo_player  | bot2 |
      | wagering_closed             | true |
      | betting_state.doubled       | true |
      | betting_state.current_wager | 2    |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Complex team transitions across holes         # tests/bdd/behave/features/simulation_partnership.feature:165
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 13                    # None
    And the team formation is                             # None
      | type    | partners         |
      | captain | p1               |
      | team1   | ["p1", "bot3"]   |
      | team2   | ["bot1", "bot2"] |
    When I refresh the simulation state                   # None
    Then the teams are formed as partners                 # None
    When the simulation is moved to hole 14               # None
    And I seed the team formation with                    # None
      | type    | pending |
      | captain | bot1    |
    Then the simulation state contains                    # None
      | current_hole           | 14      |
      | team_formation.type    | pending |
      | team_formation.captain | bot1    |
    When I seed the team formation with                   # None
      | type        | solo                   |
      | captain     | bot1                   |
      | solo_player | bot1                   |
      | opponents   | ["p1", "bot2", "bot3"] |
    Then player "bot1" is going solo                      # None
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Multiple captains in larger games             # tests/bdd/behave/features/simulation_partnership.feature:189
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation API is available                 # None
    And a simulation is set up with 6 players             # None
    And the simulation is at hole 15                      # None
    And the team formation is                             # None
      | type           | partners                 |
      | captain        | p1                       |
      | second_captain | bot3                     |
      | team1          | ["p1", "bot1", "bot2"]   |
      | team2          | ["bot3", "bot4", "bot5"] |
    When I refresh the simulation state                   # None
    Then the simulation state contains                    # None
      | team_formation.type           | partners |
      | team_formation.captain        | p1       |
      | team_formation.second_captain | bot3     |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Partnership request with invalid player       # tests/bdd/behave/features/simulation_partnership.feature:205
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 10                    # None
    When I seed the team formation with                   # None
      | type            | pending                                                               |
      | captain         | p1                                                                    |
      | pending_request | {"captain": "p1", "requested": "invalid_player", "status": "pending"} |
    Then the simulation state contains                    # None
      | team_formation.type                      | pending        |
      | team_formation.pending_request.requested | invalid_player |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Team formation reset between holes            # tests/bdd/behave/features/simulation_partnership.feature:215
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 16                    # None
    And the team formation is                             # None
      | type    | partners         |
      | captain | bot2             |
      | team1   | ["bot2", "p1"]   |
      | team2   | ["bot1", "bot3"] |
    When the simulation is moved to hole 17               # None
    And I seed the team formation with                    # None
      | type    | pending |
      | captain | bot3    |
    Then the simulation state contains                    # None
      | current_hole           | 17      |
      | team_formation.type    | pending |
      | team_formation.captain | bot3    |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----

  Scenario: Captain rotation tracking                     # tests/bdd/behave/features/simulation_partnership.feature:231
    Given the simulation API is available                 # tests/bdd/behave/steps/simulation_steps.py:41
    And a simulation is set up with the following players # tests/bdd/behave/steps/simulation_steps.py:74
      | id   | name       | handicap | is_human |
      | p1   | Captain    | 10       | true     |
      | bot1 | Computer 1 | 12       | false    |
      | bot2 | Computer 2 | 14       | false    |
      | bot3 | Computer 3 | 8        | false    |
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
      ASSERT FAILED: Failed to get state: {"error":"HTTP error","detail":"Not found"}

    Given the simulation is at hole 18                    # None
    And the next player to hit is bot3                    # None
    When I seed the team formation with                   # None
      | type    | pending |
      | captain | bot3    |
    Then the simulation state contains                    # None
      | next_player_to_hit     | bot3    |
      | team_formation.captain | bot3    |
      | team_formation.type    | pending |
----
CAPTURED LOG: scenario
LOG_INFO:backend.app.main: Setting up new simulation...
LOG_INFO:backend.app.main: Simulation setup completed successfully
LOG_INFO:httpx: HTTP Request: POST http://testserver/simulation/setup "HTTP/1.1 200 OK"
LOG_ERROR:backend.app.main: HTTP exception: 404 - Not found
LOG_ERROR:backend.app.main: Request Host header: testserver
LOG_ERROR:backend.app.main: Request Client host: testclient
LOG_INFO:httpx: HTTP Request: GET http://testserver/simulation/state "HTTP/1.1 404 Not Found"
---- CAPTURED_SCENARIO_OUTPUT_END ----


Failing scenarios:
  tests/bdd/behave/features/simulation_betting.feature:9  Seeded double state snapshot
  tests/bdd/behave/features/simulation_betting.feature:24  Line of scrimmage enforcement
  tests/bdd/behave/features/simulation_betting.feature:38  Wagering closes after tee shots
  tests/bdd/behave/features/simulation_betting.feature:52  Carry-over betting state
  tests/bdd/behave/features/simulation_betting.feature:63  Ping pong counter tracking
  tests/bdd/behave/features/simulation_betting.feature:74  Complex betting state with multiple flags
  tests/bdd/behave/features/simulation_betting.feature:90  Reject double when wagering is closed
  tests/bdd/behave/features/simulation_betting.feature:110  Solo captain can double when wagering closed
  tests/bdd/behave/features/simulation_betting.feature:127  Ping pong counter tracks escalating doubles
  tests/bdd/behave/features/simulation_betting.feature:158  Betting with special rules invoked
  tests/bdd/behave/features/simulation_betting.feature:175  Carry-over accumulates across holes
  tests/bdd/behave/features/simulation_betting.feature:196  Line of scrimmage affects betting opportunities
  tests/bdd/behave/features/simulation_betting.feature:213  Reset doubles history flag
  tests/bdd/behave/features/simulation_health.feature:15  Simulation setup rejects requests with fewer than four players
  tests/bdd/behave/features/simulation_partnership.feature:14  Partnership formation after tee shots
  tests/bdd/behave/features/simulation_partnership.feature:31  Captain goes solo
  tests/bdd/behave/features/simulation_partnership.feature:42  Rotating captain order
  tests/bdd/behave/features/simulation_partnership.feature:53  Aardvark toss setup in 5-player game
  tests/bdd/behave/features/simulation_partnership.feature:64  Pending partnership request snapshot
  tests/bdd/behave/features/simulation_partnership.feature:77  Team formation affects betting opportunities
  tests/bdd/behave/features/simulation_partnership.feature:94  Pending partnership request acceptance
  tests/bdd/behave/features/simulation_partnership.feature:119  Pending partnership request decline
  tests/bdd/behave/features/simulation_partnership.feature:140  Solo captain doubles after wagering closed
  tests/bdd/behave/features/simulation_partnership.feature:165  Complex team transitions across holes
  tests/bdd/behave/features/simulation_partnership.feature:189  Multiple captains in larger games
  tests/bdd/behave/features/simulation_partnership.feature:205  Partnership request with invalid player
  tests/bdd/behave/features/simulation_partnership.feature:215  Team formation reset between holes
  tests/bdd/behave/features/simulation_partnership.feature:231  Captain rotation tracking

0 features passed, 3 failed, 0 skipped
1 scenario passed, 28 failed, 0 skipped
33 steps passed, 28 failed, 146 skipped
Took 0min 0.645s
