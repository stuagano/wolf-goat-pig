name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  label-pr:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/labeler@v5
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        configuration-path: .github/labeler.yml

  check-pr-size:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check PR size
      uses: codelytv/pr-size-labeler@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        xs_label: 'size/XS'
        xs_max_size: '10'
        s_label: 'size/S'
        s_max_size: '100'
        m_label: 'size/M'
        m_max_size: '500'
        l_label: 'size/L'
        l_max_size: '1000'
        xl_label: 'size/XL'

  check-commits:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Check commit messages
      uses: wagoid/commitlint-github-action@v5
      continue-on-error: true

  validate-pr-title:
    runs-on: ubuntu-latest
    
    steps:
    - uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          build
          ci
          chore
          revert

  check-branch-protection:
    runs-on: ubuntu-latest
    if: github.base_ref == 'main'
    
    steps:
    - name: Check if PR is from protected branch
      run: |
        if [[ "${{ github.head_ref }}" != "develop" && "${{ github.head_ref }}" != "hotfix/"* ]]; then
          echo "::warning::Direct PRs to main should come from develop or hotfix branches"
        fi

  auto-assign:
    runs-on: ubuntu-latest
    
    steps:
    - uses: kentaro-m/auto-assign-action@v1.2.5
      with:
        configuration-path: ".github/auto-assign.yml"

  documentation-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for documentation updates
      run: |
        if git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -E '\.(py|js|jsx|ts|tsx)$'; then
          if ! git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -E '\.(md)$'; then
            echo "::warning::Code changes detected but no documentation updates found"
          fi
        fi

  test-coverage-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download coverage reports
      uses: actions/download-artifact@v5
      with:
        name: backend-test-results-3.11
      continue-on-error: true
    
    - name: Check coverage threshold
      run: |
        echo "::notice::Ensure test coverage meets minimum threshold (80%)"